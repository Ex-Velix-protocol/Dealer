{"id":"13fc4f9bcecc245bed83146db26615a7","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"interface/ILockingInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\nimport {ILockingInfo as ILockingInfoRaw} from \"./ILockingInfoRaw.sol\";\n\ninterface ILockingInfo is ILockingInfoRaw {\n    function bridge() external view returns(address);\n    function l1Token() external view returns(address);\n    function l2Token() external view returns(address);\n    function minLock() external view returns(uint256);\n    function maxLock() external view returns(uint256);\n}"},"interface/ILockingInfoRaw.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\n\ninterface ILockingInfo {\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n     * @param _newMinLock new min lock.\n     */\n    event SetMinLock(uint256 _newMinLock);\n\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n     * @param _newMaxLock new max lock.\n     */\n    event SetMaxLock(uint256 _newMaxLock);\n\n    /**\n     * @dev Emitted when the reward payer is changed\n     * @param _payer new reward payer\n     */\n    event SetRewardPayer(address _payer);\n\n    /**\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n     * @param signer sequencer address.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param activationBatch sequencer's first epoch as proposer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     * @param signerPubkey public key of the sequencer\n     */\n    event Locked(\n        address indexed signer,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 indexed activationBatch,\n        uint256 amount,\n        uint256 total,\n        bytes signerPubkey\n    );\n\n    /**\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking new amount\n     * @param total the total locking amount\n     */\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\n\n    /**\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount withdraw new amount\n     */\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\n\n    /**\n     * @dev Emitted when sequencer relocking in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param newAmount the updated lock amount.\n     */\n    event LockUpdate(\n        uint256 indexed sequencerId,\n        uint256 indexed nonce,\n        uint256 indexed newAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param recipient the address receive reward tokens\n     * @param amount the reward amount.\n     * @param totalAmount total rewards has liquidated\n     */\n    event ClaimRewards(\n        uint256 indexed sequencerId,\n        address recipient,\n        uint256 indexed amount,\n        uint256 indexed totalAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param deactivationBatch  last batch for sequencer.\n     * @param deactivationTime unlock block timestamp.\n     * @param unlockClaimTime when user can claim locked token.\n     * @param amount locking amount\n     */\n    event UnlockInit(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 deactivationBatch,\n        uint256 deactivationTime,\n        uint256 unlockClaimTime,\n        uint256 indexed amount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     */\n    event Unlocked(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 amount,\n        uint256 total\n    );\n\n    /**\n     * @dev Emitted when batch update in  'batchSubmitRewards'\n     * @param _newBatchId new batchId.\n     *\n     *      Note from maintainer:\n     *      for compatibility, the event is retained\n     */\n    event BatchSubmitReward(uint256 _newBatchId);\n\n    /**\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param oldSigner oldSigner old address of the sequencer.\n     * @param newSigner newSigner new address of the sequencer.\n     * @param signerPubkey signerPubkey public key of the sequencer.\n     */\n    event SignerChange(\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        address indexed oldSigner,\n        address indexed newSigner,\n        bytes signerPubkey\n    );\n\n    function newSequencer(\n        uint256 _id,\n        address _owner,\n        address _signer,\n        uint256 _amount,\n        uint256 _batchId,\n        bytes calldata _signerPubkey\n    ) external;\n\n    function increaseLocked(\n        uint256 _seqId,\n        uint256 _nonce,\n        address _owner,\n        uint256 _locked,\n        uint256 _incoming,\n        uint256 _fromReward\n    ) external;\n\n    function withdrawLocking(\n        uint256 _seqId,\n        address _owner,\n        uint256 _nonce,\n        uint256 _amount,\n        uint256 _locked\n    ) external;\n\n    function initializeUnlock(\n        uint256 _seqId,\n        uint256 _reward,\n        uint32 _l2gas,\n        ISequencerInfo.Sequencer calldata _seq\n    ) external payable;\n\n    function finalizeUnlock(\n        address _owner,\n        uint256 _seqId,\n        uint256 _amount,\n        uint256 _reward,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function liquidateReward(\n        uint256 _seqId,\n        uint256 _amount,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\n\n    function logSignerChange(\n        uint256 sequencerId,\n        address oldSigner,\n        address newSigner,\n        uint256 nonce,\n        bytes calldata signerPubkey\n    ) external;\n}"},"interface/ILockingPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.9;\n\nimport \"./ILockingInfo.sol\";\nimport \"./ISequencerInfo.sol\";\n\ninterface ILockingPool is ISequencerInfo {\n    struct SequencerData {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n    }\n\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\n    function escrow() external view returns (ILockingInfo);\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\n    function seqSigners(address signer) external view returns (uint256 seqId);\n\n    /**\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\n     * @param _cur current withdraw delay time\n     * @param _prev previours withdraw delay time\n     */\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\n\n    /**\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n     * @param newReward new block reward\n     * @param oldReward  old block reward\n     */\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\n\n    /**\n     * @dev Emitted when mpc address update in 'UpdateMpc'\n     * @param _newMpc new min lock.\n     */\n    event UpdateMpc(address _newMpc);\n\n    /**\n     * @dev Emitted when SignerUpdateThrottle is updated\n     * @param _n new min value\n     */\n    event SetSignerUpdateThrottle(uint256 _n);\n    function withdraw(uint256 _seqId, uint256 _amount) external;\n}"},"interface/ISequencerInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface ISequencerInfo {\n    error OwnedSequencer();\n    error SignerExisted();\n    error NoSuchSeq();\n    error NullAddress();\n    error SeqNotActive();\n    error NotSeqOwner();\n    error NotSeqSigner();\n    error NoRewardRecipient();\n    error NotWhitelisted();\n\n    // the sequencer status\n    enum Status {\n        Unavailabe, // placeholder for default value\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\n        Active, // the sequencer is active when it locks tokens on the contract\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\n    }\n\n    struct Sequencer {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n        bytes pubkey; // sequencer signer pubkey\n        address rewardRecipient; // sequencer rewarder recipient address\n        Status status; // sequencer status\n    }\n\n    /**\n     * @dev Emitted if owner call 'setWhitelist'\n     * @param _user the address who can lock token\n     * @param _yes white address state\n     */\n    event SetWhitelist(address _user, bool _yes);\n\n    /**\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n     * @param _seqId the sequencerId\n     * @param _recipient the address receive reward token\n     */\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\n\n    /**\n     * @dev Emitted when sequencer owner is changed\n     * @param _seqId the sequencerId\n     * @param _owner the sequencer owner\n     */\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\n\n    function seqOwners(address owner) external returns (uint256 seqId);\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"interface/ILockingInfo.sol":{"ast":{"absolutePath":"interface/ILockingInfo.sol","exportedSymbols":{"ILockingInfo":[33],"ILockingInfoRaw":[253],"ISequencerInfo":[465]},"id":34,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":34,"sourceUnit":466,"src":"57:52:0","symbolAliases":[{"foreign":{"id":2,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"65:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"interface/ILockingInfoRaw.sol","file":"./ILockingInfoRaw.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":34,"sourceUnit":254,"src":"110:70:0","symbolAliases":[{"foreign":{"id":4,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"118:12:0","typeDescriptions":{}},"local":"ILockingInfoRaw","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"ILockingInfoRaw","nameLocations":["208:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":253,"src":"208:15:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"208:15:0"}],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":33,"linearizedBaseContracts":[33,253],"name":"ILockingInfo","nameLocation":"192:12:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e78cea92","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"bridge","nameLocation":"239:6:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[],"src":"245:2:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"270:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"269:9:0"},"scope":33,"src":"230:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c01e1bd6","id":17,"implemented":false,"kind":"function","modifiers":[],"name":"l1Token","nameLocation":"293:7:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"300:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17,"src":"325:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"324:9:0"},"scope":33,"src":"284:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"56eff267","id":22,"implemented":false,"kind":"function","modifiers":[],"name":"l2Token","nameLocation":"348:7:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"355:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":22,"src":"380:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:9:0"},"scope":33,"src":"339:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f037c630","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"minLock","nameLocation":"403:7:0","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"410:2:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27,"src":"435:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:9:0"},"scope":33,"src":"394:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c0b3e46","id":32,"implemented":false,"kind":"function","modifiers":[],"name":"maxLock","nameLocation":"458:7:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"465:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"490:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:9:0"},"scope":33,"src":"449:50:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":34,"src":"182:319:0","usedErrors":[],"usedEvents":[42,47,52,69,78,85,94,105,122,133,138,151]}],"src":"32:469:0"},"id":0},"interface/ILockingInfoRaw.sol":{"ast":{"absolutePath":"interface/ILockingInfoRaw.sol","exportedSymbols":{"ILockingInfo":[253],"ISequencerInfo":[465]},"id":254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":35,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":37,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":254,"sourceUnit":466,"src":"57:52:1","symbolAliases":[{"foreign":{"id":36,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":253,"linearizedBaseContracts":[253],"name":"ILockingInfo","nameLocation":"121:12:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"140:121:1","text":" @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n @param _newMinLock new min lock."},"eventSelector":"abb05374bb45ebfef33afb21ec5aa52333708d8217fd8e5c0616efd2530b2145","id":42,"name":"SetMinLock","nameLocation":"272:10:1","nodeType":"EventDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"indexed":false,"mutability":"mutable","name":"_newMinLock","nameLocation":"291:11:1","nodeType":"VariableDeclaration","scope":42,"src":"283:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"283:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:21:1"},"src":"266:38:1"},{"anonymous":false,"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"310:121:1","text":" @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n @param _newMaxLock new max lock."},"eventSelector":"be23e9641c545443c3c625039b327c0eee88e9024040be7b03c5d73862d425e0","id":47,"name":"SetMaxLock","nameLocation":"442:10:1","nodeType":"EventDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"indexed":false,"mutability":"mutable","name":"_newMaxLock","nameLocation":"461:11:1","nodeType":"VariableDeclaration","scope":47,"src":"453:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:21:1"},"src":"436:38:1"},{"anonymous":false,"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"480:102:1","text":" @dev Emitted when the reward payer is changed\n @param _payer new reward payer"},"eventSelector":"30b92f5a89d7473895c4e9ce260fa7d0eefef2d59d5e68192e2e8cca4b9473a0","id":52,"name":"SetRewardPayer","nameLocation":"593:14:1","nodeType":"EventDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"indexed":false,"mutability":"mutable","name":"_payer","nameLocation":"616:6:1","nodeType":"VariableDeclaration","scope":52,"src":"608:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"607:16:1"},"src":"587:37:1"},{"anonymous":false,"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"630:448:1","text":" @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n @param signer sequencer address.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param activationBatch sequencer's first epoch as proposer.\n @param amount locking amount.\n @param total total locking amount.\n @param signerPubkey public key of the sequencer"},"eventSelector":"e6f1eb1f1d0ca344d03cf47b9e6ece8a7d3b196e38dd7dd2307cca75e26682a8","id":69,"name":"Locked","nameLocation":"1089:6:1","nodeType":"EventDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"1121:6:1","nodeType":"VariableDeclaration","scope":69,"src":"1105:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1153:11:1","nodeType":"VariableDeclaration","scope":69,"src":"1137:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1182:5:1","nodeType":"VariableDeclaration","scope":69,"src":"1174:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"activationBatch","nameLocation":"1213:15:1","nodeType":"VariableDeclaration","scope":69,"src":"1197:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1246:6:1","nodeType":"VariableDeclaration","scope":69,"src":"1238:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"1238:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1270:5:1","nodeType":"VariableDeclaration","scope":69,"src":"1262:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"1262:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"1291:12:1","nodeType":"VariableDeclaration","scope":69,"src":"1285:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":66,"name":"bytes","nodeType":"ElementaryTypeName","src":"1285:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1095:214:1"},"src":"1083:227:1"},{"anonymous":false,"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1316:237:1","text":" @dev Emitted when the sequencer increase lock amount in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking new amount\n @param total the total locking amount"},"eventSelector":"33a87ba488658b3d1319098cd49c6d65b72a79c0f3530fec611e7afffed04395","id":78,"name":"Relocked","nameLocation":"1564:8:1","nodeType":"EventDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1589:11:1","nodeType":"VariableDeclaration","scope":78,"src":"1573:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1610:6:1","nodeType":"VariableDeclaration","scope":78,"src":"1602:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1626:5:1","nodeType":"VariableDeclaration","scope":78,"src":"1618:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:60:1"},"src":"1558:75:1"},{"anonymous":false,"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1639:193:1","text":" @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount withdraw new amount"},"eventSelector":"56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8","id":85,"name":"Withdraw","nameLocation":"1843:8:1","nodeType":"EventDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1868:11:1","nodeType":"VariableDeclaration","scope":85,"src":"1852:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1889:6:1","nodeType":"VariableDeclaration","scope":85,"src":"1881:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1851:45:1"},"src":"1837:60:1"},{"anonymous":false,"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"1903:243:1","text":" @dev Emitted when sequencer relocking in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param newAmount the updated lock amount."},"eventSelector":"d716c027b3dd610e4534df756848128bbb159a757724c17d89fcc4d0151b1f30","id":94,"name":"LockUpdate","nameLocation":"2157:10:1","nodeType":"EventDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2193:11:1","nodeType":"VariableDeclaration","scope":94,"src":"2177:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"2230:5:1","nodeType":"VariableDeclaration","scope":94,"src":"2214:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":92,"indexed":true,"mutability":"mutable","name":"newAmount","nameLocation":"2261:9:1","nodeType":"VariableDeclaration","scope":94,"src":"2245:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2167:109:1"},"src":"2151:126:1"},{"anonymous":false,"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"2283:320:1","text":" @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n @param sequencerId unique integer to identify a sequencer.\n @param recipient the address receive reward tokens\n @param amount the reward amount.\n @param totalAmount total rewards has liquidated"},"eventSelector":"18c7dc2a1800c409227dc12c0c05ada9c995ebfe0e42ae6d65f1b3ae3e6111de","id":105,"name":"ClaimRewards","nameLocation":"2614:12:1","nodeType":"EventDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2652:11:1","nodeType":"VariableDeclaration","scope":105,"src":"2636:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"2636:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"2681:9:1","nodeType":"VariableDeclaration","scope":105,"src":"2673:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2673:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2716:6:1","nodeType":"VariableDeclaration","scope":105,"src":"2700:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103,"indexed":true,"mutability":"mutable","name":"totalAmount","nameLocation":"2748:11:1","nodeType":"VariableDeclaration","scope":105,"src":"2732:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2626:139:1"},"src":"2608:158:1"},{"anonymous":false,"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2772:452:1","text":" @dev Emitted when sequencer unlocks in '_unlock()'.\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param deactivationBatch  last batch for sequencer.\n @param deactivationTime unlock block timestamp.\n @param unlockClaimTime when user can claim locked token.\n @param amount locking amount"},"eventSelector":"06d9e13438f0daf13a71d63f3f8579db8bdeb299e4b651942313c73224d7af69","id":122,"name":"UnlockInit","nameLocation":"3235:10:1","nodeType":"EventDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3271:4:1","nodeType":"VariableDeclaration","scope":122,"src":"3255:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":110,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3301:11:1","nodeType":"VariableDeclaration","scope":122,"src":"3285:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3330:5:1","nodeType":"VariableDeclaration","scope":122,"src":"3322:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3322:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":false,"mutability":"mutable","name":"deactivationBatch","nameLocation":"3353:17:1","nodeType":"VariableDeclaration","scope":122,"src":"3345:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":116,"indexed":false,"mutability":"mutable","name":"deactivationTime","nameLocation":"3388:16:1","nodeType":"VariableDeclaration","scope":122,"src":"3380:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":118,"indexed":false,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"3422:15:1","nodeType":"VariableDeclaration","scope":122,"src":"3414:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"3463:6:1","nodeType":"VariableDeclaration","scope":122,"src":"3447:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3447:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3245:230:1"},"src":"3229:247:1"},{"anonymous":false,"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"3482:263:1","text":" @dev Emitted when sequencer unlocks in 'unlockClaim()'\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking amount.\n @param total total locking amount."},"eventSelector":"5245d528087a96a64f4589a764f00061e4671eab90cb1e019b1a5b24b2e4c2a8","id":133,"name":"Unlocked","nameLocation":"3756:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3790:4:1","nodeType":"VariableDeclaration","scope":133,"src":"3774:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"3774:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3820:11:1","nodeType":"VariableDeclaration","scope":133,"src":"3804:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3849:6:1","nodeType":"VariableDeclaration","scope":133,"src":"3841:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":133,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3865:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3764:120:1"},"src":"3750:135:1"},{"anonymous":false,"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"3891:207:1","text":" @dev Emitted when batch update in  'batchSubmitRewards'\n @param _newBatchId new batchId.\n      Note from maintainer:\n      for compatibility, the event is retained"},"eventSelector":"9e5aedd489785d05ba086064386f2e75b3e497d3dc00a54ed1c78bfc50a3953f","id":138,"name":"BatchSubmitReward","nameLocation":"4109:17:1","nodeType":"EventDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"indexed":false,"mutability":"mutable","name":"_newBatchId","nameLocation":"4135:11:1","nodeType":"VariableDeclaration","scope":138,"src":"4127:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4126:21:1"},"src":"4103:45:1"},{"anonymous":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"4154:413:1","text":" @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param oldSigner oldSigner old address of the sequencer.\n @param newSigner newSigner new address of the sequencer.\n @param signerPubkey signerPubkey public key of the sequencer."},"eventSelector":"086044c0612a8c965d4cccd907f0d588e40ad68438bd4c1274cac60f4c3a9d1f","id":151,"name":"SignerChange","nameLocation":"4578:12:1","nodeType":"EventDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"4616:11:1","nodeType":"VariableDeclaration","scope":151,"src":"4600:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4600:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":143,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"4645:5:1","nodeType":"VariableDeclaration","scope":151,"src":"4637:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4637:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":145,"indexed":true,"mutability":"mutable","name":"oldSigner","nameLocation":"4676:9:1","nodeType":"VariableDeclaration","scope":151,"src":"4660:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"4660:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"4711:9:1","nodeType":"VariableDeclaration","scope":151,"src":"4695:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":149,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"4736:12:1","nodeType":"VariableDeclaration","scope":151,"src":"4730:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":148,"name":"bytes","nodeType":"ElementaryTypeName","src":"4730:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4590:164:1"},"src":"4572:183:1"},{"functionSelector":"1badded5","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"newSequencer","nameLocation":"4770:12:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"_id","nameLocation":"4800:3:1","nodeType":"VariableDeclaration","scope":166,"src":"4792:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4792:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"_owner","nameLocation":"4821:6:1","nodeType":"VariableDeclaration","scope":166,"src":"4813:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"_signer","nameLocation":"4845:7:1","nodeType":"VariableDeclaration","scope":166,"src":"4837:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"4837:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"_amount","nameLocation":"4870:7:1","nodeType":"VariableDeclaration","scope":166,"src":"4862:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4862:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"_batchId","nameLocation":"4895:8:1","nodeType":"VariableDeclaration","scope":166,"src":"4887:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"_signerPubkey","nameLocation":"4928:13:1","nodeType":"VariableDeclaration","scope":166,"src":"4913:28:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":162,"name":"bytes","nodeType":"ElementaryTypeName","src":"4913:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4782:165:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"4956:0:1"},"scope":253,"src":"4761:196:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2684b8ec","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"increaseLocked","nameLocation":"4972:14:1","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"_seqId","nameLocation":"5004:6:1","nodeType":"VariableDeclaration","scope":181,"src":"4996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"_nonce","nameLocation":"5028:6:1","nodeType":"VariableDeclaration","scope":181,"src":"5020:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5020:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"_owner","nameLocation":"5052:6:1","nodeType":"VariableDeclaration","scope":181,"src":"5044:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"_locked","nameLocation":"5076:7:1","nodeType":"VariableDeclaration","scope":181,"src":"5068:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"_incoming","nameLocation":"5101:9:1","nodeType":"VariableDeclaration","scope":181,"src":"5093:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5093:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"_fromReward","nameLocation":"5128:11:1","nodeType":"VariableDeclaration","scope":181,"src":"5120:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4986:159:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"5154:0:1"},"scope":253,"src":"4963:192:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"234898b3","id":194,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawLocking","nameLocation":"5170:15:1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"_seqId","nameLocation":"5203:6:1","nodeType":"VariableDeclaration","scope":194,"src":"5195:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"5195:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"_owner","nameLocation":"5227:6:1","nodeType":"VariableDeclaration","scope":194,"src":"5219:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"_nonce","nameLocation":"5251:6:1","nodeType":"VariableDeclaration","scope":194,"src":"5243:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5243:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"_amount","nameLocation":"5275:7:1","nodeType":"VariableDeclaration","scope":194,"src":"5267:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"_locked","nameLocation":"5300:7:1","nodeType":"VariableDeclaration","scope":194,"src":"5292:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5292:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5185:128:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"5322:0:1"},"scope":253,"src":"5161:162:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2243069c","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"initializeUnlock","nameLocation":"5338:16:1","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"_seqId","nameLocation":"5372:6:1","nodeType":"VariableDeclaration","scope":206,"src":"5364:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"5364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"_reward","nameLocation":"5396:7:1","nodeType":"VariableDeclaration","scope":206,"src":"5388:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"5388:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"_l2gas","nameLocation":"5420:6:1","nodeType":"VariableDeclaration","scope":206,"src":"5413:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":199,"name":"uint32","nodeType":"ElementaryTypeName","src":"5413:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"_seq","nameLocation":"5470:4:1","nodeType":"VariableDeclaration","scope":206,"src":"5436:38:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$436_calldata_ptr","typeString":"struct ISequencerInfo.Sequencer"},"typeName":{"id":202,"nodeType":"UserDefinedTypeName","pathNode":{"id":201,"name":"ISequencerInfo.Sequencer","nameLocations":["5436:14:1","5451:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"5436:24:1"},"referencedDeclaration":436,"src":"5436:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$436_storage_ptr","typeString":"struct ISequencerInfo.Sequencer"}},"visibility":"internal"}],"src":"5354:126:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"5497:0:1"},"scope":253,"src":"5329:169:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"528ed12a","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeUnlock","nameLocation":"5513:14:1","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"_owner","nameLocation":"5545:6:1","nodeType":"VariableDeclaration","scope":221,"src":"5537:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"5537:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"_seqId","nameLocation":"5569:6:1","nodeType":"VariableDeclaration","scope":221,"src":"5561:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"5561:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"_amount","nameLocation":"5593:7:1","nodeType":"VariableDeclaration","scope":221,"src":"5585:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5585:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"_reward","nameLocation":"5618:7:1","nodeType":"VariableDeclaration","scope":221,"src":"5610:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5610:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"_recipient","nameLocation":"5643:10:1","nodeType":"VariableDeclaration","scope":221,"src":"5635:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"5635:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"_l2gas","nameLocation":"5670:6:1","nodeType":"VariableDeclaration","scope":221,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":217,"name":"uint32","nodeType":"ElementaryTypeName","src":"5663:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5527:155:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"5699:0:1"},"scope":253,"src":"5504:196:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5d7878a8","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateReward","nameLocation":"5715:15:1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"_seqId","nameLocation":"5748:6:1","nodeType":"VariableDeclaration","scope":232,"src":"5740:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5740:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"_amount","nameLocation":"5772:7:1","nodeType":"VariableDeclaration","scope":232,"src":"5764:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"_recipient","nameLocation":"5797:10:1","nodeType":"VariableDeclaration","scope":232,"src":"5789:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"5789:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"_l2gas","nameLocation":"5824:6:1","nodeType":"VariableDeclaration","scope":232,"src":"5817:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":228,"name":"uint32","nodeType":"ElementaryTypeName","src":"5817:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5730:106:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"5853:0:1"},"scope":253,"src":"5706:148:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e3bcd27c","id":239,"implemented":false,"kind":"function","modifiers":[],"name":"distributeReward","nameLocation":"5869:16:1","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"_batchId","nameLocation":"5894:8:1","nodeType":"VariableDeclaration","scope":239,"src":"5886:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"_totalReward","nameLocation":"5912:12:1","nodeType":"VariableDeclaration","scope":239,"src":"5904:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5885:40:1"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"5934:0:1"},"scope":253,"src":"5860:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3285702","id":252,"implemented":false,"kind":"function","modifiers":[],"name":"logSignerChange","nameLocation":"5950:15:1","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sequencerId","nameLocation":"5983:11:1","nodeType":"VariableDeclaration","scope":252,"src":"5975:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"oldSigner","nameLocation":"6012:9:1","nodeType":"VariableDeclaration","scope":252,"src":"6004:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"6004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"newSigner","nameLocation":"6039:9:1","nodeType":"VariableDeclaration","scope":252,"src":"6031:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"6031:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"nonce","nameLocation":"6066:5:1","nodeType":"VariableDeclaration","scope":252,"src":"6058:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"signerPubkey","nameLocation":"6096:12:1","nodeType":"VariableDeclaration","scope":252,"src":"6081:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"6081:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5965:149:1"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"6123:0:1"},"scope":253,"src":"5941:183:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":254,"src":"111:6015:1","usedErrors":[],"usedEvents":[42,47,52,69,78,85,94,105,122,133,138,151]}],"src":"32:6094:1"},"id":1},"interface/ILockingPool.sol":{"ast":{"absolutePath":"interface/ILockingPool.sol","exportedSymbols":{"ILockingInfo":[33],"ILockingInfoRaw":[253],"ILockingPool":[383],"ISequencerInfo":[465]},"id":384,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":255,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"45:23:2"},{"absolutePath":"interface/ILockingInfo.sol","file":"./ILockingInfo.sol","id":256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":384,"sourceUnit":34,"src":"70:28:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":384,"sourceUnit":466,"src":"99:30:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":258,"name":"ISequencerInfo","nameLocations":["157:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":465,"src":"157:14:2"},"id":259,"nodeType":"InheritanceSpecifier","src":"157:14:2"}],"canonicalName":"ILockingPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":383,"linearizedBaseContracts":[383,465],"name":"ILockingPool","nameLocation":"141:12:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILockingPool.SequencerData","id":280,"members":[{"constant":false,"id":261,"mutability":"mutable","name":"amount","nameLocation":"217:6:2","nodeType":"VariableDeclaration","scope":280,"src":"209:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"reward","nameLocation":"269:6:2","nodeType":"VariableDeclaration","scope":280,"src":"261:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"activationBatch","nameLocation":"343:15:2","nodeType":"VariableDeclaration","scope":280,"src":"335:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"updatedBatch","nameLocation":"409:12:2","nodeType":"VariableDeclaration","scope":280,"src":"401:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"deactivationBatch","nameLocation":"471:17:2","nodeType":"VariableDeclaration","scope":280,"src":"463:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"deactivationTime","nameLocation":"541:16:2","nodeType":"VariableDeclaration","scope":280,"src":"533:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"611:15:2","nodeType":"VariableDeclaration","scope":280,"src":"603:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"nonce","nameLocation":"748:5:2","nodeType":"VariableDeclaration","scope":280,"src":"740:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"owner","nameLocation":"868:5:2","nodeType":"VariableDeclaration","scope":280,"src":"860:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"signer","nameLocation":"989:6:2","nodeType":"VariableDeclaration","scope":280,"src":"981:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SequencerData","nameLocation":"185:13:2","nodeType":"StructDefinition","scope":383,"src":"178:943:2","visibility":"public"},{"functionSelector":"af70cba5","id":289,"implemented":false,"kind":"function","modifiers":[],"name":"lockFor","nameLocation":"1136:7:2","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"_signer","nameLocation":"1152:7:2","nodeType":"VariableDeclaration","scope":289,"src":"1144:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"_amount","nameLocation":"1169:7:2","nodeType":"VariableDeclaration","scope":289,"src":"1161:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1193:13:2","nodeType":"VariableDeclaration","scope":289,"src":"1178:28:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":285,"name":"bytes","nodeType":"ElementaryTypeName","src":"1178:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1143:64:2"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"1216:0:2"},"scope":383,"src":"1127:90:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9ad42030","id":300,"implemented":false,"kind":"function","modifiers":[],"name":"lockWithRewardRecipient","nameLocation":"1231:23:2","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"_signer","nameLocation":"1263:7:2","nodeType":"VariableDeclaration","scope":300,"src":"1255:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"_rewardRecipient","nameLocation":"1280:16:2","nodeType":"VariableDeclaration","scope":300,"src":"1272:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"1272:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"_amount","nameLocation":"1306:7:2","nodeType":"VariableDeclaration","scope":300,"src":"1298:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1330:13:2","nodeType":"VariableDeclaration","scope":300,"src":"1315:28:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":296,"name":"bytes","nodeType":"ElementaryTypeName","src":"1315:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1254:90:2"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"1353:0:2"},"scope":383,"src":"1222:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"015bb180","id":309,"implemented":false,"kind":"function","modifiers":[],"name":"relock","nameLocation":"1368:6:2","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"_seqId","nameLocation":"1383:6:2","nodeType":"VariableDeclaration","scope":309,"src":"1375:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"_amount","nameLocation":"1399:7:2","nodeType":"VariableDeclaration","scope":309,"src":"1391:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"_lockReward","nameLocation":"1413:11:2","nodeType":"VariableDeclaration","scope":309,"src":"1408:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":305,"name":"bool","nodeType":"ElementaryTypeName","src":"1408:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1374:51:2"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"1434:0:2"},"scope":383,"src":"1359:76:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"17396687","id":316,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawRewards","nameLocation":"1449:15:2","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"_seqId","nameLocation":"1473:6:2","nodeType":"VariableDeclaration","scope":316,"src":"1465:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"_l2Gas","nameLocation":"1488:6:2","nodeType":"VariableDeclaration","scope":316,"src":"1481:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":312,"name":"uint32","nodeType":"ElementaryTypeName","src":"1481:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1464:31:2"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[],"src":"1504:0:2"},"scope":383,"src":"1440:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"262c0e66","id":323,"implemented":false,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"1519:6:2","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"_seqId","nameLocation":"1535:6:2","nodeType":"VariableDeclaration","scope":323,"src":"1527:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"_l2Gas","nameLocation":"1550:6:2","nodeType":"VariableDeclaration","scope":323,"src":"1543:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":319,"name":"uint32","nodeType":"ElementaryTypeName","src":"1543:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1525:32:2"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"1574:0:2"},"scope":383,"src":"1510:65:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"8ddc74de","id":330,"implemented":false,"kind":"function","modifiers":[],"name":"unlockClaim","nameLocation":"1589:11:2","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"_seqId","nameLocation":"1609:6:2","nodeType":"VariableDeclaration","scope":330,"src":"1601:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"_l2Gas","nameLocation":"1624:6:2","nodeType":"VariableDeclaration","scope":330,"src":"1617:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":326,"name":"uint32","nodeType":"ElementaryTypeName","src":"1617:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1600:31:2"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"1648:0:2"},"scope":383,"src":"1580:69:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e2fdcc17","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"escrow","nameLocation":"1663:6:2","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"1669:2:2"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"1695:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$33","typeString":"contract ILockingInfo"},"typeName":{"id":333,"nodeType":"UserDefinedTypeName","pathNode":{"id":332,"name":"ILockingInfo","nameLocations":["1695:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"1695:12:2"},"referencedDeclaration":33,"src":"1695:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$33","typeString":"contract ILockingInfo"}},"visibility":"internal"}],"src":"1694:14:2"},"scope":383,"src":"1654:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6ba7ccff","id":344,"implemented":false,"kind":"function","modifiers":[],"name":"sequencers","nameLocation":"1723:10:2","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"seqId","nameLocation":"1742:5:2","nodeType":"VariableDeclaration","scope":344,"src":"1734:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1733:15:2"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"1772:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$280_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":341,"nodeType":"UserDefinedTypeName","pathNode":{"id":340,"name":"SequencerData","nameLocations":["1772:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"1772:13:2"},"referencedDeclaration":280,"src":"1772:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$280_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"src":"1771:22:2"},"scope":383,"src":"1714:80:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"beb26755","id":351,"implemented":false,"kind":"function","modifiers":[],"name":"seqSigners","nameLocation":"1808:10:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"signer","nameLocation":"1827:6:2","nodeType":"VariableDeclaration","scope":351,"src":"1819:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1818:16:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"seqId","nameLocation":"1866:5:2","nodeType":"VariableDeclaration","scope":351,"src":"1858:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1857:15:2"},"scope":383,"src":"1799:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"1879:162:2","text":" @dev Emitted when WITHDRAWAL_DELAY is updated.\n @param _cur current withdraw delay time\n @param _prev previours withdraw delay time"},"eventSelector":"08cb0bf599c925a6240976039d9d4d3201d88d2ba83703b890049356cdbb67e6","id":358,"name":"WithrawDelayTimeChange","nameLocation":"2052:22:2","nodeType":"EventDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"indexed":false,"mutability":"mutable","name":"_cur","nameLocation":"2083:4:2","nodeType":"VariableDeclaration","scope":358,"src":"2075:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":356,"indexed":false,"mutability":"mutable","name":"_prev","nameLocation":"2097:5:2","nodeType":"VariableDeclaration","scope":358,"src":"2089:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:29:2"},"src":"2046:58:2"},{"anonymous":false,"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"2110:172:2","text":" @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n @param newReward new block reward\n @param oldReward  old block reward"},"eventSelector":"f67f33e8589d3ea0356303c0f9a8e764873692159f777ff79e4fc523d389dfcd","id":365,"name":"RewardUpdate","nameLocation":"2293:12:2","nodeType":"EventDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"indexed":false,"mutability":"mutable","name":"newReward","nameLocation":"2314:9:2","nodeType":"VariableDeclaration","scope":365,"src":"2306:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":false,"mutability":"mutable","name":"oldReward","nameLocation":"2333:9:2","nodeType":"VariableDeclaration","scope":365,"src":"2325:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2305:38:2"},"src":"2287:57:2"},{"anonymous":false,"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2350:106:2","text":" @dev Emitted when mpc address update in 'UpdateMpc'\n @param _newMpc new min lock."},"eventSelector":"c6759872346bc2093e270f2fa00d99d7bcdde60a410a3e9956b34196d42fee76","id":370,"name":"UpdateMpc","nameLocation":"2467:9:2","nodeType":"EventDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"indexed":false,"mutability":"mutable","name":"_newMpc","nameLocation":"2485:7:2","nodeType":"VariableDeclaration","scope":370,"src":"2477:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2476:17:2"},"src":"2461:33:2"},{"anonymous":false,"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2500:99:2","text":" @dev Emitted when SignerUpdateThrottle is updated\n @param _n new min value"},"eventSelector":"e58685f6b78e6d567d2ed9d7c5efb779c4cd91c63c76763a0e3204a5671f4705","id":375,"name":"SetSignerUpdateThrottle","nameLocation":"2610:23:2","nodeType":"EventDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"indexed":false,"mutability":"mutable","name":"_n","nameLocation":"2642:2:2","nodeType":"VariableDeclaration","scope":375,"src":"2634:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2634:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2633:12:2"},"src":"2604:42:2"},{"functionSelector":"441a3e70","id":382,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2660:8:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"_seqId","nameLocation":"2677:6:2","nodeType":"VariableDeclaration","scope":382,"src":"2669:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"_amount","nameLocation":"2693:7:2","nodeType":"VariableDeclaration","scope":382,"src":"2685:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2668:33:2"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2710:0:2"},"scope":383,"src":"2651:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":384,"src":"131:2582:2","usedErrors":[387,389,391,393,395,397,399,401,403],"usedEvents":[358,365,370,375,443,450,457]}],"src":"45:2668:2"},"id":2},"interface/ISequencerInfo.sol":{"ast":{"absolutePath":"interface/ISequencerInfo.sol","exportedSymbols":{"ISequencerInfo":[465]},"id":466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":385,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ISequencerInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":465,"linearizedBaseContracts":[465],"name":"ISequencerInfo","nameLocation":"67:14:3","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4e1fb3bc","id":387,"name":"OwnedSequencer","nameLocation":"94:14:3","nodeType":"ErrorDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"108:2:3"},"src":"88:23:3"},{"errorSelector":"b5013d2b","id":389,"name":"SignerExisted","nameLocation":"122:13:3","nodeType":"ErrorDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"135:2:3"},"src":"116:22:3"},{"errorSelector":"2f0edabe","id":391,"name":"NoSuchSeq","nameLocation":"149:9:3","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"158:2:3"},"src":"143:18:3"},{"errorSelector":"e99d5ac5","id":393,"name":"NullAddress","nameLocation":"172:11:3","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"183:2:3"},"src":"166:20:3"},{"errorSelector":"c4946571","id":395,"name":"SeqNotActive","nameLocation":"197:12:3","nodeType":"ErrorDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"209:2:3"},"src":"191:21:3"},{"errorSelector":"a91da8ff","id":397,"name":"NotSeqOwner","nameLocation":"223:11:3","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"234:2:3"},"src":"217:20:3"},{"errorSelector":"6b95264b","id":399,"name":"NotSeqSigner","nameLocation":"248:12:3","nodeType":"ErrorDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"260:2:3"},"src":"242:21:3"},{"errorSelector":"c4fc1dcc","id":401,"name":"NoRewardRecipient","nameLocation":"274:17:3","nodeType":"ErrorDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"291:2:3"},"src":"268:26:3"},{"errorSelector":"584a7938","id":403,"name":"NotWhitelisted","nameLocation":"305:14:3","nodeType":"ErrorDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"319:2:3"},"src":"299:23:3"},{"canonicalName":"ISequencerInfo.Status","id":408,"members":[{"id":404,"name":"Unavailabe","nameLocation":"378:10:3","nodeType":"EnumValue","src":"378:10:3"},{"id":405,"name":"Inactive","nameLocation":"431:8:3","nodeType":"EnumValue","src":"431:8:3"},{"id":406,"name":"Active","nameLocation":"510:6:3","nodeType":"EnumValue","src":"510:6:3"},{"id":407,"name":"Unlocked","nameLocation":"590:8:3","nodeType":"EnumValue","src":"590:8:3"}],"name":"Status","nameLocation":"361:6:3","nodeType":"EnumDefinition","src":"356:335:3"},{"canonicalName":"ISequencerInfo.Sequencer","id":436,"members":[{"constant":false,"id":410,"mutability":"mutable","name":"amount","nameLocation":"732:6:3","nodeType":"VariableDeclaration","scope":436,"src":"724:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"reward","nameLocation":"784:6:3","nodeType":"VariableDeclaration","scope":436,"src":"776:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"activationBatch","nameLocation":"858:15:3","nodeType":"VariableDeclaration","scope":436,"src":"850:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"updatedBatch","nameLocation":"924:12:3","nodeType":"VariableDeclaration","scope":436,"src":"916:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"deactivationBatch","nameLocation":"986:17:3","nodeType":"VariableDeclaration","scope":436,"src":"978:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"deactivationTime","nameLocation":"1056:16:3","nodeType":"VariableDeclaration","scope":436,"src":"1048:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"1126:15:3","nodeType":"VariableDeclaration","scope":436,"src":"1118:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"nonce","nameLocation":"1263:5:3","nodeType":"VariableDeclaration","scope":436,"src":"1255:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1255:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"owner","nameLocation":"1383:5:3","nodeType":"VariableDeclaration","scope":436,"src":"1375:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"signer","nameLocation":"1504:6:3","nodeType":"VariableDeclaration","scope":436,"src":"1496:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"pubkey","nameLocation":"1645:6:3","nodeType":"VariableDeclaration","scope":436,"src":"1639:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":429,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"rewardRecipient","nameLocation":"1696:15:3","nodeType":"VariableDeclaration","scope":436,"src":"1688:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"status","nameLocation":"1768:6:3","nodeType":"VariableDeclaration","scope":436,"src":"1761:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$408","typeString":"enum ISequencerInfo.Status"},"typeName":{"id":434,"nodeType":"UserDefinedTypeName","pathNode":{"id":433,"name":"Status","nameLocations":["1761:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"1761:6:3"},"referencedDeclaration":408,"src":"1761:6:3","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$408","typeString":"enum ISequencerInfo.Status"}},"visibility":"internal"}],"name":"Sequencer","nameLocation":"704:9:3","nodeType":"StructDefinition","scope":465,"src":"697:1104:3","visibility":"public"},{"anonymous":false,"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"1807:150:3","text":" @dev Emitted if owner call 'setWhitelist'\n @param _user the address who can lock token\n @param _yes white address state"},"eventSelector":"f6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb","id":443,"name":"SetWhitelist","nameLocation":"1968:12:3","nodeType":"EventDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"indexed":false,"mutability":"mutable","name":"_user","nameLocation":"1989:5:3","nodeType":"VariableDeclaration","scope":443,"src":"1981:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":441,"indexed":false,"mutability":"mutable","name":"_yes","nameLocation":"2001:4:3","nodeType":"VariableDeclaration","scope":443,"src":"1996:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":440,"name":"bool","nodeType":"ElementaryTypeName","src":"1996:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1980:26:3"},"src":"1962:45:3"},{"anonymous":false,"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"2013:196:3","text":" @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n @param _seqId the sequencerId\n @param _recipient the address receive reward token"},"eventSelector":"357bb123cabaf224688e3d8de5feb37d685dc3a27012a7bce1201c49bc369cb6","id":450,"name":"SequencerRewardRecipientChanged","nameLocation":"2220:31:3","nodeType":"EventDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2260:6:3","nodeType":"VariableDeclaration","scope":450,"src":"2252:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"indexed":false,"mutability":"mutable","name":"_recipient","nameLocation":"2276:10:3","nodeType":"VariableDeclaration","scope":450,"src":"2268:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2251:36:3"},"src":"2214:74:3"},{"anonymous":false,"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"2294:141:3","text":" @dev Emitted when sequencer owner is changed\n @param _seqId the sequencerId\n @param _owner the sequencer owner"},"eventSelector":"4078101d3657bf2f1ee46f64d5c94266d244d71bb0daa460336d3d6f11c9a4ac","id":457,"name":"SequencerOwnerChanged","nameLocation":"2446:21:3","nodeType":"EventDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2476:6:3","nodeType":"VariableDeclaration","scope":457,"src":"2468:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":455,"indexed":false,"mutability":"mutable","name":"_owner","nameLocation":"2492:6:3","nodeType":"VariableDeclaration","scope":457,"src":"2484:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2467:32:3"},"src":"2440:60:3"},{"functionSelector":"169abefc","id":464,"implemented":false,"kind":"function","modifiers":[],"name":"seqOwners","nameLocation":"2515:9:3","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"owner","nameLocation":"2533:5:3","nodeType":"VariableDeclaration","scope":464,"src":"2525:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2524:15:3"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"seqId","nameLocation":"2566:5:3","nodeType":"VariableDeclaration","scope":464,"src":"2558:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2557:15:3"},"scope":465,"src":"2506:67:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":466,"src":"57:2518:3","usedErrors":[387,389,391,393,395,397,399,401,403],"usedEvents":[443,450,457]}],"src":"32:2543:3"},"id":3}},"contracts":{"interface/ILockingInfo.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"bridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"l1Token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_locked","type":"uint256"}],"name":"withdrawLocking","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId.      Note from maintainer:      for compatibility, the event is retained"}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amount in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}},"Withdraw(uint256,uint256)":{"details":"Emitted when the sequencer reduce lock amount in 'withdraw()'.","params":{"amount":"withdraw new amount","sequencerId":"unique integer to identify a sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"bridge()":"e78cea92","distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","l1Token()":"c01e1bd6","l2Token()":"56eff267","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","maxLock()":"6c0b3e46","minLock()":"f037c630","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5","withdrawLocking(uint256,address,uint256,uint256,uint256)":"234898b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"}],\"name\":\"withdrawLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.      Note from maintainer:      for compatibility, the event is retained\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amount in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}},\"Withdraw(uint256,uint256)\":{\"details\":\"Emitted when the sequencer reduce lock amount in 'withdraw()'.\",\"params\":{\"amount\":\"withdraw new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfo.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingInfoRaw.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_locked","type":"uint256"}],"name":"withdrawLocking","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId.      Note from maintainer:      for compatibility, the event is retained"}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amount in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}},"Withdraw(uint256,uint256)":{"details":"Emitted when the sequencer reduce lock amount in 'withdraw()'.","params":{"amount":"withdraw new amount","sequencerId":"unique integer to identify a sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5","withdrawLocking(uint256,address,uint256,uint256,uint256)":"234898b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"}],\"name\":\"withdrawLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.      Note from maintainer:      for compatibility, the event is retained\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amount in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}},\"Withdraw(uint256,uint256)\":{\"details\":\"Emitted when the sequencer reduce lock amount in 'withdraw()'.\",\"params\":{\"amount\":\"withdraw new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfoRaw.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingPool.sol":{"ILockingPool":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldReward","type":"uint256"}],"name":"RewardUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_n","type":"uint256"}],"name":"SetSignerUpdateThrottle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newMpc","type":"address"}],"name":"UpdateMpc","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_cur","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_prev","type":"uint256"}],"name":"WithrawDelayTimeChange","type":"event"},{"inputs":[],"name":"escrow","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"address","name":"_rewardRecipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockWithRewardRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_lockReward","type":"bool"}],"name":"relock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"seqSigners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"name":"sequencers","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"internalType":"struct ILockingPool.SequencerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"withdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RewardUpdate(uint256,uint256)":{"details":"Emitted when the proxy update threshold in 'updateBlockReward()'.","params":{"newReward":"new block reward","oldReward":"old block reward"}},"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetSignerUpdateThrottle(uint256)":{"details":"Emitted when SignerUpdateThrottle is updated","params":{"_n":"new min value"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}},"UpdateMpc(address)":{"details":"Emitted when mpc address update in 'UpdateMpc'","params":{"_newMpc":"new min lock."}},"WithrawDelayTimeChange(uint256,uint256)":{"details":"Emitted when WITHDRAWAL_DELAY is updated.","params":{"_cur":"current withdraw delay time","_prev":"previours withdraw delay time"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"escrow()":"e2fdcc17","lockFor(address,uint256,bytes)":"af70cba5","lockWithRewardRecipient(address,address,uint256,bytes)":"9ad42030","relock(uint256,uint256,bool)":"015bb180","seqOwners(address)":"169abefc","seqSigners(address)":"beb26755","sequencers(uint256)":"6ba7ccff","unlock(uint256,uint32)":"262c0e66","unlockClaim(uint256,uint32)":"8ddc74de","withdraw(uint256,uint256)":"441a3e70","withdrawRewards(uint256,uint32)":"17396687"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReward\",\"type\":\"uint256\"}],\"name\":\"RewardUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"}],\"name\":\"SetSignerUpdateThrottle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newMpc\",\"type\":\"address\"}],\"name\":\"UpdateMpc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cur\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WithrawDelayTimeChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"escrow\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockWithRewardRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_lockReward\",\"type\":\"bool\"}],\"name\":\"relock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"seqSigners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"name\":\"sequencers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct ILockingPool.SequencerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardUpdate(uint256,uint256)\":{\"details\":\"Emitted when the proxy update threshold in 'updateBlockReward()'.\",\"params\":{\"newReward\":\"new block reward\",\"oldReward\":\"old block reward\"}},\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetSignerUpdateThrottle(uint256)\":{\"details\":\"Emitted when SignerUpdateThrottle is updated\",\"params\":{\"_n\":\"new min value\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}},\"UpdateMpc(address)\":{\"details\":\"Emitted when mpc address update in 'UpdateMpc'\",\"params\":{\"_newMpc\":\"new min lock.\"}},\"WithrawDelayTimeChange(uint256,uint256)\":{\"details\":\"Emitted when WITHDRAWAL_DELAY is updated.\",\"params\":{\"_cur\":\"current withdraw delay time\",\"_prev\":\"previours withdraw delay time\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingPool.sol\":\"ILockingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n    function withdraw(uint256 _seqId, uint256 _amount) external;\\n}\",\"keccak256\":\"0xa7c18b713ed86a9a510c322241669b8d9ed6a1806c1d68229c5b440169938133\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ISequencerInfo.sol":{"ISequencerInfo":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"seqOwners(address)":"169abefc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ISequencerInfo.sol\":\"ISequencerInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}