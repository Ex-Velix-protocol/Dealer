{"id":"8b55f240e21ef79982924aac7d8d9bac","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"./IBeacon.sol\";\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\n *\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n * the beacon to not upgrade the implementation maliciously.\n *\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n * an inconsistent state where the beacon storage slot does not match the beacon address.\n */\ncontract BeaconProxy is Proxy {\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\n    address private immutable _beacon;\n\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\n        _beacon = beacon;\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Returns the beacon.\n     */\n    function _getBeacon() internal view virtual returns (address) {\n        return _beacon;\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/Dealer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../interface/ICrossDomainEnabled.sol\";\nimport \"../interface/ILockingPool.sol\";\nimport \"../interface/IVeMetisMinter.sol\";\nimport \"../interface/ICrossDomainMessenger.sol\";\nimport \"./SequencerAgent.sol\";\n\n\n/// @title Dealer\n/// @notice The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.\ncontract Dealer is OwnableUpgradeable {\n\n    /// @notice Emits when a new sequencer agent is added\n    /// @param index index of the agent\n    /// @param agent address of the agent\n    event SequencerAgentAdded(uint32 index, address agent);\n\n    /// @notice Emits when additional Metis tokens and rewards are locked for a sequencer.\n    /// @param index The index of the sequencer agent in the sequencer list.\n    /// @param amount The amount of Metis tokens that have been added to the lock.\n    /// @param reward The amount of additional rewards that have been locked.\n    event SequencerRelocked(uint32 index, uint256 amount, uint256 reward);\n\n    /// @notice Emits when Metis tokens are minted on Layer 2.\n    /// @param amount The amount of Metis tokens that have been minted.\n    event L2MetisMinted(uint256 amount);\n\n    /// @notice Emits when the sequencer agent template is set.\n    /// @param oldValue The address of the old sequencer agent template.\n    /// @param newValue The address of the new sequencer agent template.\n    event SequencerAgentTemplateSet(address indexed oldValue, address indexed newValue);\n\n    /// @notice Emits when the L2 gas limit is set.\n    /// @param oldValue The old L2 gas limit.        \n    event L2GasSet(uint32 oldValue, uint32 newValue);\n\n    /// @notice Emits when withdrawRewards is set.\n    /// @param oldValue The old withdrawRewards.\n    /// @param newValue The new withdrawRewards.\n    event WithdrawRewardsSet(bool oldValue, bool newValue);\n\n    /// @notice The template contract for sequencer agents.\n    address public sequencerAgentTemplate;\n\n    /// @notice The Metis token.\n    IERC20 public metis;\n\n    /// @notice The LockingPool contract address.\n    ILockingPool public lockingPool;\n\n    /// @notice The LockingInfo contract address.\n    ILockingInfo public lockingInfo;\n\n    /// @notice The L2 messenger contract.\n    ICrossDomainMessenger public messenger;\n\n    /// @notice The ID of the L2 chain.\n    uint256 public l2ChainId;\n\n    /// @notice The address of the L2 MetisMinter contract.\n    address public l2Minter;\n\n    /// @notice The address of the L2 RewardDispatcher contract.\n    address public l2RewardDispatcher;\n\n    /// @notice The list of sequencer agents.\n    mapping(uint32 => address) public sequencerAgents;\n\n    /// @notice The number of sequencer agents.\n    uint32 public sequencerAgentCount;\n\n    /// @notice The list of active sequencer agent IDs.\n    uint32[] public activeSequencerIds;\n\n    /// @notice The sum of rewards of all sequencers.\n    uint256 public sumRewards;\n\n    /// @notice L2 gas limit.\n    uint32 public l2Gas;\n\n    /// @notice withdraw rewards\n    bool public withdrawRewards;\n\n    /// @notice Initializes the contract.\n    function initialize( \n        address _metis, \n        address _lockingPool, \n        address _l1Bridge, \n        uint256 _l2ChainId, \n        uint32 _l2Gas, \n        address _l2Minter, \n        address _l2RewardDispatcher\n        ) public initializer {\n        require( _metis != address(0) && _lockingPool != address(0) && _l1Bridge != address(0) && _l2Minter != address(0) && _l2RewardDispatcher != address(0), \"Dealer: zero address\");\n        __Ownable_init(msg.sender);\n        metis = IERC20(_metis);\n        lockingPool = ILockingPool(_lockingPool);\n        lockingInfo = lockingPool.escrow();\n        messenger = ICrossDomainMessenger(ICrossDomainEnabled(_l1Bridge).messenger());\n        l2ChainId = _l2ChainId;\n        l2Gas = _l2Gas;\n        l2Minter = _l2Minter;\n        l2RewardDispatcher = _l2RewardDispatcher;\n\n    }\n\n    /// @notice Returns the number of active sequencers.\n    /// @return The number of active sequencers.\n    function activeSequencerCount() external view returns (uint32) {\n        return uint32(activeSequencerIds.length);\n    }\n\n    /// @notice set withdraw rewards\n    /// @param _withdrawRewards The new value of the withdrawRewards flag.\n    function setWithdrawRewards(bool _withdrawRewards) external onlyOwner {\n        bool _old = withdrawRewards;\n        withdrawRewards = _withdrawRewards;\n        emit WithdrawRewardsSet(_old, _withdrawRewards);\n    }\n\n    /// @notice Adds a new sequencer agent.\n    /// @return The index of the new sequencer agent.\n    function addAgent() external onlyOwner returns (uint32) {\n        bytes memory data = abi.encodeWithSelector(SequencerAgent.initialize.selector, address(this), lockingPool, lockingInfo, address(metis));\n        address clone = address(new BeaconProxy(address(this), data));\n        uint32 index = sequencerAgentCount;\n        sequencerAgents[index] = clone;\n        emit SequencerAgentAdded(index, clone);\n        sequencerAgentCount++;\n        return index;\n    }\n\n    /// @notice Locks Metis tokens for a new sequencer.\n    /// @param agentId The index of the sequencer agent.\n    /// @param sequencerSigner The address of the sequencer signer.\n    /// @param amount The amount of Metis tokens to lock.\n    /// @param signerPubKey The public key of the sequencer signer.\n    function lockFor(uint32 agentId, address sequencerSigner, uint256 amount, bytes memory signerPubKey) external onlyOwner {\n        address agent = sequencerAgents[agentId];\n        IERC20(metis).transferFrom(msg.sender, agent, amount);\n        SequencerAgent(agent).lock(sequencerSigner, l2Minter, amount, signerPubKey);\n        _setActive(agentId, true);\n    }\n\n    /// @notice Unlock Metis tokens and terminate the sequencer.\n    /// @param agentId The index of the sequencer agent.\n    function unlock(uint32 agentId) external payable onlyOwner {\n        SequencerAgent(sequencerAgents[agentId]).unlock(l2Gas);\n        _removeFromActiveList(agentId);\n    }\n\n    /// @notice The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\n    /// @param agentId The index of the sequencer agent.\n    function unlockClaim(uint32 agentId) external payable onlyOwner {\n        SequencerAgent(sequencerAgents[agentId]).unlockClaim(l2Gas);\n    }\n\n    /// @notice Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\n    /// @dev The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\n    /// @return totalProcessed The total amount of Metis tokens and rewards that have been relocked.\n    function relock() external payable returns (uint256 totalProcessed) {\n        require(activeSequencerIds.length > 0, \"Dealer: no active sequencer\");\n\n        uint maxLock = lockingInfo.maxLock();\n        uint256 undistributedAmount = metis.balanceOf(address(this));\n        uint256 totalRewards = 0;\n\n        for (uint32 i = 0; i < activeSequencerIds.length; i++) {\n            uint32 agentId = activeSequencerIds[i];\n            SequencerAgent agent = SequencerAgent(sequencerAgents[agentId]);\n            ILockingPool.SequencerData memory seq = agent.sequencerData();\n            (uint256 reward, uint256 locked) = (seq.reward, seq.amount);\n            totalRewards += reward;\n\n            // The lock quota means the amount of Metis tokens that can be locked for the sequencer, due to the maximum lock amount.\n            uint256 lockQuota = locked < maxLock ? maxLock - locked : 0;\n\n            // The amount of Metis tokens that can be locked is the minimum of the lock quota and the undistributed amount.\n            uint256 lockAmount = Math.min(lockQuota, undistributedAmount);\n\n            // The undistributed amount should be reduced by the amount of Metis tokens that have been locked.\n            undistributedAmount -= lockAmount;\n\n            // If there is not any lock amount or reward, the process should be skipped.\n            uint256 toBeProcessed = lockAmount + reward;\n            if (toBeProcessed == 0) {\n                continue;\n            }\n\n            totalProcessed += toBeProcessed;\n\n            // The rewards are withdrawn if the `withdrawRewards` flag is set to true, or if the locked amount plus the amount to be processed exceeds the maximum lock amount.\n            bool _withdrawRewards = withdrawRewards || locked + toBeProcessed > maxLock;\n            if (_withdrawRewards && reward > 0) {\n                agent.withdrawRewards(l2Gas);\n            }\n\n            // If the lock amount is not zero, or if we decided to convert the rewards to lock amount, the `relock` function is called.\n            if (!_withdrawRewards || lockAmount > 0) {\n                IERC20(metis).transfer(address(agent), lockAmount);\n                agent.relock(lockAmount);\n                emit SequencerRelocked(agentId, lockAmount, reward);\n            }\n        }\n\n        // In the event of any rewards, the MetisMinter contract on Layer 2 is invoked to mint eMetis tokens. These tokens are then distributed as rewards to seMetis holders.\n        if (totalRewards > 0) {\n            _mintL2EMetis(totalRewards);\n            sumRewards += totalRewards;\n        }\n    }\n\n    /// @notice Sets the active status of a sequencer agent.\n    function setActive(uint32 agentId, bool active) external onlyOwner {\n        _setActive(agentId, active);\n    }\n\n    /// @notice Sets the sequencer agent template.\n    /// @param _sequencerAgentTemplate The address of the new sequencer agent template.\n    function setSequencerAgentTemplate(address _sequencerAgentTemplate) external onlyOwner {\n        require(_sequencerAgentTemplate != address(0), \"Dealer: zero address\");\n        sequencerAgentTemplate = _sequencerAgentTemplate;\n    }\n\n    /// @notice Sets the L2 gas limit.\n    /// @param _l2Gas The new L2 gas limit.\n    /// @dev The L2 gas limit is used when minting eMetis tokens on Layer 2.\n    function setL2Gas(uint32 _l2Gas) external onlyOwner {\n        uint32 _old = l2Gas;\n        l2Gas = _l2Gas;\n        emit L2GasSet(_old, _l2Gas);\n    }\n\n    /// @notice Returns the total amount of Metis tokens that have been locked for all sequencers.\n    function totalLocked() external view returns (uint256) {\n        uint256 total = 0;\n        for (uint32 i = 0; i < activeSequencerIds.length; i++) {\n            uint32 agentId = activeSequencerIds[i];\n            SequencerAgent agent = SequencerAgent(sequencerAgents[agentId]);\n            uint256 locked = agent.sequencerData().amount;\n            total += locked;\n        }\n        return total;\n    }\n\n    /// @notice Use Dealer as a beacon of BeaconProxy for SequencerAgent\n    /// @return The implementation address\n    function implementation() external view returns (address) {\n        return sequencerAgentTemplate;\n    }\n\n    /// @notice Sets the active status of a sequencer agent.\n    function _setActive(uint32 agentId, bool active) internal {\n        if (active) {\n            for (uint32 i = 0; i < activeSequencerIds.length; i++) {\n                require(activeSequencerIds[i] != agentId, \"Dealer: already active\");\n            }\n            activeSequencerIds.push(agentId);\n        } else {\n            _removeFromActiveList(agentId);\n        }\n    }\n\n    /// @notice mint veMetis on Layer 2\n    /// @param amount Metis amount\n    function _mintL2EMetis(uint256 amount) internal {\n        bytes memory message = abi.encodeWithSelector(IVeMetisMinter.mintFromL1.selector, amount);\n        messenger.sendMessageViaChainId{value:msg.value}(l2ChainId, l2Minter, message, l2Gas);\n        emit L2MetisMinted(amount);\n    }\n\n    /// @notice Removes a sequencer agent from the active list.\n    /// @param agentId The index of the sequencer agent.\n    /// @dev The sequencer agent is removed from the active list by swapping it with the last element in the list, and then popping the last element.\n    function _removeFromActiveList(uint32 agentId) internal returns (uint32 index) {\n        index = _findFromActiveList(agentId);\n        require(index < type(uint32).max, \"Dealer: not active\");\n        activeSequencerIds[index] = activeSequencerIds[activeSequencerIds.length - 1];\n        activeSequencerIds.pop();\n    }\n\n    /// @notice Finds the index of a sequencer agent in the active list.\n    /// @param agentId The index of the sequencer agent.\n    /// @return The index of the sequencer agent in the active list.\n    function _findFromActiveList(uint32 agentId) internal view returns (uint32) {\n        for (uint32 index = 0; index < activeSequencerIds.length; index++) {\n            if (activeSequencerIds[index] == agentId) {\n                return index;\n            }\n        }\n        return type(uint32).max;\n    }\n\n    function setL2Minter(address _l2GasAddress) public{\n        l2Minter = _l2GasAddress;\n    }\n}"},"contracts/SequencerAgent.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interface/ILockingPool.sol\";\nimport \"../interface/ILockingInfo.sol\";\n\ncontract SequencerAgent is ContextUpgradeable {\n    address public dealer;\n    ILockingPool public lockingPool;\n    ILockingInfo public lockingInfo;\n    IERC20 public metis;\n    uint256 public sequencerId;\n    address public sequencerSigner;\n    bool public active;\n\n    modifier onlyDealer() {\n        require(msg.sender == dealer, \"SequencerAgent: only dealer\");\n        _;\n    }\n\n    function initialize(address _dealer, ILockingPool _lockingPool, ILockingInfo _lockingInfo, address _metis) external initializer {\n        dealer = _dealer;\n        lockingPool = _lockingPool;\n        lockingInfo = _lockingInfo;\n        metis = IERC20(_metis);\n    }\n\n    function lock(address _sequencerSigner, address _rewardRecipient, uint256 _amount, bytes memory _signerPubKey) public onlyDealer {\n        require(sequencerId == 0, \"SequencerAgent: sequencer already locked\");\n        require(_sequencerSigner != address(0) && _rewardRecipient != address(0), \"SequencerAgent: zero address\");\n        require(_amount > 0, \"SequencerAgent: zero amount\");\n\n        sequencerSigner = _sequencerSigner;\n        metis.approve(address(lockingInfo), type(uint256).max);\n        lockingPool.lockWithRewardRecipient(sequencerSigner, _rewardRecipient, _amount, _signerPubKey);\n        sequencerId = lockingPool.seqSigners(sequencerSigner);\n        active = true;\n    }\n\n    function relock(uint256 amount) public onlyDealer {\n        lockingPool.relock(sequencerId, amount, true);\n    }\n\n    function withdrawRewards(uint32 l2Gas) public onlyDealer {\n        lockingPool.withdrawRewards(sequencerId, l2Gas);\n    }\n\n    function sequencerData() public view returns (ILockingPool.SequencerData memory) {\n        return lockingPool.sequencers(sequencerId);\n    }\n\n    function unlock(uint32 l2Gas) public payable onlyDealer {\n        lockingPool.unlock{value: msg.value}(sequencerId, l2Gas);\n        active = false;\n    }\n\n    function unlockClaim(uint32 l2Gas) public payable onlyDealer {\n        lockingPool.unlockClaim{value: msg.value}(sequencerId, l2Gas);\n        IERC20(metis).transfer(dealer, IERC20(metis).balanceOf(address(this)));\n    }\n}"},"interface/ICrossDomainEnabled.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface ICrossDomainEnabled {\n    function messenger() external view returns (address);\n}"},"interface/ICrossDomainMessenger.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title ICrossDomainMessenger\n */\ninterface ICrossDomainMessenger {\n    /**********\n     * Events *\n     **********/\n\n    event SentMessage(\n        address indexed target,\n        address sender,\n        bytes message,\n        uint256 messageNonce,\n        uint256 gasLimit,\n        uint256 chainId\n    );\n    event RelayedMessage(bytes32 indexed msgHash);\n    event FailedRelayedMessage(bytes32 indexed msgHash);\n\n    /*************\n     * Variables *\n     *************/\n\n    function xDomainMessageSender() external view returns (address);\n\n    /********************\n     * Public Functions *\n     ********************/\n    \n    /**\n     * Sends a cross domain message to the target messenger.\n     * @param _target Target contract address.\n     * @param _message Message to send to the target.\n     * @param _gasLimit Gas limit for the provided message.\n     */\n    function sendMessage(\n        address _target,\n        bytes calldata _message,\n        uint32 _gasLimit\n    ) external payable;\n\n\n    /**\n     * Sends a cross domain message to the target messenger.\n     * @param _chainId L2 chain id.\n     * @param _target Target contract address.\n     * @param _message Message to send to the target.\n     * @param _gasLimit Gas limit for the provided message.\n     */\n    function sendMessageViaChainId(\n        uint256 _chainId,\n        address _target,\n        bytes calldata _message,\n        uint32 _gasLimit\n    ) external payable;\n\n    function replayMessageViaChainId(\n        uint256 _chainId,\n        address _target,\n        address _sender,\n        bytes memory _message,\n        uint256 _queueIndex,\n        uint32 _oldGasLimit,\n        uint32 _newGasLimit\n    )external;\n}"},"interface/ILockingInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\n\ninterface ILockingInfo {\n    function minLock() external view returns(uint256);\n    function maxLock() external view returns(uint256);\n\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n     * @param _newMinLock new min lock.\n     */\n    event SetMinLock(uint256 _newMinLock);\n\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n     * @param _newMaxLock new max lock.\n     */\n    event SetMaxLock(uint256 _newMaxLock);\n\n    /**\n     * @dev Emitted when the reward payer is changed\n     * @param _payer new reward payer\n     */\n    event SetRewardPayer(address _payer);\n\n    /**\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n     * @param signer sequencer address.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param activationBatch sequencer's first epoch as proposer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     * @param signerPubkey public key of the sequencer\n     */\n    event Locked(\n        address indexed signer,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 indexed activationBatch,\n        uint256 amount,\n        uint256 total,\n        bytes signerPubkey\n    );\n\n    /**\n     * @dev Emitted when the sequencer increase lock amoun in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking new amount\n     * @param total the total locking amount\n     */\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\n\n    /**\n     * @dev Emitted when sequencer relocking in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param newAmount the updated lock amount.\n     */\n    event LockUpdate(\n        uint256 indexed sequencerId,\n        uint256 indexed nonce,\n        uint256 indexed newAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param recipient the address receive reward tokens\n     * @param amount the reward amount.\n     * @param totalAmount total rewards has liquidated\n     */\n    event ClaimRewards(\n        uint256 indexed sequencerId,\n        address recipient,\n        uint256 indexed amount,\n        uint256 indexed totalAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param deactivationBatch  last batch for sequencer.\n     * @param deactivationTime unlock block timestamp.\n     * @param unlockClaimTime when user can claim locked token.\n     * @param amount locking amount\n     */\n    event UnlockInit(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 deactivationBatch,\n        uint256 deactivationTime,\n        uint256 unlockClaimTime,\n        uint256 indexed amount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     */\n    event Unlocked(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 amount,\n        uint256 total\n    );\n\n    /**\n     * @dev Emitted when batch update in  'batchSubmitRewards'\n     * @param _newBatchId new batchId.\n     */\n    event BatchSubmitReward(uint256 _newBatchId);\n\n    /**\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param oldSigner oldSigner old address of the sequencer.\n     * @param newSigner newSigner new address of the sequencer.\n     * @param signerPubkey signerPubkey public key of the sequencer.\n     */\n    event SignerChange(\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        address indexed oldSigner,\n        address indexed newSigner,\n        bytes signerPubkey\n    );\n\n    function newSequencer(\n        uint256 _id,\n        address _owner,\n        address _signer,\n        uint256 _amount,\n        uint256 _batchId,\n        bytes calldata _signerPubkey\n    ) external;\n\n    function increaseLocked(\n        uint256 _seqId,\n        uint256 _nonce,\n        address _owner,\n        uint256 _locked,\n        uint256 _incoming,\n        uint256 _fromReward\n    ) external;\n\n    function initializeUnlock(\n        uint256 _seqId,\n        uint256 _reward,\n        uint32 _l2gas,\n        ISequencerInfo.Sequencer calldata _seq\n    ) external payable;\n\n    function finalizeUnlock(\n        address _owner,\n        uint256 _seqId,\n        uint256 _amount,\n        uint256 _reward,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function liquidateReward(\n        uint256 _seqId,\n        uint256 _amount,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\n\n    function logSignerChange(\n        uint256 sequencerId,\n        address oldSigner,\n        address newSigner,\n        uint256 nonce,\n        bytes calldata signerPubkey\n    ) external;\n}"},"interface/ILockingPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.9;\n\nimport \"./ILockingInfo.sol\";\nimport \"./ISequencerInfo.sol\";\n\ninterface ILockingPool is ISequencerInfo {\n    struct SequencerData {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n    }\n\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\n    function escrow() external view returns (ILockingInfo);\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\n    function seqSigners(address signer) external view returns (uint256 seqId);\n\n    /**\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\n     * @param _cur current withdraw delay time\n     * @param _prev previours withdraw delay time\n     */\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\n\n    /**\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n     * @param newReward new block reward\n     * @param oldReward  old block reward\n     */\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\n\n    /**\n     * @dev Emitted when mpc address update in 'UpdateMpc'\n     * @param _newMpc new min lock.\n     */\n    event UpdateMpc(address _newMpc);\n\n    /**\n     * @dev Emitted when SignerUpdateThrottle is updated\n     * @param _n new min value\n     */\n    event SetSignerUpdateThrottle(uint256 _n);\n}"},"interface/ISequencerInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface ISequencerInfo {\n    error OwnedSequencer();\n    error SignerExisted();\n    error NoSuchSeq();\n    error NullAddress();\n    error SeqNotActive();\n    error NotSeqOwner();\n    error NotSeqSigner();\n    error NoRewardRecipient();\n    error NotWhitelisted();\n\n    // the sequencer status\n    enum Status {\n        Unavailabe, // placeholder for default value\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\n        Active, // the sequencer is active when it locks tokens on the contract\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\n    }\n\n    struct Sequencer {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n        bytes pubkey; // sequencer signer pubkey\n        address rewardRecipient; // sequencer rewarder recipient address\n        Status status; // sequencer status\n    }\n\n    /**\n     * @dev Emitted if owner call 'setWhitelist'\n     * @param _user the address who can lock token\n     * @param _yes white address state\n     */\n    event SetWhitelist(address _user, bool _yes);\n\n    /**\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n     * @param _seqId the sequencerId\n     * @param _recipient the address receive reward token\n     */\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\n\n    /**\n     * @dev Emitted when sequencer owner is changed\n     * @param _seqId the sequencerId\n     * @param _owner the sequencer owner\n     */\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\n\n    function seqOwners(address owner) external returns (uint256 seqId);\n}"},"interface/IVeMetisMinter.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\ninterface IVeMetisMinter {\n    function mint(address user, uint256 amount) external;\n\n    function mintFromL1(uint256 amount) external;\n\n    function depositToL1Dealer(uint256 amount) external payable;\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[494],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":495,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,494,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1289:56:0","statements":[{"nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:1","statements":[{"nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[494],"Initializable":[448]},"id":495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":495,"sourceUnit":449,"src":"126:63:2","symbolAliases":[{"foreign":{"id":451,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":454,"name":"Initializable","nameLocations":["728:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:2"},"id":455,"nodeType":"InheritanceSpecifier","src":"728:13:2"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"191:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":494,"linearizedBaseContracts":[494,448],"name":"ContextUpgradeable","nameLocation":"706:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":460,"nodeType":"Block","src":"800:7:2","statements":[]},"id":461,"implemented":true,"kind":"function","modifiers":[{"id":458,"kind":"modifierInvocation","modifierName":{"id":457,"name":"onlyInitializing","nameLocations":["783:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:2"},"nodeType":"ModifierInvocation","src":"783:16:2"}],"name":"__Context_init","nameLocation":"757:14:2","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"771:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":494,"src":"748:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":466,"nodeType":"Block","src":"875:7:2","statements":[]},"id":467,"implemented":true,"kind":"function","modifiers":[{"id":464,"kind":"modifierInvocation","modifierName":{"id":463,"name":"onlyInitializing","nameLocations":["858:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:2"},"nodeType":"ModifierInvocation","src":"858:16:2"}],"name":"__Context_init_unchained","nameLocation":"822:24:2","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"846:2:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"875:0:2"},"scope":494,"src":"813:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":475,"nodeType":"Block","src":"949:34:2","statements":[{"expression":{"expression":{"id":472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:2","memberName":"sender","nodeType":"MemberAccess","src":"966:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":471,"id":474,"nodeType":"Return","src":"959:17:2"}]},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:2","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"906:2:2"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:2"},"scope":494,"src":"887:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"1056:32:2","statements":[{"expression":{"expression":{"id":481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:2","memberName":"data","nodeType":"MemberAccess","src":"1073:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":480,"id":483,"nodeType":"Return","src":"1066:15:2"}]},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:2","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":485,"src":"1040:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:2"},"scope":494,"src":"989:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":492,"nodeType":"Block","src":"1166:25:2","statements":[{"expression":{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":489,"id":491,"nodeType":"Return","src":"1176:8:2"}]},"id":493,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:2","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"1123:2:2"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":493,"src":"1157:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:2"},"scope":494,"src":"1094:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":495,"src":"688:505:2","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1232],"ERC1967Utils":[797],"IBeacon":[901],"StorageSlot":[1342]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":496,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:3"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":798,"sourceUnit":902,"src":"140:46:3","symbolAliases":[{"foreign":{"id":497,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"148:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":798,"sourceUnit":1233,"src":"187:48:3","symbolAliases":[{"foreign":{"id":499,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"195:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":798,"sourceUnit":1343,"src":"236:56:3","symbolAliases":[{"foreign":{"id":501,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"244:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"294:154:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":797,"linearizedBaseContracts":[797],"name":"ERC1967Utils","nameLocation":"457:12:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"660:68:3","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":508,"name":"Upgraded","nameLocation":"739:8:3","nodeType":"EventDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:3","nodeType":"VariableDeclaration","scope":508,"src":"748:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:3"},"src":"733:47:3"},{"anonymous":false,"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"786:67:3","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":515,"name":"AdminChanged","nameLocation":"864:12:3","nodeType":"EventDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:3","nodeType":"VariableDeclaration","scope":515,"src":"877:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:3","nodeType":"VariableDeclaration","scope":515,"src":"900:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:3"},"src":"858:60:3"},{"anonymous":false,"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"924:59:3","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":520,"name":"BeaconUpgraded","nameLocation":"994:14:3","nodeType":"EventDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:3","nodeType":"VariableDeclaration","scope":520,"src":"1009:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:3"},"src":"988:45:3"},{"constant":true,"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"1039:170:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":524,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:3","nodeType":"VariableDeclaration","scope":797,"src":"1279:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"1400:69:3","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":529,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:3","nodeType":"ErrorDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:3","nodeType":"VariableDeclaration","scope":529,"src":"1509:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:3"},"src":"1474:59:3"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"1539:60:3","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":534,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:3","nodeType":"ErrorDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"admin","nameLocation":"1638:5:3","nodeType":"VariableDeclaration","scope":534,"src":"1630:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:3"},"src":"1604:41:3"},{"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"1651:61:3","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":539,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:3","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:3","nodeType":"VariableDeclaration","scope":539,"src":"1744:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:3"},"src":"1717:43:3"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"1766:82:3","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":542,"name":"ERC1967NonPayable","nameLocation":"1859:17:3","nodeType":"ErrorDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"1876:2:3"},"src":"1853:26:3"},{"body":{"id":554,"nodeType":"Block","src":"2018:77:3","statements":[{"expression":{"expression":{"arguments":[{"id":550,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2062:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":548,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2035:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"2035:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"2035:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"2028:60:3"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"1885:67:3","text":" @dev Returns the current implementation address."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:3","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"1983:2:3"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"2009:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:3"},"scope":797,"src":"1957:138:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"2249:218:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":561,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2263:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:3","memberName":"code","nodeType":"MemberAccess","src":"2263:22:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:3","memberName":"length","nodeType":"MemberAccess","src":"2263:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":571,"nodeType":"IfStatement","src":"2259:119:3","trueBody":{"id":570,"nodeType":"Block","src":"2299:79:3","statements":[{"errorCall":{"arguments":[{"id":567,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2349:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":566,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2320:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"RevertStatement","src":"2313:54:3"}]}},{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":575,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2414:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":572,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2387:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"2387:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"2387:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":578,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2443:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":580,"nodeType":"ExpressionStatement","src":"2387:73:3"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"2101:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:3","nodeType":"VariableDeclaration","scope":582,"src":"2214:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2249:0:3"},"scope":797,"src":"2186:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":615,"nodeType":"Block","src":"2860:254:3","statements":[{"expression":{"arguments":[{"id":591,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2889:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":590,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"2870:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"2870:37:3"},{"eventCall":{"arguments":[{"id":595,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2931:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":594,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"2922:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"EmitStatement","src":"2917:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":598,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2964:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:3","memberName":"length","nodeType":"MemberAccess","src":"2964:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":613,"nodeType":"Block","src":"3065:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":610,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"3079:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"3079:18:3"}]},"id":614,"nodeType":"IfStatement","src":"2960:148:3","trueBody":{"id":609,"nodeType":"Block","src":"2981:78:3","statements":[{"expression":{"arguments":[{"id":605,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3024:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3043:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":602,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2995:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1232_$","typeString":"type(library Address)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"2995:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":608,"nodeType":"ExpressionStatement","src":"2995:53:3"}]}}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"2473:301:3","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:3","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:3","nodeType":"VariableDeclaration","scope":616,"src":"2805:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"data","nameLocation":"2845:4:3","nodeType":"VariableDeclaration","scope":616,"src":"2832:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:3"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"2860:0:3"},"scope":797,"src":"2779:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3120:145:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":620,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:3","nodeType":"VariableDeclaration","scope":797,"src":"3335:105:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"3844:68:3","statements":[{"expression":{"expression":{"arguments":[{"id":628,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3888:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":626,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3861:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"3861:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"3861:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":625,"id":631,"nodeType":"Return","src":"3854:51:3"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"3447:340:3","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:3","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"3809:2:3"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"3835:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:3"},"scope":797,"src":"3792:120:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"4039:172:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4053:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"4049:91:3","trueBody":{"id":652,"nodeType":"Block","src":"4077:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4098:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"4091:38:3"}]}},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":657,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4176:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":654,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4149:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"4149:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"4149:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":660,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4196:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":662,"nodeType":"ExpressionStatement","src":"4149:55:3"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"3918:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:3","nodeType":"VariableDeclaration","scope":664,"src":"4013:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"4039:0:3"},"scope":797,"src":"3994:217:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":680,"nodeType":"Block","src":"4379:85:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":671,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4419:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"4394:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"EmitStatement","src":"4389:39:3"},{"expression":{"arguments":[{"id":677,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4448:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":676,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"4438:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"4438:19:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"4217:109:3","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:3","nodeType":"VariableDeclaration","scope":681,"src":"4352:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:3"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"4379:0:3"},"scope":797,"src":"4331:133:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"4470:201:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":685,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:3","nodeType":"VariableDeclaration","scope":797,"src":"4741:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"4963:69:3","statements":[{"expression":{"expression":{"arguments":[{"id":693,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5007:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":691,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4980:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"4980:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"4980:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":690,"id":696,"nodeType":"Return","src":"4973:52:3"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"4854:51:3","text":" @dev Returns the current beacon."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"4928:2:3"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"4954:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:3"},"scope":797,"src":"4910:122:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":743,"nodeType":"Block","src":"5161:390:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":704,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5175:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:3","memberName":"code","nodeType":"MemberAccess","src":"5175:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:3","memberName":"length","nodeType":"MemberAccess","src":"5175:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"5171:95:3","trueBody":{"id":713,"nodeType":"Block","src":"5203:63:3","statements":[{"errorCall":{"arguments":[{"id":710,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5245:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":709,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5224:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"RevertStatement","src":"5217:38:3"}]}},{"expression":{"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":718,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5303:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":715,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5276:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"5276:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"5276:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":721,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5324:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"nodeType":"ExpressionStatement","src":"5276:57:3"},{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:3","nodeType":"VariableDeclaration","scope":743,"src":"5344:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":731,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":727,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5383:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":726,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$901_$","typeString":"type(contract IBeacon)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$901","typeString":"contract IBeacon"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":900,"src":"5375:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":732,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"5424:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:3","memberName":"code","nodeType":"MemberAccess","src":"5424:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:3","memberName":"length","nodeType":"MemberAccess","src":"5424:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"5420:125:3","trueBody":{"id":741,"nodeType":"Block","src":"5463:82:3","statements":[{"errorCall":{"arguments":[{"id":738,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"5513:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":737,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5484:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"RevertStatement","src":"5477:57:3"}]}}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"5038:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":744,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:3","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:3","nodeType":"VariableDeclaration","scope":744,"src":"5134:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:3"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"5161:0:3"},"scope":797,"src":"5114:437:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":781,"nodeType":"Block","src":"6155:254:3","statements":[{"expression":{"arguments":[{"id":753,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6176:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6165:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"6165:21:3"},{"eventCall":{"arguments":[{"id":757,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6216:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":756,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6201:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"EmitStatement","src":"6196:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":760,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6241:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:3","memberName":"length","nodeType":"MemberAccess","src":"6241:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":779,"nodeType":"Block","src":"6360:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"6374:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"6374:18:3"}]},"id":780,"nodeType":"IfStatement","src":"6237:166:3","trueBody":{"id":775,"nodeType":"Block","src":"6258:96:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":768,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6309:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":767,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"6301:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$901_$","typeString":"type(contract IBeacon)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$901","typeString":"contract IBeacon"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":900,"src":"6301:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":764,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6272:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1232_$","typeString":"type(library Address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"6272:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":774,"nodeType":"ExpressionStatement","src":"6272:71:3"}]}}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"5557:514:3","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:3","nodeType":"VariableDeclaration","scope":782,"src":"6108:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"data","nameLocation":"6140:4:3","nodeType":"VariableDeclaration","scope":782,"src":"6127:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:3"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"6155:0:3"},"scope":797,"src":"6076:333:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"6634:86:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6648:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:3","memberName":"value","nodeType":"MemberAccess","src":"6648:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":794,"nodeType":"IfStatement","src":"6644:70:3","trueBody":{"id":793,"nodeType":"Block","src":"6663:51:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":790,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6684:17:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"RevertStatement","src":"6677:26:3"}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"6415:178:3","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:3","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"6623:2:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"6634:0:3"},"scope":797,"src":"6598:122:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":798,"src":"449:6273:3","usedErrors":[529,534,539,542],"usedEvents":[508,515,520]}],"src":"114:6609:3"},"id":3},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[833]},"id":834,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"125:598:4","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":833,"linearizedBaseContracts":[833],"name":"Proxy","nameLocation":"742:5:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":807,"nodeType":"Block","src":"1009:835:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1028:810:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1281:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1284:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1287:12:4"},"nodeType":"YulFunctionCall","src":"1287:14:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1268:12:4"},"nodeType":"YulFunctionCall","src":"1268:34:4"},"nodeType":"YulExpressionStatement","src":"1268:34:4"},{"nodeType":"YulVariableDeclaration","src":"1429:74:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1456:3:4"},"nodeType":"YulFunctionCall","src":"1456:5:4"},{"name":"implementation","nodeType":"YulIdentifier","src":"1463:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1479:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1482:12:4"},"nodeType":"YulFunctionCall","src":"1482:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1501:1:4","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1443:12:4"},"nodeType":"YulFunctionCall","src":"1443:60:4"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1433:6:4","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1571:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1574:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1577:14:4"},"nodeType":"YulFunctionCall","src":"1577:16:4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1556:14:4"},"nodeType":"YulFunctionCall","src":"1556:38:4"},"nodeType":"YulExpressionStatement","src":"1556:38:4"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1689:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1714:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1717:14:4"},"nodeType":"YulFunctionCall","src":"1717:16:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:4"},"nodeType":"YulFunctionCall","src":"1707:27:4"},"nodeType":"YulExpressionStatement","src":"1707:27:4"}]},"nodeType":"YulCase","src":"1682:66:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1687:1:4","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1769:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1797:14:4"},"nodeType":"YulFunctionCall","src":"1797:16:4"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1787:6:4"},"nodeType":"YulFunctionCall","src":"1787:27:4"},"nodeType":"YulExpressionStatement","src":"1787:27:4"}]},"nodeType":"YulCase","src":"1761:67:4","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1615:6:4"},"nodeType":"YulSwitch","src":"1608:220:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":803,"isOffset":false,"isSlot":false,"src":"1463:14:4","valueSize":1}],"id":806,"nodeType":"InlineAssembly","src":"1019:819:4"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"754:190:4","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:4","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"implementation","nameLocation":"976:14:4","nodeType":"VariableDeclaration","scope":808,"src":"968:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:4"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"1009:0:4"},"scope":833,"src":"949:895:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1850:173:4","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":814,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"2052:2:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"2086:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:4"},"scope":833,"src":"2028:67:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"2361:45:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":819,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2381:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":818,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2371:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"ExpressionStatement","src":"2371:28:4"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"2101:217:4","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:4","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"2341:2:4"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"2361:0:4"},"scope":833,"src":"2323:83:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":831,"nodeType":"Block","src":"2639:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":828,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2649:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"2649:11:4"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"2412:186:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":832,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"2611:2:4"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"2639:0:4"},"scope":833,"src":"2603:64:4","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":834,"src":"724:1945:4","usedErrors":[],"usedEvents":[]}],"src":"99:2571:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","exportedSymbols":{"BeaconProxy":[891],"ERC1967Utils":[797],"IBeacon":[901],"Proxy":[833]},"id":892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":835,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"./IBeacon.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":902,"src":"138:38:5","symbolAliases":[{"foreign":{"id":836,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"146:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":834,"src":"177:35:5","symbolAliases":[{"foreign":{"id":838,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"185:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"../ERC1967/ERC1967Utils.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":798,"src":"213:57:5","symbolAliases":[{"foreign":{"id":840,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"221:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":843,"name":"Proxy","nameLocations":["1139:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":833,"src":"1139:5:5"},"id":844,"nodeType":"InheritanceSpecifier","src":"1139:5:5"}],"canonicalName":"BeaconProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"272:842:5","text":" @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\n CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n the beacon to not upgrade the implementation maliciously.\n IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n an inconsistent state where the beacon storage slot does not match the beacon address."},"fullyImplemented":true,"id":891,"linearizedBaseContracts":[891,833],"name":"BeaconProxy","nameLocation":"1124:11:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":846,"mutability":"immutable","name":"_beacon","nameLocation":"1275:7:5","nodeType":"VariableDeclaration","scope":891,"src":"1249:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"1249:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":865,"nodeType":"Block","src":"1827:92:5","statements":[{"expression":{"arguments":[{"id":857,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1873:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1881:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":854,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1837:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$797_$","typeString":"type(library ERC1967Utils)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:22:5","memberName":"upgradeBeaconToAndCall","nodeType":"MemberAccess","referencedDeclaration":782,"src":"1837:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"1837:49:5"},{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"_beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"1896:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":862,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1906:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1896:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":864,"nodeType":"ExpressionStatement","src":"1896:16:5"}]},"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"1289:478:5","text":" @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}.\n - If `data` is empty, `msg.value` must be zero."},"id":866,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"beacon","nameLocation":"1792:6:5","nodeType":"VariableDeclaration","scope":866,"src":"1784:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"data","nameLocation":"1813:4:5","nodeType":"VariableDeclaration","scope":866,"src":"1800:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"1800:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1783:35:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[],"src":"1827:0:5"},"scope":891,"src":"1772:147:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[814],"body":{"id":880,"nodeType":"Block","src":"2098:62:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":874,"name":"_getBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2123:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2123:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"2115:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$901_$","typeString":"type(contract IBeacon)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$901","typeString":"contract IBeacon"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2137:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":900,"src":"2115:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":872,"id":879,"nodeType":"Return","src":"2108:45:5"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"1925:92:5","text":" @dev Returns the current implementation address of the associated beacon."},"id":881,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2031:15:5","nodeType":"FunctionDefinition","overrides":{"id":869,"nodeType":"OverrideSpecifier","overrides":[],"src":"2071:8:5"},"parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"2046:2:5"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"2089:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:9:5"},"scope":891,"src":"2022:138:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":889,"nodeType":"Block","src":"2276:31:5","statements":[{"expression":{"id":887,"name":"_beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2293:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":886,"id":888,"nodeType":"Return","src":"2286:14:5"}]},"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"2166:43:5","text":" @dev Returns the beacon."},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"2223:10:5","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"2233:2:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"2267:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2266:9:5"},"scope":891,"src":"2214:93:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":892,"src":"1115:1194:5","usedErrors":[529,539,542,992,995],"usedEvents":[520]}],"src":"112:2198:5"},"id":5},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[901]},"id":902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":893,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"134:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":901,"linearizedBaseContracts":[901],"name":"IBeacon","nameLocation":"224:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"238:168:6","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":900,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:6","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"434:2:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":900,"src":"460:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:6"},"scope":901,"src":"411:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":902,"src":"214:257:6","usedErrors":[],"usedEvents":[]}],"src":"108:364:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[979]},"id":980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":903,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":979,"linearizedBaseContracts":[979],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":913,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":913,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":913,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":913,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":922,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":922,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":922,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":922,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":928,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":979,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":936,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":979,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":946,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":946,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":946,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":943,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":979,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":956,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":956,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":956,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":979,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":966,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":966,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":979,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":978,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":978,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":978,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":978,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":975,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":979,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":980,"src":"203:2575:7","usedErrors":[],"usedEvents":[913,922]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1232]},"id":1233,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":981,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"127:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1232,"linearizedBaseContracts":[1232],"name":"Address","nameLocation":"203:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"217:94:8","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":987,"name":"AddressInsufficientBalance","nameLocation":"322:26:8","nodeType":"ErrorDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"account","nameLocation":"357:7:8","nodeType":"VariableDeclaration","scope":987,"src":"349:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:8"},"src":"316:50:8"},{"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"372:75:8","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":992,"name":"AddressEmptyCode","nameLocation":"458:16:8","nodeType":"ErrorDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"target","nameLocation":"483:6:8","nodeType":"VariableDeclaration","scope":992,"src":"475:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:8"},"src":"452:39:8"},{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"497:89:8","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":995,"name":"FailedInnerCall","nameLocation":"597:15:8","nodeType":"ErrorDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"612:2:8"},"src":"591:24:8"},{"body":{"id":1035,"nodeType":"Block","src":"1602:260:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1005,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1624:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:8","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1008,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1640:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1018,"nodeType":"IfStatement","src":"1612:109:8","trueBody":{"id":1017,"nodeType":"Block","src":"1648:73:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1013,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1704:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:8","typeDescriptions":{}}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1010,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1669:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"RevertStatement","src":"1662:48:8"}]}},{"assignments":[1020,null],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"success","nameLocation":"1737:7:8","nodeType":"VariableDeclaration","scope":1035,"src":"1732:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1019,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1027,"initialValue":{"arguments":[{"hexValue":"","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1021,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1750:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:8","memberName":"call","nodeType":"MemberAccess","src":"1750:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1023,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1772:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:8"},{"condition":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:8","subExpression":{"id":1028,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1798:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1034,"nodeType":"IfStatement","src":"1793:63:8","trueBody":{"id":1033,"nodeType":"Block","src":"1807:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1030,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1828:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"RevertStatement","src":"1821:24:8"}]}}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"621:905:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:8","nodeType":"VariableDeclaration","scope":1036,"src":"1550:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"amount","nameLocation":"1585:6:8","nodeType":"VariableDeclaration","scope":1036,"src":"1577:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:8"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"1602:0:8"},"scope":1232,"src":"1531:331:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1052,"nodeType":"Block","src":"2794:62:8","statements":[{"expression":{"arguments":[{"id":1047,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2833:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2841:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2811:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1045,"id":1051,"nodeType":"Return","src":"2804:45:8"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1868:832:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:8","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"target","nameLocation":"2735:6:8","nodeType":"VariableDeclaration","scope":1053,"src":"2727:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"data","nameLocation":"2756:4:8","nodeType":"VariableDeclaration","scope":1053,"src":"2743:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1040,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:8"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"2780:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:8"},"scope":1232,"src":"2705:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"3293:279:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3315:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:8","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3331:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1080,"nodeType":"IfStatement","src":"3303:108:8","trueBody":{"id":1079,"nodeType":"Block","src":"3338:73:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1075,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3394:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:8","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1072,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3359:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"RevertStatement","src":"3352:48:8"}]}},{"assignments":[1082,1084],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"success","nameLocation":"3426:7:8","nodeType":"VariableDeclaration","scope":1098,"src":"3421:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:8","nodeType":"VariableDeclaration","scope":1098,"src":"3435:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3488:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1085,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3462:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:8","memberName":"call","nodeType":"MemberAccess","src":"3462:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3481:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:8"},{"expression":{"arguments":[{"id":1093,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3537:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3545:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1095,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3554:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1092,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3510:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1064,"id":1097,"nodeType":"Return","src":"3503:62:8"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"2862:313:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:8","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"target","nameLocation":"3219:6:8","nodeType":"VariableDeclaration","scope":1099,"src":"3211:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"data","nameLocation":"3240:4:8","nodeType":"VariableDeclaration","scope":1099,"src":"3227:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"value","nameLocation":"3254:5:8","nodeType":"VariableDeclaration","scope":1099,"src":"3246:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:8"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"3279:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:8"},"scope":1232,"src":"3180:392:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"3811:154:8","statements":[{"assignments":[1110,1112],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"success","nameLocation":"3827:7:8","nodeType":"VariableDeclaration","scope":1124,"src":"3822:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:8","nodeType":"VariableDeclaration","scope":1124,"src":"3836:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1111,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1115,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3881:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1113,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3863:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:8"},{"expression":{"arguments":[{"id":1119,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3930:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3938:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1121,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"3947:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1118,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3903:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1108,"id":1123,"nodeType":"Return","src":"3896:62:8"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"3578:128:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:8","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"target","nameLocation":"3747:6:8","nodeType":"VariableDeclaration","scope":1125,"src":"3739:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"data","nameLocation":"3768:4:8","nodeType":"VariableDeclaration","scope":1125,"src":"3755:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:8"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"3797:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:8"},"scope":1232,"src":"3711:254:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"4203:156:8","statements":[{"assignments":[1136,1138],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"success","nameLocation":"4219:7:8","nodeType":"VariableDeclaration","scope":1150,"src":"4214:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1135,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:8","nodeType":"VariableDeclaration","scope":1150,"src":"4228:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1143,"initialValue":{"arguments":[{"id":1141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4275:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1139,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4255:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:8"},{"expression":{"arguments":[{"id":1145,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4324:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"4332:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4341:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1144,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4297:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1134,"id":1149,"nodeType":"Return","src":"4290:62:8"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"3971:130:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"target","nameLocation":"4144:6:8","nodeType":"VariableDeclaration","scope":1151,"src":"4136:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"data","nameLocation":"4165:4:8","nodeType":"VariableDeclaration","scope":1151,"src":"4152:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"4189:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:8"},"scope":1232,"src":"4106:253:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1190,"nodeType":"Block","src":"4783:424:8","statements":[{"condition":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:8","subExpression":{"id":1163,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"4798:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1188,"nodeType":"Block","src":"4857:344:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1170,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"5045:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:8","memberName":"length","nodeType":"MemberAccess","src":"5045:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1174,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"5071:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:8","memberName":"code","nodeType":"MemberAccess","src":"5071:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:8","memberName":"length","nodeType":"MemberAccess","src":"5071:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"nodeType":"IfStatement","src":"5041:119:8","trueBody":{"id":1184,"nodeType":"Block","src":"5096:64:8","statements":[{"errorCall":{"arguments":[{"id":1181,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"5138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1180,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5121:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"RevertStatement","src":"5114:31:8"}]}},{"expression":{"id":1186,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"5180:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1162,"id":1187,"nodeType":"Return","src":"5173:17:8"}]},"id":1189,"nodeType":"IfStatement","src":"4793:408:8","trueBody":{"id":1169,"nodeType":"Block","src":"4807:44:8","statements":[{"expression":{"arguments":[{"id":1166,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"4829:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1165,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4821:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"4821:19:8"}]}}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"4365:255:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"target","nameLocation":"4678:6:8","nodeType":"VariableDeclaration","scope":1191,"src":"4670:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"success","nameLocation":"4699:7:8","nodeType":"VariableDeclaration","scope":1191,"src":"4694:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1155,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:8","nodeType":"VariableDeclaration","scope":1191,"src":"4716:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1157,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"4769:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1160,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:8"},"scope":1232,"src":"4625:582:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"5509:122:8","statements":[{"condition":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:8","subExpression":{"id":1201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5524:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1210,"nodeType":"Block","src":"5583:42:8","statements":[{"expression":{"id":1208,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5604:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1200,"id":1209,"nodeType":"Return","src":"5597:17:8"}]},"id":1211,"nodeType":"IfStatement","src":"5519:106:8","trueBody":{"id":1207,"nodeType":"Block","src":"5533:44:8","statements":[{"expression":{"arguments":[{"id":1204,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5555:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1203,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5547:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"5547:19:8"}]}}]},"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"5213:189:8","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:8","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"success","nameLocation":"5438:7:8","nodeType":"VariableDeclaration","scope":1213,"src":"5433:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1193,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:8","nodeType":"VariableDeclaration","scope":1213,"src":"5447:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1195,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:8"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"5495:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:8"},"scope":1232,"src":"5407:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"5798:461:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1219,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"5874:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:8","memberName":"length","nodeType":"MemberAccess","src":"5874:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1228,"nodeType":"Block","src":"6204:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1225,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6225:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"RevertStatement","src":"6218:24:8"}]},"id":1229,"nodeType":"IfStatement","src":"5870:383:8","trueBody":{"id":1224,"nodeType":"Block","src":"5897:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:8"},"nodeType":"YulFunctionCall","src":"6096:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:8"},"nodeType":"YulFunctionCall","src":"6137:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:8"},"nodeType":"YulFunctionCall","src":"6130:44:8"},"nodeType":"YulExpressionStatement","src":"6130:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1216,"isOffset":false,"isSlot":false,"src":"6102:10:8","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"6145:10:8","valueSize":1}],"id":1223,"nodeType":"InlineAssembly","src":"6046:142:8"}]}}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"5637:101:8","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:8","nodeType":"VariableDeclaration","scope":1231,"src":"5760:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1215,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:8"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"5798:0:8"},"scope":1232,"src":"5743:516:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1233,"src":"195:6066:8","usedErrors":[987,992,995],"usedEvents":[]}],"src":"101:6161:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1342]},"id":1343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1234,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"219:1025:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1342,"linearizedBaseContracts":[1342],"name":"StorageSlot","nameLocation":"1253:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1238,"members":[{"constant":false,"id":1237,"mutability":"mutable","name":"value","nameLocation":"1308:5:9","nodeType":"VariableDeclaration","scope":1238,"src":"1300:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:9","nodeType":"StructDefinition","scope":1342,"src":"1271:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1241,"members":[{"constant":false,"id":1240,"mutability":"mutable","name":"value","nameLocation":"1360:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"1355:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:9","nodeType":"StructDefinition","scope":1342,"src":"1326:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1244,"members":[{"constant":false,"id":1243,"mutability":"mutable","name":"value","nameLocation":"1415:5:9","nodeType":"VariableDeclaration","scope":1244,"src":"1407:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:9","nodeType":"StructDefinition","scope":1342,"src":"1378:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1247,"members":[{"constant":false,"id":1246,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1247,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1342,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1250,"members":[{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"1523:5:9","nodeType":"VariableDeclaration","scope":1250,"src":"1516:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1248,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:9","nodeType":"StructDefinition","scope":1342,"src":"1488:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1253,"members":[{"constant":false,"id":1252,"mutability":"mutable","name":"value","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1253,"src":"1568:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:9","nodeType":"StructDefinition","scope":1342,"src":"1541:45:9","visibility":"public"},{"body":{"id":1263,"nodeType":"Block","src":"1768:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:9","statements":[{"nodeType":"YulAssignment","src":"1844:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1260,"isOffset":false,"isSlot":true,"src":"1844:6:9","suffix":"slot","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"1854:4:9","valueSize":1}],"id":1262,"nodeType":"InlineAssembly","src":"1821:47:9"}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"1592:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:9","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"slot","nameLocation":"1716:4:9","nodeType":"VariableDeclaration","scope":1264,"src":"1708:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:9"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"r","nameLocation":"1765:1:9","nodeType":"VariableDeclaration","scope":1264,"src":"1745:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1259,"nodeType":"UserDefinedTypeName","pathNode":{"id":1258,"name":"AddressSlot","nameLocations":["1745:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1238,"src":"1745:11:9"},"referencedDeclaration":1238,"src":"1745:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:9"},"scope":1342,"src":"1684:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"2056:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:9","statements":[{"nodeType":"YulAssignment","src":"2132:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1271,"isOffset":false,"isSlot":true,"src":"2132:6:9","suffix":"slot","valueSize":1},{"declaration":1267,"isOffset":false,"isSlot":false,"src":"2142:4:9","valueSize":1}],"id":1273,"nodeType":"InlineAssembly","src":"2109:47:9"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"1880:87:9","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:9","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"slot","nameLocation":"2004:4:9","nodeType":"VariableDeclaration","scope":1275,"src":"1996:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:9"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"r","nameLocation":"2053:1:9","nodeType":"VariableDeclaration","scope":1275,"src":"2033:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1241_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1270,"nodeType":"UserDefinedTypeName","pathNode":{"id":1269,"name":"BooleanSlot","nameLocations":["2033:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"2033:11:9"},"referencedDeclaration":1241,"src":"2033:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1241_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:9"},"scope":1342,"src":"1972:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"2344:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:9","statements":[{"nodeType":"YulAssignment","src":"2420:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1282,"isOffset":false,"isSlot":true,"src":"2420:6:9","suffix":"slot","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"2430:4:9","valueSize":1}],"id":1284,"nodeType":"InlineAssembly","src":"2397:47:9"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2168:87:9","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:9","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"slot","nameLocation":"2292:4:9","nodeType":"VariableDeclaration","scope":1286,"src":"2284:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:9"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"r","nameLocation":"2341:1:9","nodeType":"VariableDeclaration","scope":1286,"src":"2321:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1244_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"Bytes32Slot","nameLocations":["2321:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1244,"src":"2321:11:9"},"referencedDeclaration":1244,"src":"2321:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1244_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:9"},"scope":1342,"src":"2260:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"2632:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:9","statements":[{"nodeType":"YulAssignment","src":"2708:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1293,"isOffset":false,"isSlot":true,"src":"2708:6:9","suffix":"slot","valueSize":1},{"declaration":1289,"isOffset":false,"isSlot":false,"src":"2718:4:9","valueSize":1}],"id":1295,"nodeType":"InlineAssembly","src":"2685:47:9"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"2456:87:9","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:9","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"slot","nameLocation":"2580:4:9","nodeType":"VariableDeclaration","scope":1297,"src":"2572:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:9"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"r","nameLocation":"2629:1:9","nodeType":"VariableDeclaration","scope":1297,"src":"2609:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1247_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1292,"nodeType":"UserDefinedTypeName","pathNode":{"id":1291,"name":"Uint256Slot","nameLocations":["2609:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"2609:11:9"},"referencedDeclaration":1247,"src":"2609:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1247_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:9"},"scope":1342,"src":"2548:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1307,"nodeType":"Block","src":"2917:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:9","statements":[{"nodeType":"YulAssignment","src":"2993:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1304,"isOffset":false,"isSlot":true,"src":"2993:6:9","suffix":"slot","valueSize":1},{"declaration":1300,"isOffset":false,"isSlot":false,"src":"3003:4:9","valueSize":1}],"id":1306,"nodeType":"InlineAssembly","src":"2970:47:9"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"2744:86:9","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"slot","nameLocation":"2866:4:9","nodeType":"VariableDeclaration","scope":1308,"src":"2858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:9"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"r","nameLocation":"2914:1:9","nodeType":"VariableDeclaration","scope":1308,"src":"2895:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1303,"nodeType":"UserDefinedTypeName","pathNode":{"id":1302,"name":"StringSlot","nameLocations":["2895:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"2895:10:9"},"referencedDeclaration":1250,"src":"2895:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:9"},"scope":1342,"src":"2835:188:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1318,"nodeType":"Block","src":"3225:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:9","statements":[{"nodeType":"YulAssignment","src":"3301:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1315,"isOffset":false,"isSlot":true,"src":"3301:6:9","suffix":"slot","valueSize":1},{"declaration":1311,"isOffset":false,"isSlot":true,"src":"3311:10:9","suffix":"slot","valueSize":1}],"id":1317,"nodeType":"InlineAssembly","src":"3278:53:9"}]},"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"3029:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:9","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"store","nameLocation":"3173:5:9","nodeType":"VariableDeclaration","scope":1319,"src":"3158:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1310,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:9"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"r","nameLocation":"3222:1:9","nodeType":"VariableDeclaration","scope":1319,"src":"3203:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"StringSlot","nameLocations":["3203:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"3203:10:9"},"referencedDeclaration":1250,"src":"3203:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:9"},"scope":1342,"src":"3135:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1329,"nodeType":"Block","src":"3513:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:9","statements":[{"nodeType":"YulAssignment","src":"3589:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1326,"isOffset":false,"isSlot":true,"src":"3589:6:9","suffix":"slot","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"3599:4:9","valueSize":1}],"id":1328,"nodeType":"InlineAssembly","src":"3566:47:9"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"3343:85:9","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:9","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"slot","nameLocation":"3463:4:9","nodeType":"VariableDeclaration","scope":1330,"src":"3455:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:9"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"r","nameLocation":"3510:1:9","nodeType":"VariableDeclaration","scope":1330,"src":"3492:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1325,"nodeType":"UserDefinedTypeName","pathNode":{"id":1324,"name":"BytesSlot","nameLocations":["3492:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"3492:9:9"},"referencedDeclaration":1253,"src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:9"},"scope":1342,"src":"3433:186:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1340,"nodeType":"Block","src":"3816:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:9","statements":[{"nodeType":"YulAssignment","src":"3892:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1337,"isOffset":false,"isSlot":true,"src":"3892:6:9","suffix":"slot","valueSize":1},{"declaration":1333,"isOffset":false,"isSlot":true,"src":"3902:10:9","suffix":"slot","valueSize":1}],"id":1339,"nodeType":"InlineAssembly","src":"3869:53:9"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"3625:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1341,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:9","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"store","nameLocation":"3765:5:9","nodeType":"VariableDeclaration","scope":1341,"src":"3751:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:9"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"r","nameLocation":"3813:1:9","nodeType":"VariableDeclaration","scope":1341,"src":"3795:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1336,"nodeType":"UserDefinedTypeName","pathNode":{"id":1335,"name":"BytesSlot","nameLocations":["3795:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"3795:9:9"},"referencedDeclaration":1253,"src":"3795:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:9"},"scope":1342,"src":"3729:199:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1343,"src":"1245:2685:9","usedErrors":[],"usedEvents":[]}],"src":"193:3738:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2396]},"id":2397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1344,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"129:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2396,"linearizedBaseContracts":[2396],"name":"Math","nameLocation":"211:4:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"222:50:10","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1348,"name":"MathOverflowedMulDiv","nameLocation":"283:20:10","nodeType":"ErrorDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"303:2:10"},"src":"277:29:10"},{"canonicalName":"Math.Rounding","id":1353,"members":[{"id":1349,"name":"Floor","nameLocation":"336:5:10","nodeType":"EnumValue","src":"336:5:10"},{"id":1350,"name":"Ceil","nameLocation":"379:4:10","nodeType":"EnumValue","src":"379:4:10"},{"id":1351,"name":"Trunc","nameLocation":"421:5:10","nodeType":"EnumValue","src":"421:5:10"},{"id":1352,"name":"Expand","nameLocation":"451:6:10","nodeType":"EnumValue","src":"451:6:10"}],"name":"Rounding","nameLocation":"317:8:10","nodeType":"EnumDefinition","src":"312:169:10"},{"body":{"id":1384,"nodeType":"Block","src":"661:140:10","statements":[{"id":1383,"nodeType":"UncheckedBlock","src":"671:124:10","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"c","nameLocation":"703:1:10","nodeType":"VariableDeclaration","scope":1383,"src":"695:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"707:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1368,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"711:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"730:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"734:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"726:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1364,"id":1377,"nodeType":"Return","src":"737:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1380,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"782:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1364,"id":1382,"nodeType":"Return","src":"768:16:10"}]}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"487:93:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:10","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1385,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1385,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"646:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1360,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"652:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:10"},"scope":2396,"src":"585:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"984:113:10","statements":[{"id":1411,"nodeType":"UncheckedBlock","src":"994:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1026:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"1018:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1396,"id":1403,"nodeType":"Return","src":"1029:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1074:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1078:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1396,"id":1410,"nodeType":"Return","src":"1060:20:10"}]}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"807:96:10","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:10","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"a","nameLocation":"932:1:10","nodeType":"VariableDeclaration","scope":1413,"src":"924:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"b","nameLocation":"943:1:10","nodeType":"VariableDeclaration","scope":1413,"src":"935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:10"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"969:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"975:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:10"},"scope":2396,"src":"908:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"1283:417:10","statements":[{"id":1453,"nodeType":"UncheckedBlock","src":"1293:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"IfStatement","src":"1547:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1424,"id":1431,"nodeType":"Return","src":"1559:16:10"}},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"c","nameLocation":"1597:1:10","nodeType":"VariableDeclaration","scope":1453,"src":"1589:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1438,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1605:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1624:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1628:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1633:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1448,"nodeType":"IfStatement","src":"1620:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1424,"id":1447,"nodeType":"Return","src":"1636:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1450,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1681:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1424,"id":1452,"nodeType":"Return","src":"1667:16:10"}]}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"1103:99:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:10","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"a","nameLocation":"1231:1:10","nodeType":"VariableDeclaration","scope":1455,"src":"1223:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"b","nameLocation":"1242:1:10","nodeType":"VariableDeclaration","scope":1455,"src":"1234:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:10"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"1268:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1420,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"1274:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:10"},"scope":2396,"src":"1207:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1482,"nodeType":"Block","src":"1887:114:10","statements":[{"id":1481,"nodeType":"UncheckedBlock","src":"1897:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"1921:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1466,"id":1473,"nodeType":"Return","src":"1933:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1978:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1466,"id":1480,"nodeType":"Return","src":"1964:20:10"}]}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"1706:100:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:10","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"a","nameLocation":"1835:1:10","nodeType":"VariableDeclaration","scope":1483,"src":"1827:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"b","nameLocation":"1846:1:10","nodeType":"VariableDeclaration","scope":1483,"src":"1838:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:10"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1872:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1462,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1878:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:10"},"scope":2396,"src":"1811:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"2198:114:10","statements":[{"id":1509,"nodeType":"UncheckedBlock","src":"2208:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2236:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"nodeType":"IfStatement","src":"2232:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1494,"id":1501,"nodeType":"Return","src":"2244:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2289:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2293:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1494,"id":1508,"nodeType":"Return","src":"2275:20:10"}]}]},"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"2007:110:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:10","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"a","nameLocation":"2146:1:10","nodeType":"VariableDeclaration","scope":1511,"src":"2138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"b","nameLocation":"2157:1:10","nodeType":"VariableDeclaration","scope":1511,"src":"2149:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:10"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"2183:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1490,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"2189:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:10"},"scope":2396,"src":"2122:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1528,"nodeType":"Block","src":"2449:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2466:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2478:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:10","trueExpression":{"id":1524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2474:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1520,"id":1527,"nodeType":"Return","src":"2459:20:10"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"2318:59:10","text":" @dev Returns the largest of two numbers."},"id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:10","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"a","nameLocation":"2403:1:10","nodeType":"VariableDeclaration","scope":1529,"src":"2395:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"b","nameLocation":"2414:1:10","nodeType":"VariableDeclaration","scope":1529,"src":"2406:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:10"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"2440:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:10"},"scope":2396,"src":"2382:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1546,"nodeType":"Block","src":"2624:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2641:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2645:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2653:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:10","trueExpression":{"id":1542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1538,"id":1545,"nodeType":"Return","src":"2634:20:10"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"2492:60:10","text":" @dev Returns the smallest of two numbers."},"id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:10","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"a","nameLocation":"2578:1:10","nodeType":"VariableDeclaration","scope":1547,"src":"2570:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"b","nameLocation":"2589:1:10","nodeType":"VariableDeclaration","scope":1547,"src":"2581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:10"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"2615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:10"},"scope":2396,"src":"2557:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"2845:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2900:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2904:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2910:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1562,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2914:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1556,"id":1568,"nodeType":"Return","src":"2892:28:10"}]},"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"2667:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:10","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"a","nameLocation":"2799:1:10","nodeType":"VariableDeclaration","scope":1570,"src":"2791:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"b","nameLocation":"2810:1:10","nodeType":"VariableDeclaration","scope":1570,"src":"2802:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:10"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1570,"src":"2836:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:10"},"scope":2396,"src":"2774:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"3219:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3233:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1588,"nodeType":"IfStatement","src":"3229:127:10","trueBody":{"id":1587,"nodeType":"Block","src":"3241:115:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3340:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3344:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1579,"id":1586,"nodeType":"Return","src":"3333:12:10"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3444:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3467:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:10","trueExpression":{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1579,"id":1602,"nodeType":"Return","src":"3437:35:10"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"2933:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:10","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"a","nameLocation":"3173:1:10","nodeType":"VariableDeclaration","scope":1604,"src":"3165:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"b","nameLocation":"3184:1:10","nodeType":"VariableDeclaration","scope":1604,"src":"3176:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:10"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"3210:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:10"},"scope":2396,"src":"3148:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"3901:4018:10","statements":[{"id":1728,"nodeType":"UncheckedBlock","src":"3911:4002:10","statements":[{"assignments":[1617],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:10","nodeType":"VariableDeclaration","scope":1728,"src":"4232:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"4248:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1619,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4252:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:10"},{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:10","nodeType":"VariableDeclaration","scope":1728,"src":"4312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1624,"nodeType":"VariableDeclarationStatement","src":"4312:13:10"},{"AST":{"nodeType":"YulBlock","src":"4392:122:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:10"},"nodeType":"YulFunctionCall","src":"4433:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:10"},"nodeType":"YulFunctionCall","src":"4420:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:10","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:10"},"nodeType":"YulFunctionCall","src":"4470:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:10"},"nodeType":"YulFunctionCall","src":"4486:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:10"},"nodeType":"YulFunctionCall","src":"4466:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1617,"isOffset":false,"isSlot":false,"src":"4478:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"4493:5:10","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"4457:5:10","valueSize":1},{"declaration":1607,"isOffset":false,"isSlot":false,"src":"4427:1:10","valueSize":1},{"declaration":1609,"isOffset":false,"isSlot":false,"src":"4430:1:10","valueSize":1}],"id":1625,"nodeType":"InlineAssembly","src":"4383:131:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"4591:368:10","trueBody":{"id":1633,"nodeType":"Block","src":"4607:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4933:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1615,"id":1632,"nodeType":"Return","src":"4918:26:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1636,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"5080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1642,"nodeType":"IfStatement","src":"5061:88:10","trueBody":{"id":1641,"nodeType":"Block","src":"5087:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1638,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5112:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1640,"nodeType":"RevertStatement","src":"5105:29:10"}]}},{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:10","nodeType":"VariableDeclaration","scope":1728,"src":"5404:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1645,"nodeType":"VariableDeclarationStatement","src":"5404:17:10"},{"AST":{"nodeType":"YulBlock","src":"5444:291:10","statements":[{"nodeType":"YulAssignment","src":"5513:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:10"},"nodeType":"YulFunctionCall","src":"5526:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:10"}]},{"nodeType":"YulAssignment","src":"5633:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:10"},"nodeType":"YulFunctionCall","src":"5653:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:10"},"nodeType":"YulFunctionCall","src":"5642:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:10"}]},{"nodeType":"YulAssignment","src":"5691:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:10"},"nodeType":"YulFunctionCall","src":"5700:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":false,"src":"5539:11:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"5667:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"5691:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"5704:5:10","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"5633:5:10","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"5646:5:10","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"5513:9:10","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"5656:9:10","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"5711:9:10","valueSize":1},{"declaration":1607,"isOffset":false,"isSlot":false,"src":"5533:1:10","valueSize":1},{"declaration":1609,"isOffset":false,"isSlot":false,"src":"5536:1:10","valueSize":1}],"id":1646,"nodeType":"InlineAssembly","src":"5435:300:10"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"twos","nameLocation":"5947:4:10","nodeType":"VariableDeclaration","scope":1728,"src":"5939:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5954:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1651,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5973:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:10"},{"AST":{"nodeType":"YulBlock","src":"6008:362:10","statements":[{"nodeType":"YulAssignment","src":"6073:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:10"},"nodeType":"YulFunctionCall","src":"6088:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:10"}]},{"nodeType":"YulAssignment","src":"6177:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:10"},"nodeType":"YulFunctionCall","src":"6186:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:10"}]},{"nodeType":"YulAssignment","src":"6317:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:10"},"nodeType":"YulFunctionCall","src":"6333:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:10"},"nodeType":"YulFunctionCall","src":"6329:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:10"},"nodeType":"YulFunctionCall","src":"6325:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":false,"src":"6073:11:10","valueSize":1},{"declaration":1611,"isOffset":false,"isSlot":false,"src":"6092:11:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"6177:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"6190:5:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6105:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6197:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6317:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6340:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6347:4:10","valueSize":1}],"id":1656,"nodeType":"InlineAssembly","src":"5999:371:10"},{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6436:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1659,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6453:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1662,"nodeType":"ExpressionStatement","src":"6436:21:10"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:10","nodeType":"VariableDeclaration","scope":1728,"src":"6775:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1666,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:10"},{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1674,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1675,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"7031:36:10"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7100:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7115:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1683,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"nodeType":"ExpressionStatement","src":"7100:36:10"},{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1688,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7170:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7185:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1691,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ExpressionStatement","src":"7170:36:10"},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1696,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7255:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1699,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1703,"nodeType":"ExpressionStatement","src":"7240:36:10"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7325:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1707,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"7310:36:10"},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1712,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7396:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1715,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"7381:36:10"},{"expression":{"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7851:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"7860:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1722,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1725,"nodeType":"ExpressionStatement","src":"7851:24:10"},{"expression":{"id":1726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1615,"id":1727,"nodeType":"Return","src":"7889:13:10"}]}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"3485:313:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:10","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"x","nameLocation":"3827:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"3819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"y","nameLocation":"3838:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"3830:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:10","nodeType":"VariableDeclaration","scope":1730,"src":"3841:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:10"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"result","nameLocation":"3893:6:10","nodeType":"VariableDeclaration","scope":1730,"src":"3885:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:10"},"scope":2396,"src":"3803:4116:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"8161:192:10","statements":[{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"result","nameLocation":"8179:6:10","nodeType":"VariableDeclaration","scope":1772,"src":"8171:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1752,"initialValue":{"arguments":[{"id":1748,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8195:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1749,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"8198:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1750,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8201:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1747,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1730,1773],"referencedDeclaration":1730,"src":"8188:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1754,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"8244:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":1753,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"8227:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1757,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8264:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1758,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"8267:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1759,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8270:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"8257:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"8223:101:10","trueBody":{"id":1768,"nodeType":"Block","src":"8288:36:10","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8302:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"8302:11:10"}]}},{"expression":{"id":1770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8340:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1744,"id":1771,"nodeType":"Return","src":"8333:13:10"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"7925:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:10","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"x","nameLocation":"8075:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"8067:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"y","nameLocation":"8086:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"8078:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:10","nodeType":"VariableDeclaration","scope":1773,"src":"8089:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:10","nodeType":"VariableDeclaration","scope":1773,"src":"8110:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":1739,"nodeType":"UserDefinedTypeName","pathNode":{"id":1738,"name":"Rounding","nameLocations":["8110:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"8110:8:10"},"referencedDeclaration":1353,"src":"8110:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:10"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"8152:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:10"},"scope":2396,"src":"8051:302:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"8644:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"8658:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1787,"nodeType":"IfStatement","src":"8654:45:10","trueBody":{"id":1786,"nodeType":"Block","src":"8666:33:10","statements":[{"expression":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1780,"id":1785,"nodeType":"Return","src":"8680:8:10"}]}},{"assignments":[1789],"declarations":[{"constant":false,"id":1789,"mutability":"mutable","name":"result","nameLocation":"9386:6:10","nodeType":"VariableDeclaration","scope":1884,"src":"9378:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9406:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2052,2087],"referencedDeclaration":2052,"src":"9401:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:10"},{"id":1883,"nodeType":"UncheckedBlock","src":"9815:408:10","statements":[{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9839:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9858:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9862:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"9839:35:10"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9888:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9907:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"9888:35:10"},{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9947:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9956:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9960:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1831,"nodeType":"ExpressionStatement","src":"9937:35:10"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9996:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10005:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10009:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"nodeType":"ExpressionStatement","src":"9986:35:10"},{"expression":{"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10035:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10045:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10058:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"nodeType":"ExpressionStatement","src":"10035:35:10"},{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10084:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10094:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10103:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10107:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"10084:35:10"},{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10133:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10143:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10152:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10156:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"10133:35:10"},{"expression":{"arguments":[{"id":1877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10193:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10201:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10189:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1780,"id":1882,"nodeType":"Return","src":"10182:30:10"}]}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"8359:223:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:10","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"a","nameLocation":"8609:1:10","nodeType":"VariableDeclaration","scope":1885,"src":"8601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:10"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"8635:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:10"},"scope":2396,"src":"8587:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"10405:164:10","statements":[{"id":1918,"nodeType":"UncheckedBlock","src":"10415:148:10","statements":[{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"result","nameLocation":"10447:6:10","nodeType":"VariableDeclaration","scope":1918,"src":"10439:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1901,"initialValue":{"arguments":[{"id":1899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"10461:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1885,1920],"referencedDeclaration":1885,"src":"10456:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10484:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1904,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"10511:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":1903,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"10494:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10533:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"10542:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:10","trueExpression":{"hexValue":"31","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1895,"id":1917,"nodeType":"Return","src":"10477:75:10"}]}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"10235:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:10","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"a","nameLocation":"10351:1:10","nodeType":"VariableDeclaration","scope":1920,"src":"10343:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:10","nodeType":"VariableDeclaration","scope":1920,"src":"10354:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":1890,"nodeType":"UserDefinedTypeName","pathNode":{"id":1889,"name":"Rounding","nameLocations":["10354:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"10354:8:10"},"referencedDeclaration":1353,"src":"10354:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:10"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"10396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:10"},"scope":2396,"src":"10329:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2051,"nodeType":"Block","src":"10760:922:10","statements":[{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"result","nameLocation":"10778:6:10","nodeType":"VariableDeclaration","scope":2051,"src":"10770:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1931,"initialValue":{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:10"},{"id":2048,"nodeType":"UncheckedBlock","src":"10798:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10826:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1946,"nodeType":"IfStatement","src":"10822:99:10","trueBody":{"id":1945,"nodeType":"Block","src":"10844:77:10","statements":[{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10862:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1940,"nodeType":"ExpressionStatement","src":"10862:13:10"},{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"10893:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"10893:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10938:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"10934:96:10","trueBody":{"id":1960,"nodeType":"Block","src":"10955:75:10","statements":[{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10973:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"10973:12:10"},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11003:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"11003:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11047:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"11043:96:10","trueBody":{"id":1975,"nodeType":"Block","src":"11064:75:10","statements":[{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11082:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"11082:12:10"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11112:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"11112:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11156:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"nodeType":"IfStatement","src":"11152:96:10","trueBody":{"id":1990,"nodeType":"Block","src":"11173:75:10","statements":[{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11191:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"11191:12:10"},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11221:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"11221:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11265:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"11261:93:10","trueBody":{"id":2005,"nodeType":"Block","src":"11281:73:10","statements":[{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11299:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"11299:11:10"},{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11328:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"11328:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11371:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"11367:93:10","trueBody":{"id":2020,"nodeType":"Block","src":"11387:73:10","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11405:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2015,"nodeType":"ExpressionStatement","src":"11405:11:10"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11434:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"11434:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11477:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"11473:93:10","trueBody":{"id":2035,"nodeType":"Block","src":"11493:73:10","statements":[{"expression":{"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11511:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2030,"nodeType":"ExpressionStatement","src":"11511:11:10"},{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11540:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"11540:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11583:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"11579:64:10","trueBody":{"id":2046,"nodeType":"Block","src":"11599:44:10","statements":[{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11617:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ExpressionStatement","src":"11617:11:10"}]}}]},{"expression":{"id":2049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11669:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1927,"id":2050,"nodeType":"Return","src":"11662:13:10"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"10575:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:10","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"value","nameLocation":"10721:5:10","nodeType":"VariableDeclaration","scope":2052,"src":"10713:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:10"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"10751:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:10"},"scope":2396,"src":"10699:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"11915:168:10","statements":[{"id":2085,"nodeType":"UncheckedBlock","src":"11925:152:10","statements":[{"assignments":[2064],"declarations":[{"constant":false,"id":2064,"mutability":"mutable","name":"result","nameLocation":"11957:6:10","nodeType":"VariableDeclaration","scope":2085,"src":"11949:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2068,"initialValue":{"arguments":[{"id":2066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"11971:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2065,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2052,2087],"referencedDeclaration":2052,"src":"11966:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"11998:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2071,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"12025:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2070,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"12008:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"12043:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"12052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:10","trueExpression":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2062,"id":2084,"nodeType":"Return","src":"11991:75:10"}]}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"11688:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:10","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"value","nameLocation":"11857:5:10","nodeType":"VariableDeclaration","scope":2087,"src":"11849:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:10","nodeType":"VariableDeclaration","scope":2087,"src":"11864:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"Rounding","nameLocations":["11864:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"11864:8:10"},"referencedDeclaration":1353,"src":"11864:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:10"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"11906:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:10"},"scope":2396,"src":"11835:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"12276:854:10","statements":[{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"result","nameLocation":"12294:6:10","nodeType":"VariableDeclaration","scope":2215,"src":"12286:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2098,"initialValue":{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:10"},{"id":2212,"nodeType":"UncheckedBlock","src":"12314:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12342:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2115,"nodeType":"IfStatement","src":"12338:103:10","trueBody":{"id":2114,"nodeType":"Block","src":"12361:80:10","statements":[{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12379:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2109,"nodeType":"ExpressionStatement","src":"12379:17:10"},{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ExpressionStatement","src":"12414:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2132,"nodeType":"IfStatement","src":"12454:103:10","trueBody":{"id":2131,"nodeType":"Block","src":"12477:80:10","statements":[{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12495:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2126,"nodeType":"ExpressionStatement","src":"12495:17:10"},{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12530:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"12530:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12574:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"12570:103:10","trueBody":{"id":2148,"nodeType":"Block","src":"12593:80:10","statements":[{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12611:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"12611:17:10"},{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12646:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"12646:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12690:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2166,"nodeType":"IfStatement","src":"12686:100:10","trueBody":{"id":2165,"nodeType":"Block","src":"12708:78:10","statements":[{"expression":{"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12726:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2160,"nodeType":"ExpressionStatement","src":"12726:16:10"},{"expression":{"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2164,"nodeType":"ExpressionStatement","src":"12760:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12803:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"12799:100:10","trueBody":{"id":2182,"nodeType":"Block","src":"12821:78:10","statements":[{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12839:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"12839:16:10"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12873:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"nodeType":"ExpressionStatement","src":"12873:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2200,"nodeType":"IfStatement","src":"12912:100:10","trueBody":{"id":2199,"nodeType":"Block","src":"12934:78:10","statements":[{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12952:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"12952:16:10"},{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ExpressionStatement","src":"12986:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"13029:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"nodeType":"IfStatement","src":"13025:66:10","trueBody":{"id":2210,"nodeType":"Block","src":"13047:44:10","statements":[{"expression":{"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"13065:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2209,"nodeType":"ExpressionStatement","src":"13065:11:10"}]}}]},{"expression":{"id":2213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"13117:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2094,"id":2214,"nodeType":"Return","src":"13110:13:10"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"12089:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:10","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"12237:5:10","nodeType":"VariableDeclaration","scope":2216,"src":"12229:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:10"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"12267:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:10"},"scope":2396,"src":"12214:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"13365:170:10","statements":[{"id":2249,"nodeType":"UncheckedBlock","src":"13375:154:10","statements":[{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"result","nameLocation":"13407:6:10","nodeType":"VariableDeclaration","scope":2249,"src":"13399:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2232,"initialValue":{"arguments":[{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13422:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2229,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2216,2251],"referencedDeclaration":2216,"src":"13416:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13449:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2235,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"13476:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2234,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"13459:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13495:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13504:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:10","trueExpression":{"hexValue":"31","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2226,"id":2248,"nodeType":"Return","src":"13442:76:10"}]}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"13136:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:10","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"value","nameLocation":"13307:5:10","nodeType":"VariableDeclaration","scope":2251,"src":"13299:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:10","nodeType":"VariableDeclaration","scope":2251,"src":"13314:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2221,"nodeType":"UserDefinedTypeName","pathNode":{"id":2220,"name":"Rounding","nameLocations":["13314:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"13314:8:10"},"referencedDeclaration":1353,"src":"13314:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:10"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"13356:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:10"},"scope":2396,"src":"13284:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2337,"nodeType":"Block","src":"13855:600:10","statements":[{"assignments":[2260],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"result","nameLocation":"13873:6:10","nodeType":"VariableDeclaration","scope":2337,"src":"13865:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:10"},{"id":2334,"nodeType":"UncheckedBlock","src":"13893:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"13921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"IfStatement","src":"13917:98:10","trueBody":{"id":2276,"nodeType":"Block","src":"13939:76:10","statements":[{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"13957:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ExpressionStatement","src":"13957:13:10"},{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"13988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"13988:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14032:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"nodeType":"IfStatement","src":"14028:95:10","trueBody":{"id":2291,"nodeType":"Block","src":"14049:74:10","statements":[{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14067:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2286,"nodeType":"ExpressionStatement","src":"14067:12:10"},{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14097:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ExpressionStatement","src":"14097:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14140:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"14136:95:10","trueBody":{"id":2306,"nodeType":"Block","src":"14157:74:10","statements":[{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"14175:12:10"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"14205:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2322,"nodeType":"IfStatement","src":"14244:95:10","trueBody":{"id":2321,"nodeType":"Block","src":"14265:74:10","statements":[{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14283:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"nodeType":"ExpressionStatement","src":"14283:12:10"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14313:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"14313:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14356:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"nodeType":"IfStatement","src":"14352:64:10","trueBody":{"id":2332,"nodeType":"Block","src":"14372:44:10","statements":[{"expression":{"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ExpressionStatement","src":"14390:11:10"}]}}]},{"expression":{"id":2335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14442:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2258,"id":2336,"nodeType":"Return","src":"14435:13:10"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"13541:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:10","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"value","nameLocation":"13816:5:10","nodeType":"VariableDeclaration","scope":2338,"src":"13808:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:10"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"13846:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:10"},"scope":2396,"src":"13792:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2375,"nodeType":"Block","src":"14692:177:10","statements":[{"id":2374,"nodeType":"UncheckedBlock","src":"14702:161:10","statements":[{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"result","nameLocation":"14734:6:10","nodeType":"VariableDeclaration","scope":2374,"src":"14726:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"initialValue":{"arguments":[{"id":2352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14750:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2351,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2338,2376],"referencedDeclaration":2338,"src":"14743:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"14777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2357,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"14804:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2356,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"14787:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"14823:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14838:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:10","trueExpression":{"hexValue":"31","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2348,"id":2373,"nodeType":"Return","src":"14770:82:10"}]}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"14461:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:10","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"value","nameLocation":"14634:5:10","nodeType":"VariableDeclaration","scope":2376,"src":"14626:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:10","nodeType":"VariableDeclaration","scope":2376,"src":"14641:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"Rounding","nameLocations":["14641:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"14641:8:10"},"referencedDeclaration":1353,"src":"14641:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:10"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2376,"src":"14683:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:10"},"scope":2396,"src":"14610:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"15067:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2387,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"15090:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2385,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:10","typeDescriptions":{}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2384,"id":2393,"nodeType":"Return","src":"15077:31:10"}]},"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"14875:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:10","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:10","nodeType":"VariableDeclaration","scope":2395,"src":"15019:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2379,"nodeType":"UserDefinedTypeName","pathNode":{"id":2378,"name":"Rounding","nameLocations":["15019:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"15019:8:10"},"referencedDeclaration":1353,"src":"15019:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:10"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"15061:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2382,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:10"},"scope":2396,"src":"14993:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2397,"src":"203:14914:10","usedErrors":[1348],"usedEvents":[]}],"src":"103:15015:10"},"id":10},"contracts/Dealer.sol":{"ast":{"absolutePath":"contracts/Dealer.sol","exportedSymbols":{"BeaconProxy":[891],"ContextUpgradeable":[494],"Dealer":[3275],"ERC1967Utils":[797],"IBeacon":[901],"ICrossDomainEnabled":[3537],"ICrossDomainMessenger":[3607],"IERC20":[979],"ILockingInfo":[3817],"ILockingPool":[3940],"ISequencerInfo":[4022],"IVeMetisMinter":[4042],"Initializable":[448],"Math":[2396],"OwnableUpgradeable":[194],"Proxy":[833],"SequencerAgent":[3529]},"id":3276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2398,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":2397,"src":"56:53:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","file":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","id":2400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":892,"src":"110:62:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":980,"src":"173:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":195,"src":"230:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ICrossDomainEnabled.sol","file":"../interface/ICrossDomainEnabled.sol","id":2403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":3538,"src":"306:46:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ILockingPool.sol","file":"../interface/ILockingPool.sol","id":2404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":3941,"src":"353:39:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/IVeMetisMinter.sol","file":"../interface/IVeMetisMinter.sol","id":2405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":4043,"src":"393:41:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ICrossDomainMessenger.sol","file":"../interface/ICrossDomainMessenger.sol","id":2406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":3608,"src":"435:48:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SequencerAgent.sol","file":"./SequencerAgent.sol","id":2407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":3530,"src":"484:30:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2409,"name":"OwnableUpgradeable","nameLocations":["710:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"710:18:11"},"id":2410,"nodeType":"InheritanceSpecifier","src":"710:18:11"}],"canonicalName":"Dealer","contractDependencies":[891],"contractKind":"contract","documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"517:174:11","text":"@title Dealer\n @notice The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents."},"fullyImplemented":true,"id":3275,"linearizedBaseContracts":[3275,194,494,448],"name":"Dealer","nameLocation":"700:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"736:135:11","text":"@notice Emits when a new sequencer agent is added\n @param index index of the agent\n @param agent address of the agent"},"eventSelector":"fcdf0e51b92207a6c5cfa485e975b62686da57da9499feafd12185ee26a860d9","id":2417,"name":"SequencerAgentAdded","nameLocation":"882:19:11","nodeType":"EventDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"909:5:11","nodeType":"VariableDeclaration","scope":2417,"src":"902:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2412,"name":"uint32","nodeType":"ElementaryTypeName","src":"902:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2415,"indexed":false,"mutability":"mutable","name":"agent","nameLocation":"924:5:11","nodeType":"VariableDeclaration","scope":2417,"src":"916:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:29:11"},"src":"876:55:11"},{"anonymous":false,"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"937:324:11","text":"@notice Emits when additional Metis tokens and rewards are locked for a sequencer.\n @param index The index of the sequencer agent in the sequencer list.\n @param amount The amount of Metis tokens that have been added to the lock.\n @param reward The amount of additional rewards that have been locked."},"eventSelector":"b8aafdec9bacdc76bfea3c330063c391a2904d4f91e71f97a91534f3c8ce4ab5","id":2426,"name":"SequencerRelocked","nameLocation":"1272:17:11","nodeType":"EventDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"1297:5:11","nodeType":"VariableDeclaration","scope":2426,"src":"1290:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2419,"name":"uint32","nodeType":"ElementaryTypeName","src":"1290:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2422,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1312:6:11","nodeType":"VariableDeclaration","scope":2426,"src":"1304:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2424,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"1328:6:11","nodeType":"VariableDeclaration","scope":2426,"src":"1320:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1289:46:11"},"src":"1266:70:11"},{"anonymous":false,"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1342:130:11","text":"@notice Emits when Metis tokens are minted on Layer 2.\n @param amount The amount of Metis tokens that have been minted."},"eventSelector":"d644e527c1896057ce642adfbc00f04d6b23d4c2fb30529522184d151dc087dc","id":2431,"name":"L2MetisMinted","nameLocation":"1483:13:11","nodeType":"EventDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1505:6:11","nodeType":"VariableDeclaration","scope":2431,"src":"1497:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1496:16:11"},"src":"1477:36:11"},{"anonymous":false,"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"1519:205:11","text":"@notice Emits when the sequencer agent template is set.\n @param oldValue The address of the old sequencer agent template.\n @param newValue The address of the new sequencer agent template."},"eventSelector":"89f95c1c05541b14dfba454fd2db710f8e161c6d351a2d325053db70b7d93fda","id":2438,"name":"SequencerAgentTemplateSet","nameLocation":"1735:25:11","nodeType":"EventDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"indexed":true,"mutability":"mutable","name":"oldValue","nameLocation":"1777:8:11","nodeType":"VariableDeclaration","scope":2438,"src":"1761:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"1761:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"indexed":true,"mutability":"mutable","name":"newValue","nameLocation":"1803:8:11","nodeType":"VariableDeclaration","scope":2438,"src":"1787:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"1787:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1760:52:11"},"src":"1729:84:11"},{"anonymous":false,"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"1819:101:11","text":"@notice Emits when the L2 gas limit is set.\n @param oldValue The old L2 gas limit.        "},"eventSelector":"4042b09a75e5a67c8cc2a57e00de6d29fb5202b7207afba895eb8b5cc3e2179e","id":2445,"name":"L2GasSet","nameLocation":"1931:8:11","nodeType":"EventDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"indexed":false,"mutability":"mutable","name":"oldValue","nameLocation":"1947:8:11","nodeType":"VariableDeclaration","scope":2445,"src":"1940:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2440,"name":"uint32","nodeType":"ElementaryTypeName","src":"1940:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2443,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"1964:8:11","nodeType":"VariableDeclaration","scope":2445,"src":"1957:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2442,"name":"uint32","nodeType":"ElementaryTypeName","src":"1957:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1939:34:11"},"src":"1925:49:11"},{"anonymous":false,"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"1980:144:11","text":"@notice Emits when withdrawRewards is set.\n @param oldValue The old withdrawRewards.\n @param newValue The new withdrawRewards."},"eventSelector":"ba50596d5d8d3fffda559f307b84b1b0bdba201192d70b393820eab501346b1e","id":2452,"name":"WithdrawRewardsSet","nameLocation":"2135:18:11","nodeType":"EventDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"indexed":false,"mutability":"mutable","name":"oldValue","nameLocation":"2159:8:11","nodeType":"VariableDeclaration","scope":2452,"src":"2154:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2447,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2450,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"2174:8:11","nodeType":"VariableDeclaration","scope":2452,"src":"2169:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2449,"name":"bool","nodeType":"ElementaryTypeName","src":"2169:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:30:11"},"src":"2129:55:11"},{"constant":false,"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"2190:55:11","text":"@notice The template contract for sequencer agents."},"functionSelector":"8db8ad88","id":2455,"mutability":"mutable","name":"sequencerAgentTemplate","nameLocation":"2265:22:11","nodeType":"VariableDeclaration","scope":3275,"src":"2250:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"2250:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"2294:28:11","text":"@notice The Metis token."},"functionSelector":"e5974554","id":2459,"mutability":"mutable","name":"metis","nameLocation":"2341:5:11","nodeType":"VariableDeclaration","scope":3275,"src":"2327:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"},"typeName":{"id":2458,"nodeType":"UserDefinedTypeName","pathNode":{"id":2457,"name":"IERC20","nameLocations":["2327:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"2327:6:11"},"referencedDeclaration":979,"src":"2327:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"2353:45:11","text":"@notice The LockingPool contract address."},"functionSelector":"85d1e2b8","id":2463,"mutability":"mutable","name":"lockingPool","nameLocation":"2423:11:11","nodeType":"VariableDeclaration","scope":3275,"src":"2403:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"},"typeName":{"id":2462,"nodeType":"UserDefinedTypeName","pathNode":{"id":2461,"name":"ILockingPool","nameLocations":["2403:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"2403:12:11"},"referencedDeclaration":3940,"src":"2403:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"visibility":"public"},{"constant":false,"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"2441:45:11","text":"@notice The LockingInfo contract address."},"functionSelector":"f7cee36a","id":2467,"mutability":"mutable","name":"lockingInfo","nameLocation":"2511:11:11","nodeType":"VariableDeclaration","scope":3275,"src":"2491:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"},"typeName":{"id":2466,"nodeType":"UserDefinedTypeName","pathNode":{"id":2465,"name":"ILockingInfo","nameLocations":["2491:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"2491:12:11"},"referencedDeclaration":3817,"src":"2491:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"visibility":"public"},{"constant":false,"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"2529:38:11","text":"@notice The L2 messenger contract."},"functionSelector":"3cb747bf","id":2471,"mutability":"mutable","name":"messenger","nameLocation":"2601:9:11","nodeType":"VariableDeclaration","scope":3275,"src":"2572:38:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3607","typeString":"contract ICrossDomainMessenger"},"typeName":{"id":2470,"nodeType":"UserDefinedTypeName","pathNode":{"id":2469,"name":"ICrossDomainMessenger","nameLocations":["2572:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":3607,"src":"2572:21:11"},"referencedDeclaration":3607,"src":"2572:21:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3607","typeString":"contract ICrossDomainMessenger"}},"visibility":"public"},{"constant":false,"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"2617:35:11","text":"@notice The ID of the L2 chain."},"functionSelector":"d6ae3cd5","id":2474,"mutability":"mutable","name":"l2ChainId","nameLocation":"2672:9:11","nodeType":"VariableDeclaration","scope":3275,"src":"2657:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"2688:55:11","text":"@notice The address of the L2 MetisMinter contract."},"functionSelector":"080e1e4e","id":2477,"mutability":"mutable","name":"l2Minter","nameLocation":"2763:8:11","nodeType":"VariableDeclaration","scope":3275,"src":"2748:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"2778:60:11","text":"@notice The address of the L2 RewardDispatcher contract."},"functionSelector":"e92d61e5","id":2480,"mutability":"mutable","name":"l2RewardDispatcher","nameLocation":"2858:18:11","nodeType":"VariableDeclaration","scope":3275,"src":"2843:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"2843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"2883:41:11","text":"@notice The list of sequencer agents."},"functionSelector":"457cb586","id":2485,"mutability":"mutable","name":"sequencerAgents","nameLocation":"2963:15:11","nodeType":"VariableDeclaration","scope":3275,"src":"2929:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"},"typeName":{"id":2484,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2482,"name":"uint32","nodeType":"ElementaryTypeName","src":"2937:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"2929:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"2947:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"2985:43:11","text":"@notice The number of sequencer agents."},"functionSelector":"9e935704","id":2488,"mutability":"mutable","name":"sequencerAgentCount","nameLocation":"3047:19:11","nodeType":"VariableDeclaration","scope":3275,"src":"3033:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2487,"name":"uint32","nodeType":"ElementaryTypeName","src":"3033:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"3073:51:11","text":"@notice The list of active sequencer agent IDs."},"functionSelector":"1abdaf6a","id":2492,"mutability":"mutable","name":"activeSequencerIds","nameLocation":"3145:18:11","nodeType":"VariableDeclaration","scope":3275,"src":"3129:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[]"},"typeName":{"baseType":{"id":2490,"name":"uint32","nodeType":"ElementaryTypeName","src":"3129:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2491,"nodeType":"ArrayTypeName","src":"3129:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"3170:49:11","text":"@notice The sum of rewards of all sequencers."},"functionSelector":"7ca4f8b0","id":2495,"mutability":"mutable","name":"sumRewards","nameLocation":"3239:10:11","nodeType":"VariableDeclaration","scope":3275,"src":"3224:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"3256:25:11","text":"@notice L2 gas limit."},"functionSelector":"3cbb6979","id":2498,"mutability":"mutable","name":"l2Gas","nameLocation":"3300:5:11","nodeType":"VariableDeclaration","scope":3275,"src":"3286:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2497,"name":"uint32","nodeType":"ElementaryTypeName","src":"3286:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"3312:28:11","text":"@notice withdraw rewards"},"functionSelector":"c7b8981c","id":2501,"mutability":"mutable","name":"withdrawRewards","nameLocation":"3357:15:11","nodeType":"VariableDeclaration","scope":3275,"src":"3345:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2500,"name":"bool","nodeType":"ElementaryTypeName","src":"3345:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"body":{"id":2608,"nodeType":"Block","src":"3673:578:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"_metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3692:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3710:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3702:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"3702:7:11","typeDescriptions":{}}},"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3702:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3692:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"_lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3716:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3732:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"3732:7:11","typeDescriptions":{}}},"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3732:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3716:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3692:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"_l1Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3746:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3767:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3759:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:11","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3759:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3746:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3692:77:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"_l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"3773:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3794:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3786:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"3786:7:11","typeDescriptions":{}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3786:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3773:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3692:104:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"_l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3800:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3831:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3823:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"3823:7:11","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3800:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3692:141:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a207a65726f2061646472657373","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3835:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","typeString":"literal_string \"Dealer: zero address\""},"value":"Dealer: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","typeString":"literal_string \"Dealer: zero address\""}],"id":2521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3683:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3683:175:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2558,"nodeType":"ExpressionStatement","src":"3683:175:11"},{"expression":{"arguments":[{"expression":{"id":2560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3883:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3887:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3883:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2559,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3868:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2563,"nodeType":"ExpressionStatement","src":"3868:26:11"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2564,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"3904:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2566,"name":"_metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3919:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2565,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3912:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"src":"3904:22:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2569,"nodeType":"ExpressionStatement","src":"3904:22:11"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3936:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2572,"name":"_lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3963:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2571,"name":"ILockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"3950:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingPool_$3940_$","typeString":"type(contract ILockingPool)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3950:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"src":"3936:40:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":2575,"nodeType":"ExpressionStatement","src":"3936:40:11"},{"expression":{"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2576,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"3986:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2577,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4000:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4012:6:11","memberName":"escrow","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"4000:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_ILockingInfo_$3817_$","typeString":"function () view external returns (contract ILockingInfo)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4000:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"src":"3986:34:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"id":2581,"nodeType":"ExpressionStatement","src":"3986:34:11"},{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2582,"name":"messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"4030:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3607","typeString":"contract ICrossDomainMessenger"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2585,"name":"_l1Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"4084:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2584,"name":"ICrossDomainEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"4064:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICrossDomainEnabled_$3537_$","typeString":"type(contract ICrossDomainEnabled)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4064:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainEnabled_$3537","typeString":"contract ICrossDomainEnabled"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4095:9:11","memberName":"messenger","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"4064:40:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4064:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2583,"name":"ICrossDomainMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"4042:21:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICrossDomainMessenger_$3607_$","typeString":"type(contract ICrossDomainMessenger)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3607","typeString":"contract ICrossDomainMessenger"}},"src":"4030:77:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3607","typeString":"contract ICrossDomainMessenger"}},"id":2591,"nodeType":"ExpressionStatement","src":"4030:77:11"},{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2592,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4117:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2593,"name":"_l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"4129:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4117:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"4117:22:11"},{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"4149:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2597,"name":"_l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4157:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4149:14:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2599,"nodeType":"ExpressionStatement","src":"4149:14:11"},{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2600,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"4173:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2601,"name":"_l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"4184:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4173:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2603,"nodeType":"ExpressionStatement","src":"4173:20:11"},{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"4203:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2605,"name":"_l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4224:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4203:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2607,"nodeType":"ExpressionStatement","src":"4203:40:11"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"3379:37:11","text":"@notice Initializes the contract."},"functionSelector":"b699ce5f","id":2609,"implemented":true,"kind":"function","modifiers":[{"id":2519,"kind":"modifierInvocation","modifierName":{"id":2518,"name":"initializer","nameLocations":["3661:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3661:11:11"},"nodeType":"ModifierInvocation","src":"3661:11:11"}],"name":"initialize","nameLocation":"3430:10:11","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"_metis","nameLocation":"3459:6:11","nodeType":"VariableDeclaration","scope":2609,"src":"3451:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"_lockingPool","nameLocation":"3484:12:11","nodeType":"VariableDeclaration","scope":2609,"src":"3476:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"3476:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"_l1Bridge","nameLocation":"3515:9:11","nodeType":"VariableDeclaration","scope":2609,"src":"3507:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"3507:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"_l2ChainId","nameLocation":"3543:10:11","nodeType":"VariableDeclaration","scope":2609,"src":"3535:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"_l2Gas","nameLocation":"3571:6:11","nodeType":"VariableDeclaration","scope":2609,"src":"3564:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2511,"name":"uint32","nodeType":"ElementaryTypeName","src":"3564:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"_l2Minter","nameLocation":"3596:9:11","nodeType":"VariableDeclaration","scope":2609,"src":"3588:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"3588:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"_l2RewardDispatcher","nameLocation":"3624:19:11","nodeType":"VariableDeclaration","scope":2609,"src":"3616:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2515,"name":"address","nodeType":"ElementaryTypeName","src":"3616:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3440:213:11"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"3673:0:11"},"scope":3275,"src":"3421:830:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2621,"nodeType":"Block","src":"4426:57:11","statements":[{"expression":{"arguments":[{"expression":{"id":2617,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"4450:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4469:6:11","memberName":"length","nodeType":"MemberAccess","src":"4450:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2615,"name":"uint32","nodeType":"ElementaryTypeName","src":"4443:6:11","typeDescriptions":{}}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4443:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2614,"id":2620,"nodeType":"Return","src":"4436:40:11"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"4257:101:11","text":"@notice Returns the number of active sequencers.\n @return The number of active sequencers."},"functionSelector":"1152eb41","id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"activeSequencerCount","nameLocation":"4372:20:11","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[],"src":"4392:2:11"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"4418:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2612,"name":"uint32","nodeType":"ElementaryTypeName","src":"4418:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4417:8:11"},"scope":3275,"src":"4363:120:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2643,"nodeType":"Block","src":"4671:145:11","statements":[{"assignments":[2631],"declarations":[{"constant":false,"id":2631,"mutability":"mutable","name":"_old","nameLocation":"4686:4:11","nodeType":"VariableDeclaration","scope":2643,"src":"4681:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2630,"name":"bool","nodeType":"ElementaryTypeName","src":"4681:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2633,"initialValue":{"id":2632,"name":"withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"4693:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4681:27:11"},{"expression":{"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2634,"name":"withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"4718:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2635,"name":"_withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4736:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4718:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2637,"nodeType":"ExpressionStatement","src":"4718:34:11"},{"eventCall":{"arguments":[{"id":2639,"name":"_old","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"4786:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2640,"name":"_withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4792:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2638,"name":"WithdrawRewardsSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4767:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_bool_$returns$__$","typeString":"function (bool,bool)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4767:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"EmitStatement","src":"4762:47:11"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"4489:107:11","text":"@notice set withdraw rewards\n @param _withdrawRewards The new value of the withdrawRewards flag."},"functionSelector":"efa412d0","id":2644,"implemented":true,"kind":"function","modifiers":[{"id":2628,"kind":"modifierInvocation","modifierName":{"id":2627,"name":"onlyOwner","nameLocations":["4661:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4661:9:11"},"nodeType":"ModifierInvocation","src":"4661:9:11"}],"name":"setWithdrawRewards","nameLocation":"4610:18:11","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"_withdrawRewards","nameLocation":"4634:16:11","nodeType":"VariableDeclaration","scope":2644,"src":"4629:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2624,"name":"bool","nodeType":"ElementaryTypeName","src":"4629:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4628:23:11"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"4671:0:11"},"scope":3275,"src":"4601:215:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2706,"nodeType":"Block","src":"4976:408:11","statements":[{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"data","nameLocation":"4999:4:11","nodeType":"VariableDeclaration","scope":2706,"src":"4986:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2652,"name":"bytes","nodeType":"ElementaryTypeName","src":"4986:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2670,"initialValue":{"arguments":[{"expression":{"expression":{"id":2656,"name":"SequencerAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"5029:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SequencerAgent_$3529_$","typeString":"type(contract SequencerAgent)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5044:10:11","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":3346,"src":"5029:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_contract$_ILockingPool_$3940_$_t_contract$_ILockingInfo_$3817_$_t_address_$returns$__$","typeString":"function SequencerAgent.initialize(address,contract ILockingPool,contract ILockingInfo,address)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5055:8:11","memberName":"selector","nodeType":"MemberAccess","src":"5029:34:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"id":2661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5073:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Dealer_$3275","typeString":"contract Dealer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dealer_$3275","typeString":"contract Dealer"}],"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"5065:7:11","typeDescriptions":{}}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2663,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5080:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},{"id":2664,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"5093:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},{"arguments":[{"id":2667,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"5114:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5106:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"5106:7:11","typeDescriptions":{}}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5106:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"},{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2654,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"5006:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5010:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"5006:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:115:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4986:135:11"},{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"clone","nameLocation":"5139:5:11","nodeType":"VariableDeclaration","scope":2706,"src":"5131:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"5131:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2685,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2680,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5179:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Dealer_$3275","typeString":"contract Dealer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dealer_$3275","typeString":"contract Dealer"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5171:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"5171:7:11","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5171:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"5186:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"5155:15:11","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$891_$","typeString":"function (address,bytes memory) payable returns (contract BeaconProxy)"},"typeName":{"id":2676,"nodeType":"UserDefinedTypeName","pathNode":{"id":2675,"name":"BeaconProxy","nameLocations":["5159:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":891,"src":"5159:11:11"},"referencedDeclaration":891,"src":"5159:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$891","typeString":"contract BeaconProxy"}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5155:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$891","typeString":"contract BeaconProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BeaconProxy_$891","typeString":"contract BeaconProxy"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5147:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"5147:7:11","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5147:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5131:61:11"},{"assignments":[2687],"declarations":[{"constant":false,"id":2687,"mutability":"mutable","name":"index","nameLocation":"5209:5:11","nodeType":"VariableDeclaration","scope":2706,"src":"5202:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2686,"name":"uint32","nodeType":"ElementaryTypeName","src":"5202:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2689,"initialValue":{"id":2688,"name":"sequencerAgentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"5217:19:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"5202:34:11"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2690,"name":"sequencerAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"5246:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"}},"id":2692,"indexExpression":{"id":2691,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5262:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5246:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2693,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5271:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5246:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2695,"nodeType":"ExpressionStatement","src":"5246:30:11"},{"eventCall":{"arguments":[{"id":2697,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5311:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2698,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5318:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2696,"name":"SequencerAgentAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5291:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_address_$returns$__$","typeString":"function (uint32,address)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5291:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"EmitStatement","src":"5286:38:11"},{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5334:21:11","subExpression":{"id":2701,"name":"sequencerAgentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"5334:19:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2703,"nodeType":"ExpressionStatement","src":"5334:21:11"},{"expression":{"id":2704,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5372:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2651,"id":2705,"nodeType":"Return","src":"5365:12:11"}]},"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"4822:93:11","text":"@notice Adds a new sequencer agent.\n @return The index of the new sequencer agent."},"functionSelector":"35cd3599","id":2707,"implemented":true,"kind":"function","modifiers":[{"id":2648,"kind":"modifierInvocation","modifierName":{"id":2647,"name":"onlyOwner","nameLocations":["4949:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4949:9:11"},"nodeType":"ModifierInvocation","src":"4949:9:11"}],"name":"addAgent","nameLocation":"4929:8:11","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[],"src":"4937:2:11"},"returnParameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2707,"src":"4968:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2649,"name":"uint32","nodeType":"ElementaryTypeName","src":"4968:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4967:8:11"},"scope":3275,"src":"4920:464:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2752,"nodeType":"Block","src":"5817:240:11","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"agent","nameLocation":"5835:5:11","nodeType":"VariableDeclaration","scope":2752,"src":"5827:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2726,"initialValue":{"baseExpression":{"id":2723,"name":"sequencerAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"5843:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"}},"id":2725,"indexExpression":{"id":2724,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"5859:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5843:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5827:40:11"},{"expression":{"arguments":[{"expression":{"id":2731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5904:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5908:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5904:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2733,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5916:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5923:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2728,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"5884:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}],"id":2727,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5877:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5877:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5891:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":978,"src":"5877:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5877:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"ExpressionStatement","src":"5877:53:11"},{"expression":{"arguments":[{"id":2741,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5967:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2742,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"5984:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5994:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2744,"name":"signerPubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6002:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2738,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5955:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2737,"name":"SequencerAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"5940:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SequencerAgent_$3529_$","typeString":"type(contract SequencerAgent)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5940:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5962:4:11","memberName":"lock","nodeType":"MemberAccess","referencedDeclaration":3429,"src":"5940:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory) external"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5940:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2746,"nodeType":"ExpressionStatement","src":"5940:75:11"},{"expression":{"arguments":[{"id":2748,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"6036:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"74727565","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6045:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2747,"name":"_setActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"6025:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bool_$returns$__$","typeString":"function (uint32,bool)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6025:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2751,"nodeType":"ExpressionStatement","src":"6025:25:11"}]},"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"5390:302:11","text":"@notice Locks Metis tokens for a new sequencer.\n @param agentId The index of the sequencer agent.\n @param sequencerSigner The address of the sequencer signer.\n @param amount The amount of Metis tokens to lock.\n @param signerPubKey The public key of the sequencer signer."},"functionSelector":"af372db7","id":2753,"implemented":true,"kind":"function","modifiers":[{"id":2719,"kind":"modifierInvocation","modifierName":{"id":2718,"name":"onlyOwner","nameLocations":["5807:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5807:9:11"},"nodeType":"ModifierInvocation","src":"5807:9:11"}],"name":"lockFor","nameLocation":"5706:7:11","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"agentId","nameLocation":"5721:7:11","nodeType":"VariableDeclaration","scope":2753,"src":"5714:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2709,"name":"uint32","nodeType":"ElementaryTypeName","src":"5714:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"sequencerSigner","nameLocation":"5738:15:11","nodeType":"VariableDeclaration","scope":2753,"src":"5730:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"amount","nameLocation":"5763:6:11","nodeType":"VariableDeclaration","scope":2753,"src":"5755:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5755:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"signerPubKey","nameLocation":"5784:12:11","nodeType":"VariableDeclaration","scope":2753,"src":"5771:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2715,"name":"bytes","nodeType":"ElementaryTypeName","src":"5771:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:84:11"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"5817:0:11"},"scope":3275,"src":"5697:360:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2774,"nodeType":"Block","src":"6244:111:11","statements":[{"expression":{"arguments":[{"id":2767,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6302:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"arguments":[{"baseExpression":{"id":2762,"name":"sequencerAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"6269:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"}},"id":2764,"indexExpression":{"id":2763,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"6285:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6269:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2761,"name":"SequencerAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"6254:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SequencerAgent_$3529_$","typeString":"type(contract SequencerAgent)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6295:6:11","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":3494,"src":"6254:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2769,"nodeType":"ExpressionStatement","src":"6254:54:11"},{"expression":{"arguments":[{"id":2771,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"6340:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2770,"name":"_removeFromActiveList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6318:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$_t_uint32_$","typeString":"function (uint32) returns (uint32)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6318:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2773,"nodeType":"ExpressionStatement","src":"6318:30:11"}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"6063:117:11","text":"@notice Unlock Metis tokens and terminate the sequencer.\n @param agentId The index of the sequencer agent."},"functionSelector":"67d93c81","id":2775,"implemented":true,"kind":"function","modifiers":[{"id":2759,"kind":"modifierInvocation","modifierName":{"id":2758,"name":"onlyOwner","nameLocations":["6234:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6234:9:11"},"nodeType":"ModifierInvocation","src":"6234:9:11"}],"name":"unlock","nameLocation":"6194:6:11","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"agentId","nameLocation":"6208:7:11","nodeType":"VariableDeclaration","scope":2775,"src":"6201:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2755,"name":"uint32","nodeType":"ElementaryTypeName","src":"6201:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6200:16:11"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"6244:0:11"},"scope":3275,"src":"6185:170:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2792,"nodeType":"Block","src":"6620:76:11","statements":[{"expression":{"arguments":[{"id":2789,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6683:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"arguments":[{"baseExpression":{"id":2784,"name":"sequencerAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"6645:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"}},"id":2786,"indexExpression":{"id":2785,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"6661:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6645:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2783,"name":"SequencerAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"6630:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SequencerAgent_$3529_$","typeString":"type(contract SequencerAgent)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6630:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:11:11","memberName":"unlockClaim","nodeType":"MemberAccess","referencedDeclaration":3528,"src":"6630:52:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6630:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2791,"nodeType":"ExpressionStatement","src":"6630:59:11"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"6361:190:11","text":"@notice The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\n @param agentId The index of the sequencer agent."},"functionSelector":"1221e6a5","id":2793,"implemented":true,"kind":"function","modifiers":[{"id":2781,"kind":"modifierInvocation","modifierName":{"id":2780,"name":"onlyOwner","nameLocations":["6610:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6610:9:11"},"nodeType":"ModifierInvocation","src":"6610:9:11"}],"name":"unlockClaim","nameLocation":"6565:11:11","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"agentId","nameLocation":"6584:7:11","nodeType":"VariableDeclaration","scope":2793,"src":"6577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2777,"name":"uint32","nodeType":"ElementaryTypeName","src":"6577:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6576:16:11"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"6620:0:11"},"scope":3275,"src":"6556:140:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2984,"nodeType":"Block","src":"7187:2523:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2800,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"7205:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7224:6:11","memberName":"length","nodeType":"MemberAccess","src":"7205:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7233:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7205:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a206e6f206163746976652073657175656e636572","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7236:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","typeString":"literal_string \"Dealer: no active sequencer\""},"value":"Dealer: no active sequencer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","typeString":"literal_string \"Dealer: no active sequencer\""}],"id":2799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7197:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7197:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2806,"nodeType":"ExpressionStatement","src":"7197:69:11"},{"assignments":[2808],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"maxLock","nameLocation":"7282:7:11","nodeType":"VariableDeclaration","scope":2984,"src":"7277:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint","nodeType":"ElementaryTypeName","src":"7277:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2812,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2809,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"7292:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7304:7:11","memberName":"maxLock","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"7292:19:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7292:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7277:36:11"},{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"undistributedAmount","nameLocation":"7331:19:11","nodeType":"VariableDeclaration","scope":2984,"src":"7323:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2822,"initialValue":{"arguments":[{"arguments":[{"id":2819,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7377:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Dealer_$3275","typeString":"contract Dealer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dealer_$3275","typeString":"contract Dealer"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7369:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"7369:7:11","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2815,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"7353:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7359:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":936,"src":"7353:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7353:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7323:60:11"},{"assignments":[2824],"declarations":[{"constant":false,"id":2824,"mutability":"mutable","name":"totalRewards","nameLocation":"7401:12:11","nodeType":"VariableDeclaration","scope":2984,"src":"7393:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"7393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2826,"initialValue":{"hexValue":"30","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7416:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7393:24:11"},{"body":{"id":2969,"nodeType":"Block","src":"7483:1922:11","statements":[{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"agentId","nameLocation":"7504:7:11","nodeType":"VariableDeclaration","scope":2969,"src":"7497:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2838,"name":"uint32","nodeType":"ElementaryTypeName","src":"7497:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2843,"initialValue":{"baseExpression":{"id":2840,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"7514:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":2842,"indexExpression":{"id":2841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"7533:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7514:21:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"7497:38:11"},{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"agent","nameLocation":"7564:5:11","nodeType":"VariableDeclaration","scope":2969,"src":"7549:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"},"typeName":{"id":2845,"nodeType":"UserDefinedTypeName","pathNode":{"id":2844,"name":"SequencerAgent","nameLocations":["7549:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":3529,"src":"7549:14:11"},"referencedDeclaration":3529,"src":"7549:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"visibility":"internal"}],"id":2852,"initialValue":{"arguments":[{"baseExpression":{"id":2848,"name":"sequencerAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"7587:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"}},"id":2850,"indexExpression":{"id":2849,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"7603:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7587:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2847,"name":"SequencerAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"7572:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SequencerAgent_$3529_$","typeString":"type(contract SequencerAgent)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"nodeType":"VariableDeclarationStatement","src":"7549:63:11"},{"assignments":[2857],"declarations":[{"constant":false,"id":2857,"mutability":"mutable","name":"seq","nameLocation":"7660:3:11","nodeType":"VariableDeclaration","scope":2969,"src":"7626:37:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":2856,"nodeType":"UserDefinedTypeName","pathNode":{"id":2855,"name":"ILockingPool.SequencerData","nameLocations":["7626:12:11","7639:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"7626:26:11"},"referencedDeclaration":3844,"src":"7626:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"id":2861,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2858,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"7666:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:13:11","memberName":"sequencerData","nodeType":"MemberAccess","referencedDeclaration":3472,"src":"7666:19:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_struct$_SequencerData_$3844_memory_ptr_$","typeString":"function () view external returns (struct ILockingPool.SequencerData memory)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7666:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"nodeType":"VariableDeclarationStatement","src":"7626:61:11"},{"assignments":[2863,2865],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"reward","nameLocation":"7710:6:11","nodeType":"VariableDeclaration","scope":2969,"src":"7702:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"locked","nameLocation":"7726:6:11","nodeType":"VariableDeclaration","scope":2969,"src":"7718:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"7718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2871,"initialValue":{"components":[{"expression":{"id":2866,"name":"seq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"7737:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"id":2867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7741:6:11","memberName":"reward","nodeType":"MemberAccess","referencedDeclaration":3827,"src":"7737:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2868,"name":"seq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"7749:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"id":2869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7753:6:11","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"7749:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7736:24:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7701:59:11"},{"expression":{"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2872,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"7774:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2873,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"7790:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7774:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2875,"nodeType":"ExpressionStatement","src":"7774:22:11"},{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"lockQuota","nameLocation":"7952:9:11","nodeType":"VariableDeclaration","scope":2969,"src":"7944:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"7944:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2886,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"7964:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2879,"name":"maxLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7973:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8002:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7964:39:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"maxLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7983:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2882,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"7993:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7983:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7944:59:11"},{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"lockAmount","nameLocation":"8150:10:11","nodeType":"VariableDeclaration","scope":2969,"src":"8142:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"8142:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"arguments":[{"id":2891,"name":"lockQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"8172:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2892,"name":"undistributedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8183:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2889,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8163:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2396_$","typeString":"type(library Math)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8168:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":1547,"src":"8163:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8142:61:11"},{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2895,"name":"undistributedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8329:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2896,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8352:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8329:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2898,"nodeType":"ExpressionStatement","src":"8329:33:11"},{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"toBeProcessed","nameLocation":"8474:13:11","nodeType":"VariableDeclaration","scope":2969,"src":"8466:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2904,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8490:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2902,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"8503:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8490:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8466:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"toBeProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8527:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8544:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8527:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"8523:65:11","trueBody":{"id":2909,"nodeType":"Block","src":"8547:41:11","statements":[{"id":2908,"nodeType":"Continue","src":"8565:8:11"}]}},{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"totalProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8602:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2912,"name":"toBeProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8620:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8602:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"8602:31:11"},{"assignments":[2916],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"_withdrawRewards","nameLocation":"8829:16:11","nodeType":"VariableDeclaration","scope":2969,"src":"8824:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2915,"name":"bool","nodeType":"ElementaryTypeName","src":"8824:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2924,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"8848:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"8867:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2919,"name":"toBeProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8876:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8867:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2921,"name":"maxLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"8892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8867:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8848:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8824:75:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"_withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"8917:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"8937:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8946:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8937:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8917:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2937,"nodeType":"IfStatement","src":"8913:97:11","trueBody":{"id":2936,"nodeType":"Block","src":"8949:61:11","statements":[{"expression":{"arguments":[{"id":2933,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"8989:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2930,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"8967:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8973:15:11","memberName":"withdrawRewards","nodeType":"MemberAccess","referencedDeclaration":3460,"src":"8967:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32) external"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8967:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2935,"nodeType":"ExpressionStatement","src":"8967:28:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9164:17:11","subExpression":{"id":2938,"name":"_withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"9165:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9185:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9198:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9185:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9164:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2968,"nodeType":"IfStatement","src":"9160:235:11","trueBody":{"id":2967,"nodeType":"Block","src":"9201:194:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2950,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"9250:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}],"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9242:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"9242:7:11","typeDescriptions":{}}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9242:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2952,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9258:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2945,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9226:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}],"id":2944,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"9219:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9219:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9233:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":946,"src":"9219:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9219:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"nodeType":"ExpressionStatement","src":"9219:50:11"},{"expression":{"arguments":[{"id":2958,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9300:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2955,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"9287:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9293:6:11","memberName":"relock","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"9287:12:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9287:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2960,"nodeType":"ExpressionStatement","src":"9287:24:11"},{"eventCall":{"arguments":[{"id":2962,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9352:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2963,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9361:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2964,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"9373:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2961,"name":"SequencerRelocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"9334:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint32,uint256,uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9334:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2966,"nodeType":"EmitStatement","src":"9329:51:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"7447:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2832,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"7451:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7470:6:11","memberName":"length","nodeType":"MemberAccess","src":"7451:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7447:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"initializationExpression":{"assignments":[2828],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"i","nameLocation":"7440:1:11","nodeType":"VariableDeclaration","scope":2970,"src":"7433:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2827,"name":"uint32","nodeType":"ElementaryTypeName","src":"7433:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2830,"initialValue":{"hexValue":"30","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7444:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7433:12:11"},"loopExpression":{"expression":{"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7478:3:11","subExpression":{"id":2835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"7478:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2837,"nodeType":"ExpressionStatement","src":"7478:3:11"},"nodeType":"ForStatement","src":"7428:1977:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"9594:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9609:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9594:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2983,"nodeType":"IfStatement","src":"9590:114:11","trueBody":{"id":2982,"nodeType":"Block","src":"9612:92:11","statements":[{"expression":{"arguments":[{"id":2975,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"9640:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2974,"name":"_mintL2EMetis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"9626:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9626:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2977,"nodeType":"ExpressionStatement","src":"9626:27:11"},{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2978,"name":"sumRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9667:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2979,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"9681:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9667:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2981,"nodeType":"ExpressionStatement","src":"9667:26:11"}]}}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"6702:412:11","text":"@notice Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\n @dev The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\n @return totalProcessed The total amount of Metis tokens and rewards that have been relocked."},"functionSelector":"c53b573d","id":2985,"implemented":true,"kind":"function","modifiers":[],"name":"relock","nameLocation":"7128:6:11","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"7134:2:11"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"totalProcessed","nameLocation":"7171:14:11","nodeType":"VariableDeclaration","scope":2985,"src":"7163:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7162:24:11"},"scope":3275,"src":"7119:2591:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3000,"nodeType":"Block","src":"9844:44:11","statements":[{"expression":{"arguments":[{"id":2996,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"9865:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2997,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"9874:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2995,"name":"_setActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"9854:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bool_$returns$__$","typeString":"function (uint32,bool)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9854:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2999,"nodeType":"ExpressionStatement","src":"9854:27:11"}]},"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"9716:56:11","text":"@notice Sets the active status of a sequencer agent."},"functionSelector":"e956eaf1","id":3001,"implemented":true,"kind":"function","modifiers":[{"id":2993,"kind":"modifierInvocation","modifierName":{"id":2992,"name":"onlyOwner","nameLocations":["9834:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"9834:9:11"},"nodeType":"ModifierInvocation","src":"9834:9:11"}],"name":"setActive","nameLocation":"9786:9:11","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"agentId","nameLocation":"9803:7:11","nodeType":"VariableDeclaration","scope":3001,"src":"9796:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2987,"name":"uint32","nodeType":"ElementaryTypeName","src":"9796:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"active","nameLocation":"9817:6:11","nodeType":"VariableDeclaration","scope":3001,"src":"9812:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2989,"name":"bool","nodeType":"ElementaryTypeName","src":"9812:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9795:29:11"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[],"src":"9844:0:11"},"scope":3275,"src":"9777:111:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3023,"nodeType":"Block","src":"10120:145:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"_sequencerAgentTemplate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"10138:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10165:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"10165:7:11","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10165:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10138:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a207a65726f2061646472657373","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10177:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","typeString":"literal_string \"Dealer: zero address\""},"value":"Dealer: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","typeString":"literal_string \"Dealer: zero address\""}],"id":3009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10130:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10130:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3018,"nodeType":"ExpressionStatement","src":"10130:70:11"},{"expression":{"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"sequencerAgentTemplate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"10210:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3020,"name":"_sequencerAgentTemplate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"10235:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10210:48:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3022,"nodeType":"ExpressionStatement","src":"10210:48:11"}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"9894:134:11","text":"@notice Sets the sequencer agent template.\n @param _sequencerAgentTemplate The address of the new sequencer agent template."},"functionSelector":"eb2c5798","id":3024,"implemented":true,"kind":"function","modifiers":[{"id":3007,"kind":"modifierInvocation","modifierName":{"id":3006,"name":"onlyOwner","nameLocations":["10110:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"10110:9:11"},"nodeType":"ModifierInvocation","src":"10110:9:11"}],"name":"setSequencerAgentTemplate","nameLocation":"10042:25:11","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"_sequencerAgentTemplate","nameLocation":"10076:23:11","nodeType":"VariableDeclaration","scope":3024,"src":"10068:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"10068:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10067:33:11"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"10120:0:11"},"scope":3275,"src":"10033:232:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3045,"nodeType":"Block","src":"10483:97:11","statements":[{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"_old","nameLocation":"10500:4:11","nodeType":"VariableDeclaration","scope":3045,"src":"10493:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3032,"name":"uint32","nodeType":"ElementaryTypeName","src":"10493:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3035,"initialValue":{"id":3034,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"10507:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"10493:19:11"},{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"10522:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3037,"name":"_l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"10530:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10522:14:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3039,"nodeType":"ExpressionStatement","src":"10522:14:11"},{"eventCall":{"arguments":[{"id":3041,"name":"_old","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"10560:4:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3042,"name":"_l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"10566:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3040,"name":"L2GasSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10551:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10551:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3044,"nodeType":"EmitStatement","src":"10546:27:11"}]},"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"10271:155:11","text":"@notice Sets the L2 gas limit.\n @param _l2Gas The new L2 gas limit.\n @dev The L2 gas limit is used when minting eMetis tokens on Layer 2."},"functionSelector":"33bec7e7","id":3046,"implemented":true,"kind":"function","modifiers":[{"id":3030,"kind":"modifierInvocation","modifierName":{"id":3029,"name":"onlyOwner","nameLocations":["10473:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"10473:9:11"},"nodeType":"ModifierInvocation","src":"10473:9:11"}],"name":"setL2Gas","nameLocation":"10440:8:11","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"_l2Gas","nameLocation":"10456:6:11","nodeType":"VariableDeclaration","scope":3046,"src":"10449:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3026,"name":"uint32","nodeType":"ElementaryTypeName","src":"10449:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10448:15:11"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[],"src":"10483:0:11"},"scope":3275,"src":"10431:149:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3097,"nodeType":"Block","src":"10740:348:11","statements":[{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"total","nameLocation":"10758:5:11","nodeType":"VariableDeclaration","scope":3097,"src":"10750:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"10750:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3055,"initialValue":{"hexValue":"30","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10766:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10750:17:11"},{"body":{"id":3093,"nodeType":"Block","src":"10832:228:11","statements":[{"assignments":[3068],"declarations":[{"constant":false,"id":3068,"mutability":"mutable","name":"agentId","nameLocation":"10853:7:11","nodeType":"VariableDeclaration","scope":3093,"src":"10846:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3067,"name":"uint32","nodeType":"ElementaryTypeName","src":"10846:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3072,"initialValue":{"baseExpression":{"id":3069,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"10863:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3071,"indexExpression":{"id":3070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10882:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10863:21:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"10846:38:11"},{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"agent","nameLocation":"10913:5:11","nodeType":"VariableDeclaration","scope":3093,"src":"10898:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"},"typeName":{"id":3074,"nodeType":"UserDefinedTypeName","pathNode":{"id":3073,"name":"SequencerAgent","nameLocations":["10898:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":3529,"src":"10898:14:11"},"referencedDeclaration":3529,"src":"10898:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"visibility":"internal"}],"id":3081,"initialValue":{"arguments":[{"baseExpression":{"id":3077,"name":"sequencerAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"10936:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"}},"id":3079,"indexExpression":{"id":3078,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"10952:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10936:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3076,"name":"SequencerAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"10921:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SequencerAgent_$3529_$","typeString":"type(contract SequencerAgent)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10921:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"nodeType":"VariableDeclarationStatement","src":"10898:63:11"},{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"locked","nameLocation":"10983:6:11","nodeType":"VariableDeclaration","scope":3093,"src":"10975:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"10975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3088,"initialValue":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3084,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"10992:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10998:13:11","memberName":"sequencerData","nodeType":"MemberAccess","referencedDeclaration":3472,"src":"10992:19:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_struct$_SequencerData_$3844_memory_ptr_$","typeString":"function () view external returns (struct ILockingPool.SequencerData memory)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10992:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"id":3087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11014:6:11","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"10992:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10975:45:11"},{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"11034:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3090,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"11043:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11034:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"11034:15:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10796:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3061,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"10800:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10819:6:11","memberName":"length","nodeType":"MemberAccess","src":"10800:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10796:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"initializationExpression":{"assignments":[3057],"declarations":[{"constant":false,"id":3057,"mutability":"mutable","name":"i","nameLocation":"10789:1:11","nodeType":"VariableDeclaration","scope":3094,"src":"10782:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3056,"name":"uint32","nodeType":"ElementaryTypeName","src":"10782:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3059,"initialValue":{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10793:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10782:12:11"},"loopExpression":{"expression":{"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10827:3:11","subExpression":{"id":3064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"10827:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3066,"nodeType":"ExpressionStatement","src":"10827:3:11"},"nodeType":"ForStatement","src":"10777:283:11"},{"expression":{"id":3095,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"11076:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3051,"id":3096,"nodeType":"Return","src":"11069:12:11"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"10586:94:11","text":"@notice Returns the total amount of Metis tokens that have been locked for all sequencers."},"functionSelector":"56891412","id":3098,"implemented":true,"kind":"function","modifiers":[],"name":"totalLocked","nameLocation":"10694:11:11","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[],"src":"10705:2:11"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3098,"src":"10731:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"10731:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10730:9:11"},"scope":3275,"src":"10685:403:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3106,"nodeType":"Block","src":"11268:46:11","statements":[{"expression":{"id":3104,"name":"sequencerAgentTemplate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"11285:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3103,"id":3105,"nodeType":"Return","src":"11278:29:11"}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"11094:111:11","text":"@notice Use Dealer as a beacon of BeaconProxy for SequencerAgent\n @return The implementation address"},"functionSelector":"5c60da1b","id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"11219:14:11","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[],"src":"11233:2:11"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"11259:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"11259:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11258:9:11"},"scope":3275,"src":"11210:104:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3151,"nodeType":"Block","src":"11439:314:11","statements":[{"condition":{"id":3115,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"11453:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3149,"nodeType":"Block","src":"11692:55:11","statements":[{"expression":{"arguments":[{"id":3146,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"11728:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3145,"name":"_removeFromActiveList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"11706:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$_t_uint32_$","typeString":"function (uint32) returns (uint32)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11706:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3148,"nodeType":"ExpressionStatement","src":"11706:30:11"}]},"id":3150,"nodeType":"IfStatement","src":"11449:298:11","trueBody":{"id":3144,"nodeType":"Block","src":"11461:225:11","statements":[{"body":{"id":3136,"nodeType":"Block","src":"11530:100:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3128,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"11556:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3130,"indexExpression":{"id":3129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"11575:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11556:21:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3131,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"11581:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11556:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a20616c726561647920616374697665","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11590:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3","typeString":"literal_string \"Dealer: already active\""},"value":"Dealer: already active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3","typeString":"literal_string \"Dealer: already active\""}],"id":3127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11548:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11548:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3135,"nodeType":"ExpressionStatement","src":"11548:67:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"11494:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3121,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"11498:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11517:6:11","memberName":"length","nodeType":"MemberAccess","src":"11498:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11494:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"initializationExpression":{"assignments":[3117],"declarations":[{"constant":false,"id":3117,"mutability":"mutable","name":"i","nameLocation":"11487:1:11","nodeType":"VariableDeclaration","scope":3137,"src":"11480:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3116,"name":"uint32","nodeType":"ElementaryTypeName","src":"11480:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3119,"initialValue":{"hexValue":"30","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11491:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11480:12:11"},"loopExpression":{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11525:3:11","subExpression":{"id":3124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"11525:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3126,"nodeType":"ExpressionStatement","src":"11525:3:11"},"nodeType":"ForStatement","src":"11475:155:11"},{"expression":{"arguments":[{"id":3141,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"11667:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3138,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"11643:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:4:11","memberName":"push","nodeType":"MemberAccess","src":"11643:23:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint32_$dyn_storage_ptr_$_t_uint32_$returns$__$attached_to$_t_array$_t_uint32_$dyn_storage_ptr_$","typeString":"function (uint32[] storage pointer,uint32)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11643:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3143,"nodeType":"ExpressionStatement","src":"11643:32:11"}]}}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"11320:56:11","text":"@notice Sets the active status of a sequencer agent."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"_setActive","nameLocation":"11390:10:11","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"agentId","nameLocation":"11408:7:11","nodeType":"VariableDeclaration","scope":3152,"src":"11401:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3109,"name":"uint32","nodeType":"ElementaryTypeName","src":"11401:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"active","nameLocation":"11422:6:11","nodeType":"VariableDeclaration","scope":3152,"src":"11417:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3111,"name":"bool","nodeType":"ElementaryTypeName","src":"11417:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11400:29:11"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[],"src":"11439:0:11"},"scope":3275,"src":"11381:372:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"11882:237:11","statements":[{"assignments":[3159],"declarations":[{"constant":false,"id":3159,"mutability":"mutable","name":"message","nameLocation":"11905:7:11","nodeType":"VariableDeclaration","scope":3184,"src":"11892:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"11892:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3167,"initialValue":{"arguments":[{"expression":{"expression":{"id":3162,"name":"IVeMetisMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"11938:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVeMetisMinter_$4042_$","typeString":"type(contract IVeMetisMinter)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11953:10:11","memberName":"mintFromL1","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"11938:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_uint256_$returns$__$","typeString":"function IVeMetisMinter.mintFromL1(uint256)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11964:8:11","memberName":"selector","nodeType":"MemberAccess","src":"11938:34:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3165,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"11974:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3160,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"11915:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11919:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"11915:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11915:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11892:89:11"},{"expression":{"arguments":[{"id":3174,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"12040:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3175,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"12051:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3176,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"12061:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3177,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"12070:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3168,"name":"messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"11991:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3607","typeString":"contract ICrossDomainMessenger"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12001:21:11","memberName":"sendMessageViaChainId","nodeType":"MemberAccess","referencedDeclaration":3589,"src":"11991:31:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$","typeString":"function (uint256,address,bytes memory,uint32) payable external"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"12029:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12033:5:11","memberName":"value","nodeType":"MemberAccess","src":"12029:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11991:48:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$value","typeString":"function (uint256,address,bytes memory,uint32) payable external"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11991:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"ExpressionStatement","src":"11991:85:11"},{"eventCall":{"arguments":[{"id":3181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"12105:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3180,"name":"L2MetisMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"12091:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12091:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"EmitStatement","src":"12086:26:11"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"11759:70:11","text":"@notice mint veMetis on Layer 2\n @param amount Metis amount"},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"_mintL2EMetis","nameLocation":"11843:13:11","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"amount","nameLocation":"11865:6:11","nodeType":"VariableDeclaration","scope":3185,"src":"11857:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"11857:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11856:16:11"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[],"src":"11882:0:11"},"scope":3275,"src":"11834:285:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"12475:239:11","statements":[{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3193,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"12485:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3195,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"12513:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3194,"name":"_findFromActiveList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"12493:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_uint32_$","typeString":"function (uint32) view returns (uint32)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12493:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12485:36:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3198,"nodeType":"ExpressionStatement","src":"12485:36:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3200,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"12539:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12552:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3202,"name":"uint32","nodeType":"ElementaryTypeName","src":"12552:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3201,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12547:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12547:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12560:3:11","memberName":"max","nodeType":"MemberAccess","src":"12547:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12539:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a206e6f7420616374697665","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12565:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef","typeString":"literal_string \"Dealer: not active\""},"value":"Dealer: not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef","typeString":"literal_string \"Dealer: not active\""}],"id":3199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"12531:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12531:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3209,"nodeType":"ExpressionStatement","src":"12531:55:11"},{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3210,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"12596:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3212,"indexExpression":{"id":3211,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"12615:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12596:25:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3213,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"12624:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3218,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3214,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"12643:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12662:6:11","memberName":"length","nodeType":"MemberAccess","src":"12643:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12671:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12643:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12624:49:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12596:77:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3220,"nodeType":"ExpressionStatement","src":"12596:77:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3221,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"12683:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12702:3:11","memberName":"pop","nodeType":"MemberAccess","src":"12683:22:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint32_$dyn_storage_ptr_$","typeString":"function (uint32[] storage pointer)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12683:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"ExpressionStatement","src":"12683:24:11"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"12125:266:11","text":"@notice Removes a sequencer agent from the active list.\n @param agentId The index of the sequencer agent.\n @dev The sequencer agent is removed from the active list by swapping it with the last element in the list, and then popping the last element."},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"_removeFromActiveList","nameLocation":"12405:21:11","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"agentId","nameLocation":"12434:7:11","nodeType":"VariableDeclaration","scope":3227,"src":"12427:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3187,"name":"uint32","nodeType":"ElementaryTypeName","src":"12427:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12426:16:11"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"index","nameLocation":"12468:5:11","nodeType":"VariableDeclaration","scope":3227,"src":"12461:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3190,"name":"uint32","nodeType":"ElementaryTypeName","src":"12461:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12460:14:11"},"scope":3275,"src":"12396:318:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"12995:227:11","statements":[{"body":{"id":3255,"nodeType":"Block","src":"13072:111:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3246,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"13090:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3248,"indexExpression":{"id":3247,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"13109:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13090:25:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3249,"name":"agentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"13119:7:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13090:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"nodeType":"IfStatement","src":"13086:87:11","trueBody":{"id":3253,"nodeType":"Block","src":"13128:45:11","statements":[{"expression":{"id":3251,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"13153:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3234,"id":3252,"nodeType":"Return","src":"13146:12:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"13028:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3240,"name":"activeSequencerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"13036:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[] storage ref"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13055:6:11","memberName":"length","nodeType":"MemberAccess","src":"13036:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13028:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"initializationExpression":{"assignments":[3236],"declarations":[{"constant":false,"id":3236,"mutability":"mutable","name":"index","nameLocation":"13017:5:11","nodeType":"VariableDeclaration","scope":3256,"src":"13010:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3235,"name":"uint32","nodeType":"ElementaryTypeName","src":"13010:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3238,"initialValue":{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13025:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13010:16:11"},"loopExpression":{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13063:7:11","subExpression":{"id":3243,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"13063:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3245,"nodeType":"ExpressionStatement","src":"13063:7:11"},"nodeType":"ForStatement","src":"13005:178:11"},{"expression":{"expression":{"arguments":[{"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13204:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3258,"name":"uint32","nodeType":"ElementaryTypeName","src":"13204:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3257,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13199:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13199:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13212:3:11","memberName":"max","nodeType":"MemberAccess","src":"13199:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3234,"id":3262,"nodeType":"Return","src":"13192:23:11"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"12720:194:11","text":"@notice Finds the index of a sequencer agent in the active list.\n @param agentId The index of the sequencer agent.\n @return The index of the sequencer agent in the active list."},"id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"_findFromActiveList","nameLocation":"12928:19:11","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"agentId","nameLocation":"12955:7:11","nodeType":"VariableDeclaration","scope":3264,"src":"12948:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3229,"name":"uint32","nodeType":"ElementaryTypeName","src":"12948:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12947:16:11"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3264,"src":"12987:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3232,"name":"uint32","nodeType":"ElementaryTypeName","src":"12987:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12986:8:11"},"scope":3275,"src":"12919:303:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3273,"nodeType":"Block","src":"13278:41:11","statements":[{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"13288:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3270,"name":"_l2GasAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13299:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13288:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3272,"nodeType":"ExpressionStatement","src":"13288:24:11"}]},"functionSelector":"f87b7a3e","id":3274,"implemented":true,"kind":"function","modifiers":[],"name":"setL2Minter","nameLocation":"13237:11:11","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"_l2GasAddress","nameLocation":"13257:13:11","nodeType":"VariableDeclaration","scope":3274,"src":"13249:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"13249:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13248:23:11"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"13278:0:11"},"scope":3275,"src":"13228:91:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3276,"src":"691:12630:11","usedErrors":[30,35,211,214],"usedEvents":[41,219,2417,2426,2431,2438,2445,2452]}],"src":"32:13289:11"},"id":11},"contracts/SequencerAgent.sol":{"ast":{"absolutePath":"contracts/SequencerAgent.sol","exportedSymbols":{"ContextUpgradeable":[494],"IERC20":[979],"ILockingInfo":[3817],"ILockingPool":[3940],"ISequencerInfo":[4022],"Initializable":[448],"SequencerAgent":[3529]},"id":3530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3277,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":3278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3530,"sourceUnit":495,"src":"57:74:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3530,"sourceUnit":980,"src":"132:56:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ILockingPool.sol","file":"../interface/ILockingPool.sol","id":3280,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3530,"sourceUnit":3941,"src":"189:39:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ILockingInfo.sol","file":"../interface/ILockingInfo.sol","id":3281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3530,"sourceUnit":3818,"src":"229:39:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3282,"name":"ContextUpgradeable","nameLocations":["297:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"297:18:12"},"id":3283,"nodeType":"InheritanceSpecifier","src":"297:18:12"}],"canonicalName":"SequencerAgent","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3529,"linearizedBaseContracts":[3529,494,448],"name":"SequencerAgent","nameLocation":"279:14:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9de2ee21","id":3285,"mutability":"mutable","name":"dealer","nameLocation":"337:6:12","nodeType":"VariableDeclaration","scope":3529,"src":"322:21:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"85d1e2b8","id":3288,"mutability":"mutable","name":"lockingPool","nameLocation":"369:11:12","nodeType":"VariableDeclaration","scope":3529,"src":"349:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"},"typeName":{"id":3287,"nodeType":"UserDefinedTypeName","pathNode":{"id":3286,"name":"ILockingPool","nameLocations":["349:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"349:12:12"},"referencedDeclaration":3940,"src":"349:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"visibility":"public"},{"constant":false,"functionSelector":"f7cee36a","id":3291,"mutability":"mutable","name":"lockingInfo","nameLocation":"406:11:12","nodeType":"VariableDeclaration","scope":3529,"src":"386:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"ILockingInfo","nameLocations":["386:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"386:12:12"},"referencedDeclaration":3817,"src":"386:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"visibility":"public"},{"constant":false,"functionSelector":"e5974554","id":3294,"mutability":"mutable","name":"metis","nameLocation":"437:5:12","nodeType":"VariableDeclaration","scope":3529,"src":"423:19:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"IERC20","nameLocations":["423:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"423:6:12"},"referencedDeclaration":979,"src":"423:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"04a78fca","id":3296,"mutability":"mutable","name":"sequencerId","nameLocation":"463:11:12","nodeType":"VariableDeclaration","scope":3529,"src":"448:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c3b550c8","id":3298,"mutability":"mutable","name":"sequencerSigner","nameLocation":"495:15:12","nodeType":"VariableDeclaration","scope":3529,"src":"480:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"02fb0c5e","id":3300,"mutability":"mutable","name":"active","nameLocation":"528:6:12","nodeType":"VariableDeclaration","scope":3529,"src":"516:18:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3299,"name":"bool","nodeType":"ElementaryTypeName","src":"516:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"body":{"id":3311,"nodeType":"Block","src":"563:88:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3303,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"581:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"585:6:12","memberName":"sender","nodeType":"MemberAccess","src":"581:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3305,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"595:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"581:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657175656e6365724167656e743a206f6e6c79206465616c6572","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"603:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d","typeString":"literal_string \"SequencerAgent: only dealer\""},"value":"SequencerAgent: only dealer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d","typeString":"literal_string \"SequencerAgent: only dealer\""}],"id":3302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"573:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"573:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3309,"nodeType":"ExpressionStatement","src":"573:60:12"},{"id":3310,"nodeType":"PlaceholderStatement","src":"643:1:12"}]},"id":3312,"name":"onlyDealer","nameLocation":"550:10:12","nodeType":"ModifierDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[],"src":"560:2:12"},"src":"541:110:12","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"785:137:12","statements":[{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3327,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"795:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3328,"name":"_dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"804:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"795:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3330,"nodeType":"ExpressionStatement","src":"795:16:12"},{"expression":{"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"821:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3332,"name":"_lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"835:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"src":"821:26:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3334,"nodeType":"ExpressionStatement","src":"821:26:12"},{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3335,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"857:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3336,"name":"_lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"871:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"src":"857:26:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"id":3338,"nodeType":"ExpressionStatement","src":"857:26:12"},{"expression":{"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"893:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3341,"name":"_metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"908:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3340,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"901:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"src":"893:22:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":3344,"nodeType":"ExpressionStatement","src":"893:22:12"}]},"functionSelector":"f8c8765e","id":3346,"implemented":true,"kind":"function","modifiers":[{"id":3325,"kind":"modifierInvocation","modifierName":{"id":3324,"name":"initializer","nameLocations":["773:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"773:11:12"},"nodeType":"ModifierInvocation","src":"773:11:12"}],"name":"initialize","nameLocation":"666:10:12","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"_dealer","nameLocation":"685:7:12","nodeType":"VariableDeclaration","scope":3346,"src":"677:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3313,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"_lockingPool","nameLocation":"707:12:12","nodeType":"VariableDeclaration","scope":3346,"src":"694:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"},"typeName":{"id":3316,"nodeType":"UserDefinedTypeName","pathNode":{"id":3315,"name":"ILockingPool","nameLocations":["694:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3940,"src":"694:12:12"},"referencedDeclaration":3940,"src":"694:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"_lockingInfo","nameLocation":"734:12:12","nodeType":"VariableDeclaration","scope":3346,"src":"721:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"},"typeName":{"id":3319,"nodeType":"UserDefinedTypeName","pathNode":{"id":3318,"name":"ILockingInfo","nameLocations":["721:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"721:12:12"},"referencedDeclaration":3817,"src":"721:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"_metis","nameLocation":"756:6:12","nodeType":"VariableDeclaration","scope":3346,"src":"748:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"676:87:12"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[],"src":"785:0:12"},"scope":3529,"src":"657:265:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3428,"nodeType":"Block","src":"1057:561:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"1075:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1090:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1075:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657175656e6365724167656e743a2073657175656e63657220616c7265616479206c6f636b6564","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1093:42:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db","typeString":"literal_string \"SequencerAgent: sequencer already locked\""},"value":"SequencerAgent: sequencer already locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db","typeString":"literal_string \"SequencerAgent: sequencer already locked\""}],"id":3359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1067:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1067:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"ExpressionStatement","src":"1067:69:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"_sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"1154:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1174:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3368,"name":"address","nodeType":"ElementaryTypeName","src":"1174:7:12","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1174:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1154:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3373,"name":"_rewardRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1188:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1216:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1208:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:12","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1208:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1188:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1154:64:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657175656e6365724167656e743a207a65726f2061646472657373","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1220:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934","typeString":"literal_string \"SequencerAgent: zero address\""},"value":"SequencerAgent: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934","typeString":"literal_string \"SequencerAgent: zero address\""}],"id":3366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1146:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1146:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"ExpressionStatement","src":"1146:105:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"1269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1269:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657175656e6365724167656e743a207a65726f20616d6f756e74","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1282:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68","typeString":"literal_string \"SequencerAgent: zero amount\""},"value":"SequencerAgent: zero amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68","typeString":"literal_string \"SequencerAgent: zero amount\""}],"id":3383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1261:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1261:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3389,"nodeType":"ExpressionStatement","src":"1261:51:12"},{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1323:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3391,"name":"_sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"1341:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1323:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3393,"nodeType":"ExpressionStatement","src":"1323:34:12"},{"expression":{"arguments":[{"arguments":[{"id":3399,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"1389:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}],"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1381:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:12","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1408:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3401,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1403:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1403:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1417:3:12","memberName":"max","nodeType":"MemberAccess","src":"1403:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3394,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"1367:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1373:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":966,"src":"1367:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1367:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3407,"nodeType":"ExpressionStatement","src":"1367:54:12"},{"expression":{"arguments":[{"id":3411,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1467:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3412,"name":"_rewardRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1484:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3413,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"1502:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3414,"name":"_signerPubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"1511:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3408,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1431:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1443:23:12","memberName":"lockWithRewardRecipient","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"1431:35:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory) external"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1431:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"ExpressionStatement","src":"1431:94:12"},{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3417,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"1535:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3420,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1572:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3418,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1549:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1561:10:12","memberName":"seqSigners","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"1549:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1549:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1535:53:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"nodeType":"ExpressionStatement","src":"1535:53:12"},{"expression":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3424,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"1598:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1607:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1598:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"ExpressionStatement","src":"1598:13:12"}]},"functionSelector":"ce6df54a","id":3429,"implemented":true,"kind":"function","modifiers":[{"id":3357,"kind":"modifierInvocation","modifierName":{"id":3356,"name":"onlyDealer","nameLocations":["1046:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"1046:10:12"},"nodeType":"ModifierInvocation","src":"1046:10:12"}],"name":"lock","nameLocation":"937:4:12","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"_sequencerSigner","nameLocation":"950:16:12","nodeType":"VariableDeclaration","scope":3429,"src":"942:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"_rewardRecipient","nameLocation":"976:16:12","nodeType":"VariableDeclaration","scope":3429,"src":"968:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"_amount","nameLocation":"1002:7:12","nodeType":"VariableDeclaration","scope":3429,"src":"994:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"_signerPubKey","nameLocation":"1024:13:12","nodeType":"VariableDeclaration","scope":3429,"src":"1011:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3353,"name":"bytes","nodeType":"ElementaryTypeName","src":"1011:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"941:97:12"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[],"src":"1057:0:12"},"scope":3529,"src":"928:690:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3444,"nodeType":"Block","src":"1674:62:12","statements":[{"expression":{"arguments":[{"id":3439,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"1703:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3440,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"1716:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1724:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3436,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1684:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1696:6:12","memberName":"relock","nodeType":"MemberAccess","referencedDeclaration":3873,"src":"1684:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool) external"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3443,"nodeType":"ExpressionStatement","src":"1684:45:12"}]},"functionSelector":"a98d38f0","id":3445,"implemented":true,"kind":"function","modifiers":[{"id":3434,"kind":"modifierInvocation","modifierName":{"id":3433,"name":"onlyDealer","nameLocations":["1663:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"1663:10:12"},"nodeType":"ModifierInvocation","src":"1663:10:12"}],"name":"relock","nameLocation":"1633:6:12","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"amount","nameLocation":"1648:6:12","nodeType":"VariableDeclaration","scope":3445,"src":"1640:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1640:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1639:16:12"},"returnParameters":{"id":3435,"nodeType":"ParameterList","parameters":[],"src":"1674:0:12"},"scope":3529,"src":"1624:112:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3459,"nodeType":"Block","src":"1799:64:12","statements":[{"expression":{"arguments":[{"id":3455,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"1837:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3456,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"1850:5:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3452,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1809:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1821:15:12","memberName":"withdrawRewards","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"1809:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32) external"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1809:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"ExpressionStatement","src":"1809:47:12"}]},"functionSelector":"56387b91","id":3460,"implemented":true,"kind":"function","modifiers":[{"id":3450,"kind":"modifierInvocation","modifierName":{"id":3449,"name":"onlyDealer","nameLocations":["1788:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"1788:10:12"},"nodeType":"ModifierInvocation","src":"1788:10:12"}],"name":"withdrawRewards","nameLocation":"1751:15:12","nodeType":"FunctionDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"l2Gas","nameLocation":"1774:5:12","nodeType":"VariableDeclaration","scope":3460,"src":"1767:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3446,"name":"uint32","nodeType":"ElementaryTypeName","src":"1767:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1766:14:12"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[],"src":"1799:0:12"},"scope":3529,"src":"1742:121:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3471,"nodeType":"Block","src":"1950:59:12","statements":[{"expression":{"arguments":[{"id":3468,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"1990:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3466,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1967:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:10:12","memberName":"sequencers","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"1967:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_SequencerData_$3844_memory_ptr_$","typeString":"function (uint256) view external returns (struct ILockingPool.SequencerData memory)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1967:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"functionReturnParameters":3465,"id":3470,"nodeType":"Return","src":"1960:42:12"}]},"functionSelector":"76d9f95c","id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"sequencerData","nameLocation":"1878:13:12","nodeType":"FunctionDefinition","parameters":{"id":3461,"nodeType":"ParameterList","parameters":[],"src":"1891:2:12"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"1915:33:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":3463,"nodeType":"UserDefinedTypeName","pathNode":{"id":3462,"name":"ILockingPool.SequencerData","nameLocations":["1915:12:12","1928:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"1915:26:12"},"referencedDeclaration":3844,"src":"1915:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"src":"1914:35:12"},"scope":3529,"src":"1869:140:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3493,"nodeType":"Block","src":"2071:97:12","statements":[{"expression":{"arguments":[{"id":3485,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"2118:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3486,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"2131:5:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3479,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2081:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2093:6:12","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":3887,"src":"2081:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32) payable external"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2107:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2111:5:12","memberName":"value","nodeType":"MemberAccess","src":"2107:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2081:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$value","typeString":"function (uint256,uint32) payable external"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3488,"nodeType":"ExpressionStatement","src":"2081:56:12"},{"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3489,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"2147:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2156:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2147:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"ExpressionStatement","src":"2147:14:12"}]},"functionSelector":"67d93c81","id":3494,"implemented":true,"kind":"function","modifiers":[{"id":3477,"kind":"modifierInvocation","modifierName":{"id":3476,"name":"onlyDealer","nameLocations":["2060:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"2060:10:12"},"nodeType":"ModifierInvocation","src":"2060:10:12"}],"name":"unlock","nameLocation":"2024:6:12","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"l2Gas","nameLocation":"2038:5:12","nodeType":"VariableDeclaration","scope":3494,"src":"2031:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3473,"name":"uint32","nodeType":"ElementaryTypeName","src":"2031:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2030:14:12"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[],"src":"2071:0:12"},"scope":3529,"src":"2015:153:12","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3527,"nodeType":"Block","src":"2235:158:12","statements":[{"expression":{"arguments":[{"id":3507,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"2287:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3508,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"2300:5:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3501,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2245:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3940","typeString":"contract ILockingPool"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2257:11:12","memberName":"unlockClaim","nodeType":"MemberAccess","referencedDeclaration":3894,"src":"2245:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32) payable external"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2276:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:5:12","memberName":"value","nodeType":"MemberAccess","src":"2276:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2245:41:12","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$value","typeString":"function (uint256,uint32) payable external"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2245:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3510,"nodeType":"ExpressionStatement","src":"2245:61:12"},{"expression":{"arguments":[{"id":3515,"name":"dealer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"2339:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3522,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2379:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SequencerAgent_$3529","typeString":"contract SequencerAgent"}],"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2371:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"2371:7:12","typeDescriptions":{}}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3517,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2354:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}],"id":3516,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"2347:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2361:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":936,"src":"2347:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3512,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2323:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}],"id":3511,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"2316:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2330:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":946,"src":"2316:22:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3526,"nodeType":"ExpressionStatement","src":"2316:70:12"}]},"functionSelector":"1221e6a5","id":3528,"implemented":true,"kind":"function","modifiers":[{"id":3499,"kind":"modifierInvocation","modifierName":{"id":3498,"name":"onlyDealer","nameLocations":["2224:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3312,"src":"2224:10:12"},"nodeType":"ModifierInvocation","src":"2224:10:12"}],"name":"unlockClaim","nameLocation":"2183:11:12","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"l2Gas","nameLocation":"2202:5:12","nodeType":"VariableDeclaration","scope":3528,"src":"2195:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3495,"name":"uint32","nodeType":"ElementaryTypeName","src":"2195:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2194:14:12"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[],"src":"2235:0:12"},"scope":3529,"src":"2174:219:12","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":3530,"src":"270:2125:12","usedErrors":[211,214],"usedEvents":[219]}],"src":"32:2363:12"},"id":12},"interface/ICrossDomainEnabled.sol":{"ast":{"absolutePath":"interface/ICrossDomainEnabled.sol","exportedSymbols":{"ICrossDomainEnabled":[3537]},"id":3538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3531,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ICrossDomainEnabled","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3537,"linearizedBaseContracts":[3537],"name":"ICrossDomainEnabled","nameLocation":"67:19:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3cb747bf","id":3536,"implemented":false,"kind":"function","modifiers":[],"name":"messenger","nameLocation":"102:9:13","nodeType":"FunctionDefinition","parameters":{"id":3532,"nodeType":"ParameterList","parameters":[],"src":"111:2:13"},"returnParameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"137:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"136:9:13"},"scope":3537,"src":"93:53:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3538,"src":"57:91:13","usedErrors":[],"usedEvents":[]}],"src":"32:116:13"},"id":13},"interface/ICrossDomainMessenger.sol":{"ast":{"absolutePath":"interface/ICrossDomainMessenger.sol","exportedSymbols":{"ICrossDomainMessenger":[3607]},"id":3608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3539,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"ICrossDomainMessenger","contractDependencies":[],"contractKind":"interface","documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"57:39:14","text":" @title ICrossDomainMessenger"},"fullyImplemented":false,"id":3607,"linearizedBaseContracts":[3607],"name":"ICrossDomainMessenger","nameLocation":"107:21:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"678d1db16886696652bddc90d68217be474de2ce959bf7383cb63eaa8c6f1afa","id":3554,"name":"SentMessage","nameLocation":"191:11:14","nodeType":"EventDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"228:6:14","nodeType":"VariableDeclaration","scope":3554,"src":"212:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3541,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3544,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"252:6:14","nodeType":"VariableDeclaration","scope":3554,"src":"244:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"244:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3546,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"274:7:14","nodeType":"VariableDeclaration","scope":3554,"src":"268:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3545,"name":"bytes","nodeType":"ElementaryTypeName","src":"268:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3548,"indexed":false,"mutability":"mutable","name":"messageNonce","nameLocation":"299:12:14","nodeType":"VariableDeclaration","scope":3554,"src":"291:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"indexed":false,"mutability":"mutable","name":"gasLimit","nameLocation":"329:8:14","nodeType":"VariableDeclaration","scope":3554,"src":"321:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3552,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"355:7:14","nodeType":"VariableDeclaration","scope":3554,"src":"347:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"202:166:14"},"src":"185:184:14"},{"anonymous":false,"eventSelector":"4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c","id":3558,"name":"RelayedMessage","nameLocation":"380:14:14","nodeType":"EventDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"411:7:14","nodeType":"VariableDeclaration","scope":3558,"src":"395:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"395:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"394:25:14"},"src":"374:46:14"},{"anonymous":false,"eventSelector":"99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f","id":3562,"name":"FailedRelayedMessage","nameLocation":"431:20:14","nodeType":"EventDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"468:7:14","nodeType":"VariableDeclaration","scope":3562,"src":"452:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"452:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"451:25:14"},"src":"425:52:14"},{"functionSelector":"6e296e45","id":3567,"implemented":false,"kind":"function","modifiers":[],"name":"xDomainMessageSender","nameLocation":"551:20:14","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[],"src":"571:2:14"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3567,"src":"597:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"596:9:14"},"scope":3607,"src":"542:64:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"696:233:14","text":" Sends a cross domain message to the target messenger.\n @param _target Target contract address.\n @param _message Message to send to the target.\n @param _gasLimit Gas limit for the provided message."},"functionSelector":"3dbb202b","id":3577,"implemented":false,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"943:11:14","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"_target","nameLocation":"972:7:14","nodeType":"VariableDeclaration","scope":3577,"src":"964:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"_message","nameLocation":"1004:8:14","nodeType":"VariableDeclaration","scope":3577,"src":"989:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3571,"name":"bytes","nodeType":"ElementaryTypeName","src":"989:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"_gasLimit","nameLocation":"1029:9:14","nodeType":"VariableDeclaration","scope":3577,"src":"1022:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3573,"name":"uint32","nodeType":"ElementaryTypeName","src":"1022:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"954:90:14"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[],"src":"1061:0:14"},"scope":3607,"src":"934:128:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"1069:269:14","text":" Sends a cross domain message to the target messenger.\n @param _chainId L2 chain id.\n @param _target Target contract address.\n @param _message Message to send to the target.\n @param _gasLimit Gas limit for the provided message."},"functionSelector":"44dd5ed6","id":3589,"implemented":false,"kind":"function","modifiers":[],"name":"sendMessageViaChainId","nameLocation":"1352:21:14","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"_chainId","nameLocation":"1391:8:14","nodeType":"VariableDeclaration","scope":3589,"src":"1383:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"_target","nameLocation":"1417:7:14","nodeType":"VariableDeclaration","scope":3589,"src":"1409:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3581,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3584,"mutability":"mutable","name":"_message","nameLocation":"1449:8:14","nodeType":"VariableDeclaration","scope":3589,"src":"1434:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3583,"name":"bytes","nodeType":"ElementaryTypeName","src":"1434:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3586,"mutability":"mutable","name":"_gasLimit","nameLocation":"1474:9:14","nodeType":"VariableDeclaration","scope":3589,"src":"1467:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3585,"name":"uint32","nodeType":"ElementaryTypeName","src":"1467:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1373:116:14"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[],"src":"1506:0:14"},"scope":3607,"src":"1343:164:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"91744b9f","id":3606,"implemented":false,"kind":"function","modifiers":[],"name":"replayMessageViaChainId","nameLocation":"1522:23:14","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"_chainId","nameLocation":"1563:8:14","nodeType":"VariableDeclaration","scope":3606,"src":"1555:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"_target","nameLocation":"1589:7:14","nodeType":"VariableDeclaration","scope":3606,"src":"1581:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3592,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"_sender","nameLocation":"1614:7:14","nodeType":"VariableDeclaration","scope":3606,"src":"1606:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"_message","nameLocation":"1644:8:14","nodeType":"VariableDeclaration","scope":3606,"src":"1631:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3596,"name":"bytes","nodeType":"ElementaryTypeName","src":"1631:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"_queueIndex","nameLocation":"1670:11:14","nodeType":"VariableDeclaration","scope":3606,"src":"1662:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"_oldGasLimit","nameLocation":"1698:12:14","nodeType":"VariableDeclaration","scope":3606,"src":"1691:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3600,"name":"uint32","nodeType":"ElementaryTypeName","src":"1691:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"_newGasLimit","nameLocation":"1727:12:14","nodeType":"VariableDeclaration","scope":3606,"src":"1720:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3602,"name":"uint32","nodeType":"ElementaryTypeName","src":"1720:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1545:200:14"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[],"src":"1753:0:14"},"scope":3607,"src":"1513:241:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3608,"src":"97:1659:14","usedErrors":[],"usedEvents":[3554,3558,3562]}],"src":"32:1724:14"},"id":14},"interface/ILockingInfo.sol":{"ast":{"absolutePath":"interface/ILockingInfo.sol","exportedSymbols":{"ILockingInfo":[3817],"ISequencerInfo":[4022]},"id":3818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3609,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":3611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3818,"sourceUnit":4023,"src":"57:52:15","symbolAliases":[{"foreign":{"id":3610,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"65:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3817,"linearizedBaseContracts":[3817],"name":"ILockingInfo","nameLocation":"121:12:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f037c630","id":3616,"implemented":false,"kind":"function","modifiers":[],"name":"minLock","nameLocation":"149:7:15","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[],"src":"156:2:15"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3616,"src":"181:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"180:9:15"},"scope":3817,"src":"140:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c0b3e46","id":3621,"implemented":false,"kind":"function","modifiers":[],"name":"maxLock","nameLocation":"204:7:15","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[],"src":"211:2:15"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3621,"src":"236:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"235:9:15"},"scope":3817,"src":"195:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"251:121:15","text":" @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n @param _newMinLock new min lock."},"eventSelector":"abb05374bb45ebfef33afb21ec5aa52333708d8217fd8e5c0616efd2530b2145","id":3626,"name":"SetMinLock","nameLocation":"383:10:15","nodeType":"EventDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"indexed":false,"mutability":"mutable","name":"_newMinLock","nameLocation":"402:11:15","nodeType":"VariableDeclaration","scope":3626,"src":"394:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"393:21:15"},"src":"377:38:15"},{"anonymous":false,"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"421:121:15","text":" @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n @param _newMaxLock new max lock."},"eventSelector":"be23e9641c545443c3c625039b327c0eee88e9024040be7b03c5d73862d425e0","id":3631,"name":"SetMaxLock","nameLocation":"553:10:15","nodeType":"EventDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"indexed":false,"mutability":"mutable","name":"_newMaxLock","nameLocation":"572:11:15","nodeType":"VariableDeclaration","scope":3631,"src":"564:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"563:21:15"},"src":"547:38:15"},{"anonymous":false,"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"591:102:15","text":" @dev Emitted when the reward payer is changed\n @param _payer new reward payer"},"eventSelector":"30b92f5a89d7473895c4e9ce260fa7d0eefef2d59d5e68192e2e8cca4b9473a0","id":3636,"name":"SetRewardPayer","nameLocation":"704:14:15","nodeType":"EventDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"indexed":false,"mutability":"mutable","name":"_payer","nameLocation":"727:6:15","nodeType":"VariableDeclaration","scope":3636,"src":"719:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3633,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"718:16:15"},"src":"698:37:15"},{"anonymous":false,"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"741:448:15","text":" @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n @param signer sequencer address.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param activationBatch sequencer's first epoch as proposer.\n @param amount locking amount.\n @param total total locking amount.\n @param signerPubkey public key of the sequencer"},"eventSelector":"e6f1eb1f1d0ca344d03cf47b9e6ece8a7d3b196e38dd7dd2307cca75e26682a8","id":3653,"name":"Locked","nameLocation":"1200:6:15","nodeType":"EventDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"1232:6:15","nodeType":"VariableDeclaration","scope":3653,"src":"1216:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3638,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3641,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1264:11:15","nodeType":"VariableDeclaration","scope":3653,"src":"1248:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3643,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1293:5:15","nodeType":"VariableDeclaration","scope":3653,"src":"1285:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3645,"indexed":true,"mutability":"mutable","name":"activationBatch","nameLocation":"1324:15:15","nodeType":"VariableDeclaration","scope":3653,"src":"1308:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3647,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1357:6:15","nodeType":"VariableDeclaration","scope":3653,"src":"1349:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3649,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1381:5:15","nodeType":"VariableDeclaration","scope":3653,"src":"1373:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3651,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"1402:12:15","nodeType":"VariableDeclaration","scope":3653,"src":"1396:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1396:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:214:15"},"src":"1194:227:15"},{"anonymous":false,"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"1427:236:15","text":" @dev Emitted when the sequencer increase lock amoun in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking new amount\n @param total the total locking amount"},"eventSelector":"33a87ba488658b3d1319098cd49c6d65b72a79c0f3530fec611e7afffed04395","id":3662,"name":"Relocked","nameLocation":"1674:8:15","nodeType":"EventDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1699:11:15","nodeType":"VariableDeclaration","scope":3662,"src":"1683:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3658,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1720:6:15","nodeType":"VariableDeclaration","scope":3662,"src":"1712:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1736:5:15","nodeType":"VariableDeclaration","scope":3662,"src":"1728:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:60:15"},"src":"1668:75:15"},{"anonymous":false,"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"1749:243:15","text":" @dev Emitted when sequencer relocking in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param newAmount the updated lock amount."},"eventSelector":"d716c027b3dd610e4534df756848128bbb159a757724c17d89fcc4d0151b1f30","id":3671,"name":"LockUpdate","nameLocation":"2003:10:15","nodeType":"EventDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2039:11:15","nodeType":"VariableDeclaration","scope":3671,"src":"2023:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3667,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"2076:5:15","nodeType":"VariableDeclaration","scope":3671,"src":"2060:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"indexed":true,"mutability":"mutable","name":"newAmount","nameLocation":"2107:9:15","nodeType":"VariableDeclaration","scope":3671,"src":"2091:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2013:109:15"},"src":"1997:126:15"},{"anonymous":false,"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"2129:320:15","text":" @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n @param sequencerId unique integer to identify a sequencer.\n @param recipient the address receive reward tokens\n @param amount the reward amount.\n @param totalAmount total rewards has liquidated"},"eventSelector":"18c7dc2a1800c409227dc12c0c05ada9c995ebfe0e42ae6d65f1b3ae3e6111de","id":3682,"name":"ClaimRewards","nameLocation":"2460:12:15","nodeType":"EventDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2498:11:15","nodeType":"VariableDeclaration","scope":3682,"src":"2482:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3676,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"2527:9:15","nodeType":"VariableDeclaration","scope":3682,"src":"2519:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3675,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3678,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2562:6:15","nodeType":"VariableDeclaration","scope":3682,"src":"2546:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2546:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3680,"indexed":true,"mutability":"mutable","name":"totalAmount","nameLocation":"2594:11:15","nodeType":"VariableDeclaration","scope":3682,"src":"2578:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2472:139:15"},"src":"2454:158:15"},{"anonymous":false,"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"2618:452:15","text":" @dev Emitted when sequencer unlocks in '_unlock()'.\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param deactivationBatch  last batch for sequencer.\n @param deactivationTime unlock block timestamp.\n @param unlockClaimTime when user can claim locked token.\n @param amount locking amount"},"eventSelector":"06d9e13438f0daf13a71d63f3f8579db8bdeb299e4b651942313c73224d7af69","id":3699,"name":"UnlockInit","nameLocation":"3081:10:15","nodeType":"EventDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3117:4:15","nodeType":"VariableDeclaration","scope":3699,"src":"3101:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3684,"name":"address","nodeType":"ElementaryTypeName","src":"3101:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3687,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3147:11:15","nodeType":"VariableDeclaration","scope":3699,"src":"3131:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3689,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3176:5:15","nodeType":"VariableDeclaration","scope":3699,"src":"3168:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3691,"indexed":false,"mutability":"mutable","name":"deactivationBatch","nameLocation":"3199:17:15","nodeType":"VariableDeclaration","scope":3699,"src":"3191:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3693,"indexed":false,"mutability":"mutable","name":"deactivationTime","nameLocation":"3234:16:15","nodeType":"VariableDeclaration","scope":3699,"src":"3226:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3695,"indexed":false,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"3268:15:15","nodeType":"VariableDeclaration","scope":3699,"src":"3260:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3697,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"3309:6:15","nodeType":"VariableDeclaration","scope":3699,"src":"3293:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3293:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3091:230:15"},"src":"3075:247:15"},{"anonymous":false,"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"3328:263:15","text":" @dev Emitted when sequencer unlocks in 'unlockClaim()'\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking amount.\n @param total total locking amount."},"eventSelector":"5245d528087a96a64f4589a764f00061e4671eab90cb1e019b1a5b24b2e4c2a8","id":3710,"name":"Unlocked","nameLocation":"3602:8:15","nodeType":"EventDefinition","parameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3636:4:15","nodeType":"VariableDeclaration","scope":3710,"src":"3620:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"3620:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3704,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3666:11:15","nodeType":"VariableDeclaration","scope":3710,"src":"3650:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3695:6:15","nodeType":"VariableDeclaration","scope":3710,"src":"3687:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3687:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3708,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"3719:5:15","nodeType":"VariableDeclaration","scope":3710,"src":"3711:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"3711:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3610:120:15"},"src":"3596:135:15"},{"anonymous":false,"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"3737:113:15","text":" @dev Emitted when batch update in  'batchSubmitRewards'\n @param _newBatchId new batchId."},"eventSelector":"9e5aedd489785d05ba086064386f2e75b3e497d3dc00a54ed1c78bfc50a3953f","id":3715,"name":"BatchSubmitReward","nameLocation":"3861:17:15","nodeType":"EventDefinition","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"indexed":false,"mutability":"mutable","name":"_newBatchId","nameLocation":"3887:11:15","nodeType":"VariableDeclaration","scope":3715,"src":"3879:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"3879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3878:21:15"},"src":"3855:45:15"},{"anonymous":false,"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"3906:413:15","text":" @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param oldSigner oldSigner old address of the sequencer.\n @param newSigner newSigner new address of the sequencer.\n @param signerPubkey signerPubkey public key of the sequencer."},"eventSelector":"086044c0612a8c965d4cccd907f0d588e40ad68438bd4c1274cac60f4c3a9d1f","id":3728,"name":"SignerChange","nameLocation":"4330:12:15","nodeType":"EventDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"4368:11:15","nodeType":"VariableDeclaration","scope":3728,"src":"4352:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4352:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3720,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"4397:5:15","nodeType":"VariableDeclaration","scope":3728,"src":"4389:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3722,"indexed":true,"mutability":"mutable","name":"oldSigner","nameLocation":"4428:9:15","nodeType":"VariableDeclaration","scope":3728,"src":"4412:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3721,"name":"address","nodeType":"ElementaryTypeName","src":"4412:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3724,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"4463:9:15","nodeType":"VariableDeclaration","scope":3728,"src":"4447:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3723,"name":"address","nodeType":"ElementaryTypeName","src":"4447:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3726,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"4488:12:15","nodeType":"VariableDeclaration","scope":3728,"src":"4482:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3725,"name":"bytes","nodeType":"ElementaryTypeName","src":"4482:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4342:164:15"},"src":"4324:183:15"},{"functionSelector":"1badded5","id":3743,"implemented":false,"kind":"function","modifiers":[],"name":"newSequencer","nameLocation":"4522:12:15","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"_id","nameLocation":"4552:3:15","nodeType":"VariableDeclaration","scope":3743,"src":"4544:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4544:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"_owner","nameLocation":"4573:6:15","nodeType":"VariableDeclaration","scope":3743,"src":"4565:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3731,"name":"address","nodeType":"ElementaryTypeName","src":"4565:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"_signer","nameLocation":"4597:7:15","nodeType":"VariableDeclaration","scope":3743,"src":"4589:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3733,"name":"address","nodeType":"ElementaryTypeName","src":"4589:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"_amount","nameLocation":"4622:7:15","nodeType":"VariableDeclaration","scope":3743,"src":"4614:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"4614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3738,"mutability":"mutable","name":"_batchId","nameLocation":"4647:8:15","nodeType":"VariableDeclaration","scope":3743,"src":"4639:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"4639:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"_signerPubkey","nameLocation":"4680:13:15","nodeType":"VariableDeclaration","scope":3743,"src":"4665:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3739,"name":"bytes","nodeType":"ElementaryTypeName","src":"4665:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4534:165:15"},"returnParameters":{"id":3742,"nodeType":"ParameterList","parameters":[],"src":"4708:0:15"},"scope":3817,"src":"4513:196:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2684b8ec","id":3758,"implemented":false,"kind":"function","modifiers":[],"name":"increaseLocked","nameLocation":"4724:14:15","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"_seqId","nameLocation":"4756:6:15","nodeType":"VariableDeclaration","scope":3758,"src":"4748:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"_nonce","nameLocation":"4780:6:15","nodeType":"VariableDeclaration","scope":3758,"src":"4772:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4772:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"_owner","nameLocation":"4804:6:15","nodeType":"VariableDeclaration","scope":3758,"src":"4796:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3748,"name":"address","nodeType":"ElementaryTypeName","src":"4796:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"_locked","nameLocation":"4828:7:15","nodeType":"VariableDeclaration","scope":3758,"src":"4820:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"_incoming","nameLocation":"4853:9:15","nodeType":"VariableDeclaration","scope":3758,"src":"4845:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4845:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"_fromReward","nameLocation":"4880:11:15","nodeType":"VariableDeclaration","scope":3758,"src":"4872:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4738:159:15"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[],"src":"4906:0:15"},"scope":3817,"src":"4715:192:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2243069c","id":3770,"implemented":false,"kind":"function","modifiers":[],"name":"initializeUnlock","nameLocation":"4922:16:15","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"_seqId","nameLocation":"4956:6:15","nodeType":"VariableDeclaration","scope":3770,"src":"4948:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"4948:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"_reward","nameLocation":"4980:7:15","nodeType":"VariableDeclaration","scope":3770,"src":"4972:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"_l2gas","nameLocation":"5004:6:15","nodeType":"VariableDeclaration","scope":3770,"src":"4997:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3763,"name":"uint32","nodeType":"ElementaryTypeName","src":"4997:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"_seq","nameLocation":"5054:4:15","nodeType":"VariableDeclaration","scope":3770,"src":"5020:38:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$3993_calldata_ptr","typeString":"struct ISequencerInfo.Sequencer"},"typeName":{"id":3766,"nodeType":"UserDefinedTypeName","pathNode":{"id":3765,"name":"ISequencerInfo.Sequencer","nameLocations":["5020:14:15","5035:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":3993,"src":"5020:24:15"},"referencedDeclaration":3993,"src":"5020:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$3993_storage_ptr","typeString":"struct ISequencerInfo.Sequencer"}},"visibility":"internal"}],"src":"4938:126:15"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[],"src":"5081:0:15"},"scope":3817,"src":"4913:169:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"528ed12a","id":3785,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeUnlock","nameLocation":"5097:14:15","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"_owner","nameLocation":"5129:6:15","nodeType":"VariableDeclaration","scope":3785,"src":"5121:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"5121:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"_seqId","nameLocation":"5153:6:15","nodeType":"VariableDeclaration","scope":3785,"src":"5145:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"_amount","nameLocation":"5177:7:15","nodeType":"VariableDeclaration","scope":3785,"src":"5169:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5169:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"_reward","nameLocation":"5202:7:15","nodeType":"VariableDeclaration","scope":3785,"src":"5194:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5194:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"_recipient","nameLocation":"5227:10:15","nodeType":"VariableDeclaration","scope":3785,"src":"5219:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3779,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"_l2gas","nameLocation":"5254:6:15","nodeType":"VariableDeclaration","scope":3785,"src":"5247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3781,"name":"uint32","nodeType":"ElementaryTypeName","src":"5247:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5111:155:15"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[],"src":"5283:0:15"},"scope":3817,"src":"5088:196:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5d7878a8","id":3796,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateReward","nameLocation":"5299:15:15","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"_seqId","nameLocation":"5332:6:15","nodeType":"VariableDeclaration","scope":3796,"src":"5324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"_amount","nameLocation":"5356:7:15","nodeType":"VariableDeclaration","scope":3796,"src":"5348:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"5348:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"_recipient","nameLocation":"5381:10:15","nodeType":"VariableDeclaration","scope":3796,"src":"5373:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3790,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"_l2gas","nameLocation":"5408:6:15","nodeType":"VariableDeclaration","scope":3796,"src":"5401:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3792,"name":"uint32","nodeType":"ElementaryTypeName","src":"5401:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5314:106:15"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"5437:0:15"},"scope":3817,"src":"5290:148:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e3bcd27c","id":3803,"implemented":false,"kind":"function","modifiers":[],"name":"distributeReward","nameLocation":"5453:16:15","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"_batchId","nameLocation":"5478:8:15","nodeType":"VariableDeclaration","scope":3803,"src":"5470:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"5470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"_totalReward","nameLocation":"5496:12:15","nodeType":"VariableDeclaration","scope":3803,"src":"5488:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"5488:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5469:40:15"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[],"src":"5518:0:15"},"scope":3817,"src":"5444:75:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3285702","id":3816,"implemented":false,"kind":"function","modifiers":[],"name":"logSignerChange","nameLocation":"5534:15:15","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"sequencerId","nameLocation":"5567:11:15","nodeType":"VariableDeclaration","scope":3816,"src":"5559:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"5559:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"oldSigner","nameLocation":"5596:9:15","nodeType":"VariableDeclaration","scope":3816,"src":"5588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"5588:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"newSigner","nameLocation":"5623:9:15","nodeType":"VariableDeclaration","scope":3816,"src":"5615:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"nonce","nameLocation":"5650:5:15","nodeType":"VariableDeclaration","scope":3816,"src":"5642:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"signerPubkey","nameLocation":"5680:12:15","nodeType":"VariableDeclaration","scope":3816,"src":"5665:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3812,"name":"bytes","nodeType":"ElementaryTypeName","src":"5665:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5549:149:15"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[],"src":"5707:0:15"},"scope":3817,"src":"5525:183:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3818,"src":"111:5599:15","usedErrors":[],"usedEvents":[3626,3631,3636,3653,3662,3671,3682,3699,3710,3715,3728]}],"src":"32:5678:15"},"id":15},"interface/ILockingPool.sol":{"ast":{"absolutePath":"interface/ILockingPool.sol","exportedSymbols":{"ILockingInfo":[3817],"ILockingPool":[3940],"ISequencerInfo":[4022]},"id":3941,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3819,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"45:23:16"},{"absolutePath":"interface/ILockingInfo.sol","file":"./ILockingInfo.sol","id":3820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3941,"sourceUnit":3818,"src":"70:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":3821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3941,"sourceUnit":4023,"src":"99:30:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3822,"name":"ISequencerInfo","nameLocations":["157:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"157:14:16"},"id":3823,"nodeType":"InheritanceSpecifier","src":"157:14:16"}],"canonicalName":"ILockingPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3940,"linearizedBaseContracts":[3940,4022],"name":"ILockingPool","nameLocation":"141:12:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILockingPool.SequencerData","id":3844,"members":[{"constant":false,"id":3825,"mutability":"mutable","name":"amount","nameLocation":"217:6:16","nodeType":"VariableDeclaration","scope":3844,"src":"209:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"reward","nameLocation":"269:6:16","nodeType":"VariableDeclaration","scope":3844,"src":"261:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"activationBatch","nameLocation":"343:15:16","nodeType":"VariableDeclaration","scope":3844,"src":"335:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"updatedBatch","nameLocation":"409:12:16","nodeType":"VariableDeclaration","scope":3844,"src":"401:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"deactivationBatch","nameLocation":"471:17:16","nodeType":"VariableDeclaration","scope":3844,"src":"463:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"deactivationTime","nameLocation":"541:16:16","nodeType":"VariableDeclaration","scope":3844,"src":"533:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"611:15:16","nodeType":"VariableDeclaration","scope":3844,"src":"603:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"nonce","nameLocation":"748:5:16","nodeType":"VariableDeclaration","scope":3844,"src":"740:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"owner","nameLocation":"868:5:16","nodeType":"VariableDeclaration","scope":3844,"src":"860:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"signer","nameLocation":"989:6:16","nodeType":"VariableDeclaration","scope":3844,"src":"981:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SequencerData","nameLocation":"185:13:16","nodeType":"StructDefinition","scope":3940,"src":"178:943:16","visibility":"public"},{"functionSelector":"af70cba5","id":3853,"implemented":false,"kind":"function","modifiers":[],"name":"lockFor","nameLocation":"1136:7:16","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"_signer","nameLocation":"1152:7:16","nodeType":"VariableDeclaration","scope":3853,"src":"1144:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3845,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"_amount","nameLocation":"1169:7:16","nodeType":"VariableDeclaration","scope":3853,"src":"1161:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1193:13:16","nodeType":"VariableDeclaration","scope":3853,"src":"1178:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3849,"name":"bytes","nodeType":"ElementaryTypeName","src":"1178:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1143:64:16"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"1216:0:16"},"scope":3940,"src":"1127:90:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9ad42030","id":3864,"implemented":false,"kind":"function","modifiers":[],"name":"lockWithRewardRecipient","nameLocation":"1231:23:16","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"_signer","nameLocation":"1263:7:16","nodeType":"VariableDeclaration","scope":3864,"src":"1255:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"_rewardRecipient","nameLocation":"1280:16:16","nodeType":"VariableDeclaration","scope":3864,"src":"1272:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"1272:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"_amount","nameLocation":"1306:7:16","nodeType":"VariableDeclaration","scope":3864,"src":"1298:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1330:13:16","nodeType":"VariableDeclaration","scope":3864,"src":"1315:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3860,"name":"bytes","nodeType":"ElementaryTypeName","src":"1315:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1254:90:16"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[],"src":"1353:0:16"},"scope":3940,"src":"1222:132:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"015bb180","id":3873,"implemented":false,"kind":"function","modifiers":[],"name":"relock","nameLocation":"1368:6:16","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"_seqId","nameLocation":"1383:6:16","nodeType":"VariableDeclaration","scope":3873,"src":"1375:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"_amount","nameLocation":"1399:7:16","nodeType":"VariableDeclaration","scope":3873,"src":"1391:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"_lockReward","nameLocation":"1413:11:16","nodeType":"VariableDeclaration","scope":3873,"src":"1408:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3869,"name":"bool","nodeType":"ElementaryTypeName","src":"1408:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1374:51:16"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[],"src":"1434:0:16"},"scope":3940,"src":"1359:76:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"17396687","id":3880,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawRewards","nameLocation":"1449:15:16","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"_seqId","nameLocation":"1473:6:16","nodeType":"VariableDeclaration","scope":3880,"src":"1465:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"_l2Gas","nameLocation":"1488:6:16","nodeType":"VariableDeclaration","scope":3880,"src":"1481:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3876,"name":"uint32","nodeType":"ElementaryTypeName","src":"1481:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1464:31:16"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[],"src":"1504:0:16"},"scope":3940,"src":"1440:65:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"262c0e66","id":3887,"implemented":false,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"1519:6:16","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"_seqId","nameLocation":"1535:6:16","nodeType":"VariableDeclaration","scope":3887,"src":"1527:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"_l2Gas","nameLocation":"1550:6:16","nodeType":"VariableDeclaration","scope":3887,"src":"1543:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3883,"name":"uint32","nodeType":"ElementaryTypeName","src":"1543:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1525:32:16"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"1574:0:16"},"scope":3940,"src":"1510:65:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"8ddc74de","id":3894,"implemented":false,"kind":"function","modifiers":[],"name":"unlockClaim","nameLocation":"1589:11:16","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"_seqId","nameLocation":"1609:6:16","nodeType":"VariableDeclaration","scope":3894,"src":"1601:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"_l2Gas","nameLocation":"1624:6:16","nodeType":"VariableDeclaration","scope":3894,"src":"1617:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3890,"name":"uint32","nodeType":"ElementaryTypeName","src":"1617:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1600:31:16"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[],"src":"1648:0:16"},"scope":3940,"src":"1580:69:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e2fdcc17","id":3900,"implemented":false,"kind":"function","modifiers":[],"name":"escrow","nameLocation":"1663:6:16","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[],"src":"1669:2:16"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3900,"src":"1695:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"},"typeName":{"id":3897,"nodeType":"UserDefinedTypeName","pathNode":{"id":3896,"name":"ILockingInfo","nameLocations":["1695:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3817,"src":"1695:12:16"},"referencedDeclaration":3817,"src":"1695:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3817","typeString":"contract ILockingInfo"}},"visibility":"internal"}],"src":"1694:14:16"},"scope":3940,"src":"1654:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6ba7ccff","id":3908,"implemented":false,"kind":"function","modifiers":[],"name":"sequencers","nameLocation":"1723:10:16","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"seqId","nameLocation":"1742:5:16","nodeType":"VariableDeclaration","scope":3908,"src":"1734:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1733:15:16"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3908,"src":"1772:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":3905,"nodeType":"UserDefinedTypeName","pathNode":{"id":3904,"name":"SequencerData","nameLocations":["1772:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"1772:13:16"},"referencedDeclaration":3844,"src":"1772:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3844_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"src":"1771:22:16"},"scope":3940,"src":"1714:80:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"beb26755","id":3915,"implemented":false,"kind":"function","modifiers":[],"name":"seqSigners","nameLocation":"1808:10:16","nodeType":"FunctionDefinition","parameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"signer","nameLocation":"1827:6:16","nodeType":"VariableDeclaration","scope":3915,"src":"1819:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1818:16:16"},"returnParameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"seqId","nameLocation":"1866:5:16","nodeType":"VariableDeclaration","scope":3915,"src":"1858:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1857:15:16"},"scope":3940,"src":"1799:74:16","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"1879:162:16","text":" @dev Emitted when WITHDRAWAL_DELAY is updated.\n @param _cur current withdraw delay time\n @param _prev previours withdraw delay time"},"eventSelector":"08cb0bf599c925a6240976039d9d4d3201d88d2ba83703b890049356cdbb67e6","id":3922,"name":"WithrawDelayTimeChange","nameLocation":"2052:22:16","nodeType":"EventDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"indexed":false,"mutability":"mutable","name":"_cur","nameLocation":"2083:4:16","nodeType":"VariableDeclaration","scope":3922,"src":"2075:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"indexed":false,"mutability":"mutable","name":"_prev","nameLocation":"2097:5:16","nodeType":"VariableDeclaration","scope":3922,"src":"2089:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:29:16"},"src":"2046:58:16"},{"anonymous":false,"documentation":{"id":3923,"nodeType":"StructuredDocumentation","src":"2110:172:16","text":" @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n @param newReward new block reward\n @param oldReward  old block reward"},"eventSelector":"f67f33e8589d3ea0356303c0f9a8e764873692159f777ff79e4fc523d389dfcd","id":3929,"name":"RewardUpdate","nameLocation":"2293:12:16","nodeType":"EventDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"indexed":false,"mutability":"mutable","name":"newReward","nameLocation":"2314:9:16","nodeType":"VariableDeclaration","scope":3929,"src":"2306:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3927,"indexed":false,"mutability":"mutable","name":"oldReward","nameLocation":"2333:9:16","nodeType":"VariableDeclaration","scope":3929,"src":"2325:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2305:38:16"},"src":"2287:57:16"},{"anonymous":false,"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"2350:106:16","text":" @dev Emitted when mpc address update in 'UpdateMpc'\n @param _newMpc new min lock."},"eventSelector":"c6759872346bc2093e270f2fa00d99d7bcdde60a410a3e9956b34196d42fee76","id":3934,"name":"UpdateMpc","nameLocation":"2467:9:16","nodeType":"EventDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"indexed":false,"mutability":"mutable","name":"_newMpc","nameLocation":"2485:7:16","nodeType":"VariableDeclaration","scope":3934,"src":"2477:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3931,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2476:17:16"},"src":"2461:33:16"},{"anonymous":false,"documentation":{"id":3935,"nodeType":"StructuredDocumentation","src":"2500:99:16","text":" @dev Emitted when SignerUpdateThrottle is updated\n @param _n new min value"},"eventSelector":"e58685f6b78e6d567d2ed9d7c5efb779c4cd91c63c76763a0e3204a5671f4705","id":3939,"name":"SetSignerUpdateThrottle","nameLocation":"2610:23:16","nodeType":"EventDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"indexed":false,"mutability":"mutable","name":"_n","nameLocation":"2642:2:16","nodeType":"VariableDeclaration","scope":3939,"src":"2634:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2633:12:16"},"src":"2604:42:16"}],"scope":3941,"src":"131:2517:16","usedErrors":[3944,3946,3948,3950,3952,3954,3956,3958,3960],"usedEvents":[3922,3929,3934,3939,4000,4007,4014]}],"src":"45:2603:16"},"id":16},"interface/ISequencerInfo.sol":{"ast":{"absolutePath":"interface/ISequencerInfo.sol","exportedSymbols":{"ISequencerInfo":[4022]},"id":4023,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3942,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ISequencerInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4022,"linearizedBaseContracts":[4022],"name":"ISequencerInfo","nameLocation":"67:14:17","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4e1fb3bc","id":3944,"name":"OwnedSequencer","nameLocation":"94:14:17","nodeType":"ErrorDefinition","parameters":{"id":3943,"nodeType":"ParameterList","parameters":[],"src":"108:2:17"},"src":"88:23:17"},{"errorSelector":"b5013d2b","id":3946,"name":"SignerExisted","nameLocation":"122:13:17","nodeType":"ErrorDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[],"src":"135:2:17"},"src":"116:22:17"},{"errorSelector":"2f0edabe","id":3948,"name":"NoSuchSeq","nameLocation":"149:9:17","nodeType":"ErrorDefinition","parameters":{"id":3947,"nodeType":"ParameterList","parameters":[],"src":"158:2:17"},"src":"143:18:17"},{"errorSelector":"e99d5ac5","id":3950,"name":"NullAddress","nameLocation":"172:11:17","nodeType":"ErrorDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[],"src":"183:2:17"},"src":"166:20:17"},{"errorSelector":"c4946571","id":3952,"name":"SeqNotActive","nameLocation":"197:12:17","nodeType":"ErrorDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[],"src":"209:2:17"},"src":"191:21:17"},{"errorSelector":"a91da8ff","id":3954,"name":"NotSeqOwner","nameLocation":"223:11:17","nodeType":"ErrorDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[],"src":"234:2:17"},"src":"217:20:17"},{"errorSelector":"6b95264b","id":3956,"name":"NotSeqSigner","nameLocation":"248:12:17","nodeType":"ErrorDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[],"src":"260:2:17"},"src":"242:21:17"},{"errorSelector":"c4fc1dcc","id":3958,"name":"NoRewardRecipient","nameLocation":"274:17:17","nodeType":"ErrorDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[],"src":"291:2:17"},"src":"268:26:17"},{"errorSelector":"584a7938","id":3960,"name":"NotWhitelisted","nameLocation":"305:14:17","nodeType":"ErrorDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[],"src":"319:2:17"},"src":"299:23:17"},{"canonicalName":"ISequencerInfo.Status","id":3965,"members":[{"id":3961,"name":"Unavailabe","nameLocation":"378:10:17","nodeType":"EnumValue","src":"378:10:17"},{"id":3962,"name":"Inactive","nameLocation":"431:8:17","nodeType":"EnumValue","src":"431:8:17"},{"id":3963,"name":"Active","nameLocation":"510:6:17","nodeType":"EnumValue","src":"510:6:17"},{"id":3964,"name":"Unlocked","nameLocation":"590:8:17","nodeType":"EnumValue","src":"590:8:17"}],"name":"Status","nameLocation":"361:6:17","nodeType":"EnumDefinition","src":"356:335:17"},{"canonicalName":"ISequencerInfo.Sequencer","id":3993,"members":[{"constant":false,"id":3967,"mutability":"mutable","name":"amount","nameLocation":"732:6:17","nodeType":"VariableDeclaration","scope":3993,"src":"724:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"reward","nameLocation":"784:6:17","nodeType":"VariableDeclaration","scope":3993,"src":"776:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"activationBatch","nameLocation":"858:15:17","nodeType":"VariableDeclaration","scope":3993,"src":"850:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"updatedBatch","nameLocation":"924:12:17","nodeType":"VariableDeclaration","scope":3993,"src":"916:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"deactivationBatch","nameLocation":"986:17:17","nodeType":"VariableDeclaration","scope":3993,"src":"978:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"deactivationTime","nameLocation":"1056:16:17","nodeType":"VariableDeclaration","scope":3993,"src":"1048:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"1126:15:17","nodeType":"VariableDeclaration","scope":3993,"src":"1118:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"nonce","nameLocation":"1263:5:17","nodeType":"VariableDeclaration","scope":3993,"src":"1255:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1255:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"owner","nameLocation":"1383:5:17","nodeType":"VariableDeclaration","scope":3993,"src":"1375:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3982,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"signer","nameLocation":"1504:6:17","nodeType":"VariableDeclaration","scope":3993,"src":"1496:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"pubkey","nameLocation":"1645:6:17","nodeType":"VariableDeclaration","scope":3993,"src":"1639:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3986,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"rewardRecipient","nameLocation":"1696:15:17","nodeType":"VariableDeclaration","scope":3993,"src":"1688:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"status","nameLocation":"1768:6:17","nodeType":"VariableDeclaration","scope":3993,"src":"1761:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3965","typeString":"enum ISequencerInfo.Status"},"typeName":{"id":3991,"nodeType":"UserDefinedTypeName","pathNode":{"id":3990,"name":"Status","nameLocations":["1761:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3965,"src":"1761:6:17"},"referencedDeclaration":3965,"src":"1761:6:17","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3965","typeString":"enum ISequencerInfo.Status"}},"visibility":"internal"}],"name":"Sequencer","nameLocation":"704:9:17","nodeType":"StructDefinition","scope":4022,"src":"697:1104:17","visibility":"public"},{"anonymous":false,"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"1807:150:17","text":" @dev Emitted if owner call 'setWhitelist'\n @param _user the address who can lock token\n @param _yes white address state"},"eventSelector":"f6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb","id":4000,"name":"SetWhitelist","nameLocation":"1968:12:17","nodeType":"EventDefinition","parameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"indexed":false,"mutability":"mutable","name":"_user","nameLocation":"1989:5:17","nodeType":"VariableDeclaration","scope":4000,"src":"1981:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3995,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3998,"indexed":false,"mutability":"mutable","name":"_yes","nameLocation":"2001:4:17","nodeType":"VariableDeclaration","scope":4000,"src":"1996:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3997,"name":"bool","nodeType":"ElementaryTypeName","src":"1996:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1980:26:17"},"src":"1962:45:17"},{"anonymous":false,"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"2013:196:17","text":" @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n @param _seqId the sequencerId\n @param _recipient the address receive reward token"},"eventSelector":"357bb123cabaf224688e3d8de5feb37d685dc3a27012a7bce1201c49bc369cb6","id":4007,"name":"SequencerRewardRecipientChanged","nameLocation":"2220:31:17","nodeType":"EventDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2260:6:17","nodeType":"VariableDeclaration","scope":4007,"src":"2252:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4005,"indexed":false,"mutability":"mutable","name":"_recipient","nameLocation":"2276:10:17","nodeType":"VariableDeclaration","scope":4007,"src":"2268:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2251:36:17"},"src":"2214:74:17"},{"anonymous":false,"documentation":{"id":4008,"nodeType":"StructuredDocumentation","src":"2294:141:17","text":" @dev Emitted when sequencer owner is changed\n @param _seqId the sequencerId\n @param _owner the sequencer owner"},"eventSelector":"4078101d3657bf2f1ee46f64d5c94266d244d71bb0daa460336d3d6f11c9a4ac","id":4014,"name":"SequencerOwnerChanged","nameLocation":"2446:21:17","nodeType":"EventDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2476:6:17","nodeType":"VariableDeclaration","scope":4014,"src":"2468:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4012,"indexed":false,"mutability":"mutable","name":"_owner","nameLocation":"2492:6:17","nodeType":"VariableDeclaration","scope":4014,"src":"2484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4011,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2467:32:17"},"src":"2440:60:17"},{"functionSelector":"169abefc","id":4021,"implemented":false,"kind":"function","modifiers":[],"name":"seqOwners","nameLocation":"2515:9:17","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"owner","nameLocation":"2533:5:17","nodeType":"VariableDeclaration","scope":4021,"src":"2525:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2524:15:17"},"returnParameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"seqId","nameLocation":"2566:5:17","nodeType":"VariableDeclaration","scope":4021,"src":"2558:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2557:15:17"},"scope":4022,"src":"2506:67:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4023,"src":"57:2518:17","usedErrors":[3944,3946,3948,3950,3952,3954,3956,3958,3960],"usedEvents":[4000,4007,4014]}],"src":"32:2543:17"},"id":17},"interface/IVeMetisMinter.sol":{"ast":{"absolutePath":"interface/IVeMetisMinter.sol","exportedSymbols":{"IVeMetisMinter":[4042]},"id":4043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4024,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"31:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IVeMetisMinter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4042,"linearizedBaseContracts":[4042],"name":"IVeMetisMinter","nameLocation":"66:14:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":4031,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"96:4:18","nodeType":"FunctionDefinition","parameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"user","nameLocation":"109:4:18","nodeType":"VariableDeclaration","scope":4031,"src":"101:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4025,"name":"address","nodeType":"ElementaryTypeName","src":"101:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4028,"mutability":"mutable","name":"amount","nameLocation":"123:6:18","nodeType":"VariableDeclaration","scope":4031,"src":"115:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:30:18"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[],"src":"139:0:18"},"scope":4042,"src":"87:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eb82afb3","id":4036,"implemented":false,"kind":"function","modifiers":[],"name":"mintFromL1","nameLocation":"155:10:18","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"amount","nameLocation":"174:6:18","nodeType":"VariableDeclaration","scope":4036,"src":"166:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"166:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165:16:18"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[],"src":"190:0:18"},"scope":4042,"src":"146:45:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ce40eb30","id":4041,"implemented":false,"kind":"function","modifiers":[],"name":"depositToL1Dealer","nameLocation":"206:17:18","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"amount","nameLocation":"232:6:18","nodeType":"VariableDeclaration","scope":4041,"src":"224:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"223:16:18"},"returnParameters":{"id":4040,"nodeType":"ParameterList","parameters":[],"src":"256:0:18"},"scope":4042,"src":"197:60:18","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4043,"src":"56:203:18","usedErrors":[],"usedEvents":[]}],"src":"31:228:18"},"id":18}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9b8d33a0960eae279bdafd20e3bc0f794ce08bcddbc5af27cb5987198ad1c2a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB8 0xD3 GASPRICE MULMOD PUSH1 0xEA 0xE2 PUSH26 0xBDAFD20E3BC0F794CE08BCDDBC5AF27CB5987198AD1C2A64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"449:6273:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9b8d33a0960eae279bdafd20e3bc0f794ce08bcddbc5af27cb5987198ad1c2a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB8 0xD3 GASPRICE MULMOD PUSH1 0xEA 0xE2 PUSH26 0xBDAFD20E3BC0F794CE08BCDDBC5AF27CB5987198AD1C2A64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"449:6273:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"BeaconProxy":{"abi":[{"inputs":[{"internalType":"address","name":"beacon","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"events":{"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_866":{"entryPoint":null,"id":866,"parameterSlots":2,"returnSlots":0},"@_checkNonPayable_796":{"entryPoint":912,"id":796,"parameterSlots":0,"returnSlots":0},"@_revert_1231":{"entryPoint":1132,"id":1231,"parameterSlots":1,"returnSlots":0},"@_setBeacon_744":{"entryPoint":355,"id":744,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1151":{"entryPoint":774,"id":1151,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1264":{"entryPoint":973,"id":1264,"parameterSlots":1,"returnSlots":1},"@upgradeBeaconToAndCall_782":{"entryPoint":112,"id":782,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1191":{"entryPoint":983,"id":1191,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1556,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1820,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1438,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1201,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1847,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1858,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1253,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1221,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1514,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1342,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1315,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1320,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1216,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1211,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1325,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1271,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5498:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"379:81:19","statements":[{"nodeType":"YulAssignment","src":"389:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:19"},"nodeType":"YulFunctionCall","src":"400:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:19","type":""}],"src":"334:126:19"},{"body":{"nodeType":"YulBlock","src":"511:51:19","statements":[{"nodeType":"YulAssignment","src":"521:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:19"},"nodeType":"YulFunctionCall","src":"532:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:19","type":""}],"src":"466:96:19"},{"body":{"nodeType":"YulBlock","src":"611:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:19"},"nodeType":"YulFunctionCall","src":"670:12:19"},"nodeType":"YulExpressionStatement","src":"670:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:19"},"nodeType":"YulFunctionCall","src":"641:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:19"},"nodeType":"YulFunctionCall","src":"631:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:19"},"nodeType":"YulFunctionCall","src":"624:43:19"},"nodeType":"YulIf","src":"621:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"568:122:19"},{"body":{"nodeType":"YulBlock","src":"759:80:19","statements":[{"nodeType":"YulAssignment","src":"769:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:19"},"nodeType":"YulFunctionCall","src":"778:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:19"},"nodeType":"YulFunctionCall","src":"800:33:19"},"nodeType":"YulExpressionStatement","src":"800:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:19","type":""}],"src":"696:143:19"},{"body":{"nodeType":"YulBlock","src":"934:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:19"},"nodeType":"YulFunctionCall","src":"944:12:19"},"nodeType":"YulExpressionStatement","src":"944:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:19"},{"body":{"nodeType":"YulBlock","src":"1057:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:19"},"nodeType":"YulFunctionCall","src":"1067:12:19"},"nodeType":"YulExpressionStatement","src":"1067:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:19"},{"body":{"nodeType":"YulBlock","src":"1139:54:19","statements":[{"nodeType":"YulAssignment","src":"1149:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:19"},"nodeType":"YulFunctionCall","src":"1163:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:19"},"nodeType":"YulFunctionCall","src":"1179:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:19"},"nodeType":"YulFunctionCall","src":"1159:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:19","type":""}],"src":"1091:102:19"},{"body":{"nodeType":"YulBlock","src":"1227:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:19"},"nodeType":"YulFunctionCall","src":"1237:88:19"},"nodeType":"YulExpressionStatement","src":"1237:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:19"},"nodeType":"YulFunctionCall","src":"1334:15:19"},"nodeType":"YulExpressionStatement","src":"1334:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:19"},"nodeType":"YulFunctionCall","src":"1358:15:19"},"nodeType":"YulExpressionStatement","src":"1358:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:19"},{"body":{"nodeType":"YulBlock","src":"1428:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:19"},"nodeType":"YulFunctionCall","src":"1468:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:19"},"nodeType":"YulFunctionCall","src":"1456:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:19"},"nodeType":"YulFunctionCall","src":"1609:18:19"},"nodeType":"YulExpressionStatement","src":"1609:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:19"},"nodeType":"YulFunctionCall","src":"1547:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:19"},"nodeType":"YulFunctionCall","src":"1583:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:19"},"nodeType":"YulFunctionCall","src":"1544:62:19"},"nodeType":"YulIf","src":"1541:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:19"},"nodeType":"YulFunctionCall","src":"1638:22:19"},"nodeType":"YulExpressionStatement","src":"1638:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:19","type":""}],"src":"1385:281:19"},{"body":{"nodeType":"YulBlock","src":"1713:88:19","statements":[{"nodeType":"YulAssignment","src":"1723:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:19"},"nodeType":"YulFunctionCall","src":"1733:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:19"},"nodeType":"YulFunctionCall","src":"1762:33:19"},"nodeType":"YulExpressionStatement","src":"1762:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:19","type":""}],"src":"1672:129:19"},{"body":{"nodeType":"YulBlock","src":"1873:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"1978:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1980:16:19"},"nodeType":"YulFunctionCall","src":"1980:18:19"},"nodeType":"YulExpressionStatement","src":"1980:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1958:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1947:2:19"},"nodeType":"YulFunctionCall","src":"1947:30:19"},"nodeType":"YulIf","src":"1944:56:19"},{"nodeType":"YulAssignment","src":"2010:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2040:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2018:21:19"},"nodeType":"YulFunctionCall","src":"2018:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2010:4:19"}]},{"nodeType":"YulAssignment","src":"2084:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2096:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:19"},"nodeType":"YulFunctionCall","src":"2092:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2084:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1857:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1868:4:19","type":""}],"src":"1807:307:19"},{"body":{"nodeType":"YulBlock","src":"2182:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2192:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2201:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2196:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2261:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2286:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2291:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:19"},"nodeType":"YulFunctionCall","src":"2282:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2305:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"2310:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2301:3:19"},"nodeType":"YulFunctionCall","src":"2301:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2295:5:19"},"nodeType":"YulFunctionCall","src":"2295:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2275:6:19"},"nodeType":"YulFunctionCall","src":"2275:39:19"},"nodeType":"YulExpressionStatement","src":"2275:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2222:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"2225:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2219:2:19"},"nodeType":"YulFunctionCall","src":"2219:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2233:19:19","statements":[{"nodeType":"YulAssignment","src":"2235:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2244:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"2247:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2240:3:19"},"nodeType":"YulFunctionCall","src":"2240:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2235:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"2215:3:19","statements":[]},"src":"2211:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2344:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2349:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2340:3:19"},"nodeType":"YulFunctionCall","src":"2340:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"2358:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2333:6:19"},"nodeType":"YulFunctionCall","src":"2333:27:19"},"nodeType":"YulExpressionStatement","src":"2333:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2164:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2169:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2174:6:19","type":""}],"src":"2120:246:19"},{"body":{"nodeType":"YulBlock","src":"2466:338:19","statements":[{"nodeType":"YulAssignment","src":"2476:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2542:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2501:40:19"},"nodeType":"YulFunctionCall","src":"2501:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2485:15:19"},"nodeType":"YulFunctionCall","src":"2485:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2476:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"2573:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2559:6:19"},"nodeType":"YulFunctionCall","src":"2559:21:19"},"nodeType":"YulExpressionStatement","src":"2559:21:19"},{"nodeType":"YulVariableDeclaration","src":"2589:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2604:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2611:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2600:3:19"},"nodeType":"YulFunctionCall","src":"2600:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2593:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2654:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2656:77:19"},"nodeType":"YulFunctionCall","src":"2656:79:19"},"nodeType":"YulExpressionStatement","src":"2656:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2635:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2640:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2631:3:19"},"nodeType":"YulFunctionCall","src":"2631:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"2649:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2628:2:19"},"nodeType":"YulFunctionCall","src":"2628:25:19"},"nodeType":"YulIf","src":"2625:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2781:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"2786:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2791:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2746:34:19"},"nodeType":"YulFunctionCall","src":"2746:52:19"},"nodeType":"YulExpressionStatement","src":"2746:52:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2439:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2444:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2452:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2460:5:19","type":""}],"src":"2372:432:19"},{"body":{"nodeType":"YulBlock","src":"2895:281:19","statements":[{"body":{"nodeType":"YulBlock","src":"2944:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2946:77:19"},"nodeType":"YulFunctionCall","src":"2946:79:19"},"nodeType":"YulExpressionStatement","src":"2946:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2923:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2931:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:19"},"nodeType":"YulFunctionCall","src":"2919:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2938:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2915:3:19"},"nodeType":"YulFunctionCall","src":"2915:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2908:6:19"},"nodeType":"YulFunctionCall","src":"2908:35:19"},"nodeType":"YulIf","src":"2905:122:19"},{"nodeType":"YulVariableDeclaration","src":"3036:27:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3056:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3050:5:19"},"nodeType":"YulFunctionCall","src":"3050:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3040:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3072:98:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3143:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3151:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:19"},"nodeType":"YulFunctionCall","src":"3139:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"3158:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"3166:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3081:57:19"},"nodeType":"YulFunctionCall","src":"3081:89:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3072:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2873:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2881:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2889:5:19","type":""}],"src":"2823:353:19"},{"body":{"nodeType":"YulBlock","src":"3285:575:19","statements":[{"body":{"nodeType":"YulBlock","src":"3331:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3333:77:19"},"nodeType":"YulFunctionCall","src":"3333:79:19"},"nodeType":"YulExpressionStatement","src":"3333:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3306:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3315:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3302:3:19"},"nodeType":"YulFunctionCall","src":"3302:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3327:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3298:3:19"},"nodeType":"YulFunctionCall","src":"3298:32:19"},"nodeType":"YulIf","src":"3295:119:19"},{"nodeType":"YulBlock","src":"3424:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3439:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3453:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3443:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3468:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3514:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3525:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:19"},"nodeType":"YulFunctionCall","src":"3510:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3534:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3478:31:19"},"nodeType":"YulFunctionCall","src":"3478:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3468:6:19"}]}]},{"nodeType":"YulBlock","src":"3562:291:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3577:39:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3601:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3612:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3597:3:19"},"nodeType":"YulFunctionCall","src":"3597:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3591:5:19"},"nodeType":"YulFunctionCall","src":"3591:25:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3581:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3663:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3665:77:19"},"nodeType":"YulFunctionCall","src":"3665:79:19"},"nodeType":"YulExpressionStatement","src":"3665:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3635:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3643:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3632:2:19"},"nodeType":"YulFunctionCall","src":"3632:30:19"},"nodeType":"YulIf","src":"3629:117:19"},{"nodeType":"YulAssignment","src":"3760:83:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3815:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3826:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3811:3:19"},"nodeType":"YulFunctionCall","src":"3811:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3835:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3770:40:19"},"nodeType":"YulFunctionCall","src":"3770:73:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3760:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3247:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3258:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3270:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3278:6:19","type":""}],"src":"3182:678:19"},{"body":{"nodeType":"YulBlock","src":"3943:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"3989:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3991:77:19"},"nodeType":"YulFunctionCall","src":"3991:79:19"},"nodeType":"YulExpressionStatement","src":"3991:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3964:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3973:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3960:3:19"},"nodeType":"YulFunctionCall","src":"3960:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3985:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3956:3:19"},"nodeType":"YulFunctionCall","src":"3956:32:19"},"nodeType":"YulIf","src":"3953:119:19"},{"nodeType":"YulBlock","src":"4082:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4097:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4111:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4101:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4126:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4172:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4183:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4168:3:19"},"nodeType":"YulFunctionCall","src":"4168:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4192:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4136:31:19"},"nodeType":"YulFunctionCall","src":"4136:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4126:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3913:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3924:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3936:6:19","type":""}],"src":"3866:351:19"},{"body":{"nodeType":"YulBlock","src":"4288:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4305:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4328:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4310:17:19"},"nodeType":"YulFunctionCall","src":"4310:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4298:6:19"},"nodeType":"YulFunctionCall","src":"4298:37:19"},"nodeType":"YulExpressionStatement","src":"4298:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4276:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4283:3:19","type":""}],"src":"4223:118:19"},{"body":{"nodeType":"YulBlock","src":"4445:124:19","statements":[{"nodeType":"YulAssignment","src":"4455:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4467:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4478:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4463:3:19"},"nodeType":"YulFunctionCall","src":"4463:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4455:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4535:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4548:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4559:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4544:3:19"},"nodeType":"YulFunctionCall","src":"4544:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4491:43:19"},"nodeType":"YulFunctionCall","src":"4491:71:19"},"nodeType":"YulExpressionStatement","src":"4491:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4417:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4429:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4440:4:19","type":""}],"src":"4347:222:19"},{"body":{"nodeType":"YulBlock","src":"4633:40:19","statements":[{"nodeType":"YulAssignment","src":"4644:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4660:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4654:5:19"},"nodeType":"YulFunctionCall","src":"4654:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4644:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4616:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4626:6:19","type":""}],"src":"4575:98:19"},{"body":{"nodeType":"YulBlock","src":"4792:34:19","statements":[{"nodeType":"YulAssignment","src":"4802:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"4817:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4802:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4764:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"4769:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4780:11:19","type":""}],"src":"4679:147:19"},{"body":{"nodeType":"YulBlock","src":"4940:278:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4950:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4996:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4964:31:19"},"nodeType":"YulFunctionCall","src":"4964:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4954:6:19","type":""}]},{"nodeType":"YulAssignment","src":"5011:95:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5094:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5099:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5018:75:19"},"nodeType":"YulFunctionCall","src":"5018:88:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5011:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5154:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5161:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5150:3:19"},"nodeType":"YulFunctionCall","src":"5150:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"5168:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5173:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5115:34:19"},"nodeType":"YulFunctionCall","src":"5115:65:19"},"nodeType":"YulExpressionStatement","src":"5115:65:19"},{"nodeType":"YulAssignment","src":"5189:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5200:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5205:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5196:3:19"},"nodeType":"YulFunctionCall","src":"5196:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5189:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4921:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4928:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4936:3:19","type":""}],"src":"4832:386:19"},{"body":{"nodeType":"YulBlock","src":"5358:137:19","statements":[{"nodeType":"YulAssignment","src":"5369:100:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5456:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"5465:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5376:79:19"},"nodeType":"YulFunctionCall","src":"5376:93:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:19"}]},{"nodeType":"YulAssignment","src":"5479:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"5486:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5479:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5337:3:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5343:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5354:3:19","type":""}],"src":"5224:271:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405260405161096038038061096083398181016040528101906100259190610684565b610035828261007060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610795565b61007f8261016360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a26000815111156101505761014a8273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906106e0565b8261030660201b60201c565b5061015f565b61015e61039060201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036101bf57806040517f64ced0ec0000000000000000000000000000000000000000000000000000000081526004016101b6919061071c565b60405180910390fd5b806101f27fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6103cd60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906106e0565b905060008173ffffffffffffffffffffffffffffffffffffffff163b0361030257806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102f9919061071c565b60405180910390fd5b5050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051610330919061077e565b600060405180830381855af49150503d806000811461036b576040519150601f19603f3d011682016040523d82523d6000602084013e610370565b606091505b50915091506103868583836103d760201b60201c565b9250505092915050565b60003411156103cb576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826103f2576103ed8261046c60201b60201c565b610464565b6000825114801561041a575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561045c57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610453919061071c565b60405180910390fd5b819050610465565b5b9392505050565b60008151111561047f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104c5565b9050919050565b610500816104e5565b811461050b57600080fd5b50565b60008151905061051d816104f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105768261052d565b810181811067ffffffffffffffff821117156105955761059461053e565b5b80604052505050565b60006105a86104b1565b90506105b4828261056d565b919050565b600067ffffffffffffffff8211156105d4576105d361053e565b5b6105dd8261052d565b9050602081019050919050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000610627610622846105b9565b61059e565b90508281526020810184848401111561064357610642610528565b5b61064e8482856105ea565b509392505050565b600082601f83011261066b5761066a610523565b5b815161067b848260208601610614565b91505092915050565b6000806040838503121561069b5761069a6104bb565b5b60006106a98582860161050e565b925050602083015167ffffffffffffffff8111156106ca576106c96104c0565b5b6106d685828601610656565b9150509250929050565b6000602082840312156106f6576106f56104bb565b5b60006107048482850161050e565b91505092915050565b610716816104e5565b82525050565b6000602082019050610731600083018461070d565b92915050565b600081519050919050565b600081905092915050565b600061075882610737565b6107628185610742565b93506107728185602086016105ea565b80840191505092915050565b600061078a828461074d565b915081905092915050565b6080516101b16107af600039600060c701526101b16000f3fe608060405261000c61000e565b005b61001e610019610020565b61009d565b565b600061002a6100c3565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610098919061014e565b905090565b3660008037600080366000845af43d6000803e80600081146100be573d6000f35b3d6000fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b600060208284031215610164576101636100eb565b5b600061017284828501610139565b9150509291505056fea2646970667358221220318efb3add371acc6afd6545498a71373c16dc1386e578ed8c02b6ac326dd4ca64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x960 CODESIZE SUB DUP1 PUSH2 0x960 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x70 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x795 JUMP JUMPDEST PUSH2 0x7F DUP3 PUSH2 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x150 JUMPI PUSH2 0x14A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST DUP3 PUSH2 0x306 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x64CED0EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1F2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH1 0x0 SHL PUSH2 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x302 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x370 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x386 DUP6 DUP4 DUP4 PUSH2 0x3D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3F2 JUMPI PUSH2 0x3ED DUP3 PUSH2 0x46C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x41A JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x45C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x465 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x47F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x51D DUP2 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x576 DUP3 PUSH2 0x52D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x595 JUMPI PUSH2 0x594 PUSH2 0x53E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B4 DUP3 DUP3 PUSH2 0x56D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x53E JUMP JUMPDEST JUMPDEST PUSH2 0x5DD DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 PUSH2 0x622 DUP5 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x643 JUMPI PUSH2 0x642 PUSH2 0x528 JUMP JUMPDEST JUMPDEST PUSH2 0x64E DUP5 DUP3 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x523 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x67B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x614 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A9 DUP6 DUP3 DUP7 ADD PUSH2 0x50E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x4C0 JUMP JUMPDEST JUMPDEST PUSH2 0x6D6 DUP6 DUP3 DUP7 ADD PUSH2 0x656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP5 DUP3 DUP6 ADD PUSH2 0x50E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x731 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 DUP3 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x762 DUP2 DUP6 PUSH2 0x742 JUMP JUMPDEST SWAP4 POP PUSH2 0x772 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP3 DUP5 PUSH2 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1B1 PUSH2 0x7AF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xC7 ADD MSTORE PUSH2 0x1B1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A PUSH2 0xC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP15 0xFB GASPRICE 0xDD CALLDATACOPY BYTE 0xCC PUSH11 0xFD6545498A71373C16DC13 DUP7 0xE5 PUSH25 0xED8C02B6AC326DD4CA64736F6C634300081400330000000000 ","sourceMap":"1115:1194:5:-:0;;;1772:147;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1837:49;1873:6;1881:4;1837:35;;;:49;;:::i;:::-;1906:6;1896:16;;;;;;;;;;1772:147;;1115:1194;;6076:333:3;6165:21;6176:9;6165:10;;;:21;;:::i;:::-;6216:9;6201:25;;;;;;;;;;;;6255:1;6241:4;:11;:15;6237:166;;;6272:71;6309:9;6301:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6338:4;6272:28;;;:71;;:::i;:::-;;6237:166;;;6374:18;:16;;;:18;;:::i;:::-;6237:166;6076:333;;:::o;5114:437::-;5200:1;5175:9;:21;;;:26;5171:95;;5245:9;5224:31;;;;;;;;;;;:::i;:::-;;;;;;;;5171:95;5324:9;5276:39;4781:66;5303:11;;5276:26;;;:39;;:::i;:::-;:45;;;:57;;;;;;;;;;;;;;;;;;5344:28;5383:9;5375:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5344:66;;5460:1;5424:20;:32;;;:37;5420:125;;5513:20;5484:50;;;;;;;;;;;:::i;:::-;;;;;;;;5420:125;5161:390;5114:437;:::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;;;:55;;:::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:3:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;1684:190:9:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;4625:582:8:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;;;:19;;:::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:19;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:246::-;2201:1;2211:113;2225:6;2222:1;2219:13;2211:113;;;2310:1;2305:3;2301:11;2295:18;2291:1;2286:3;2282:11;2275:39;2247:2;2244:1;2240:10;2235:15;;2211:113;;;2358:1;2349:6;2344:3;2340:16;2333:27;2182:184;2120:246;;;:::o;2372:432::-;2460:5;2485:65;2501:48;2542:6;2501:48;:::i;:::-;2485:65;:::i;:::-;2476:74;;2573:6;2566:5;2559:21;2611:4;2604:5;2600:16;2649:3;2640:6;2635:3;2631:16;2628:25;2625:112;;;2656:79;;:::i;:::-;2625:112;2746:52;2791:6;2786:3;2781;2746:52;:::i;:::-;2466:338;2372:432;;;;;:::o;2823:353::-;2889:5;2938:3;2931:4;2923:6;2919:17;2915:27;2905:122;;2946:79;;:::i;:::-;2905:122;3056:6;3050:13;3081:89;3166:3;3158:6;3151:4;3143:6;3139:17;3081:89;:::i;:::-;3072:98;;2895:281;2823:353;;;;:::o;3182:678::-;3270:6;3278;3327:2;3315:9;3306:7;3302:23;3298:32;3295:119;;;3333:79;;:::i;:::-;3295:119;3453:1;3478:64;3534:7;3525:6;3514:9;3510:22;3478:64;:::i;:::-;3468:74;;3424:128;3612:2;3601:9;3597:18;3591:25;3643:18;3635:6;3632:30;3629:117;;;3665:79;;:::i;:::-;3629:117;3770:73;3835:7;3826:6;3815:9;3811:22;3770:73;:::i;:::-;3760:83;;3562:291;3182:678;;;;;:::o;3866:351::-;3936:6;3985:2;3973:9;3964:7;3960:23;3956:32;3953:119;;;3991:79;;:::i;:::-;3953:119;4111:1;4136:64;4192:7;4183:6;4172:9;4168:22;4136:64;:::i;:::-;4126:74;;4082:128;3866:351;;;;:::o;4223:118::-;4310:24;4328:5;4310:24;:::i;:::-;4305:3;4298:37;4223:118;;:::o;4347:222::-;4440:4;4478:2;4467:9;4463:18;4455:26;;4491:71;4559:1;4548:9;4544:17;4535:6;4491:71;:::i;:::-;4347:222;;;;:::o;4575:98::-;4626:6;4660:5;4654:12;4644:22;;4575:98;;;:::o;4679:147::-;4780:11;4817:3;4802:18;;4679:147;;;;:::o;4832:386::-;4936:3;4964:38;4996:5;4964:38;:::i;:::-;5018:88;5099:6;5094:3;5018:88;:::i;:::-;5011:95;;5115:65;5173:6;5168:3;5161:4;5154:5;5150:16;5115:65;:::i;:::-;5205:6;5200:3;5196:16;5189:23;;4940:278;4832:386;;;;:::o;5224:271::-;5354:3;5376:93;5465:3;5456:6;5376:93;:::i;:::-;5369:100;;5486:3;5479:10;;5224:271;;;;:::o;1115:1194:5:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_832":{"entryPoint":null,"id":832,"parameterSlots":0,"returnSlots":0},"@_delegate_808":{"entryPoint":157,"id":808,"parameterSlots":1,"returnSlots":0},"@_fallback_824":{"entryPoint":14,"id":824,"parameterSlots":0,"returnSlots":0},"@_getBeacon_890":{"entryPoint":195,"id":890,"parameterSlots":0,"returnSlots":1},"@_implementation_881":{"entryPoint":32,"id":881,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":334,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":272,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":240,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":235,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":290,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"379:81:19","statements":[{"nodeType":"YulAssignment","src":"389:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:19"},"nodeType":"YulFunctionCall","src":"400:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:19","type":""}],"src":"334:126:19"},{"body":{"nodeType":"YulBlock","src":"511:51:19","statements":[{"nodeType":"YulAssignment","src":"521:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:19"},"nodeType":"YulFunctionCall","src":"532:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:19","type":""}],"src":"466:96:19"},{"body":{"nodeType":"YulBlock","src":"611:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:19"},"nodeType":"YulFunctionCall","src":"670:12:19"},"nodeType":"YulExpressionStatement","src":"670:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:19"},"nodeType":"YulFunctionCall","src":"641:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:19"},"nodeType":"YulFunctionCall","src":"631:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:19"},"nodeType":"YulFunctionCall","src":"624:43:19"},"nodeType":"YulIf","src":"621:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"568:122:19"},{"body":{"nodeType":"YulBlock","src":"759:80:19","statements":[{"nodeType":"YulAssignment","src":"769:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:19"},"nodeType":"YulFunctionCall","src":"778:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:19"},"nodeType":"YulFunctionCall","src":"800:33:19"},"nodeType":"YulExpressionStatement","src":"800:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:19","type":""}],"src":"696:143:19"},{"body":{"nodeType":"YulBlock","src":"922:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:19"},"nodeType":"YulFunctionCall","src":"970:79:19"},"nodeType":"YulExpressionStatement","src":"970:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:19"},"nodeType":"YulFunctionCall","src":"939:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:19"},"nodeType":"YulFunctionCall","src":"935:32:19"},"nodeType":"YulIf","src":"932:119:19"},{"nodeType":"YulBlock","src":"1061:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:19"},"nodeType":"YulFunctionCall","src":"1147:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:19"},"nodeType":"YulFunctionCall","src":"1115:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:19","type":""}],"src":"845:351:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"846":[{"length":32,"start":199}]},"linkReferences":{},"object":"608060405261000c61000e565b005b61001e610019610020565b61009d565b565b600061002a6100c3565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610098919061014e565b905090565b3660008037600080366000845af43d6000803e80600081146100be573d6000f35b3d6000fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b600060208284031215610164576101636100eb565b5b600061017284828501610139565b9150509291505056fea2646970667358221220318efb3add371acc6afd6545498a71373c16dc1386e578ed8c02b6ac326dd4ca64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A PUSH2 0xC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP15 0xFB GASPRICE 0xDD CALLDATACOPY BYTE 0xCC PUSH11 0xFD6545498A71373C16DC13 DUP7 0xE5 PUSH25 0xED8C02B6AC326DD4CA64736F6C634300081400330000000000 ","sourceMap":"1115:1194:5:-:0;;;2649:11:4;:9;:11::i;:::-;1115:1194:5;2323:83:4;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;2022:138:5:-;2089:7;2123:12;:10;:12::i;:::-;2115:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2108:45;;2022:138;:::o;949:895:4:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;2214:93:5;2267:7;2293;2286:14;;2214:93;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"86600","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_getBeacon()":"infinite","_implementation()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"../ERC1967/ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\\n *\\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\\n * the beacon to not upgrade the implementation maliciously.\\n *\\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\\n * an inconsistent state where the beacon storage slot does not match the beacon address.\\n */\\ncontract BeaconProxy is Proxy {\\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\\n    address private immutable _beacon;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\\n        _beacon = beacon;\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the beacon.\\n     */\\n    function _getBeacon() internal view virtual returns (address) {\\n        return _beacon;\\n    }\\n}\\n\",\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029b12d6db01e6fe8f85382116c8b039b32476054896d2cacb6dd3355d1499aa364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xB1 0x2D PUSH14 0xB01E6FE8F85382116C8B039B3247 PUSH1 0x54 DUP10 PUSH14 0x2CACB6DD3355D1499AA364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029b12d6db01e6fe8f85382116c8b039b32476054896d2cacb6dd3355d1499aa364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xB1 0x2D PUSH14 0xB01E6FE8F85382116C8B039B3247 PUSH1 0x54 DUP10 PUSH14 0x2CACB6DD3355D1499AA364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"195:6066:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca1595973fd439c5bf54ecb399e3bbb86bff8a362f2c39af80e988822322fa2b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA ISZERO SWAP6 SWAP8 EXTCODEHASH 0xD4 CODECOPY 0xC5 0xBF SLOAD 0xEC 0xB3 SWAP10 0xE3 0xBB 0xB8 PUSH12 0xFF8A362F2C39AF80E9888223 0x22 STATICCALL 0x2B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca1595973fd439c5bf54ecb399e3bbb86bff8a362f2c39af80e988822322fa2b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA ISZERO SWAP6 SWAP8 EXTCODEHASH 0xD4 CODECOPY 0xC5 0xBF SLOAD 0xEC 0xB3 SWAP10 0xE3 0xBB 0xB8 PUSH12 0xFF8A362F2C39AF80E9888223 0x22 STATICCALL 0x2B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9332d4b0da81becbc8931c24d2cd33cbff57a93f4d2e609e7f243f8b0d2b8dc64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CALLER 0x2D 0x4B 0xD 0xA8 SHL 0xEC 0xBC DUP10 BALANCE 0xC2 0x4D 0x2C 0xD3 EXTCODECOPY 0xBF CREATE2 PUSH27 0x93F4D2E609E7F243F8B0D2B8DC64736F6C63430008140033000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9332d4b0da81becbc8931c24d2cd33cbff57a93f4d2e609e7f243f8b0d2b8dc64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CALLER 0x2D 0x4B 0xD 0xA8 SHL 0xEC 0xBC DUP10 BALANCE 0xC2 0x4D 0x2C 0xD3 EXTCODECOPY 0xBF CREATE2 PUSH27 0x93F4D2E609E7F243F8B0D2B8DC64736F6C63430008140033000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Dealer.sol":{"Dealer":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldValue","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newValue","type":"uint32"}],"name":"L2GasSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"L2MetisMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"index","type":"uint32"},{"indexed":false,"internalType":"address","name":"agent","type":"address"}],"name":"SequencerAgentAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldValue","type":"address"},{"indexed":true,"internalType":"address","name":"newValue","type":"address"}],"name":"SequencerAgentTemplateSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"index","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"SequencerRelocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"oldValue","type":"bool"},{"indexed":false,"internalType":"bool","name":"newValue","type":"bool"}],"name":"WithdrawRewardsSet","type":"event"},{"inputs":[],"name":"activeSequencerCount","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"activeSequencerIds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addAgent","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_metis","type":"address"},{"internalType":"address","name":"_lockingPool","type":"address"},{"internalType":"address","name":"_l1Bridge","type":"address"},{"internalType":"uint256","name":"_l2ChainId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"address","name":"_l2Minter","type":"address"},{"internalType":"address","name":"_l2RewardDispatcher","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"l2ChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Gas","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Minter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2RewardDispatcher","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"agentId","type":"uint32"},{"internalType":"address","name":"sequencerSigner","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signerPubKey","type":"bytes"}],"name":"lockFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockingInfo","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockingPool","outputs":[{"internalType":"contract ILockingPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"contract ICrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metis","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relock","outputs":[{"internalType":"uint256","name":"totalProcessed","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sequencerAgentCount","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerAgentTemplate","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"sequencerAgents","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"agentId","type":"uint32"},{"internalType":"bool","name":"active","type":"bool"}],"name":"setActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"setL2Gas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_l2GasAddress","type":"address"}],"name":"setL2Minter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sequencerAgentTemplate","type":"address"}],"name":"setSequencerAgentTemplate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_withdrawRewards","type":"bool"}],"name":"setWithdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sumRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"agentId","type":"uint32"}],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"agentId","type":"uint32"}],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdrawRewards","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"L2GasSet(uint32,uint32)":{"params":{"oldValue":"The old L2 gas limit.        "}},"L2MetisMinted(uint256)":{"params":{"amount":"The amount of Metis tokens that have been minted."}},"SequencerAgentAdded(uint32,address)":{"params":{"agent":"address of the agent","index":"index of the agent"}},"SequencerAgentTemplateSet(address,address)":{"params":{"newValue":"The address of the new sequencer agent template.","oldValue":"The address of the old sequencer agent template."}},"SequencerRelocked(uint32,uint256,uint256)":{"params":{"amount":"The amount of Metis tokens that have been added to the lock.","index":"The index of the sequencer agent in the sequencer list.","reward":"The amount of additional rewards that have been locked."}},"WithdrawRewardsSet(bool,bool)":{"params":{"newValue":"The new withdrawRewards.","oldValue":"The old withdrawRewards."}}},"kind":"dev","methods":{"activeSequencerCount()":{"returns":{"_0":"The number of active sequencers."}},"addAgent()":{"returns":{"_0":"The index of the new sequencer agent."}},"implementation()":{"returns":{"_0":"The implementation address"}},"lockFor(uint32,address,uint256,bytes)":{"params":{"agentId":"The index of the sequencer agent.","amount":"The amount of Metis tokens to lock.","sequencerSigner":"The address of the sequencer signer.","signerPubKey":"The public key of the sequencer signer."}},"owner()":{"details":"Returns the address of the current owner."},"relock()":{"details":"The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.","returns":{"totalProcessed":"The total amount of Metis tokens and rewards that have been relocked."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setL2Gas(uint32)":{"details":"The L2 gas limit is used when minting eMetis tokens on Layer 2.","params":{"_l2Gas":"The new L2 gas limit."}},"setSequencerAgentTemplate(address)":{"params":{"_sequencerAgentTemplate":"The address of the new sequencer agent template."}},"setWithdrawRewards(bool)":{"params":{"_withdrawRewards":"The new value of the withdrawRewards flag."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlock(uint32)":{"params":{"agentId":"The index of the sequencer agent."}},"unlockClaim(uint32)":{"params":{"agentId":"The index of the sequencer agent."}}},"title":"Dealer","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50613fe3806100206000396000f3fe608060405260043610620002065760003560e01c80638da5cb5b116200011b578063e597455411620000a3578063efa412d0116200006d578063efa412d014620006f5578063f2fde38b1462000723578063f7cee36a1462000751578063f87b7a3e14620007815762000206565b8063e59745541462000639578063e92d61e51462000669578063e956eaf11462000699578063eb2c579814620006c75762000206565b8063b699ce5f11620000e5578063b699ce5f1462000589578063c53b573d14620005b7578063c7b8981c14620005d9578063d6ae3cd514620006095762000206565b80638da5cb5b14620004cb5780638db8ad8814620004fb5780639e935704146200052b578063af372db7146200055b5762000206565b80633cbb6979116200019f57806367d93c81116200016957806367d93c811462000431578063715018a614620004515780637ca4f8b0146200046b57806385d1e2b8146200049b5762000206565b80633cbb6979146200035d578063457cb586146200038d5780635689141214620003d15780635c60da1b14620004015762000206565b80631abdaf6a11620001e15780631abdaf6a146200028b57806333bec7e714620002cf57806335cd359914620002fd5780633cb747bf146200032d5762000206565b8063080e1e4e146200020b5780631152eb41146200023b5780631221e6a5146200026b575b600080fd5b3480156200021857600080fd5b5062000223620007af565b604051620002329190620026ab565b60405180910390f35b3480156200024857600080fd5b5062000253620007d5565b604051620002629190620026e9565b60405180910390f35b6200028960048036038101906200028391906200274b565b620007e2565b005b3480156200029857600080fd5b50620002b76004803603810190620002b19190620027b8565b620008af565b604051620002c69190620026e9565b60405180910390f35b348015620002dc57600080fd5b50620002fb6004803603810190620002f591906200274b565b620008ea565b005b3480156200030a57600080fd5b50620003156200096b565b604051620003249190620026e9565b60405180910390f35b3480156200033a57600080fd5b506200034562000b9a565b60405162000354919062002855565b60405180910390f35b3480156200036a57600080fd5b506200037562000bc0565b604051620003849190620026e9565b60405180910390f35b3480156200039a57600080fd5b50620003b96004803603810190620003b391906200274b565b62000bd6565b604051620003c89190620026ab565b60405180910390f35b348015620003de57600080fd5b50620003e962000c09565b604051620003f8919062002883565b60405180910390f35b3480156200040e57600080fd5b506200041962000d5e565b604051620004289190620026ab565b60405180910390f35b6200044f60048036038101906200044991906200274b565b62000d87565b005b3480156200045e57600080fd5b506200046962000e60565b005b3480156200047857600080fd5b506200048362000e78565b60405162000492919062002883565b60405180910390f35b348015620004a857600080fd5b50620004b362000e7e565b604051620004c29190620028c5565b60405180910390f35b348015620004d857600080fd5b50620004e362000ea4565b604051620004f29190620026ab565b60405180910390f35b3480156200050857600080fd5b506200051362000ede565b604051620005229190620026ab565b60405180910390f35b3480156200053857600080fd5b506200054362000f02565b604051620005529190620026e9565b60405180910390f35b3480156200056857600080fd5b5062000587600480360381019062000581919062002a75565b62000f18565b005b3480156200059657600080fd5b50620005b56004803603810190620005af919062002b06565b620010b9565b005b620005c162001667565b604051620005d0919062002883565b60405180910390f35b348015620005e657600080fd5b50620005f162001c28565b60405162000600919062002bd6565b60405180910390f35b3480156200061657600080fd5b506200062162001c3b565b60405162000630919062002883565b60405180910390f35b3480156200064657600080fd5b506200065162001c41565b60405162000660919062002c18565b60405180910390f35b3480156200067657600080fd5b506200068162001c67565b604051620006909190620026ab565b60405180910390f35b348015620006a657600080fd5b50620006c56004803603810190620006bf919062002c66565b62001c8d565b005b348015620006d457600080fd5b50620006f36004803603810190620006ed919062002cad565b62001ca7565b005b3480156200070257600080fd5b506200072160048036038101906200071b919062002cdf565b62001d66565b005b3480156200073057600080fd5b506200074f600480360381019062000749919062002cad565b62001ddd565b005b3480156200075e57600080fd5b506200076962001e6a565b60405162000778919062002d36565b60405180910390f35b3480156200078e57600080fd5b50620007ad6004803603810190620007a7919062002cad565b62001e90565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a80549050905090565b620007ec62001ed4565b600860008263ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631221e6a5600c60009054906101000a900463ffffffff166040518263ffffffff1660e01b8152600401620008789190620026e9565b600060405180830381600087803b1580156200089357600080fd5b505af1158015620008a8573d6000803e3d6000fd5b5050505050565b600a8181548110620008c057600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b620008f462001ed4565b6000600c60009054906101000a900463ffffffff16905081600c60006101000a81548163ffffffff021916908363ffffffff1602179055507f4042b09a75e5a67c8cc2a57e00de6d29fb5202b7207afba895eb8b5cc3e2179e81836040516200095f92919062002d53565b60405180910390a15050565b60006200097762001ed4565b600063f8c8765e60e01b30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160240162000a00949392919062002d80565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000308260405162000a719062002658565b62000a7e92919062002e56565b604051809103906000f08015801562000a9b573d6000803e3d6000fd5b5090506000600960009054906101000a900463ffffffff16905081600860008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcdf0e51b92207a6c5cfa485e975b62686da57da9499feafd12185ee26a860d9818360405162000b4692919062002e8a565b60405180910390a16009600081819054906101000a900463ffffffff168092919062000b729062002ee6565b91906101000a81548163ffffffff021916908363ffffffff1602179055505080935050505090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900463ffffffff1681565b60086020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000905060005b600a805490508163ffffffff16101562000d56576000600a8263ffffffff168154811062000c465762000c4562002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690506000600860008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166376d9f95c6040518163ffffffff1660e01b815260040161014060405180830381865afa15801562000d01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d27919062003088565b600001519050808562000d3b9190620030bb565b9450505050808062000d4d9062002ee6565b91505062000c13565b508091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62000d9162001ed4565b600860008263ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367d93c81600c60009054906101000a900463ffffffff166040518263ffffffff1660e01b815260040162000e1d9190620026e9565b600060405180830381600087803b15801562000e3857600080fd5b505af115801562000e4d573d6000803e3d6000fd5b5050505062000e5c8162001f64565b5050565b62000e6a62001ed4565b62000e766000620020ae565b565b600b5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008062000eb162002187565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900463ffffffff1681565b62000f2262001ed4565b6000600860008663ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383866040518463ffffffff1660e01b815260040162000fc793929190620030f6565b6020604051808303816000875af115801562000fe7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200100d91906200314a565b508073ffffffffffffffffffffffffffffffffffffffff1663ce6df54a85600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040518563ffffffff1660e01b81526004016200107194939291906200317c565b600060405180830381600087803b1580156200108c57600080fd5b505af1158015620010a1573d6000803e3d6000fd5b50505050620010b2856001620021af565b5050505050565b6000620010c5620022dc565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015620011145750825b9050600060018367ffffffffffffffff161480156200114a575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801562001159575080155b1562001191576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315620011e25760018560000160086101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16141580156200124d5750600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614155b8015620012875750600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614155b8015620012c15750600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b8015620012fb5750600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b6200133d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620013349062003231565b60405180910390fd5b620013483362002304565b8b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2fdcc176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001438573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200145e919062003298565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508973ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620014ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015109190620032ca565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860058190555087600c60006101000a81548163ffffffff021916908363ffffffff16021790555086600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315620016595760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405162001650919062003353565b60405180910390a15b505050505050505050505050565b600080600a8054905011620016b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620016aa90620033c0565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c0b3e466040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017499190620033e2565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401620017aa9190620026ab565b602060405180830381865afa158015620017c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017ee9190620033e2565b90506000805b600a805490508163ffffffff16101562001bf0576000600a8263ffffffff168154811062001827576200182662002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690506000600860008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166376d9f95c6040518163ffffffff1660e01b815260040161014060405180830381865afa158015620018e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001908919062003088565b905060008082602001518360000151915091508187620019299190620030bb565b965060008982106200193d5760006200194c565b818a6200194b919062003414565b5b905060006200195c828b6200231c565b9050808a6200196c919062003414565b9950600084826200197e9190620030bb565b9050600081036200199757505050505050505062001bda565b808d620019a59190620030bb565b9c506000600c60049054906101000a900460ff1680620019d157508c8286620019cf9190620030bb565b115b9050808015620019e15750600086115b1562001a69578773ffffffffffffffffffffffffffffffffffffffff166356387b91600c60009054906101000a900463ffffffff166040518263ffffffff1660e01b815260040162001a349190620026e9565b600060405180830381600087803b15801562001a4f57600080fd5b505af115801562001a64573d6000803e3d6000fd5b505050505b80158062001a775750600083115b1562001bd057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89856040518363ffffffff1660e01b815260040162001adc9291906200344f565b6020604051808303816000875af115801562001afc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b2291906200314a565b508773ffffffffffffffffffffffffffffffffffffffff1663a98d38f0846040518263ffffffff1660e01b815260040162001b5e919062002883565b600060405180830381600087803b15801562001b7957600080fd5b505af115801562001b8e573d6000803e3d6000fd5b505050507fb8aafdec9bacdc76bfea3c330063c391a2904d4f91e71f97a91534f3c8ce4ab589848860405162001bc7939291906200347c565b60405180910390a15b5050505050505050505b808062001be79062002ee6565b915050620017f4565b50600081111562001c225762001c068162002337565b80600b600082825462001c1a9190620030bb565b925050819055505b50505090565b600c60049054906101000a900460ff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b62001c9762001ed4565b62001ca38282620021af565b5050565b62001cb162001ed4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362001d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001d1a9062003231565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62001d7062001ed4565b6000600c60049054906101000a900460ff16905081600c60046101000a81548160ff0219169083151502179055507fba50596d5d8d3fffda559f307b84b1b0bdba201192d70b393820eab501346b1e818360405162001dd1929190620034b9565b60405180910390a15050565b62001de762001ed4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362001e5c5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162001e539190620026ab565b60405180910390fd5b62001e6781620020ae565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62001ede620024be565b73ffffffffffffffffffffffffffffffffffffffff1662001efe62000ea4565b73ffffffffffffffffffffffffffffffffffffffff161462001f625762001f24620024be565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162001f599190620026ab565b60405180910390fd5b565b600062001f7182620024c6565b905063ffffffff80168163ffffffff161062001fc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001fbb9062003536565b60405180910390fd5b600a6001600a8054905062001fda919062003414565b8154811062001fee5762001fed62002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16600a8263ffffffff168154811062002031576200203062002f17565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550600a80548062002079576200207862003558565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055919050565b6000620020ba62002187565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b8015620022cb5760005b600a805490508163ffffffff16101562002276578263ffffffff16600a8263ffffffff1681548110620021f157620021f062002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff160362002260576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200225790620035d7565b60405180910390fd5b80806200226d9062002ee6565b915050620021b9565b50600a8290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550620022d8565b620022d68262001f64565b505b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6200230e62002566565b6200231981620025a9565b50565b60008183106200232d57816200232f565b825b905092915050565b600063eb82afb360e01b8260405160240162002354919062002883565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344dd5ed634600554600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600c60009054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016200244d9493929190620035f9565b6000604051808303818588803b1580156200246757600080fd5b505af11580156200247c573d6000803e3d6000fd5b50505050507fd644e527c1896057ce642adfbc00f04d6b23d4c2fb30529522184d151dc087dc82604051620024b2919062002883565b60405180910390a15050565b600033905090565b600080600090505b600a805490508163ffffffff16101562002558578263ffffffff16600a8263ffffffff168154811062002506576200250562002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff160362002542578091505062002561565b80806200254f9062002ee6565b915050620024ce565b5063ffffffff90505b919050565b6200257062002636565b620025a7576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b620025b362002566565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620026285760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200261f9190620026ab565b60405180910390fd5b6200263381620020ae565b50565b600062002642620022dc565b60000160089054906101000a900460ff16905090565b610960806200364e83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620026938262002666565b9050919050565b620026a58162002686565b82525050565b6000602082019050620026c260008301846200269a565b92915050565b600063ffffffff82169050919050565b620026e381620026c8565b82525050565b6000602082019050620027006000830184620026d8565b92915050565b6000604051905090565b600080fd5b600080fd5b6200272581620026c8565b81146200273157600080fd5b50565b60008135905062002745816200271a565b92915050565b60006020828403121562002764576200276362002710565b5b6000620027748482850162002734565b91505092915050565b6000819050919050565b62002792816200277d565b81146200279e57600080fd5b50565b600081359050620027b28162002787565b92915050565b600060208284031215620027d157620027d062002710565b5b6000620027e184828501620027a1565b91505092915050565b6000819050919050565b6000620028156200280f620028098462002666565b620027ea565b62002666565b9050919050565b60006200282982620027f4565b9050919050565b60006200283d826200281c565b9050919050565b6200284f8162002830565b82525050565b60006020820190506200286c600083018462002844565b92915050565b6200287d816200277d565b82525050565b60006020820190506200289a600083018462002872565b92915050565b6000620028ad826200281c565b9050919050565b620028bf81620028a0565b82525050565b6000602082019050620028dc6000830184620028b4565b92915050565b620028ed8162002686565b8114620028f957600080fd5b50565b6000813590506200290d81620028e2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62002968826200291d565b810181811067ffffffffffffffff821117156200298a57620029896200292e565b5b80604052505050565b60006200299f62002706565b9050620029ad82826200295d565b919050565b600067ffffffffffffffff821115620029d057620029cf6200292e565b5b620029db826200291d565b9050602081019050919050565b82818337600083830152505050565b600062002a0e62002a0884620029b2565b62002993565b90508281526020810184848401111562002a2d5762002a2c62002918565b5b62002a3a848285620029e8565b509392505050565b600082601f83011262002a5a5762002a5962002913565b5b813562002a6c848260208601620029f7565b91505092915050565b6000806000806080858703121562002a925762002a9162002710565b5b600062002aa28782880162002734565b945050602062002ab587828801620028fc565b935050604062002ac887828801620027a1565b925050606085013567ffffffffffffffff81111562002aec5762002aeb62002715565b5b62002afa8782880162002a42565b91505092959194509250565b600080600080600080600060e0888a03121562002b285762002b2762002710565b5b600062002b388a828b01620028fc565b975050602062002b4b8a828b01620028fc565b965050604062002b5e8a828b01620028fc565b955050606062002b718a828b01620027a1565b945050608062002b848a828b0162002734565b93505060a062002b978a828b01620028fc565b92505060c062002baa8a828b01620028fc565b91505092959891949750929550565b60008115159050919050565b62002bd08162002bb9565b82525050565b600060208201905062002bed600083018462002bc5565b92915050565b600062002c00826200281c565b9050919050565b62002c128162002bf3565b82525050565b600060208201905062002c2f600083018462002c07565b92915050565b62002c408162002bb9565b811462002c4c57600080fd5b50565b60008135905062002c608162002c35565b92915050565b6000806040838503121562002c805762002c7f62002710565b5b600062002c908582860162002734565b925050602062002ca38582860162002c4f565b9150509250929050565b60006020828403121562002cc65762002cc562002710565b5b600062002cd684828501620028fc565b91505092915050565b60006020828403121562002cf85762002cf762002710565b5b600062002d088482850162002c4f565b91505092915050565b600062002d1e826200281c565b9050919050565b62002d308162002d11565b82525050565b600060208201905062002d4d600083018462002d25565b92915050565b600060408201905062002d6a6000830185620026d8565b62002d796020830184620026d8565b9392505050565b600060808201905062002d9760008301876200269a565b62002da66020830186620028b4565b62002db5604083018562002d25565b62002dc460608301846200269a565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562002e0957808201518184015260208101905062002dec565b60008484015250505050565b600062002e228262002dcd565b62002e2e818562002dd8565b935062002e4081856020860162002de9565b62002e4b816200291d565b840191505092915050565b600060408201905062002e6d60008301856200269a565b818103602083015262002e81818462002e15565b90509392505050565b600060408201905062002ea16000830185620026d8565b62002eb060208301846200269a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062002ef382620026c8565b915063ffffffff820362002f0c5762002f0b62002eb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008151905062002f5c8162002787565b92915050565b60008151905062002f7381620028e2565b92915050565b6000610140828403121562002f935762002f9262002f46565b5b62002fa061014062002993565b9050600062002fb28482850162002f4b565b600083015250602062002fc88482850162002f4b565b602083015250604062002fde8482850162002f4b565b604083015250606062002ff48482850162002f4b565b60608301525060806200300a8482850162002f4b565b60808301525060a0620030208482850162002f4b565b60a08301525060c0620030368482850162002f4b565b60c08301525060e06200304c8482850162002f4b565b60e083015250610100620030638482850162002f62565b610100830152506101206200307b8482850162002f62565b6101208301525092915050565b60006101408284031215620030a257620030a162002710565b5b6000620030b28482850162002f79565b91505092915050565b6000620030c8826200277d565b9150620030d5836200277d565b9250828201905080821115620030f057620030ef62002eb7565b5b92915050565b60006060820190506200310d60008301866200269a565b6200311c60208301856200269a565b6200312b604083018462002872565b949350505050565b600081519050620031448162002c35565b92915050565b60006020828403121562003163576200316262002710565b5b6000620031738482850162003133565b91505092915050565b60006080820190506200319360008301876200269a565b620031a260208301866200269a565b620031b1604083018562002872565b8181036060830152620031c5818462002e15565b905095945050505050565b600082825260208201905092915050565b7f4465616c65723a207a65726f2061646472657373000000000000000000000000600082015250565b600062003219601483620031d0565b91506200322682620031e1565b602082019050919050565b600060208201905081810360008301526200324c816200320a565b9050919050565b6000620032608262002686565b9050919050565b620032728162003253565b81146200327e57600080fd5b50565b600081519050620032928162003267565b92915050565b600060208284031215620032b157620032b062002710565b5b6000620032c18482850162003281565b91505092915050565b600060208284031215620032e357620032e262002710565b5b6000620032f38482850162002f62565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006200333b620033356200332f84620032fc565b620027ea565b62003306565b9050919050565b6200334d816200331a565b82525050565b60006020820190506200336a600083018462003342565b92915050565b7f4465616c65723a206e6f206163746976652073657175656e6365720000000000600082015250565b6000620033a8601b83620031d0565b9150620033b58262003370565b602082019050919050565b60006020820190508181036000830152620033db8162003399565b9050919050565b600060208284031215620033fb57620033fa62002710565b5b60006200340b8482850162002f4b565b91505092915050565b600062003421826200277d565b91506200342e836200277d565b925082820390508181111562003449576200344862002eb7565b5b92915050565b60006040820190506200346660008301856200269a565b62003475602083018462002872565b9392505050565b6000606082019050620034936000830186620026d8565b620034a2602083018562002872565b620034b1604083018462002872565b949350505050565b6000604082019050620034d0600083018562002bc5565b620034df602083018462002bc5565b9392505050565b7f4465616c65723a206e6f74206163746976650000000000000000000000000000600082015250565b60006200351e601283620031d0565b91506200352b82620034e6565b602082019050919050565b6000602082019050818103600083015262003551816200350f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4465616c65723a20616c72656164792061637469766500000000000000000000600082015250565b6000620035bf601683620031d0565b9150620035cc8262003587565b602082019050919050565b60006020820190508181036000830152620035f281620035b0565b9050919050565b600060808201905062003610600083018762002872565b6200361f60208301866200269a565b818103604083015262003633818562002e15565b9050620036446060830184620026d8565b9594505050505056fe60a060405260405161096038038061096083398181016040528101906100259190610684565b610035828261007060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610795565b61007f8261016360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a26000815111156101505761014a8273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906106e0565b8261030660201b60201c565b5061015f565b61015e61039060201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036101bf57806040517f64ced0ec0000000000000000000000000000000000000000000000000000000081526004016101b6919061071c565b60405180910390fd5b806101f27fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6103cd60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906106e0565b905060008173ffffffffffffffffffffffffffffffffffffffff163b0361030257806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102f9919061071c565b60405180910390fd5b5050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051610330919061077e565b600060405180830381855af49150503d806000811461036b576040519150601f19603f3d011682016040523d82523d6000602084013e610370565b606091505b50915091506103868583836103d760201b60201c565b9250505092915050565b60003411156103cb576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826103f2576103ed8261046c60201b60201c565b610464565b6000825114801561041a575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561045c57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610453919061071c565b60405180910390fd5b819050610465565b5b9392505050565b60008151111561047f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104c5565b9050919050565b610500816104e5565b811461050b57600080fd5b50565b60008151905061051d816104f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105768261052d565b810181811067ffffffffffffffff821117156105955761059461053e565b5b80604052505050565b60006105a86104b1565b90506105b4828261056d565b919050565b600067ffffffffffffffff8211156105d4576105d361053e565b5b6105dd8261052d565b9050602081019050919050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000610627610622846105b9565b61059e565b90508281526020810184848401111561064357610642610528565b5b61064e8482856105ea565b509392505050565b600082601f83011261066b5761066a610523565b5b815161067b848260208601610614565b91505092915050565b6000806040838503121561069b5761069a6104bb565b5b60006106a98582860161050e565b925050602083015167ffffffffffffffff8111156106ca576106c96104c0565b5b6106d685828601610656565b9150509250929050565b6000602082840312156106f6576106f56104bb565b5b60006107048482850161050e565b91505092915050565b610716816104e5565b82525050565b6000602082019050610731600083018461070d565b92915050565b600081519050919050565b600081905092915050565b600061075882610737565b6107628185610742565b93506107728185602086016105ea565b80840191505092915050565b600061078a828461074d565b915081905092915050565b6080516101b16107af600039600060c701526101b16000f3fe608060405261000c61000e565b005b61001e610019610020565b61009d565b565b600061002a6100c3565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610098919061014e565b905090565b3660008037600080366000845af43d6000803e80600081146100be573d6000f35b3d6000fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b600060208284031215610164576101636100eb565b5b600061017284828501610139565b9150509291505056fea2646970667358221220318efb3add371acc6afd6545498a71373c16dc1386e578ed8c02b6ac326dd4ca64736f6c63430008140033a2646970667358221220c1cd81b7e855501f00e4d4303ee5f053fb5b8dc4ff8d872930f08118f016cc4d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0x11B JUMPI DUP1 PUSH4 0xE5974554 GT PUSH3 0xA3 JUMPI DUP1 PUSH4 0xEFA412D0 GT PUSH3 0x6D JUMPI DUP1 PUSH4 0xEFA412D0 EQ PUSH3 0x6F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x723 JUMPI DUP1 PUSH4 0xF7CEE36A EQ PUSH3 0x751 JUMPI DUP1 PUSH4 0xF87B7A3E EQ PUSH3 0x781 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0xE5974554 EQ PUSH3 0x639 JUMPI DUP1 PUSH4 0xE92D61E5 EQ PUSH3 0x669 JUMPI DUP1 PUSH4 0xE956EAF1 EQ PUSH3 0x699 JUMPI DUP1 PUSH4 0xEB2C5798 EQ PUSH3 0x6C7 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0xB699CE5F GT PUSH3 0xE5 JUMPI DUP1 PUSH4 0xB699CE5F EQ PUSH3 0x589 JUMPI DUP1 PUSH4 0xC53B573D EQ PUSH3 0x5B7 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH3 0x5D9 JUMPI DUP1 PUSH4 0xD6AE3CD5 EQ PUSH3 0x609 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x4CB JUMPI DUP1 PUSH4 0x8DB8AD88 EQ PUSH3 0x4FB JUMPI DUP1 PUSH4 0x9E935704 EQ PUSH3 0x52B JUMPI DUP1 PUSH4 0xAF372DB7 EQ PUSH3 0x55B JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 GT PUSH3 0x19F JUMPI DUP1 PUSH4 0x67D93C81 GT PUSH3 0x169 JUMPI DUP1 PUSH4 0x67D93C81 EQ PUSH3 0x431 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x451 JUMPI DUP1 PUSH4 0x7CA4F8B0 EQ PUSH3 0x46B JUMPI DUP1 PUSH4 0x85D1E2B8 EQ PUSH3 0x49B JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 EQ PUSH3 0x35D JUMPI DUP1 PUSH4 0x457CB586 EQ PUSH3 0x38D JUMPI DUP1 PUSH4 0x56891412 EQ PUSH3 0x3D1 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH3 0x401 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x1ABDAF6A GT PUSH3 0x1E1 JUMPI DUP1 PUSH4 0x1ABDAF6A EQ PUSH3 0x28B JUMPI DUP1 PUSH4 0x33BEC7E7 EQ PUSH3 0x2CF JUMPI DUP1 PUSH4 0x35CD3599 EQ PUSH3 0x2FD JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH3 0x32D JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x80E1E4E EQ PUSH3 0x20B JUMPI DUP1 PUSH4 0x1152EB41 EQ PUSH3 0x23B JUMPI DUP1 PUSH4 0x1221E6A5 EQ PUSH3 0x26B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x223 PUSH3 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x232 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x253 PUSH3 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x262 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x283 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x27B8 JUMP JUMPDEST PUSH3 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2C6 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0x8EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x315 PUSH3 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x324 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x345 PUSH3 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x354 SWAP2 SWAP1 PUSH3 0x2855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x375 PUSH3 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x384 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3B3 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3C8 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E9 PUSH3 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3F8 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x419 PUSH3 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x428 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x449 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0xD87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x469 PUSH3 0xE60 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x483 PUSH3 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x492 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4B3 PUSH3 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4C2 SWAP2 SWAP1 PUSH3 0x28C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4E3 PUSH3 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4F2 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x513 PUSH3 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x522 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x543 PUSH3 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x552 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x581 SWAP2 SWAP1 PUSH3 0x2A75 JUMP JUMPDEST PUSH3 0xF18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x5AF SWAP2 SWAP1 PUSH3 0x2B06 JUMP JUMPDEST PUSH3 0x10B9 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x5C1 PUSH3 0x1667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x5D0 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5F1 PUSH3 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x600 SWAP2 SWAP1 PUSH3 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x621 PUSH3 0x1C3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x630 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x651 PUSH3 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x660 SWAP2 SWAP1 PUSH3 0x2C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x681 PUSH3 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x690 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x6C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6BF SWAP2 SWAP1 PUSH3 0x2C66 JUMP JUMPDEST PUSH3 0x1C8D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x6F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6ED SWAP2 SWAP1 PUSH3 0x2CAD JUMP JUMPDEST PUSH3 0x1CA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x71B SWAP2 SWAP1 PUSH3 0x2CDF JUMP JUMPDEST PUSH3 0x1D66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x749 SWAP2 SWAP1 PUSH3 0x2CAD JUMP JUMPDEST PUSH3 0x1DDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x769 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x778 SWAP2 SWAP1 PUSH3 0x2D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x7AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x7A7 SWAP2 SWAP1 PUSH3 0x2CAD JUMP JUMPDEST PUSH3 0x1E90 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x7EC PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1221E6A5 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x878 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH3 0x8F4 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4042B09A75E5A67C8CC2A57E00DE6D29FB5202B7207AFBA895EB8B5CC3E2179E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0x95F SWAP3 SWAP2 SWAP1 PUSH3 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x977 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF8C8765E PUSH1 0xE0 SHL ADDRESS PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0xA00 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 ADDRESS DUP3 PUSH1 0x40 MLOAD PUSH3 0xA71 SWAP1 PUSH3 0x2658 JUMP JUMPDEST PUSH3 0xA7E SWAP3 SWAP2 SWAP1 PUSH3 0x2E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFCDF0E51B92207A6C5CFA485E975B62686DA57DA9499FEAFD12185EE26A860D9 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0xB46 SWAP3 SWAP2 SWAP1 PUSH3 0x2E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xB72 SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0xD56 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0xC46 JUMPI PUSH3 0xC45 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x76D9F95C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xD01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD27 SWAP2 SWAP1 PUSH3 0x3088 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP DUP1 DUP6 PUSH3 0xD3B SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH3 0xD4D SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xC13 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xD91 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x67D93C81 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE1D SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xE5C DUP2 PUSH3 0x1F64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0xE6A PUSH3 0x1ED4 JUMP JUMPDEST PUSH3 0xE76 PUSH1 0x0 PUSH3 0x20AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xEB1 PUSH3 0x2187 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH3 0xF22 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFC7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x30F6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xFE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x100D SWAP2 SWAP1 PUSH3 0x314A JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE6DF54A DUP6 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1071 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x317C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x108C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x10B2 DUP6 PUSH1 0x1 PUSH3 0x21AF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10C5 PUSH3 0x22DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x1114 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x114A JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH3 0x1159 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH3 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH3 0x11E2 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x124D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x1287 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x12C1 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x12FB JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x133D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1334 SWAP1 PUSH3 0x3231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1348 CALLER PUSH3 0x2304 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2FDCC17 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1438 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x145E SWAP2 SWAP1 PUSH3 0x3298 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CB747BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x14EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1510 SWAP2 SWAP1 PUSH3 0x32CA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH3 0x1659 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH3 0x1650 SWAP2 SWAP1 PUSH3 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA DUP1 SLOAD SWAP1 POP GT PUSH3 0x16B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16AA SWAP1 PUSH3 0x33C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6C0B3E46 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1749 SWAP2 SWAP1 PUSH3 0x33E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17AA SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x17C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x17EE SWAP2 SWAP1 PUSH3 0x33E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x1BF0 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x1827 JUMPI PUSH3 0x1826 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x76D9F95C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x18E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1908 SWAP2 SWAP1 PUSH3 0x3088 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD SWAP2 POP SWAP2 POP DUP2 DUP8 PUSH3 0x1929 SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP10 DUP3 LT PUSH3 0x193D JUMPI PUSH1 0x0 PUSH3 0x194C JUMP JUMPDEST DUP2 DUP11 PUSH3 0x194B SWAP2 SWAP1 PUSH3 0x3414 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x195C DUP3 DUP12 PUSH3 0x231C JUMP JUMPDEST SWAP1 POP DUP1 DUP11 PUSH3 0x196C SWAP2 SWAP1 PUSH3 0x3414 JUMP JUMPDEST SWAP10 POP PUSH1 0x0 DUP5 DUP3 PUSH3 0x197E SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH3 0x1997 JUMPI POP POP POP POP POP POP POP POP PUSH3 0x1BDA JUMP JUMPDEST DUP1 DUP14 PUSH3 0x19A5 SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP13 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x19D1 JUMPI POP DUP13 DUP3 DUP7 PUSH3 0x19CF SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST GT JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH3 0x19E1 JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST ISZERO PUSH3 0x1A69 JUMPI DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x56387B91 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A34 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1A64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 ISZERO DUP1 PUSH3 0x1A77 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH3 0x1BD0 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1ADC SWAP3 SWAP2 SWAP1 PUSH3 0x344F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1AFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B22 SWAP2 SWAP1 PUSH3 0x314A JUMP JUMPDEST POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA98D38F0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B5E SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB8AAFDEC9BACDC76BFEA3C330063C391A2904D4F91E71F97A91534F3C8CE4AB5 DUP10 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH3 0x1BC7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH3 0x1BE7 SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x17F4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x1C22 JUMPI PUSH3 0x1C06 DUP2 PUSH3 0x2337 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1C1A SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH3 0x1C97 PUSH3 0x1ED4 JUMP JUMPDEST PUSH3 0x1CA3 DUP3 DUP3 PUSH3 0x21AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x1CB1 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1D23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1D1A SWAP1 PUSH3 0x3231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x1D70 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBA50596D5D8D3FFFDA559F307B84B1B0BDBA201192D70B393820EAB501346B1E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0x1DD1 SWAP3 SWAP2 SWAP1 PUSH3 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH3 0x1DE7 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1E5C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E53 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1E67 DUP2 PUSH3 0x20AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x1EDE PUSH3 0x24BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1EFE PUSH3 0xEA4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1F62 JUMPI PUSH3 0x1F24 PUSH3 0x24BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1F59 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F71 DUP3 PUSH3 0x24C6 JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP1 AND DUP2 PUSH4 0xFFFFFFFF AND LT PUSH3 0x1FC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1FBB SWAP1 PUSH3 0x3536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x1 PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH3 0x1FDA SWAP2 SWAP1 PUSH3 0x3414 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x1FEE JUMPI PUSH3 0x1FED PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x2031 JUMPI PUSH3 0x2030 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH3 0x2079 JUMPI PUSH3 0x2078 PUSH3 0x3558 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20BA PUSH3 0x2187 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x22CB JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x2276 JUMPI DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x21F1 JUMPI PUSH3 0x21F0 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH3 0x2260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2257 SWAP1 PUSH3 0x35D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH3 0x226D SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x21B9 JUMP JUMPDEST POP PUSH1 0xA DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x22D8 JUMP JUMPDEST PUSH3 0x22D6 DUP3 PUSH3 0x1F64 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x230E PUSH3 0x2566 JUMP JUMPDEST PUSH3 0x2319 DUP2 PUSH3 0x25A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH3 0x232D JUMPI DUP2 PUSH3 0x232F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEB82AFB3 PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x2354 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44DD5ED6 CALLVALUE PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x244D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x35F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0xD644E527C1896057CE642ADFBC00F04D6B23D4C2FB30529522184D151DC087DC DUP3 PUSH1 0x40 MLOAD PUSH3 0x24B2 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x2558 JUMPI DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x2506 JUMPI PUSH3 0x2505 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH3 0x2542 JUMPI DUP1 SWAP2 POP POP PUSH3 0x2561 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x254F SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x24CE JUMP JUMPDEST POP PUSH4 0xFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2570 PUSH3 0x2636 JUMP JUMPDEST PUSH3 0x25A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH3 0x25B3 PUSH3 0x2566 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2628 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x261F SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2633 DUP2 PUSH3 0x20AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2642 PUSH3 0x22DC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x960 DUP1 PUSH3 0x364E DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2693 DUP3 PUSH3 0x2666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26A5 DUP2 PUSH3 0x2686 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x26C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x269A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26E3 DUP2 PUSH3 0x26C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2700 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x26D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2725 DUP2 PUSH3 0x26C8 JUMP JUMPDEST DUP2 EQ PUSH3 0x2731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2745 DUP2 PUSH3 0x271A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2764 JUMPI PUSH3 0x2763 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2774 DUP5 DUP3 DUP6 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2792 DUP2 PUSH3 0x277D JUMP JUMPDEST DUP2 EQ PUSH3 0x279E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x27B2 DUP2 PUSH3 0x2787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27D1 JUMPI PUSH3 0x27D0 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x27E1 DUP5 DUP3 DUP6 ADD PUSH3 0x27A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2815 PUSH3 0x280F PUSH3 0x2809 DUP5 PUSH3 0x2666 JUMP JUMPDEST PUSH3 0x27EA JUMP JUMPDEST PUSH3 0x2666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2829 DUP3 PUSH3 0x27F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x283D DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x284F DUP2 PUSH3 0x2830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x286C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2844 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x287D DUP2 PUSH3 0x277D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x289A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28AD DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x28BF DUP2 PUSH3 0x28A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x28DC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x28B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x28ED DUP2 PUSH3 0x2686 JUMP JUMPDEST DUP2 EQ PUSH3 0x28F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x290D DUP2 PUSH3 0x28E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2968 DUP3 PUSH3 0x291D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x298A JUMPI PUSH3 0x2989 PUSH3 0x292E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299F PUSH3 0x2706 JUMP JUMPDEST SWAP1 POP PUSH3 0x29AD DUP3 DUP3 PUSH3 0x295D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x29D0 JUMPI PUSH3 0x29CF PUSH3 0x292E JUMP JUMPDEST JUMPDEST PUSH3 0x29DB DUP3 PUSH3 0x291D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A0E PUSH3 0x2A08 DUP5 PUSH3 0x29B2 JUMP JUMPDEST PUSH3 0x2993 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2A2D JUMPI PUSH3 0x2A2C PUSH3 0x2918 JUMP JUMPDEST JUMPDEST PUSH3 0x2A3A DUP5 DUP3 DUP6 PUSH3 0x29E8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A5A JUMPI PUSH3 0x2A59 PUSH3 0x2913 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x2A6C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x29F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2A92 JUMPI PUSH3 0x2A91 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2AA2 DUP8 DUP3 DUP9 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x2AB5 DUP8 DUP3 DUP9 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2AC8 DUP8 DUP3 DUP9 ADD PUSH3 0x27A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2AEC JUMPI PUSH3 0x2AEB PUSH3 0x2715 JUMP JUMPDEST JUMPDEST PUSH3 0x2AFA DUP8 DUP3 DUP9 ADD PUSH3 0x2A42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x2B28 JUMPI PUSH3 0x2B27 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B38 DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x2B4B DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x2B5E DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x2B71 DUP11 DUP3 DUP12 ADD PUSH3 0x27A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x2B84 DUP11 DUP3 DUP12 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x2B97 DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x2BAA DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2BD0 DUP2 PUSH3 0x2BB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2BED PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2BC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C00 DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C12 DUP2 PUSH3 0x2BF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2C2F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2C07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2C40 DUP2 PUSH3 0x2BB9 JUMP JUMPDEST DUP2 EQ PUSH3 0x2C4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2C60 DUP2 PUSH3 0x2C35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2C80 JUMPI PUSH3 0x2C7F PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2C90 DUP6 DUP3 DUP7 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2CA3 DUP6 DUP3 DUP7 ADD PUSH3 0x2C4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CC6 JUMPI PUSH3 0x2CC5 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2CD6 DUP5 DUP3 DUP6 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CF8 JUMPI PUSH3 0x2CF7 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D08 DUP5 DUP3 DUP6 ADD PUSH3 0x2C4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D1E DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D30 DUP2 PUSH3 0x2D11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D4D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2D25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2D6A PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x26D8 JUMP JUMPDEST PUSH3 0x2D79 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x26D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x2D97 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x2DA6 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x28B4 JUMP JUMPDEST PUSH3 0x2DB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2D25 JUMP JUMPDEST PUSH3 0x2DC4 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x269A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2DEC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E22 DUP3 PUSH3 0x2DCD JUMP JUMPDEST PUSH3 0x2E2E DUP2 DUP6 PUSH3 0x2DD8 JUMP JUMPDEST SWAP4 POP PUSH3 0x2E40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x2DE9 JUMP JUMPDEST PUSH3 0x2E4B DUP2 PUSH3 0x291D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2E6D PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x269A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2E81 DUP2 DUP5 PUSH3 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2EA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x26D8 JUMP JUMPDEST PUSH3 0x2EB0 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x269A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2EF3 DUP3 PUSH3 0x26C8 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH3 0x2F0C JUMPI PUSH3 0x2F0B PUSH3 0x2EB7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F5C DUP2 PUSH3 0x2787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F73 DUP2 PUSH3 0x28E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2F93 JUMPI PUSH3 0x2F92 PUSH3 0x2F46 JUMP JUMPDEST JUMPDEST PUSH3 0x2FA0 PUSH2 0x140 PUSH3 0x2993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2FB2 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x2FC8 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH3 0x2FDE DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH3 0x2FF4 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH3 0x300A DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH3 0x3020 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH3 0x3036 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH3 0x304C DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH3 0x3063 DUP5 DUP3 DUP6 ADD PUSH3 0x2F62 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH3 0x307B DUP5 DUP3 DUP6 ADD PUSH3 0x2F62 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x30A2 JUMPI PUSH3 0x30A1 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x30B2 DUP5 DUP3 DUP6 ADD PUSH3 0x2F79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30C8 DUP3 PUSH3 0x277D JUMP JUMPDEST SWAP2 POP PUSH3 0x30D5 DUP4 PUSH3 0x277D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x30F0 JUMPI PUSH3 0x30EF PUSH3 0x2EB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x310D PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x311C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x312B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3144 DUP2 PUSH3 0x2C35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3163 JUMPI PUSH3 0x3162 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3173 DUP5 DUP3 DUP6 ADD PUSH3 0x3133 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x3193 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x31A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x31B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2872 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x31C5 DUP2 DUP5 PUSH3 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3219 PUSH1 0x14 DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x3226 DUP3 PUSH3 0x31E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x324C DUP2 PUSH3 0x320A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3260 DUP3 PUSH3 0x2686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3272 DUP2 PUSH3 0x3253 JUMP JUMPDEST DUP2 EQ PUSH3 0x327E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3292 DUP2 PUSH3 0x3267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x32B1 JUMPI PUSH3 0x32B0 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x32C1 DUP5 DUP3 DUP6 ADD PUSH3 0x3281 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x32E3 JUMPI PUSH3 0x32E2 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x32F3 DUP5 DUP3 DUP6 ADD PUSH3 0x2F62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x333B PUSH3 0x3335 PUSH3 0x332F DUP5 PUSH3 0x32FC JUMP JUMPDEST PUSH3 0x27EA JUMP JUMPDEST PUSH3 0x3306 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x334D DUP2 PUSH3 0x331A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x336A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x3342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A206E6F206163746976652073657175656E6365720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33A8 PUSH1 0x1B DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x33B5 DUP3 PUSH3 0x3370 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x33DB DUP2 PUSH3 0x3399 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x33FB JUMPI PUSH3 0x33FA PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x340B DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3421 DUP3 PUSH3 0x277D JUMP JUMPDEST SWAP2 POP PUSH3 0x342E DUP4 PUSH3 0x277D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x3449 JUMPI PUSH3 0x3448 PUSH3 0x2EB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x3466 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x3475 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x3493 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x26D8 JUMP JUMPDEST PUSH3 0x34A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x2872 JUMP JUMPDEST PUSH3 0x34B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x34D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x2BC5 JUMP JUMPDEST PUSH3 0x34DF PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2BC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A206E6F74206163746976650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x351E PUSH1 0x12 DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x352B DUP3 PUSH3 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3551 DUP2 PUSH3 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4465616C65723A20616C72656164792061637469766500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35BF PUSH1 0x16 DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x35CC DUP3 PUSH3 0x3587 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x35F2 DUP2 PUSH3 0x35B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x3610 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x2872 JUMP JUMPDEST PUSH3 0x361F PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x269A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x3633 DUP2 DUP6 PUSH3 0x2E15 JUMP JUMPDEST SWAP1 POP PUSH3 0x3644 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x26D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x960 CODESIZE SUB DUP1 PUSH2 0x960 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x70 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x795 JUMP JUMPDEST PUSH2 0x7F DUP3 PUSH2 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x150 JUMPI PUSH2 0x14A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST DUP3 PUSH2 0x306 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x64CED0EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1F2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH1 0x0 SHL PUSH2 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x302 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x370 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x386 DUP6 DUP4 DUP4 PUSH2 0x3D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3F2 JUMPI PUSH2 0x3ED DUP3 PUSH2 0x46C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x41A JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x45C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x465 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x47F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x51D DUP2 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x576 DUP3 PUSH2 0x52D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x595 JUMPI PUSH2 0x594 PUSH2 0x53E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B4 DUP3 DUP3 PUSH2 0x56D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x53E JUMP JUMPDEST JUMPDEST PUSH2 0x5DD DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 PUSH2 0x622 DUP5 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x643 JUMPI PUSH2 0x642 PUSH2 0x528 JUMP JUMPDEST JUMPDEST PUSH2 0x64E DUP5 DUP3 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x523 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x67B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x614 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A9 DUP6 DUP3 DUP7 ADD PUSH2 0x50E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x4C0 JUMP JUMPDEST JUMPDEST PUSH2 0x6D6 DUP6 DUP3 DUP7 ADD PUSH2 0x656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP5 DUP3 DUP6 ADD PUSH2 0x50E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x731 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 DUP3 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x762 DUP2 DUP6 PUSH2 0x742 JUMP JUMPDEST SWAP4 POP PUSH2 0x772 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP3 DUP5 PUSH2 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1B1 PUSH2 0x7AF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xC7 ADD MSTORE PUSH2 0x1B1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A PUSH2 0xC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP15 0xFB GASPRICE 0xDD CALLDATACOPY BYTE 0xCC PUSH11 0xFD6545498A71373C16DC13 DUP7 0xE5 PUSH25 0xED8C02B6AC326DD4CA64736F6C63430008140033A264697066 PUSH20 0x58221220C1CD81B7E855501F00E4D4303EE5F053 0xFB JUMPDEST DUP14 0xC4 SELFDESTRUCT DUP14 DUP8 0x29 ADDRESS CREATE DUP2 XOR CREATE AND 0xCC 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"691:12630:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_54":{"entryPoint":8964,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":9641,"id":81,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":9574,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":7892,"id":122,"parameterSlots":0,"returnSlots":0},"@_findFromActiveList_3264":{"entryPoint":9414,"id":3264,"parameterSlots":1,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":8924,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":8583,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":9782,"id":438,"parameterSlots":0,"returnSlots":1},"@_mintL2EMetis_3185":{"entryPoint":9015,"id":3185,"parameterSlots":1,"returnSlots":0},"@_msgSender_476":{"entryPoint":9406,"id":476,"parameterSlots":0,"returnSlots":1},"@_removeFromActiveList_3227":{"entryPoint":8036,"id":3227,"parameterSlots":1,"returnSlots":1},"@_setActive_3152":{"entryPoint":8623,"id":3152,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":8366,"id":193,"parameterSlots":1,"returnSlots":0},"@activeSequencerCount_2622":{"entryPoint":2005,"id":2622,"parameterSlots":0,"returnSlots":1},"@activeSequencerIds_2492":{"entryPoint":2223,"id":2492,"parameterSlots":0,"returnSlots":0},"@addAgent_2707":{"entryPoint":2411,"id":2707,"parameterSlots":0,"returnSlots":1},"@implementation_3107":{"entryPoint":3422,"id":3107,"parameterSlots":0,"returnSlots":1},"@initialize_2609":{"entryPoint":4281,"id":2609,"parameterSlots":7,"returnSlots":0},"@l2ChainId_2474":{"entryPoint":7227,"id":2474,"parameterSlots":0,"returnSlots":0},"@l2Gas_2498":{"entryPoint":3008,"id":2498,"parameterSlots":0,"returnSlots":0},"@l2Minter_2477":{"entryPoint":1967,"id":2477,"parameterSlots":0,"returnSlots":0},"@l2RewardDispatcher_2480":{"entryPoint":7271,"id":2480,"parameterSlots":0,"returnSlots":0},"@lockFor_2753":{"entryPoint":3864,"id":2753,"parameterSlots":4,"returnSlots":0},"@lockingInfo_2467":{"entryPoint":7786,"id":2467,"parameterSlots":0,"returnSlots":0},"@lockingPool_2463":{"entryPoint":3710,"id":2463,"parameterSlots":0,"returnSlots":0},"@messenger_2471":{"entryPoint":2970,"id":2471,"parameterSlots":0,"returnSlots":0},"@metis_2459":{"entryPoint":7233,"id":2459,"parameterSlots":0,"returnSlots":0},"@min_1547":{"entryPoint":8988,"id":1547,"parameterSlots":2,"returnSlots":1},"@owner_105":{"entryPoint":3748,"id":105,"parameterSlots":0,"returnSlots":1},"@relock_2985":{"entryPoint":5735,"id":2985,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":3680,"id":136,"parameterSlots":0,"returnSlots":0},"@sequencerAgentCount_2488":{"entryPoint":3842,"id":2488,"parameterSlots":0,"returnSlots":0},"@sequencerAgentTemplate_2455":{"entryPoint":3806,"id":2455,"parameterSlots":0,"returnSlots":0},"@sequencerAgents_2485":{"entryPoint":3030,"id":2485,"parameterSlots":0,"returnSlots":0},"@setActive_3001":{"entryPoint":7309,"id":3001,"parameterSlots":2,"returnSlots":0},"@setL2Gas_3046":{"entryPoint":2282,"id":3046,"parameterSlots":1,"returnSlots":0},"@setL2Minter_3274":{"entryPoint":7824,"id":3274,"parameterSlots":1,"returnSlots":0},"@setSequencerAgentTemplate_3024":{"entryPoint":7335,"id":3024,"parameterSlots":1,"returnSlots":0},"@setWithdrawRewards_2644":{"entryPoint":7526,"id":2644,"parameterSlots":1,"returnSlots":0},"@sumRewards_2495":{"entryPoint":3704,"id":2495,"parameterSlots":0,"returnSlots":0},"@totalLocked_3098":{"entryPoint":3081,"id":3098,"parameterSlots":0,"returnSlots":1},"@transferOwnership_164":{"entryPoint":7645,"id":164,"parameterSlots":1,"returnSlots":0},"@unlockClaim_2793":{"entryPoint":2018,"id":2793,"parameterSlots":1,"returnSlots":0},"@unlock_2775":{"entryPoint":3463,"id":2775,"parameterSlots":1,"returnSlots":0},"@withdrawRewards_2501":{"entryPoint":7208,"id":2501,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":10743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":12130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":12595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":10818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ILockingInfo_$3817_fromMemory":{"entryPoint":12929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory":{"entryPoint":12153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":10036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":13002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_addresst_address":{"entryPoint":11014,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bool":{"entryPoint":11487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ILockingInfo_$3817_fromMemory":{"entryPoint":12952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_SequencerData_$3844_memory_ptr_fromMemory":{"entryPoint":12424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":10059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":10869,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint32t_bool":{"entryPoint":11366,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9882,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11205,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ICrossDomainMessenger_$3607_to_t_address_fromStack":{"entryPoint":10308,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack":{"entryPoint":11271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack":{"entryPoint":11557,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack":{"entryPoint":10420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":13122,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack":{"entryPoint":12810,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack":{"entryPoint":13209,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3_to_t_string_memory_ptr_fromStack":{"entryPoint":13744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef_to_t_string_memory_ptr_fromStack":{"entryPoint":13583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10354,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":9944,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":12534,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12668,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11862,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_contract$_ILockingPool_$3940_t_contract$_ILockingInfo_$3817_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":11648,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13391,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed":{"entryPoint":13497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_ICrossDomainMessenger_$3607__to_t_address__fromStack_reversed":{"entryPoint":10325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed":{"entryPoint":11288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILockingInfo_$3817__to_t_address__fromStack_reversed":{"entryPoint":11574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILockingPool_$3940__to_t_address__fromStack_reversed":{"entryPoint":10437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":13139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12849,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13248,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__to_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":13817,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":9961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_address__to_t_uint32_t_address__fromStack_reversed":{"entryPoint":11914,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint256_t_uint256__to_t_uint32_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13436,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":11603,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":10643,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9990,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10674,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11725,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11736,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12752,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12475,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13332,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11193,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ILockingInfo_$3817":{"entryPoint":12883,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":13052,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9830,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10109,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":9928,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":13062,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ICrossDomainMessenger_$3607_to_t_address":{"entryPoint":10288,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$979_to_t_address":{"entryPoint":11251,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ILockingInfo_$3817_to_t_address":{"entryPoint":11537,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ILockingPool_$3940_to_t_address":{"entryPoint":10400,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":13082,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":10268,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":10228,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10728,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11753,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":10589,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10218,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint32":{"entryPoint":12006,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":11959,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":13656,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12055,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10542,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10515,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":12102,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10520,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10005,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10000,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10525,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313":{"entryPoint":12769,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582":{"entryPoint":13168,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3":{"entryPoint":13703,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef":{"entryPoint":13542,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10466,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11317,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ILockingInfo_$3817":{"entryPoint":12903,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10119,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":10010,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28838:19","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:19","statements":[{"nodeType":"YulAssignment","src":"62:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:19"},"nodeType":"YulFunctionCall","src":"73:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:19","type":""}],"src":"7:126:19"},{"body":{"nodeType":"YulBlock","src":"184:51:19","statements":[{"nodeType":"YulAssignment","src":"194:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:19"},"nodeType":"YulFunctionCall","src":"205:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:19","type":""}],"src":"139:96:19"},{"body":{"nodeType":"YulBlock","src":"306:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:19"},"nodeType":"YulFunctionCall","src":"328:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:19"},"nodeType":"YulFunctionCall","src":"316:37:19"},"nodeType":"YulExpressionStatement","src":"316:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:19","type":""}],"src":"241:118:19"},{"body":{"nodeType":"YulBlock","src":"463:124:19","statements":[{"nodeType":"YulAssignment","src":"473:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:19"},"nodeType":"YulFunctionCall","src":"481:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:19"},"nodeType":"YulFunctionCall","src":"562:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:19"},"nodeType":"YulFunctionCall","src":"509:71:19"},"nodeType":"YulExpressionStatement","src":"509:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:19","type":""}],"src":"365:222:19"},{"body":{"nodeType":"YulBlock","src":"637:49:19","statements":[{"nodeType":"YulAssignment","src":"647:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"662:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"669:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"658:3:19"},"nodeType":"YulFunctionCall","src":"658:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"647:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"619:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"629:7:19","type":""}],"src":"593:93:19"},{"body":{"nodeType":"YulBlock","src":"755:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"772:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"794:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"777:16:19"},"nodeType":"YulFunctionCall","src":"777:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"765:6:19"},"nodeType":"YulFunctionCall","src":"765:36:19"},"nodeType":"YulExpressionStatement","src":"765:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"743:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"750:3:19","type":""}],"src":"692:115:19"},{"body":{"nodeType":"YulBlock","src":"909:122:19","statements":[{"nodeType":"YulAssignment","src":"919:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"931:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"942:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"927:3:19"},"nodeType":"YulFunctionCall","src":"927:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"919:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1010:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1021:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1006:3:19"},"nodeType":"YulFunctionCall","src":"1006:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"955:41:19"},"nodeType":"YulFunctionCall","src":"955:69:19"},"nodeType":"YulExpressionStatement","src":"955:69:19"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"881:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"893:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"904:4:19","type":""}],"src":"813:218:19"},{"body":{"nodeType":"YulBlock","src":"1077:35:19","statements":[{"nodeType":"YulAssignment","src":"1087:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1103:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1097:5:19"},"nodeType":"YulFunctionCall","src":"1097:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1070:6:19","type":""}],"src":"1037:75:19"},{"body":{"nodeType":"YulBlock","src":"1207:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1224:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1227:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1217:6:19"},"nodeType":"YulFunctionCall","src":"1217:12:19"},"nodeType":"YulExpressionStatement","src":"1217:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1118:117:19"},{"body":{"nodeType":"YulBlock","src":"1330:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1347:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1350:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1340:6:19"},"nodeType":"YulFunctionCall","src":"1340:12:19"},"nodeType":"YulExpressionStatement","src":"1340:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1241:117:19"},{"body":{"nodeType":"YulBlock","src":"1406:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"1462:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1471:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1474:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1464:6:19"},"nodeType":"YulFunctionCall","src":"1464:12:19"},"nodeType":"YulExpressionStatement","src":"1464:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1453:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1436:16:19"},"nodeType":"YulFunctionCall","src":"1436:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1426:2:19"},"nodeType":"YulFunctionCall","src":"1426:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1419:6:19"},"nodeType":"YulFunctionCall","src":"1419:42:19"},"nodeType":"YulIf","src":"1416:62:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1399:5:19","type":""}],"src":"1364:120:19"},{"body":{"nodeType":"YulBlock","src":"1541:86:19","statements":[{"nodeType":"YulAssignment","src":"1551:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1573:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1560:12:19"},"nodeType":"YulFunctionCall","src":"1560:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1551:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1615:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1589:25:19"},"nodeType":"YulFunctionCall","src":"1589:32:19"},"nodeType":"YulExpressionStatement","src":"1589:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1519:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1527:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1535:5:19","type":""}],"src":"1490:137:19"},{"body":{"nodeType":"YulBlock","src":"1698:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"1744:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1746:77:19"},"nodeType":"YulFunctionCall","src":"1746:79:19"},"nodeType":"YulExpressionStatement","src":"1746:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1719:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1728:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1715:3:19"},"nodeType":"YulFunctionCall","src":"1715:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1740:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1711:3:19"},"nodeType":"YulFunctionCall","src":"1711:32:19"},"nodeType":"YulIf","src":"1708:119:19"},{"nodeType":"YulBlock","src":"1837:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1852:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1856:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1881:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1926:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:19"},"nodeType":"YulFunctionCall","src":"1911:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1935:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1891:19:19"},"nodeType":"YulFunctionCall","src":"1891:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1881:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1668:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1679:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1691:6:19","type":""}],"src":"1633:327:19"},{"body":{"nodeType":"YulBlock","src":"2011:32:19","statements":[{"nodeType":"YulAssignment","src":"2021:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2032:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2021:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1993:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2003:7:19","type":""}],"src":"1966:77:19"},{"body":{"nodeType":"YulBlock","src":"2092:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"2149:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2158:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2161:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2151:6:19"},"nodeType":"YulFunctionCall","src":"2151:12:19"},"nodeType":"YulExpressionStatement","src":"2151:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2115:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2140:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2122:17:19"},"nodeType":"YulFunctionCall","src":"2122:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2112:2:19"},"nodeType":"YulFunctionCall","src":"2112:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2105:6:19"},"nodeType":"YulFunctionCall","src":"2105:43:19"},"nodeType":"YulIf","src":"2102:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2085:5:19","type":""}],"src":"2049:122:19"},{"body":{"nodeType":"YulBlock","src":"2229:87:19","statements":[{"nodeType":"YulAssignment","src":"2239:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2261:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2248:12:19"},"nodeType":"YulFunctionCall","src":"2248:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2239:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2304:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2277:26:19"},"nodeType":"YulFunctionCall","src":"2277:33:19"},"nodeType":"YulExpressionStatement","src":"2277:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2207:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2215:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2223:5:19","type":""}],"src":"2177:139:19"},{"body":{"nodeType":"YulBlock","src":"2388:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"2434:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2436:77:19"},"nodeType":"YulFunctionCall","src":"2436:79:19"},"nodeType":"YulExpressionStatement","src":"2436:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2409:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2418:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2405:3:19"},"nodeType":"YulFunctionCall","src":"2405:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2430:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2401:3:19"},"nodeType":"YulFunctionCall","src":"2401:32:19"},"nodeType":"YulIf","src":"2398:119:19"},{"nodeType":"YulBlock","src":"2527:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2542:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2556:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2546:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2571:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2606:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2617:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:19"},"nodeType":"YulFunctionCall","src":"2602:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2626:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2581:20:19"},"nodeType":"YulFunctionCall","src":"2581:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2571:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2358:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2369:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2381:6:19","type":""}],"src":"2322:329:19"},{"body":{"nodeType":"YulBlock","src":"2689:28:19","statements":[{"nodeType":"YulAssignment","src":"2699:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2706:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2699:3:19"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2675:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2685:3:19","type":""}],"src":"2657:60:19"},{"body":{"nodeType":"YulBlock","src":"2783:82:19","statements":[{"nodeType":"YulAssignment","src":"2793:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2851:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2833:17:19"},"nodeType":"YulFunctionCall","src":"2833:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2824:8:19"},"nodeType":"YulFunctionCall","src":"2824:34:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2806:17:19"},"nodeType":"YulFunctionCall","src":"2806:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2793:9:19"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2763:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2773:9:19","type":""}],"src":"2723:142:19"},{"body":{"nodeType":"YulBlock","src":"2931:66:19","statements":[{"nodeType":"YulAssignment","src":"2941:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"2954:30:19"},"nodeType":"YulFunctionCall","src":"2954:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2941:9:19"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2911:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2921:9:19","type":""}],"src":"2871:126:19"},{"body":{"nodeType":"YulBlock","src":"3093:66:19","statements":[{"nodeType":"YulAssignment","src":"3103:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3116:30:19"},"nodeType":"YulFunctionCall","src":"3116:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3103:9:19"}]}]},"name":"convert_t_contract$_ICrossDomainMessenger_$3607_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3073:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3083:9:19","type":""}],"src":"3003:156:19"},{"body":{"nodeType":"YulBlock","src":"3260:96:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3277:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3343:5:19"}],"functionName":{"name":"convert_t_contract$_ICrossDomainMessenger_$3607_to_t_address","nodeType":"YulIdentifier","src":"3282:60:19"},"nodeType":"YulFunctionCall","src":"3282:67:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3270:6:19"},"nodeType":"YulFunctionCall","src":"3270:80:19"},"nodeType":"YulExpressionStatement","src":"3270:80:19"}]},"name":"abi_encode_t_contract$_ICrossDomainMessenger_$3607_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3248:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3255:3:19","type":""}],"src":"3165:191:19"},{"body":{"nodeType":"YulBlock","src":"3490:154:19","statements":[{"nodeType":"YulAssignment","src":"3500:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3523:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:19"},"nodeType":"YulFunctionCall","src":"3508:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3500:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3610:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3623:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3634:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3619:3:19"},"nodeType":"YulFunctionCall","src":"3619:17:19"}],"functionName":{"name":"abi_encode_t_contract$_ICrossDomainMessenger_$3607_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3536:73:19"},"nodeType":"YulFunctionCall","src":"3536:101:19"},"nodeType":"YulExpressionStatement","src":"3536:101:19"}]},"name":"abi_encode_tuple_t_contract$_ICrossDomainMessenger_$3607__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3462:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3474:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3485:4:19","type":""}],"src":"3362:282:19"},{"body":{"nodeType":"YulBlock","src":"3715:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3732:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3755:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3737:17:19"},"nodeType":"YulFunctionCall","src":"3737:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3725:6:19"},"nodeType":"YulFunctionCall","src":"3725:37:19"},"nodeType":"YulExpressionStatement","src":"3725:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3703:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3710:3:19","type":""}],"src":"3650:118:19"},{"body":{"nodeType":"YulBlock","src":"3872:124:19","statements":[{"nodeType":"YulAssignment","src":"3882:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3894:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3905:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3890:3:19"},"nodeType":"YulFunctionCall","src":"3890:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3882:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3962:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3975:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3986:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3971:3:19"},"nodeType":"YulFunctionCall","src":"3971:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3918:43:19"},"nodeType":"YulFunctionCall","src":"3918:71:19"},"nodeType":"YulExpressionStatement","src":"3918:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3844:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3856:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3867:4:19","type":""}],"src":"3774:222:19"},{"body":{"nodeType":"YulBlock","src":"4083:66:19","statements":[{"nodeType":"YulAssignment","src":"4093:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4137:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4106:30:19"},"nodeType":"YulFunctionCall","src":"4106:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4093:9:19"}]}]},"name":"convert_t_contract$_ILockingPool_$3940_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4063:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4073:9:19","type":""}],"src":"4002:147:19"},{"body":{"nodeType":"YulBlock","src":"4241:87:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4258:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4315:5:19"}],"functionName":{"name":"convert_t_contract$_ILockingPool_$3940_to_t_address","nodeType":"YulIdentifier","src":"4263:51:19"},"nodeType":"YulFunctionCall","src":"4263:58:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4251:6:19"},"nodeType":"YulFunctionCall","src":"4251:71:19"},"nodeType":"YulExpressionStatement","src":"4251:71:19"}]},"name":"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4229:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4236:3:19","type":""}],"src":"4155:173:19"},{"body":{"nodeType":"YulBlock","src":"4453:145:19","statements":[{"nodeType":"YulAssignment","src":"4463:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4486:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4471:3:19"},"nodeType":"YulFunctionCall","src":"4471:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4463:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4564:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4577:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4588:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4573:3:19"},"nodeType":"YulFunctionCall","src":"4573:17:19"}],"functionName":{"name":"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4499:64:19"},"nodeType":"YulFunctionCall","src":"4499:92:19"},"nodeType":"YulExpressionStatement","src":"4499:92:19"}]},"name":"abi_encode_tuple_t_contract$_ILockingPool_$3940__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4425:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4437:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4448:4:19","type":""}],"src":"4334:264:19"},{"body":{"nodeType":"YulBlock","src":"4647:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"4704:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4713:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4716:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4706:6:19"},"nodeType":"YulFunctionCall","src":"4706:12:19"},"nodeType":"YulExpressionStatement","src":"4706:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4670:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4695:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4677:17:19"},"nodeType":"YulFunctionCall","src":"4677:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4667:2:19"},"nodeType":"YulFunctionCall","src":"4667:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4660:6:19"},"nodeType":"YulFunctionCall","src":"4660:43:19"},"nodeType":"YulIf","src":"4657:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4640:5:19","type":""}],"src":"4604:122:19"},{"body":{"nodeType":"YulBlock","src":"4784:87:19","statements":[{"nodeType":"YulAssignment","src":"4794:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4816:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4803:12:19"},"nodeType":"YulFunctionCall","src":"4803:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4794:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4832:26:19"},"nodeType":"YulFunctionCall","src":"4832:33:19"},"nodeType":"YulExpressionStatement","src":"4832:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4762:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"4770:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4778:5:19","type":""}],"src":"4732:139:19"},{"body":{"nodeType":"YulBlock","src":"4966:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4983:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4986:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4976:6:19"},"nodeType":"YulFunctionCall","src":"4976:12:19"},"nodeType":"YulExpressionStatement","src":"4976:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4877:117:19"},{"body":{"nodeType":"YulBlock","src":"5089:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5106:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5109:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5099:6:19"},"nodeType":"YulFunctionCall","src":"5099:12:19"},"nodeType":"YulExpressionStatement","src":"5099:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5000:117:19"},{"body":{"nodeType":"YulBlock","src":"5171:54:19","statements":[{"nodeType":"YulAssignment","src":"5181:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5199:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5206:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5195:3:19"},"nodeType":"YulFunctionCall","src":"5195:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5215:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5211:3:19"},"nodeType":"YulFunctionCall","src":"5211:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5191:3:19"},"nodeType":"YulFunctionCall","src":"5191:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5181:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5154:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5164:6:19","type":""}],"src":"5123:102:19"},{"body":{"nodeType":"YulBlock","src":"5259:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5276:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5279:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5269:6:19"},"nodeType":"YulFunctionCall","src":"5269:88:19"},"nodeType":"YulExpressionStatement","src":"5269:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5373:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5376:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5366:6:19"},"nodeType":"YulFunctionCall","src":"5366:15:19"},"nodeType":"YulExpressionStatement","src":"5366:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5397:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5400:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5390:6:19"},"nodeType":"YulFunctionCall","src":"5390:15:19"},"nodeType":"YulExpressionStatement","src":"5390:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5231:180:19"},{"body":{"nodeType":"YulBlock","src":"5460:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5470:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5492:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5522:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5500:21:19"},"nodeType":"YulFunctionCall","src":"5500:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5488:3:19"},"nodeType":"YulFunctionCall","src":"5488:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5474:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"5639:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5641:16:19"},"nodeType":"YulFunctionCall","src":"5641:18:19"},"nodeType":"YulExpressionStatement","src":"5641:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5582:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"5594:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5579:2:19"},"nodeType":"YulFunctionCall","src":"5579:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5618:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5630:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5615:2:19"},"nodeType":"YulFunctionCall","src":"5615:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5576:2:19"},"nodeType":"YulFunctionCall","src":"5576:62:19"},"nodeType":"YulIf","src":"5573:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5677:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5681:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5670:6:19"},"nodeType":"YulFunctionCall","src":"5670:22:19"},"nodeType":"YulExpressionStatement","src":"5670:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5446:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"5454:4:19","type":""}],"src":"5417:281:19"},{"body":{"nodeType":"YulBlock","src":"5745:88:19","statements":[{"nodeType":"YulAssignment","src":"5755:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5765:18:19"},"nodeType":"YulFunctionCall","src":"5765:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5755:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5814:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"5822:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5794:19:19"},"nodeType":"YulFunctionCall","src":"5794:33:19"},"nodeType":"YulExpressionStatement","src":"5794:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5729:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5738:6:19","type":""}],"src":"5704:129:19"},{"body":{"nodeType":"YulBlock","src":"5905:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"6010:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6012:16:19"},"nodeType":"YulFunctionCall","src":"6012:18:19"},"nodeType":"YulExpressionStatement","src":"6012:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5982:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5990:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5979:2:19"},"nodeType":"YulFunctionCall","src":"5979:30:19"},"nodeType":"YulIf","src":"5976:56:19"},{"nodeType":"YulAssignment","src":"6042:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6072:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6050:21:19"},"nodeType":"YulFunctionCall","src":"6050:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6042:4:19"}]},{"nodeType":"YulAssignment","src":"6116:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6128:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6134:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:19"},"nodeType":"YulFunctionCall","src":"6124:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6116:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5889:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5900:4:19","type":""}],"src":"5839:307:19"},{"body":{"nodeType":"YulBlock","src":"6216:82:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6239:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"6244:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6249:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6226:12:19"},"nodeType":"YulFunctionCall","src":"6226:30:19"},"nodeType":"YulExpressionStatement","src":"6226:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6276:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6281:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:19"},"nodeType":"YulFunctionCall","src":"6272:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"6290:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6265:6:19"},"nodeType":"YulFunctionCall","src":"6265:27:19"},"nodeType":"YulExpressionStatement","src":"6265:27:19"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6198:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6203:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"6208:6:19","type":""}],"src":"6152:146:19"},{"body":{"nodeType":"YulBlock","src":"6387:340:19","statements":[{"nodeType":"YulAssignment","src":"6397:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6463:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6422:40:19"},"nodeType":"YulFunctionCall","src":"6422:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6406:15:19"},"nodeType":"YulFunctionCall","src":"6406:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6397:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6487:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"6494:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6480:6:19"},"nodeType":"YulFunctionCall","src":"6480:21:19"},"nodeType":"YulExpressionStatement","src":"6480:21:19"},{"nodeType":"YulVariableDeclaration","src":"6510:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6525:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6532:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6521:3:19"},"nodeType":"YulFunctionCall","src":"6521:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6514:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6575:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"6577:77:19"},"nodeType":"YulFunctionCall","src":"6577:79:19"},"nodeType":"YulExpressionStatement","src":"6577:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6556:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6561:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6552:3:19"},"nodeType":"YulFunctionCall","src":"6552:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"6570:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6549:2:19"},"nodeType":"YulFunctionCall","src":"6549:25:19"},"nodeType":"YulIf","src":"6546:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6704:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"6709:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6714:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6667:36:19"},"nodeType":"YulFunctionCall","src":"6667:54:19"},"nodeType":"YulExpressionStatement","src":"6667:54:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6360:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"6365:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6373:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6381:5:19","type":""}],"src":"6304:423:19"},{"body":{"nodeType":"YulBlock","src":"6807:277:19","statements":[{"body":{"nodeType":"YulBlock","src":"6856:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6858:77:19"},"nodeType":"YulFunctionCall","src":"6858:79:19"},"nodeType":"YulExpressionStatement","src":"6858:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6835:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6843:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6831:3:19"},"nodeType":"YulFunctionCall","src":"6831:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"6850:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6827:3:19"},"nodeType":"YulFunctionCall","src":"6827:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6820:6:19"},"nodeType":"YulFunctionCall","src":"6820:35:19"},"nodeType":"YulIf","src":"6817:122:19"},{"nodeType":"YulVariableDeclaration","src":"6948:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6975:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6962:12:19"},"nodeType":"YulFunctionCall","src":"6962:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6952:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6991:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7051:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7059:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7047:3:19"},"nodeType":"YulFunctionCall","src":"7047:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"7066:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"7074:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7000:46:19"},"nodeType":"YulFunctionCall","src":"7000:78:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6991:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6785:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6793:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6801:5:19","type":""}],"src":"6746:338:19"},{"body":{"nodeType":"YulBlock","src":"7215:816:19","statements":[{"body":{"nodeType":"YulBlock","src":"7262:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7264:77:19"},"nodeType":"YulFunctionCall","src":"7264:79:19"},"nodeType":"YulExpressionStatement","src":"7264:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7236:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7245:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7232:3:19"},"nodeType":"YulFunctionCall","src":"7232:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7257:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7228:3:19"},"nodeType":"YulFunctionCall","src":"7228:33:19"},"nodeType":"YulIf","src":"7225:120:19"},{"nodeType":"YulBlock","src":"7355:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7370:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7384:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7374:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7399:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7433:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7444:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7429:3:19"},"nodeType":"YulFunctionCall","src":"7429:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7453:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"7409:19:19"},"nodeType":"YulFunctionCall","src":"7409:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7399:6:19"}]}]},{"nodeType":"YulBlock","src":"7481:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7496:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7510:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7500:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7526:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7561:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7572:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7557:3:19"},"nodeType":"YulFunctionCall","src":"7557:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7581:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7536:20:19"},"nodeType":"YulFunctionCall","src":"7536:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7526:6:19"}]}]},{"nodeType":"YulBlock","src":"7609:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7624:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7638:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7628:6:19","type":""}]},{"nodeType":"YulAssignment","src":"7654:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7689:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7700:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7685:3:19"},"nodeType":"YulFunctionCall","src":"7685:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7709:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7664:20:19"},"nodeType":"YulFunctionCall","src":"7664:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7654:6:19"}]}]},{"nodeType":"YulBlock","src":"7737:287:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7752:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7783:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7779:3:19"},"nodeType":"YulFunctionCall","src":"7779:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7766:12:19"},"nodeType":"YulFunctionCall","src":"7766:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7756:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7845:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7847:77:19"},"nodeType":"YulFunctionCall","src":"7847:79:19"},"nodeType":"YulExpressionStatement","src":"7847:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7817:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"7825:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7814:2:19"},"nodeType":"YulFunctionCall","src":"7814:30:19"},"nodeType":"YulIf","src":"7811:117:19"},{"nodeType":"YulAssignment","src":"7942:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7986:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7997:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7982:3:19"},"nodeType":"YulFunctionCall","src":"7982:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8006:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7952:29:19"},"nodeType":"YulFunctionCall","src":"7952:62:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7942:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7161:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7172:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7184:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7192:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7200:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7208:6:19","type":""}],"src":"7090:941:19"},{"body":{"nodeType":"YulBlock","src":"8204:1034:19","statements":[{"body":{"nodeType":"YulBlock","src":"8251:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8253:77:19"},"nodeType":"YulFunctionCall","src":"8253:79:19"},"nodeType":"YulExpressionStatement","src":"8253:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8225:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8234:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8221:3:19"},"nodeType":"YulFunctionCall","src":"8221:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"8246:3:19","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8217:3:19"},"nodeType":"YulFunctionCall","src":"8217:33:19"},"nodeType":"YulIf","src":"8214:120:19"},{"nodeType":"YulBlock","src":"8344:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8359:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8373:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8363:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8388:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8423:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8434:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8419:3:19"},"nodeType":"YulFunctionCall","src":"8419:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8443:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8398:20:19"},"nodeType":"YulFunctionCall","src":"8398:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8388:6:19"}]}]},{"nodeType":"YulBlock","src":"8471:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8486:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8500:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8490:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8516:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8551:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8562:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8547:3:19"},"nodeType":"YulFunctionCall","src":"8547:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8571:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8526:20:19"},"nodeType":"YulFunctionCall","src":"8526:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8516:6:19"}]}]},{"nodeType":"YulBlock","src":"8599:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8614:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8628:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8618:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8644:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8679:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8690:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8675:3:19"},"nodeType":"YulFunctionCall","src":"8675:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8699:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8654:20:19"},"nodeType":"YulFunctionCall","src":"8654:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8644:6:19"}]}]},{"nodeType":"YulBlock","src":"8727:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8742:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8756:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8746:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8772:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8807:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8818:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8803:3:19"},"nodeType":"YulFunctionCall","src":"8803:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8827:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8782:20:19"},"nodeType":"YulFunctionCall","src":"8782:53:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8772:6:19"}]}]},{"nodeType":"YulBlock","src":"8855:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8870:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8884:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8874:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8901:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8935:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8946:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8931:3:19"},"nodeType":"YulFunctionCall","src":"8931:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8955:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"8911:19:19"},"nodeType":"YulFunctionCall","src":"8911:52:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8901:6:19"}]}]},{"nodeType":"YulBlock","src":"8983:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8998:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9012:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9002:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9029:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9064:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9075:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9060:3:19"},"nodeType":"YulFunctionCall","src":"9060:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9084:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9039:20:19"},"nodeType":"YulFunctionCall","src":"9039:53:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9029:6:19"}]}]},{"nodeType":"YulBlock","src":"9112:119:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9127:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9141:3:19","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9131:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9158:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9193:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9204:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9189:3:19"},"nodeType":"YulFunctionCall","src":"9189:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9213:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9168:20:19"},"nodeType":"YulFunctionCall","src":"9168:53:19"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"9158:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8126:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8137:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8149:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8157:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8165:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8173:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8181:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8189:6:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8197:6:19","type":""}],"src":"8037:1201:19"},{"body":{"nodeType":"YulBlock","src":"9286:48:19","statements":[{"nodeType":"YulAssignment","src":"9296:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9321:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9314:6:19"},"nodeType":"YulFunctionCall","src":"9314:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9307:6:19"},"nodeType":"YulFunctionCall","src":"9307:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9296:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9268:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9278:7:19","type":""}],"src":"9244:90:19"},{"body":{"nodeType":"YulBlock","src":"9399:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9416:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9436:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9421:14:19"},"nodeType":"YulFunctionCall","src":"9421:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9409:6:19"},"nodeType":"YulFunctionCall","src":"9409:34:19"},"nodeType":"YulExpressionStatement","src":"9409:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9387:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9394:3:19","type":""}],"src":"9340:109:19"},{"body":{"nodeType":"YulBlock","src":"9547:118:19","statements":[{"nodeType":"YulAssignment","src":"9557:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9569:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9580:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9565:3:19"},"nodeType":"YulFunctionCall","src":"9565:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9557:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9631:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9644:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9655:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9640:3:19"},"nodeType":"YulFunctionCall","src":"9640:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"9593:37:19"},"nodeType":"YulFunctionCall","src":"9593:65:19"},"nodeType":"YulExpressionStatement","src":"9593:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9519:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9531:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9542:4:19","type":""}],"src":"9455:210:19"},{"body":{"nodeType":"YulBlock","src":"9745:66:19","statements":[{"nodeType":"YulAssignment","src":"9755:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9799:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9768:30:19"},"nodeType":"YulFunctionCall","src":"9768:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9755:9:19"}]}]},"name":"convert_t_contract$_IERC20_$979_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9725:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9735:9:19","type":""}],"src":"9671:140:19"},{"body":{"nodeType":"YulBlock","src":"9896:80:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9913:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9963:5:19"}],"functionName":{"name":"convert_t_contract$_IERC20_$979_to_t_address","nodeType":"YulIdentifier","src":"9918:44:19"},"nodeType":"YulFunctionCall","src":"9918:51:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9906:6:19"},"nodeType":"YulFunctionCall","src":"9906:64:19"},"nodeType":"YulExpressionStatement","src":"9906:64:19"}]},"name":"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9884:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9891:3:19","type":""}],"src":"9817:159:19"},{"body":{"nodeType":"YulBlock","src":"10094:138:19","statements":[{"nodeType":"YulAssignment","src":"10104:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10116:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10127:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10112:3:19"},"nodeType":"YulFunctionCall","src":"10112:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10104:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10198:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10211:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10222:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10207:3:19"},"nodeType":"YulFunctionCall","src":"10207:17:19"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10140:57:19"},"nodeType":"YulFunctionCall","src":"10140:85:19"},"nodeType":"YulExpressionStatement","src":"10140:85:19"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10066:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10078:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10089:4:19","type":""}],"src":"9982:250:19"},{"body":{"nodeType":"YulBlock","src":"10278:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"10332:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10341:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10344:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10334:6:19"},"nodeType":"YulFunctionCall","src":"10334:12:19"},"nodeType":"YulExpressionStatement","src":"10334:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10301:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10323:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10308:14:19"},"nodeType":"YulFunctionCall","src":"10308:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10298:2:19"},"nodeType":"YulFunctionCall","src":"10298:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10291:6:19"},"nodeType":"YulFunctionCall","src":"10291:40:19"},"nodeType":"YulIf","src":"10288:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10271:5:19","type":""}],"src":"10238:116:19"},{"body":{"nodeType":"YulBlock","src":"10409:84:19","statements":[{"nodeType":"YulAssignment","src":"10419:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10441:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10428:12:19"},"nodeType":"YulFunctionCall","src":"10428:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10419:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10481:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10457:23:19"},"nodeType":"YulFunctionCall","src":"10457:30:19"},"nodeType":"YulExpressionStatement","src":"10457:30:19"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10387:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"10395:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10403:5:19","type":""}],"src":"10360:133:19"},{"body":{"nodeType":"YulBlock","src":"10578:387:19","statements":[{"body":{"nodeType":"YulBlock","src":"10624:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10626:77:19"},"nodeType":"YulFunctionCall","src":"10626:79:19"},"nodeType":"YulExpressionStatement","src":"10626:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10599:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10608:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10595:3:19"},"nodeType":"YulFunctionCall","src":"10595:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"10620:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10591:3:19"},"nodeType":"YulFunctionCall","src":"10591:32:19"},"nodeType":"YulIf","src":"10588:119:19"},{"nodeType":"YulBlock","src":"10717:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10732:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10746:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10736:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10761:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10795:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10806:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10791:3:19"},"nodeType":"YulFunctionCall","src":"10791:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10815:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10771:19:19"},"nodeType":"YulFunctionCall","src":"10771:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10761:6:19"}]}]},{"nodeType":"YulBlock","src":"10843:115:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10858:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10872:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10862:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10888:60:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10920:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10931:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10916:3:19"},"nodeType":"YulFunctionCall","src":"10916:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10940:7:19"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10898:17:19"},"nodeType":"YulFunctionCall","src":"10898:50:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10888:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10540:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10551:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10563:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10571:6:19","type":""}],"src":"10499:466:19"},{"body":{"nodeType":"YulBlock","src":"11037:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"11083:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11085:77:19"},"nodeType":"YulFunctionCall","src":"11085:79:19"},"nodeType":"YulExpressionStatement","src":"11085:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11058:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11067:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11054:3:19"},"nodeType":"YulFunctionCall","src":"11054:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11050:3:19"},"nodeType":"YulFunctionCall","src":"11050:32:19"},"nodeType":"YulIf","src":"11047:119:19"},{"nodeType":"YulBlock","src":"11176:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11191:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11205:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11195:6:19","type":""}]},{"nodeType":"YulAssignment","src":"11220:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11255:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"11266:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11251:3:19"},"nodeType":"YulFunctionCall","src":"11251:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11275:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11230:20:19"},"nodeType":"YulFunctionCall","src":"11230:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11220:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11007:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11018:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11030:6:19","type":""}],"src":"10971:329:19"},{"body":{"nodeType":"YulBlock","src":"11369:260:19","statements":[{"body":{"nodeType":"YulBlock","src":"11415:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11417:77:19"},"nodeType":"YulFunctionCall","src":"11417:79:19"},"nodeType":"YulExpressionStatement","src":"11417:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11390:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11399:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11386:3:19"},"nodeType":"YulFunctionCall","src":"11386:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"11411:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11382:3:19"},"nodeType":"YulFunctionCall","src":"11382:32:19"},"nodeType":"YulIf","src":"11379:119:19"},{"nodeType":"YulBlock","src":"11508:114:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11523:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11537:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11527:6:19","type":""}]},{"nodeType":"YulAssignment","src":"11552:60:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11584:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"11595:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11580:3:19"},"nodeType":"YulFunctionCall","src":"11580:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11604:7:19"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11562:17:19"},"nodeType":"YulFunctionCall","src":"11562:50:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11552:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11339:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11350:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11362:6:19","type":""}],"src":"11306:323:19"},{"body":{"nodeType":"YulBlock","src":"11716:66:19","statements":[{"nodeType":"YulAssignment","src":"11726:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11770:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11739:30:19"},"nodeType":"YulFunctionCall","src":"11739:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11726:9:19"}]}]},"name":"convert_t_contract$_ILockingInfo_$3817_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11696:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11706:9:19","type":""}],"src":"11635:147:19"},{"body":{"nodeType":"YulBlock","src":"11874:87:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11891:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11948:5:19"}],"functionName":{"name":"convert_t_contract$_ILockingInfo_$3817_to_t_address","nodeType":"YulIdentifier","src":"11896:51:19"},"nodeType":"YulFunctionCall","src":"11896:58:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11884:6:19"},"nodeType":"YulFunctionCall","src":"11884:71:19"},"nodeType":"YulExpressionStatement","src":"11884:71:19"}]},"name":"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11862:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11869:3:19","type":""}],"src":"11788:173:19"},{"body":{"nodeType":"YulBlock","src":"12086:145:19","statements":[{"nodeType":"YulAssignment","src":"12096:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12108:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12119:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12104:3:19"},"nodeType":"YulFunctionCall","src":"12104:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12096:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12197:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12210:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12221:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12206:3:19"},"nodeType":"YulFunctionCall","src":"12206:17:19"}],"functionName":{"name":"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12132:64:19"},"nodeType":"YulFunctionCall","src":"12132:92:19"},"nodeType":"YulExpressionStatement","src":"12132:92:19"}]},"name":"abi_encode_tuple_t_contract$_ILockingInfo_$3817__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12058:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12070:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12081:4:19","type":""}],"src":"11967:264:19"},{"body":{"nodeType":"YulBlock","src":"12359:202:19","statements":[{"nodeType":"YulAssignment","src":"12369:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12381:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12392:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12377:3:19"},"nodeType":"YulFunctionCall","src":"12377:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12369:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12447:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12460:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12471:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12456:3:19"},"nodeType":"YulFunctionCall","src":"12456:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12405:41:19"},"nodeType":"YulFunctionCall","src":"12405:69:19"},"nodeType":"YulExpressionStatement","src":"12405:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12526:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12539:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12550:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12535:3:19"},"nodeType":"YulFunctionCall","src":"12535:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"12484:41:19"},"nodeType":"YulFunctionCall","src":"12484:70:19"},"nodeType":"YulExpressionStatement","src":"12484:70:19"}]},"name":"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12323:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12335:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12343:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12354:4:19","type":""}],"src":"12237:324:19"},{"body":{"nodeType":"YulBlock","src":"12791:413:19","statements":[{"nodeType":"YulAssignment","src":"12801:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12813:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12824:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12809:3:19"},"nodeType":"YulFunctionCall","src":"12809:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12801:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12882:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12895:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12906:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12891:3:19"},"nodeType":"YulFunctionCall","src":"12891:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12838:43:19"},"nodeType":"YulFunctionCall","src":"12838:71:19"},"nodeType":"YulExpressionStatement","src":"12838:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12984:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12997:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13008:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12993:3:19"},"nodeType":"YulFunctionCall","src":"12993:18:19"}],"functionName":{"name":"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12919:64:19"},"nodeType":"YulFunctionCall","src":"12919:93:19"},"nodeType":"YulExpressionStatement","src":"12919:93:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13087:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13100:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13111:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13096:3:19"},"nodeType":"YulFunctionCall","src":"13096:18:19"}],"functionName":{"name":"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13022:64:19"},"nodeType":"YulFunctionCall","src":"13022:93:19"},"nodeType":"YulExpressionStatement","src":"13022:93:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13169:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13182:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13193:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13178:3:19"},"nodeType":"YulFunctionCall","src":"13178:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13125:43:19"},"nodeType":"YulFunctionCall","src":"13125:72:19"},"nodeType":"YulExpressionStatement","src":"13125:72:19"}]},"name":"abi_encode_tuple_t_address_t_contract$_ILockingPool_$3940_t_contract$_ILockingInfo_$3817_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12739:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12751:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12759:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12767:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12775:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12786:4:19","type":""}],"src":"12567:637:19"},{"body":{"nodeType":"YulBlock","src":"13268:40:19","statements":[{"nodeType":"YulAssignment","src":"13279:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13295:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13289:5:19"},"nodeType":"YulFunctionCall","src":"13289:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13279:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13251:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13261:6:19","type":""}],"src":"13210:98:19"},{"body":{"nodeType":"YulBlock","src":"13409:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13426:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"13431:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13419:6:19"},"nodeType":"YulFunctionCall","src":"13419:19:19"},"nodeType":"YulExpressionStatement","src":"13419:19:19"},{"nodeType":"YulAssignment","src":"13447:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13466:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13471:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13462:3:19"},"nodeType":"YulFunctionCall","src":"13462:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13447:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13381:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"13386:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13397:11:19","type":""}],"src":"13314:168:19"},{"body":{"nodeType":"YulBlock","src":"13550:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13560:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13569:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13564:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"13629:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13654:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"13659:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13650:3:19"},"nodeType":"YulFunctionCall","src":"13650:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13673:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"13678:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13669:3:19"},"nodeType":"YulFunctionCall","src":"13669:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13663:5:19"},"nodeType":"YulFunctionCall","src":"13663:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13643:6:19"},"nodeType":"YulFunctionCall","src":"13643:39:19"},"nodeType":"YulExpressionStatement","src":"13643:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13590:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"13593:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13587:2:19"},"nodeType":"YulFunctionCall","src":"13587:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13601:19:19","statements":[{"nodeType":"YulAssignment","src":"13603:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13612:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"13615:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13608:3:19"},"nodeType":"YulFunctionCall","src":"13608:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13603:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"13583:3:19","statements":[]},"src":"13579:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13712:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"13717:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13708:3:19"},"nodeType":"YulFunctionCall","src":"13708:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"13726:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13701:6:19"},"nodeType":"YulFunctionCall","src":"13701:27:19"},"nodeType":"YulExpressionStatement","src":"13701:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13532:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13537:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"13542:6:19","type":""}],"src":"13488:246:19"},{"body":{"nodeType":"YulBlock","src":"13830:283:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13840:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13886:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13854:31:19"},"nodeType":"YulFunctionCall","src":"13854:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13844:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13901:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13966:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"13971:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13908:57:19"},"nodeType":"YulFunctionCall","src":"13908:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13901:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14026:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"14033:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14022:3:19"},"nodeType":"YulFunctionCall","src":"14022:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"14040:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"14045:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13987:34:19"},"nodeType":"YulFunctionCall","src":"13987:65:19"},"nodeType":"YulExpressionStatement","src":"13987:65:19"},{"nodeType":"YulAssignment","src":"14061:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14072:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14099:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14077:21:19"},"nodeType":"YulFunctionCall","src":"14077:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14068:3:19"},"nodeType":"YulFunctionCall","src":"14068:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14061:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13811:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13818:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13826:3:19","type":""}],"src":"13740:373:19"},{"body":{"nodeType":"YulBlock","src":"14263:275:19","statements":[{"nodeType":"YulAssignment","src":"14273:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14285:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14296:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14281:3:19"},"nodeType":"YulFunctionCall","src":"14281:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14273:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14353:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14366:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14377:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:19"},"nodeType":"YulFunctionCall","src":"14362:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14309:43:19"},"nodeType":"YulFunctionCall","src":"14309:71:19"},"nodeType":"YulExpressionStatement","src":"14309:71:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14401:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14412:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14397:3:19"},"nodeType":"YulFunctionCall","src":"14397:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14421:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14427:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14417:3:19"},"nodeType":"YulFunctionCall","src":"14417:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14390:6:19"},"nodeType":"YulFunctionCall","src":"14390:48:19"},"nodeType":"YulExpressionStatement","src":"14390:48:19"},{"nodeType":"YulAssignment","src":"14447:84:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14517:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"14526:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14455:61:19"},"nodeType":"YulFunctionCall","src":"14455:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14447:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14227:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14239:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14247:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14258:4:19","type":""}],"src":"14119:419:19"},{"body":{"nodeType":"YulBlock","src":"14668:204:19","statements":[{"nodeType":"YulAssignment","src":"14678:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14690:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14701:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14686:3:19"},"nodeType":"YulFunctionCall","src":"14686:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14678:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14756:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14769:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14780:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14765:3:19"},"nodeType":"YulFunctionCall","src":"14765:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14714:41:19"},"nodeType":"YulFunctionCall","src":"14714:69:19"},"nodeType":"YulExpressionStatement","src":"14714:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14837:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14850:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14861:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14846:3:19"},"nodeType":"YulFunctionCall","src":"14846:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14793:43:19"},"nodeType":"YulFunctionCall","src":"14793:72:19"},"nodeType":"YulExpressionStatement","src":"14793:72:19"}]},"name":"abi_encode_tuple_t_uint32_t_address__to_t_uint32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14632:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14644:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14652:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14663:4:19","type":""}],"src":"14544:328:19"},{"body":{"nodeType":"YulBlock","src":"14906:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14923:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14926:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14916:6:19"},"nodeType":"YulFunctionCall","src":"14916:88:19"},"nodeType":"YulExpressionStatement","src":"14916:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15020:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15023:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15013:6:19"},"nodeType":"YulFunctionCall","src":"15013:15:19"},"nodeType":"YulExpressionStatement","src":"15013:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15044:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15047:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15037:6:19"},"nodeType":"YulFunctionCall","src":"15037:15:19"},"nodeType":"YulExpressionStatement","src":"15037:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14878:180:19"},{"body":{"nodeType":"YulBlock","src":"15106:133:19","statements":[{"nodeType":"YulAssignment","src":"15116:32:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15142:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"15125:16:19"},"nodeType":"YulFunctionCall","src":"15125:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15116:5:19"}]},{"body":{"nodeType":"YulBlock","src":"15182:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15184:16:19"},"nodeType":"YulFunctionCall","src":"15184:18:19"},"nodeType":"YulExpressionStatement","src":"15184:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15163:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"15170:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15160:2:19"},"nodeType":"YulFunctionCall","src":"15160:21:19"},"nodeType":"YulIf","src":"15157:47:19"},{"nodeType":"YulAssignment","src":"15213:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15224:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"15231:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15220:3:19"},"nodeType":"YulFunctionCall","src":"15220:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15213:3:19"}]}]},"name":"increment_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15092:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15102:3:19","type":""}],"src":"15064:175:19"},{"body":{"nodeType":"YulBlock","src":"15273:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15290:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15293:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15283:6:19"},"nodeType":"YulFunctionCall","src":"15283:88:19"},"nodeType":"YulExpressionStatement","src":"15283:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15387:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15390:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15380:6:19"},"nodeType":"YulFunctionCall","src":"15380:15:19"},"nodeType":"YulExpressionStatement","src":"15380:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15411:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15414:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15404:6:19"},"nodeType":"YulFunctionCall","src":"15404:15:19"},"nodeType":"YulExpressionStatement","src":"15404:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15245:180:19"},{"body":{"nodeType":"YulBlock","src":"15520:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15537:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15540:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15530:6:19"},"nodeType":"YulFunctionCall","src":"15530:12:19"},"nodeType":"YulExpressionStatement","src":"15530:12:19"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"15431:117:19"},{"body":{"nodeType":"YulBlock","src":"15643:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15660:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15663:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15653:6:19"},"nodeType":"YulFunctionCall","src":"15653:12:19"},"nodeType":"YulExpressionStatement","src":"15653:12:19"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"15554:117:19"},{"body":{"nodeType":"YulBlock","src":"15740:80:19","statements":[{"nodeType":"YulAssignment","src":"15750:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15765:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15759:5:19"},"nodeType":"YulFunctionCall","src":"15759:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15750:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15808:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"15781:26:19"},"nodeType":"YulFunctionCall","src":"15781:33:19"},"nodeType":"YulExpressionStatement","src":"15781:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15718:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"15726:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15734:5:19","type":""}],"src":"15677:143:19"},{"body":{"nodeType":"YulBlock","src":"15889:80:19","statements":[{"nodeType":"YulAssignment","src":"15899:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15914:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15908:5:19"},"nodeType":"YulFunctionCall","src":"15908:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15899:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15957:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"15930:26:19"},"nodeType":"YulFunctionCall","src":"15930:33:19"},"nodeType":"YulExpressionStatement","src":"15930:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15867:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"15875:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15883:5:19","type":""}],"src":"15826:143:19"},{"body":{"nodeType":"YulBlock","src":"16113:1969:19","statements":[{"body":{"nodeType":"YulBlock","src":"16159:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"16161:77:19"},"nodeType":"YulFunctionCall","src":"16161:79:19"},"nodeType":"YulExpressionStatement","src":"16161:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"16134:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16139:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16130:3:19"},"nodeType":"YulFunctionCall","src":"16130:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"16151:6:19","type":"","value":"0x0140"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16126:3:19"},"nodeType":"YulFunctionCall","src":"16126:32:19"},"nodeType":"YulIf","src":"16123:119:19"},{"nodeType":"YulAssignment","src":"16251:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16276:6:19","type":"","value":"0x0140"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16260:15:19"},"nodeType":"YulFunctionCall","src":"16260:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16251:5:19"}]},{"nodeType":"YulBlock","src":"16293:163:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16330:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16344:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16334:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16370:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16377:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16366:3:19"},"nodeType":"YulFunctionCall","src":"16366:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16420:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16431:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16416:3:19"},"nodeType":"YulFunctionCall","src":"16416:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"16440:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16384:31:19"},"nodeType":"YulFunctionCall","src":"16384:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16359:6:19"},"nodeType":"YulFunctionCall","src":"16359:86:19"},"nodeType":"YulExpressionStatement","src":"16359:86:19"}]},{"nodeType":"YulBlock","src":"16466:164:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16503:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16517:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16507:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16544:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16551:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16540:3:19"},"nodeType":"YulFunctionCall","src":"16540:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16594:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16605:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16590:3:19"},"nodeType":"YulFunctionCall","src":"16590:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"16614:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16558:31:19"},"nodeType":"YulFunctionCall","src":"16558:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16533:6:19"},"nodeType":"YulFunctionCall","src":"16533:86:19"},"nodeType":"YulExpressionStatement","src":"16533:86:19"}]},{"nodeType":"YulBlock","src":"16640:173:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16686:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16700:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16690:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16727:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16734:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16723:3:19"},"nodeType":"YulFunctionCall","src":"16723:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16777:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16788:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16773:3:19"},"nodeType":"YulFunctionCall","src":"16773:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"16797:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16741:31:19"},"nodeType":"YulFunctionCall","src":"16741:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16716:6:19"},"nodeType":"YulFunctionCall","src":"16716:86:19"},"nodeType":"YulExpressionStatement","src":"16716:86:19"}]},{"nodeType":"YulBlock","src":"16823:170:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16866:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16880:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16870:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16907:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16914:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16903:3:19"},"nodeType":"YulFunctionCall","src":"16903:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16957:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16968:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16953:3:19"},"nodeType":"YulFunctionCall","src":"16953:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"16977:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16921:31:19"},"nodeType":"YulFunctionCall","src":"16921:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16896:6:19"},"nodeType":"YulFunctionCall","src":"16896:86:19"},"nodeType":"YulExpressionStatement","src":"16896:86:19"}]},{"nodeType":"YulBlock","src":"17003:176:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17051:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17065:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17055:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17093:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17089:3:19"},"nodeType":"YulFunctionCall","src":"17089:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17143:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17154:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17139:3:19"},"nodeType":"YulFunctionCall","src":"17139:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17163:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17107:31:19"},"nodeType":"YulFunctionCall","src":"17107:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17082:6:19"},"nodeType":"YulFunctionCall","src":"17082:86:19"},"nodeType":"YulExpressionStatement","src":"17082:86:19"}]},{"nodeType":"YulBlock","src":"17189:175:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17236:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17250:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17240:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17278:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17285:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17274:3:19"},"nodeType":"YulFunctionCall","src":"17274:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17328:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17339:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17324:3:19"},"nodeType":"YulFunctionCall","src":"17324:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17348:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17292:31:19"},"nodeType":"YulFunctionCall","src":"17292:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17267:6:19"},"nodeType":"YulFunctionCall","src":"17267:86:19"},"nodeType":"YulExpressionStatement","src":"17267:86:19"}]},{"nodeType":"YulBlock","src":"17374:174:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17420:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17434:3:19","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17424:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17462:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17469:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17458:3:19"},"nodeType":"YulFunctionCall","src":"17458:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17512:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17523:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17508:3:19"},"nodeType":"YulFunctionCall","src":"17508:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17532:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17476:31:19"},"nodeType":"YulFunctionCall","src":"17476:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17451:6:19"},"nodeType":"YulFunctionCall","src":"17451:86:19"},"nodeType":"YulExpressionStatement","src":"17451:86:19"}]},{"nodeType":"YulBlock","src":"17558:164:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17594:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17608:3:19","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17598:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17636:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17643:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17632:3:19"},"nodeType":"YulFunctionCall","src":"17632:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17686:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17697:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17682:3:19"},"nodeType":"YulFunctionCall","src":"17682:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17706:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17650:31:19"},"nodeType":"YulFunctionCall","src":"17650:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17625:6:19"},"nodeType":"YulFunctionCall","src":"17625:86:19"},"nodeType":"YulExpressionStatement","src":"17625:86:19"}]},{"nodeType":"YulBlock","src":"17732:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17768:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17782:3:19","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17772:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17810:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17817:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17806:3:19"},"nodeType":"YulFunctionCall","src":"17806:18:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17862:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17873:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17858:3:19"},"nodeType":"YulFunctionCall","src":"17858:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17882:3:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"17826:31:19"},"nodeType":"YulFunctionCall","src":"17826:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17799:6:19"},"nodeType":"YulFunctionCall","src":"17799:88:19"},"nodeType":"YulExpressionStatement","src":"17799:88:19"}]},{"nodeType":"YulBlock","src":"17908:167:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17945:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17959:3:19","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17949:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17987:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17994:6:19","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17983:3:19"},"nodeType":"YulFunctionCall","src":"17983:18:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18039:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"18050:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18035:3:19"},"nodeType":"YulFunctionCall","src":"18035:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"18059:3:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"18003:31:19"},"nodeType":"YulFunctionCall","src":"18003:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17976:6:19"},"nodeType":"YulFunctionCall","src":"17976:88:19"},"nodeType":"YulExpressionStatement","src":"17976:88:19"}]}]},"name":"abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16088:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"16099:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16107:5:19","type":""}],"src":"16016:2066:19"},{"body":{"nodeType":"YulBlock","src":"18196:306:19","statements":[{"body":{"nodeType":"YulBlock","src":"18243:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18245:77:19"},"nodeType":"YulFunctionCall","src":"18245:79:19"},"nodeType":"YulExpressionStatement","src":"18245:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18217:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"18226:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18213:3:19"},"nodeType":"YulFunctionCall","src":"18213:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"18238:3:19","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18209:3:19"},"nodeType":"YulFunctionCall","src":"18209:33:19"},"nodeType":"YulIf","src":"18206:120:19"},{"nodeType":"YulBlock","src":"18336:159:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18351:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18365:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18355:6:19","type":""}]},{"nodeType":"YulAssignment","src":"18380:105:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18457:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"18468:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18453:3:19"},"nodeType":"YulFunctionCall","src":"18453:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18477:7:19"}],"functionName":{"name":"abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"18390:62:19"},"nodeType":"YulFunctionCall","src":"18390:95:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18380:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_SequencerData_$3844_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18166:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18177:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18189:6:19","type":""}],"src":"18088:414:19"},{"body":{"nodeType":"YulBlock","src":"18552:147:19","statements":[{"nodeType":"YulAssignment","src":"18562:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18585:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18567:17:19"},"nodeType":"YulFunctionCall","src":"18567:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18562:1:19"}]},{"nodeType":"YulAssignment","src":"18596:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18619:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18601:17:19"},"nodeType":"YulFunctionCall","src":"18601:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18596:1:19"}]},{"nodeType":"YulAssignment","src":"18630:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18641:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"18644:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18637:3:19"},"nodeType":"YulFunctionCall","src":"18637:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18630:3:19"}]},{"body":{"nodeType":"YulBlock","src":"18670:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18672:16:19"},"nodeType":"YulFunctionCall","src":"18672:18:19"},"nodeType":"YulExpressionStatement","src":"18672:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18662:1:19"},{"name":"sum","nodeType":"YulIdentifier","src":"18665:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18659:2:19"},"nodeType":"YulFunctionCall","src":"18659:10:19"},"nodeType":"YulIf","src":"18656:36:19"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18539:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"18542:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18548:3:19","type":""}],"src":"18508:191:19"},{"body":{"nodeType":"YulBlock","src":"18859:288:19","statements":[{"nodeType":"YulAssignment","src":"18869:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18881:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18892:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18877:3:19"},"nodeType":"YulFunctionCall","src":"18877:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18869:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18949:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18962:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18973:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18958:3:19"},"nodeType":"YulFunctionCall","src":"18958:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18905:43:19"},"nodeType":"YulFunctionCall","src":"18905:71:19"},"nodeType":"YulExpressionStatement","src":"18905:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19030:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19043:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19054:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19039:3:19"},"nodeType":"YulFunctionCall","src":"19039:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18986:43:19"},"nodeType":"YulFunctionCall","src":"18986:72:19"},"nodeType":"YulExpressionStatement","src":"18986:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19112:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19125:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19136:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19121:3:19"},"nodeType":"YulFunctionCall","src":"19121:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19068:43:19"},"nodeType":"YulFunctionCall","src":"19068:72:19"},"nodeType":"YulExpressionStatement","src":"19068:72:19"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18815:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18827:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18835:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18843:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18854:4:19","type":""}],"src":"18705:442:19"},{"body":{"nodeType":"YulBlock","src":"19213:77:19","statements":[{"nodeType":"YulAssignment","src":"19223:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19238:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19232:5:19"},"nodeType":"YulFunctionCall","src":"19232:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19223:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19278:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"19254:23:19"},"nodeType":"YulFunctionCall","src":"19254:30:19"},"nodeType":"YulExpressionStatement","src":"19254:30:19"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19191:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"19199:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19207:5:19","type":""}],"src":"19153:137:19"},{"body":{"nodeType":"YulBlock","src":"19370:271:19","statements":[{"body":{"nodeType":"YulBlock","src":"19416:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19418:77:19"},"nodeType":"YulFunctionCall","src":"19418:79:19"},"nodeType":"YulExpressionStatement","src":"19418:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19391:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"19400:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19387:3:19"},"nodeType":"YulFunctionCall","src":"19387:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"19412:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19383:3:19"},"nodeType":"YulFunctionCall","src":"19383:32:19"},"nodeType":"YulIf","src":"19380:119:19"},{"nodeType":"YulBlock","src":"19509:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19524:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19538:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19528:6:19","type":""}]},{"nodeType":"YulAssignment","src":"19553:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19596:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"19607:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19592:3:19"},"nodeType":"YulFunctionCall","src":"19592:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19616:7:19"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"19563:28:19"},"nodeType":"YulFunctionCall","src":"19563:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19553:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19340:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19351:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19363:6:19","type":""}],"src":"19296:345:19"},{"body":{"nodeType":"YulBlock","src":"19847:440:19","statements":[{"nodeType":"YulAssignment","src":"19857:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19869:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19880:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19865:3:19"},"nodeType":"YulFunctionCall","src":"19865:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19857:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19938:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19951:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19962:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19947:3:19"},"nodeType":"YulFunctionCall","src":"19947:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19894:43:19"},"nodeType":"YulFunctionCall","src":"19894:71:19"},"nodeType":"YulExpressionStatement","src":"19894:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20019:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20032:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20043:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20028:3:19"},"nodeType":"YulFunctionCall","src":"20028:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19975:43:19"},"nodeType":"YulFunctionCall","src":"19975:72:19"},"nodeType":"YulExpressionStatement","src":"19975:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20101:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20114:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20125:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20110:3:19"},"nodeType":"YulFunctionCall","src":"20110:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20057:43:19"},"nodeType":"YulFunctionCall","src":"20057:72:19"},"nodeType":"YulExpressionStatement","src":"20057:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20150:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20161:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20146:3:19"},"nodeType":"YulFunctionCall","src":"20146:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20170:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20176:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20166:3:19"},"nodeType":"YulFunctionCall","src":"20166:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20139:6:19"},"nodeType":"YulFunctionCall","src":"20139:48:19"},"nodeType":"YulExpressionStatement","src":"20139:48:19"},{"nodeType":"YulAssignment","src":"20196:84:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20266:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"20275:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20204:61:19"},"nodeType":"YulFunctionCall","src":"20204:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20196:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19795:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19807:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19815:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19823:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19831:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19842:4:19","type":""}],"src":"19647:640:19"},{"body":{"nodeType":"YulBlock","src":"20389:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20406:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"20411:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20399:6:19"},"nodeType":"YulFunctionCall","src":"20399:19:19"},"nodeType":"YulExpressionStatement","src":"20399:19:19"},{"nodeType":"YulAssignment","src":"20427:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20446:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20451:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20442:3:19"},"nodeType":"YulFunctionCall","src":"20442:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20427:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20361:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"20366:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20377:11:19","type":""}],"src":"20293:169:19"},{"body":{"nodeType":"YulBlock","src":"20574:64:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20596:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20604:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20592:3:19"},"nodeType":"YulFunctionCall","src":"20592:14:19"},{"hexValue":"4465616c65723a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"20608:22:19","type":"","value":"Dealer: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20585:6:19"},"nodeType":"YulFunctionCall","src":"20585:46:19"},"nodeType":"YulExpressionStatement","src":"20585:46:19"}]},"name":"store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20566:6:19","type":""}],"src":"20468:170:19"},{"body":{"nodeType":"YulBlock","src":"20790:220:19","statements":[{"nodeType":"YulAssignment","src":"20800:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20866:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20871:2:19","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20807:58:19"},"nodeType":"YulFunctionCall","src":"20807:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20800:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20972:3:19"}],"functionName":{"name":"store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","nodeType":"YulIdentifier","src":"20883:88:19"},"nodeType":"YulFunctionCall","src":"20883:93:19"},"nodeType":"YulExpressionStatement","src":"20883:93:19"},{"nodeType":"YulAssignment","src":"20985:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20996:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21001:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20992:3:19"},"nodeType":"YulFunctionCall","src":"20992:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20985:3:19"}]}]},"name":"abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20778:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20786:3:19","type":""}],"src":"20644:366:19"},{"body":{"nodeType":"YulBlock","src":"21187:248:19","statements":[{"nodeType":"YulAssignment","src":"21197:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21209:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21220:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21205:3:19"},"nodeType":"YulFunctionCall","src":"21205:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21197:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21244:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21255:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21240:3:19"},"nodeType":"YulFunctionCall","src":"21240:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21263:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21269:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21259:3:19"},"nodeType":"YulFunctionCall","src":"21259:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21233:6:19"},"nodeType":"YulFunctionCall","src":"21233:47:19"},"nodeType":"YulExpressionStatement","src":"21233:47:19"},{"nodeType":"YulAssignment","src":"21289:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21423:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21297:124:19"},"nodeType":"YulFunctionCall","src":"21297:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21289:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21167:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21182:4:19","type":""}],"src":"21016:419:19"},{"body":{"nodeType":"YulBlock","src":"21507:51:19","statements":[{"nodeType":"YulAssignment","src":"21517:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21546:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21528:17:19"},"nodeType":"YulFunctionCall","src":"21528:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21517:7:19"}]}]},"name":"cleanup_t_contract$_ILockingInfo_$3817","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21489:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21499:7:19","type":""}],"src":"21441:117:19"},{"body":{"nodeType":"YulBlock","src":"21628:100:19","statements":[{"body":{"nodeType":"YulBlock","src":"21706:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21715:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21718:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21708:6:19"},"nodeType":"YulFunctionCall","src":"21708:12:19"},"nodeType":"YulExpressionStatement","src":"21708:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21651:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21697:5:19"}],"functionName":{"name":"cleanup_t_contract$_ILockingInfo_$3817","nodeType":"YulIdentifier","src":"21658:38:19"},"nodeType":"YulFunctionCall","src":"21658:45:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21648:2:19"},"nodeType":"YulFunctionCall","src":"21648:56:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21641:6:19"},"nodeType":"YulFunctionCall","src":"21641:64:19"},"nodeType":"YulIf","src":"21638:84:19"}]},"name":"validator_revert_t_contract$_ILockingInfo_$3817","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21621:5:19","type":""}],"src":"21564:164:19"},{"body":{"nodeType":"YulBlock","src":"21818:101:19","statements":[{"nodeType":"YulAssignment","src":"21828:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21843:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21837:5:19"},"nodeType":"YulFunctionCall","src":"21837:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21828:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21907:5:19"}],"functionName":{"name":"validator_revert_t_contract$_ILockingInfo_$3817","nodeType":"YulIdentifier","src":"21859:47:19"},"nodeType":"YulFunctionCall","src":"21859:54:19"},"nodeType":"YulExpressionStatement","src":"21859:54:19"}]},"name":"abi_decode_t_contract$_ILockingInfo_$3817_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21796:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"21804:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21812:5:19","type":""}],"src":"21734:185:19"},{"body":{"nodeType":"YulBlock","src":"22023:295:19","statements":[{"body":{"nodeType":"YulBlock","src":"22069:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22071:77:19"},"nodeType":"YulFunctionCall","src":"22071:79:19"},"nodeType":"YulExpressionStatement","src":"22071:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22044:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22053:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22040:3:19"},"nodeType":"YulFunctionCall","src":"22040:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"22065:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22036:3:19"},"nodeType":"YulFunctionCall","src":"22036:32:19"},"nodeType":"YulIf","src":"22033:119:19"},{"nodeType":"YulBlock","src":"22162:149:19","statements":[{"nodeType":"YulVariableDeclaration","src":"22177:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"22191:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22181:6:19","type":""}]},{"nodeType":"YulAssignment","src":"22206:95:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22273:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"22284:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22269:3:19"},"nodeType":"YulFunctionCall","src":"22269:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22293:7:19"}],"functionName":{"name":"abi_decode_t_contract$_ILockingInfo_$3817_fromMemory","nodeType":"YulIdentifier","src":"22216:52:19"},"nodeType":"YulFunctionCall","src":"22216:85:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22206:6:19"}]}]}]},"name":"abi_decode_tuple_t_contract$_ILockingInfo_$3817_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21993:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22004:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22016:6:19","type":""}],"src":"21925:393:19"},{"body":{"nodeType":"YulBlock","src":"22401:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"22447:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22449:77:19"},"nodeType":"YulFunctionCall","src":"22449:79:19"},"nodeType":"YulExpressionStatement","src":"22449:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22422:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22431:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22418:3:19"},"nodeType":"YulFunctionCall","src":"22418:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"22443:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22414:3:19"},"nodeType":"YulFunctionCall","src":"22414:32:19"},"nodeType":"YulIf","src":"22411:119:19"},{"nodeType":"YulBlock","src":"22540:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"22555:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"22569:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22559:6:19","type":""}]},{"nodeType":"YulAssignment","src":"22584:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22630:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"22641:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22626:3:19"},"nodeType":"YulFunctionCall","src":"22626:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22650:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"22594:31:19"},"nodeType":"YulFunctionCall","src":"22594:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22584:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22371:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22382:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22394:6:19","type":""}],"src":"22324:351:19"},{"body":{"nodeType":"YulBlock","src":"22734:32:19","statements":[{"nodeType":"YulAssignment","src":"22744:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"22755:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22744:7:19"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22716:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22726:7:19","type":""}],"src":"22681:85:19"},{"body":{"nodeType":"YulBlock","src":"22816:57:19","statements":[{"nodeType":"YulAssignment","src":"22826:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22841:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"22848:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22837:3:19"},"nodeType":"YulFunctionCall","src":"22837:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22826:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22798:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22808:7:19","type":""}],"src":"22772:101:19"},{"body":{"nodeType":"YulBlock","src":"22946:89:19","statements":[{"nodeType":"YulAssignment","src":"22956:73:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23021:5:19"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"22995:25:19"},"nodeType":"YulFunctionCall","src":"22995:32:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"22986:8:19"},"nodeType":"YulFunctionCall","src":"22986:42:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"22969:16:19"},"nodeType":"YulFunctionCall","src":"22969:60:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22956:9:19"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22926:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22936:9:19","type":""}],"src":"22879:156:19"},{"body":{"nodeType":"YulBlock","src":"23113:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23130:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23173:5:19"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"23135:37:19"},"nodeType":"YulFunctionCall","src":"23135:44:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23123:6:19"},"nodeType":"YulFunctionCall","src":"23123:57:19"},"nodeType":"YulExpressionStatement","src":"23123:57:19"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23101:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23108:3:19","type":""}],"src":"23041:145:19"},{"body":{"nodeType":"YulBlock","src":"23297:131:19","statements":[{"nodeType":"YulAssignment","src":"23307:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23319:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23330:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23315:3:19"},"nodeType":"YulFunctionCall","src":"23315:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23307:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23394:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23407:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23418:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23403:3:19"},"nodeType":"YulFunctionCall","src":"23403:17:19"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"23343:50:19"},"nodeType":"YulFunctionCall","src":"23343:78:19"},"nodeType":"YulExpressionStatement","src":"23343:78:19"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23269:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23281:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23292:4:19","type":""}],"src":"23192:236:19"},{"body":{"nodeType":"YulBlock","src":"23540:71:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23562:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"23570:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23558:3:19"},"nodeType":"YulFunctionCall","src":"23558:14:19"},{"hexValue":"4465616c65723a206e6f206163746976652073657175656e636572","kind":"string","nodeType":"YulLiteral","src":"23574:29:19","type":"","value":"Dealer: no active sequencer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23551:6:19"},"nodeType":"YulFunctionCall","src":"23551:53:19"},"nodeType":"YulExpressionStatement","src":"23551:53:19"}]},"name":"store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23532:6:19","type":""}],"src":"23434:177:19"},{"body":{"nodeType":"YulBlock","src":"23763:220:19","statements":[{"nodeType":"YulAssignment","src":"23773:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23839:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"23844:2:19","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23780:58:19"},"nodeType":"YulFunctionCall","src":"23780:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23773:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23945:3:19"}],"functionName":{"name":"store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","nodeType":"YulIdentifier","src":"23856:88:19"},"nodeType":"YulFunctionCall","src":"23856:93:19"},"nodeType":"YulExpressionStatement","src":"23856:93:19"},{"nodeType":"YulAssignment","src":"23958:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23969:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"23974:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23965:3:19"},"nodeType":"YulFunctionCall","src":"23965:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23958:3:19"}]}]},"name":"abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23751:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23759:3:19","type":""}],"src":"23617:366:19"},{"body":{"nodeType":"YulBlock","src":"24160:248:19","statements":[{"nodeType":"YulAssignment","src":"24170:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24182:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24193:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24178:3:19"},"nodeType":"YulFunctionCall","src":"24178:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24170:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24217:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24228:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24213:3:19"},"nodeType":"YulFunctionCall","src":"24213:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24236:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24242:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24232:3:19"},"nodeType":"YulFunctionCall","src":"24232:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24206:6:19"},"nodeType":"YulFunctionCall","src":"24206:47:19"},"nodeType":"YulExpressionStatement","src":"24206:47:19"},{"nodeType":"YulAssignment","src":"24262:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24396:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24270:124:19"},"nodeType":"YulFunctionCall","src":"24270:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24262:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24140:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24155:4:19","type":""}],"src":"23989:419:19"},{"body":{"nodeType":"YulBlock","src":"24491:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"24537:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24539:77:19"},"nodeType":"YulFunctionCall","src":"24539:79:19"},"nodeType":"YulExpressionStatement","src":"24539:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24512:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24521:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24508:3:19"},"nodeType":"YulFunctionCall","src":"24508:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"24533:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24504:3:19"},"nodeType":"YulFunctionCall","src":"24504:32:19"},"nodeType":"YulIf","src":"24501:119:19"},{"nodeType":"YulBlock","src":"24630:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"24645:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"24659:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24649:6:19","type":""}]},{"nodeType":"YulAssignment","src":"24674:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24720:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"24731:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24716:3:19"},"nodeType":"YulFunctionCall","src":"24716:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24740:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"24684:31:19"},"nodeType":"YulFunctionCall","src":"24684:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24674:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24461:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24472:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24484:6:19","type":""}],"src":"24414:351:19"},{"body":{"nodeType":"YulBlock","src":"24816:149:19","statements":[{"nodeType":"YulAssignment","src":"24826:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24849:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24831:17:19"},"nodeType":"YulFunctionCall","src":"24831:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24826:1:19"}]},{"nodeType":"YulAssignment","src":"24860:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24883:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24865:17:19"},"nodeType":"YulFunctionCall","src":"24865:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24860:1:19"}]},{"nodeType":"YulAssignment","src":"24894:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24906:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"24909:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24902:3:19"},"nodeType":"YulFunctionCall","src":"24902:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24894:4:19"}]},{"body":{"nodeType":"YulBlock","src":"24936:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24938:16:19"},"nodeType":"YulFunctionCall","src":"24938:18:19"},"nodeType":"YulExpressionStatement","src":"24938:18:19"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"24927:4:19"},{"name":"x","nodeType":"YulIdentifier","src":"24933:1:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24924:2:19"},"nodeType":"YulFunctionCall","src":"24924:11:19"},"nodeType":"YulIf","src":"24921:37:19"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24802:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"24805:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24811:4:19","type":""}],"src":"24771:194:19"},{"body":{"nodeType":"YulBlock","src":"25097:206:19","statements":[{"nodeType":"YulAssignment","src":"25107:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25119:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25130:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25115:3:19"},"nodeType":"YulFunctionCall","src":"25115:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25107:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25187:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25200:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25211:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25196:3:19"},"nodeType":"YulFunctionCall","src":"25196:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25143:43:19"},"nodeType":"YulFunctionCall","src":"25143:71:19"},"nodeType":"YulExpressionStatement","src":"25143:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25268:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25281:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25292:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25277:3:19"},"nodeType":"YulFunctionCall","src":"25277:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25224:43:19"},"nodeType":"YulFunctionCall","src":"25224:72:19"},"nodeType":"YulExpressionStatement","src":"25224:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25061:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25073:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25081:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25092:4:19","type":""}],"src":"24971:332:19"},{"body":{"nodeType":"YulBlock","src":"25461:286:19","statements":[{"nodeType":"YulAssignment","src":"25471:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25483:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25494:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25479:3:19"},"nodeType":"YulFunctionCall","src":"25479:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25471:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25549:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25562:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25573:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25558:3:19"},"nodeType":"YulFunctionCall","src":"25558:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"25507:41:19"},"nodeType":"YulFunctionCall","src":"25507:69:19"},"nodeType":"YulExpressionStatement","src":"25507:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25630:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25643:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25654:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25639:3:19"},"nodeType":"YulFunctionCall","src":"25639:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25586:43:19"},"nodeType":"YulFunctionCall","src":"25586:72:19"},"nodeType":"YulExpressionStatement","src":"25586:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25712:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25725:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25736:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25721:3:19"},"nodeType":"YulFunctionCall","src":"25721:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25668:43:19"},"nodeType":"YulFunctionCall","src":"25668:72:19"},"nodeType":"YulExpressionStatement","src":"25668:72:19"}]},"name":"abi_encode_tuple_t_uint32_t_uint256_t_uint256__to_t_uint32_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25417:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25429:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25437:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25445:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25456:4:19","type":""}],"src":"25309:438:19"},{"body":{"nodeType":"YulBlock","src":"25867:194:19","statements":[{"nodeType":"YulAssignment","src":"25877:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25889:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25900:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25885:3:19"},"nodeType":"YulFunctionCall","src":"25885:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25877:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25951:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25964:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25975:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25960:3:19"},"nodeType":"YulFunctionCall","src":"25960:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25913:37:19"},"nodeType":"YulFunctionCall","src":"25913:65:19"},"nodeType":"YulExpressionStatement","src":"25913:65:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26026:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26039:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26050:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26035:3:19"},"nodeType":"YulFunctionCall","src":"26035:18:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25988:37:19"},"nodeType":"YulFunctionCall","src":"25988:66:19"},"nodeType":"YulExpressionStatement","src":"25988:66:19"}]},"name":"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25831:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25843:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25851:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25862:4:19","type":""}],"src":"25753:308:19"},{"body":{"nodeType":"YulBlock","src":"26173:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26195:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"26203:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26191:3:19"},"nodeType":"YulFunctionCall","src":"26191:14:19"},{"hexValue":"4465616c65723a206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"26207:20:19","type":"","value":"Dealer: not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26184:6:19"},"nodeType":"YulFunctionCall","src":"26184:44:19"},"nodeType":"YulExpressionStatement","src":"26184:44:19"}]},"name":"store_literal_in_memory_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26165:6:19","type":""}],"src":"26067:168:19"},{"body":{"nodeType":"YulBlock","src":"26387:220:19","statements":[{"nodeType":"YulAssignment","src":"26397:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26463:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26468:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26404:58:19"},"nodeType":"YulFunctionCall","src":"26404:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26397:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26569:3:19"}],"functionName":{"name":"store_literal_in_memory_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef","nodeType":"YulIdentifier","src":"26480:88:19"},"nodeType":"YulFunctionCall","src":"26480:93:19"},"nodeType":"YulExpressionStatement","src":"26480:93:19"},{"nodeType":"YulAssignment","src":"26582:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26593:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26598:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26589:3:19"},"nodeType":"YulFunctionCall","src":"26589:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26582:3:19"}]}]},"name":"abi_encode_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26375:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26383:3:19","type":""}],"src":"26241:366:19"},{"body":{"nodeType":"YulBlock","src":"26784:248:19","statements":[{"nodeType":"YulAssignment","src":"26794:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26806:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26817:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26802:3:19"},"nodeType":"YulFunctionCall","src":"26802:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26794:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26841:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"26852:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26837:3:19"},"nodeType":"YulFunctionCall","src":"26837:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26860:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"26866:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26856:3:19"},"nodeType":"YulFunctionCall","src":"26856:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26830:6:19"},"nodeType":"YulFunctionCall","src":"26830:47:19"},"nodeType":"YulExpressionStatement","src":"26830:47:19"},{"nodeType":"YulAssignment","src":"26886:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27020:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26894:124:19"},"nodeType":"YulFunctionCall","src":"26894:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26886:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26764:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26779:4:19","type":""}],"src":"26613:419:19"},{"body":{"nodeType":"YulBlock","src":"27066:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27083:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27086:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27076:6:19"},"nodeType":"YulFunctionCall","src":"27076:88:19"},"nodeType":"YulExpressionStatement","src":"27076:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27180:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27183:4:19","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27173:6:19"},"nodeType":"YulFunctionCall","src":"27173:15:19"},"nodeType":"YulExpressionStatement","src":"27173:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27204:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27207:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27197:6:19"},"nodeType":"YulFunctionCall","src":"27197:15:19"},"nodeType":"YulExpressionStatement","src":"27197:15:19"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"27038:180:19"},{"body":{"nodeType":"YulBlock","src":"27330:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27352:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"27360:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27348:3:19"},"nodeType":"YulFunctionCall","src":"27348:14:19"},{"hexValue":"4465616c65723a20616c726561647920616374697665","kind":"string","nodeType":"YulLiteral","src":"27364:24:19","type":"","value":"Dealer: already active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27341:6:19"},"nodeType":"YulFunctionCall","src":"27341:48:19"},"nodeType":"YulExpressionStatement","src":"27341:48:19"}]},"name":"store_literal_in_memory_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27322:6:19","type":""}],"src":"27224:172:19"},{"body":{"nodeType":"YulBlock","src":"27548:220:19","statements":[{"nodeType":"YulAssignment","src":"27558:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27624:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27629:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27565:58:19"},"nodeType":"YulFunctionCall","src":"27565:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27558:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27730:3:19"}],"functionName":{"name":"store_literal_in_memory_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3","nodeType":"YulIdentifier","src":"27641:88:19"},"nodeType":"YulFunctionCall","src":"27641:93:19"},"nodeType":"YulExpressionStatement","src":"27641:93:19"},{"nodeType":"YulAssignment","src":"27743:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27754:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27759:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27750:3:19"},"nodeType":"YulFunctionCall","src":"27750:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27743:3:19"}]}]},"name":"abi_encode_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27536:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27544:3:19","type":""}],"src":"27402:366:19"},{"body":{"nodeType":"YulBlock","src":"27945:248:19","statements":[{"nodeType":"YulAssignment","src":"27955:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27967:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27978:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27963:3:19"},"nodeType":"YulFunctionCall","src":"27963:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27955:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28002:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28013:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27998:3:19"},"nodeType":"YulFunctionCall","src":"27998:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28021:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"28027:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28017:3:19"},"nodeType":"YulFunctionCall","src":"28017:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27991:6:19"},"nodeType":"YulFunctionCall","src":"27991:47:19"},"nodeType":"YulExpressionStatement","src":"27991:47:19"},{"nodeType":"YulAssignment","src":"28047:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28181:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28055:124:19"},"nodeType":"YulFunctionCall","src":"28055:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28047:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27925:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27940:4:19","type":""}],"src":"27774:419:19"},{"body":{"nodeType":"YulBlock","src":"28397:438:19","statements":[{"nodeType":"YulAssignment","src":"28407:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28419:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28430:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28415:3:19"},"nodeType":"YulFunctionCall","src":"28415:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28407:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28488:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28501:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28512:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28497:3:19"},"nodeType":"YulFunctionCall","src":"28497:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28444:43:19"},"nodeType":"YulFunctionCall","src":"28444:71:19"},"nodeType":"YulExpressionStatement","src":"28444:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28569:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28582:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28593:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28578:3:19"},"nodeType":"YulFunctionCall","src":"28578:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28525:43:19"},"nodeType":"YulFunctionCall","src":"28525:72:19"},"nodeType":"YulExpressionStatement","src":"28525:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28618:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28629:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28614:3:19"},"nodeType":"YulFunctionCall","src":"28614:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28638:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"28644:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28634:3:19"},"nodeType":"YulFunctionCall","src":"28634:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28607:6:19"},"nodeType":"YulFunctionCall","src":"28607:48:19"},"nodeType":"YulExpressionStatement","src":"28607:48:19"},{"nodeType":"YulAssignment","src":"28664:84:19","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28734:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"28743:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28672:61:19"},"nodeType":"YulFunctionCall","src":"28672:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28664:4:19"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28800:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28813:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28824:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28809:3:19"},"nodeType":"YulFunctionCall","src":"28809:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"28758:41:19"},"nodeType":"YulFunctionCall","src":"28758:70:19"},"nodeType":"YulExpressionStatement","src":"28758:70:19"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__to_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28345:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28357:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28365:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28373:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28381:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28392:4:19","type":""}],"src":"28199:636:19"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICrossDomainMessenger_$3607_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICrossDomainMessenger_$3607_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICrossDomainMessenger_$3607_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICrossDomainMessenger_$3607__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICrossDomainMessenger_$3607_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILockingPool_$3940_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILockingPool_$3940_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILockingPool_$3940__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint32t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$979_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$979_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_ILockingInfo_$3817_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILockingInfo_$3817_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILockingInfo_$3817__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_contract$_ILockingPool_$3940_t_contract$_ILockingInfo_$3817_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_address__to_t_uint32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct ILockingPool.SequencerData\n    function abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0140) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // amount\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // reward\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // activationBatch\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // updatedBatch\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // deactivationBatch\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // deactivationTime\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // unlockClaimTime\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // nonce\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // owner\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // signer\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_SequencerData_$3844_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_contract$_ILockingInfo_$3817(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ILockingInfo_$3817(value) {\n        if iszero(eq(value, cleanup_t_contract$_ILockingInfo_$3817(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ILockingInfo_$3817_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ILockingInfo_$3817(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ILockingInfo_$3817_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ILockingInfo_$3817_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: no active sequencer\")\n\n    }\n\n    function abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint256_t_uint256__to_t_uint32_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbc3f3a52ba812f9f5331106dbc687a9434256fa4d1253880dba73ddee6aaeef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: already active\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7f3a717fdece88a54056d4dc257f84cea4f6098f7b9747df862b3d1d08e53f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__to_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405260043610620002065760003560e01c80638da5cb5b116200011b578063e597455411620000a3578063efa412d0116200006d578063efa412d014620006f5578063f2fde38b1462000723578063f7cee36a1462000751578063f87b7a3e14620007815762000206565b8063e59745541462000639578063e92d61e51462000669578063e956eaf11462000699578063eb2c579814620006c75762000206565b8063b699ce5f11620000e5578063b699ce5f1462000589578063c53b573d14620005b7578063c7b8981c14620005d9578063d6ae3cd514620006095762000206565b80638da5cb5b14620004cb5780638db8ad8814620004fb5780639e935704146200052b578063af372db7146200055b5762000206565b80633cbb6979116200019f57806367d93c81116200016957806367d93c811462000431578063715018a614620004515780637ca4f8b0146200046b57806385d1e2b8146200049b5762000206565b80633cbb6979146200035d578063457cb586146200038d5780635689141214620003d15780635c60da1b14620004015762000206565b80631abdaf6a11620001e15780631abdaf6a146200028b57806333bec7e714620002cf57806335cd359914620002fd5780633cb747bf146200032d5762000206565b8063080e1e4e146200020b5780631152eb41146200023b5780631221e6a5146200026b575b600080fd5b3480156200021857600080fd5b5062000223620007af565b604051620002329190620026ab565b60405180910390f35b3480156200024857600080fd5b5062000253620007d5565b604051620002629190620026e9565b60405180910390f35b6200028960048036038101906200028391906200274b565b620007e2565b005b3480156200029857600080fd5b50620002b76004803603810190620002b19190620027b8565b620008af565b604051620002c69190620026e9565b60405180910390f35b348015620002dc57600080fd5b50620002fb6004803603810190620002f591906200274b565b620008ea565b005b3480156200030a57600080fd5b50620003156200096b565b604051620003249190620026e9565b60405180910390f35b3480156200033a57600080fd5b506200034562000b9a565b60405162000354919062002855565b60405180910390f35b3480156200036a57600080fd5b506200037562000bc0565b604051620003849190620026e9565b60405180910390f35b3480156200039a57600080fd5b50620003b96004803603810190620003b391906200274b565b62000bd6565b604051620003c89190620026ab565b60405180910390f35b348015620003de57600080fd5b50620003e962000c09565b604051620003f8919062002883565b60405180910390f35b3480156200040e57600080fd5b506200041962000d5e565b604051620004289190620026ab565b60405180910390f35b6200044f60048036038101906200044991906200274b565b62000d87565b005b3480156200045e57600080fd5b506200046962000e60565b005b3480156200047857600080fd5b506200048362000e78565b60405162000492919062002883565b60405180910390f35b348015620004a857600080fd5b50620004b362000e7e565b604051620004c29190620028c5565b60405180910390f35b348015620004d857600080fd5b50620004e362000ea4565b604051620004f29190620026ab565b60405180910390f35b3480156200050857600080fd5b506200051362000ede565b604051620005229190620026ab565b60405180910390f35b3480156200053857600080fd5b506200054362000f02565b604051620005529190620026e9565b60405180910390f35b3480156200056857600080fd5b5062000587600480360381019062000581919062002a75565b62000f18565b005b3480156200059657600080fd5b50620005b56004803603810190620005af919062002b06565b620010b9565b005b620005c162001667565b604051620005d0919062002883565b60405180910390f35b348015620005e657600080fd5b50620005f162001c28565b60405162000600919062002bd6565b60405180910390f35b3480156200061657600080fd5b506200062162001c3b565b60405162000630919062002883565b60405180910390f35b3480156200064657600080fd5b506200065162001c41565b60405162000660919062002c18565b60405180910390f35b3480156200067657600080fd5b506200068162001c67565b604051620006909190620026ab565b60405180910390f35b348015620006a657600080fd5b50620006c56004803603810190620006bf919062002c66565b62001c8d565b005b348015620006d457600080fd5b50620006f36004803603810190620006ed919062002cad565b62001ca7565b005b3480156200070257600080fd5b506200072160048036038101906200071b919062002cdf565b62001d66565b005b3480156200073057600080fd5b506200074f600480360381019062000749919062002cad565b62001ddd565b005b3480156200075e57600080fd5b506200076962001e6a565b60405162000778919062002d36565b60405180910390f35b3480156200078e57600080fd5b50620007ad6004803603810190620007a7919062002cad565b62001e90565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a80549050905090565b620007ec62001ed4565b600860008263ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631221e6a5600c60009054906101000a900463ffffffff166040518263ffffffff1660e01b8152600401620008789190620026e9565b600060405180830381600087803b1580156200089357600080fd5b505af1158015620008a8573d6000803e3d6000fd5b5050505050565b600a8181548110620008c057600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b620008f462001ed4565b6000600c60009054906101000a900463ffffffff16905081600c60006101000a81548163ffffffff021916908363ffffffff1602179055507f4042b09a75e5a67c8cc2a57e00de6d29fb5202b7207afba895eb8b5cc3e2179e81836040516200095f92919062002d53565b60405180910390a15050565b60006200097762001ed4565b600063f8c8765e60e01b30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160240162000a00949392919062002d80565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000308260405162000a719062002658565b62000a7e92919062002e56565b604051809103906000f08015801562000a9b573d6000803e3d6000fd5b5090506000600960009054906101000a900463ffffffff16905081600860008363ffffffff1663ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcdf0e51b92207a6c5cfa485e975b62686da57da9499feafd12185ee26a860d9818360405162000b4692919062002e8a565b60405180910390a16009600081819054906101000a900463ffffffff168092919062000b729062002ee6565b91906101000a81548163ffffffff021916908363ffffffff1602179055505080935050505090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900463ffffffff1681565b60086020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000905060005b600a805490508163ffffffff16101562000d56576000600a8263ffffffff168154811062000c465762000c4562002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690506000600860008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166376d9f95c6040518163ffffffff1660e01b815260040161014060405180830381865afa15801562000d01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d27919062003088565b600001519050808562000d3b9190620030bb565b9450505050808062000d4d9062002ee6565b91505062000c13565b508091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62000d9162001ed4565b600860008263ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367d93c81600c60009054906101000a900463ffffffff166040518263ffffffff1660e01b815260040162000e1d9190620026e9565b600060405180830381600087803b15801562000e3857600080fd5b505af115801562000e4d573d6000803e3d6000fd5b5050505062000e5c8162001f64565b5050565b62000e6a62001ed4565b62000e766000620020ae565b565b600b5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008062000eb162002187565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900463ffffffff1681565b62000f2262001ed4565b6000600860008663ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383866040518463ffffffff1660e01b815260040162000fc793929190620030f6565b6020604051808303816000875af115801562000fe7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200100d91906200314a565b508073ffffffffffffffffffffffffffffffffffffffff1663ce6df54a85600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040518563ffffffff1660e01b81526004016200107194939291906200317c565b600060405180830381600087803b1580156200108c57600080fd5b505af1158015620010a1573d6000803e3d6000fd5b50505050620010b2856001620021af565b5050505050565b6000620010c5620022dc565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015620011145750825b9050600060018367ffffffffffffffff161480156200114a575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801562001159575080155b1562001191576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315620011e25760018560000160086101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16141580156200124d5750600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614155b8015620012875750600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614155b8015620012c15750600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b8015620012fb5750600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b6200133d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620013349062003231565b60405180910390fd5b620013483362002304565b8b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2fdcc176040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001438573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200145e919062003298565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508973ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620014ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015109190620032ca565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860058190555087600c60006101000a81548163ffffffff021916908363ffffffff16021790555086600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315620016595760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405162001650919062003353565b60405180910390a15b505050505050505050505050565b600080600a8054905011620016b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620016aa90620033c0565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c0b3e466040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017499190620033e2565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401620017aa9190620026ab565b602060405180830381865afa158015620017c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017ee9190620033e2565b90506000805b600a805490508163ffffffff16101562001bf0576000600a8263ffffffff168154811062001827576200182662002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690506000600860008363ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166376d9f95c6040518163ffffffff1660e01b815260040161014060405180830381865afa158015620018e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001908919062003088565b905060008082602001518360000151915091508187620019299190620030bb565b965060008982106200193d5760006200194c565b818a6200194b919062003414565b5b905060006200195c828b6200231c565b9050808a6200196c919062003414565b9950600084826200197e9190620030bb565b9050600081036200199757505050505050505062001bda565b808d620019a59190620030bb565b9c506000600c60049054906101000a900460ff1680620019d157508c8286620019cf9190620030bb565b115b9050808015620019e15750600086115b1562001a69578773ffffffffffffffffffffffffffffffffffffffff166356387b91600c60009054906101000a900463ffffffff166040518263ffffffff1660e01b815260040162001a349190620026e9565b600060405180830381600087803b15801562001a4f57600080fd5b505af115801562001a64573d6000803e3d6000fd5b505050505b80158062001a775750600083115b1562001bd057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89856040518363ffffffff1660e01b815260040162001adc9291906200344f565b6020604051808303816000875af115801562001afc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b2291906200314a565b508773ffffffffffffffffffffffffffffffffffffffff1663a98d38f0846040518263ffffffff1660e01b815260040162001b5e919062002883565b600060405180830381600087803b15801562001b7957600080fd5b505af115801562001b8e573d6000803e3d6000fd5b505050507fb8aafdec9bacdc76bfea3c330063c391a2904d4f91e71f97a91534f3c8ce4ab589848860405162001bc7939291906200347c565b60405180910390a15b5050505050505050505b808062001be79062002ee6565b915050620017f4565b50600081111562001c225762001c068162002337565b80600b600082825462001c1a9190620030bb565b925050819055505b50505090565b600c60049054906101000a900460ff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b62001c9762001ed4565b62001ca38282620021af565b5050565b62001cb162001ed4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362001d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001d1a9062003231565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62001d7062001ed4565b6000600c60049054906101000a900460ff16905081600c60046101000a81548160ff0219169083151502179055507fba50596d5d8d3fffda559f307b84b1b0bdba201192d70b393820eab501346b1e818360405162001dd1929190620034b9565b60405180910390a15050565b62001de762001ed4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362001e5c5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162001e539190620026ab565b60405180910390fd5b62001e6781620020ae565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62001ede620024be565b73ffffffffffffffffffffffffffffffffffffffff1662001efe62000ea4565b73ffffffffffffffffffffffffffffffffffffffff161462001f625762001f24620024be565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162001f599190620026ab565b60405180910390fd5b565b600062001f7182620024c6565b905063ffffffff80168163ffffffff161062001fc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001fbb9062003536565b60405180910390fd5b600a6001600a8054905062001fda919062003414565b8154811062001fee5762001fed62002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16600a8263ffffffff168154811062002031576200203062002f17565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550600a80548062002079576200207862003558565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055919050565b6000620020ba62002187565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b8015620022cb5760005b600a805490508163ffffffff16101562002276578263ffffffff16600a8263ffffffff1681548110620021f157620021f062002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff160362002260576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200225790620035d7565b60405180910390fd5b80806200226d9062002ee6565b915050620021b9565b50600a8290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff160217905550620022d8565b620022d68262001f64565b505b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6200230e62002566565b6200231981620025a9565b50565b60008183106200232d57816200232f565b825b905092915050565b600063eb82afb360e01b8260405160240162002354919062002883565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344dd5ed634600554600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600c60009054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016200244d9493929190620035f9565b6000604051808303818588803b1580156200246757600080fd5b505af11580156200247c573d6000803e3d6000fd5b50505050507fd644e527c1896057ce642adfbc00f04d6b23d4c2fb30529522184d151dc087dc82604051620024b2919062002883565b60405180910390a15050565b600033905090565b600080600090505b600a805490508163ffffffff16101562002558578263ffffffff16600a8263ffffffff168154811062002506576200250562002f17565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff160362002542578091505062002561565b80806200254f9062002ee6565b915050620024ce565b5063ffffffff90505b919050565b6200257062002636565b620025a7576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b620025b362002566565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620026285760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200261f9190620026ab565b60405180910390fd5b6200263381620020ae565b50565b600062002642620022dc565b60000160089054906101000a900460ff16905090565b610960806200364e83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620026938262002666565b9050919050565b620026a58162002686565b82525050565b6000602082019050620026c260008301846200269a565b92915050565b600063ffffffff82169050919050565b620026e381620026c8565b82525050565b6000602082019050620027006000830184620026d8565b92915050565b6000604051905090565b600080fd5b600080fd5b6200272581620026c8565b81146200273157600080fd5b50565b60008135905062002745816200271a565b92915050565b60006020828403121562002764576200276362002710565b5b6000620027748482850162002734565b91505092915050565b6000819050919050565b62002792816200277d565b81146200279e57600080fd5b50565b600081359050620027b28162002787565b92915050565b600060208284031215620027d157620027d062002710565b5b6000620027e184828501620027a1565b91505092915050565b6000819050919050565b6000620028156200280f620028098462002666565b620027ea565b62002666565b9050919050565b60006200282982620027f4565b9050919050565b60006200283d826200281c565b9050919050565b6200284f8162002830565b82525050565b60006020820190506200286c600083018462002844565b92915050565b6200287d816200277d565b82525050565b60006020820190506200289a600083018462002872565b92915050565b6000620028ad826200281c565b9050919050565b620028bf81620028a0565b82525050565b6000602082019050620028dc6000830184620028b4565b92915050565b620028ed8162002686565b8114620028f957600080fd5b50565b6000813590506200290d81620028e2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62002968826200291d565b810181811067ffffffffffffffff821117156200298a57620029896200292e565b5b80604052505050565b60006200299f62002706565b9050620029ad82826200295d565b919050565b600067ffffffffffffffff821115620029d057620029cf6200292e565b5b620029db826200291d565b9050602081019050919050565b82818337600083830152505050565b600062002a0e62002a0884620029b2565b62002993565b90508281526020810184848401111562002a2d5762002a2c62002918565b5b62002a3a848285620029e8565b509392505050565b600082601f83011262002a5a5762002a5962002913565b5b813562002a6c848260208601620029f7565b91505092915050565b6000806000806080858703121562002a925762002a9162002710565b5b600062002aa28782880162002734565b945050602062002ab587828801620028fc565b935050604062002ac887828801620027a1565b925050606085013567ffffffffffffffff81111562002aec5762002aeb62002715565b5b62002afa8782880162002a42565b91505092959194509250565b600080600080600080600060e0888a03121562002b285762002b2762002710565b5b600062002b388a828b01620028fc565b975050602062002b4b8a828b01620028fc565b965050604062002b5e8a828b01620028fc565b955050606062002b718a828b01620027a1565b945050608062002b848a828b0162002734565b93505060a062002b978a828b01620028fc565b92505060c062002baa8a828b01620028fc565b91505092959891949750929550565b60008115159050919050565b62002bd08162002bb9565b82525050565b600060208201905062002bed600083018462002bc5565b92915050565b600062002c00826200281c565b9050919050565b62002c128162002bf3565b82525050565b600060208201905062002c2f600083018462002c07565b92915050565b62002c408162002bb9565b811462002c4c57600080fd5b50565b60008135905062002c608162002c35565b92915050565b6000806040838503121562002c805762002c7f62002710565b5b600062002c908582860162002734565b925050602062002ca38582860162002c4f565b9150509250929050565b60006020828403121562002cc65762002cc562002710565b5b600062002cd684828501620028fc565b91505092915050565b60006020828403121562002cf85762002cf762002710565b5b600062002d088482850162002c4f565b91505092915050565b600062002d1e826200281c565b9050919050565b62002d308162002d11565b82525050565b600060208201905062002d4d600083018462002d25565b92915050565b600060408201905062002d6a6000830185620026d8565b62002d796020830184620026d8565b9392505050565b600060808201905062002d9760008301876200269a565b62002da66020830186620028b4565b62002db5604083018562002d25565b62002dc460608301846200269a565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562002e0957808201518184015260208101905062002dec565b60008484015250505050565b600062002e228262002dcd565b62002e2e818562002dd8565b935062002e4081856020860162002de9565b62002e4b816200291d565b840191505092915050565b600060408201905062002e6d60008301856200269a565b818103602083015262002e81818462002e15565b90509392505050565b600060408201905062002ea16000830185620026d8565b62002eb060208301846200269a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062002ef382620026c8565b915063ffffffff820362002f0c5762002f0b62002eb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008151905062002f5c8162002787565b92915050565b60008151905062002f7381620028e2565b92915050565b6000610140828403121562002f935762002f9262002f46565b5b62002fa061014062002993565b9050600062002fb28482850162002f4b565b600083015250602062002fc88482850162002f4b565b602083015250604062002fde8482850162002f4b565b604083015250606062002ff48482850162002f4b565b60608301525060806200300a8482850162002f4b565b60808301525060a0620030208482850162002f4b565b60a08301525060c0620030368482850162002f4b565b60c08301525060e06200304c8482850162002f4b565b60e083015250610100620030638482850162002f62565b610100830152506101206200307b8482850162002f62565b6101208301525092915050565b60006101408284031215620030a257620030a162002710565b5b6000620030b28482850162002f79565b91505092915050565b6000620030c8826200277d565b9150620030d5836200277d565b9250828201905080821115620030f057620030ef62002eb7565b5b92915050565b60006060820190506200310d60008301866200269a565b6200311c60208301856200269a565b6200312b604083018462002872565b949350505050565b600081519050620031448162002c35565b92915050565b60006020828403121562003163576200316262002710565b5b6000620031738482850162003133565b91505092915050565b60006080820190506200319360008301876200269a565b620031a260208301866200269a565b620031b1604083018562002872565b8181036060830152620031c5818462002e15565b905095945050505050565b600082825260208201905092915050565b7f4465616c65723a207a65726f2061646472657373000000000000000000000000600082015250565b600062003219601483620031d0565b91506200322682620031e1565b602082019050919050565b600060208201905081810360008301526200324c816200320a565b9050919050565b6000620032608262002686565b9050919050565b620032728162003253565b81146200327e57600080fd5b50565b600081519050620032928162003267565b92915050565b600060208284031215620032b157620032b062002710565b5b6000620032c18482850162003281565b91505092915050565b600060208284031215620032e357620032e262002710565b5b6000620032f38482850162002f62565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006200333b620033356200332f84620032fc565b620027ea565b62003306565b9050919050565b6200334d816200331a565b82525050565b60006020820190506200336a600083018462003342565b92915050565b7f4465616c65723a206e6f206163746976652073657175656e6365720000000000600082015250565b6000620033a8601b83620031d0565b9150620033b58262003370565b602082019050919050565b60006020820190508181036000830152620033db8162003399565b9050919050565b600060208284031215620033fb57620033fa62002710565b5b60006200340b8482850162002f4b565b91505092915050565b600062003421826200277d565b91506200342e836200277d565b925082820390508181111562003449576200344862002eb7565b5b92915050565b60006040820190506200346660008301856200269a565b62003475602083018462002872565b9392505050565b6000606082019050620034936000830186620026d8565b620034a2602083018562002872565b620034b1604083018462002872565b949350505050565b6000604082019050620034d0600083018562002bc5565b620034df602083018462002bc5565b9392505050565b7f4465616c65723a206e6f74206163746976650000000000000000000000000000600082015250565b60006200351e601283620031d0565b91506200352b82620034e6565b602082019050919050565b6000602082019050818103600083015262003551816200350f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4465616c65723a20616c72656164792061637469766500000000000000000000600082015250565b6000620035bf601683620031d0565b9150620035cc8262003587565b602082019050919050565b60006020820190508181036000830152620035f281620035b0565b9050919050565b600060808201905062003610600083018762002872565b6200361f60208301866200269a565b818103604083015262003633818562002e15565b9050620036446060830184620026d8565b9594505050505056fe60a060405260405161096038038061096083398181016040528101906100259190610684565b610035828261007060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610795565b61007f8261016360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a26000815111156101505761014a8273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906106e0565b8261030660201b60201c565b5061015f565b61015e61039060201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036101bf57806040517f64ced0ec0000000000000000000000000000000000000000000000000000000081526004016101b6919061071c565b60405180910390fd5b806101f27fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6103cd60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906106e0565b905060008173ffffffffffffffffffffffffffffffffffffffff163b0361030257806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102f9919061071c565b60405180910390fd5b5050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051610330919061077e565b600060405180830381855af49150503d806000811461036b576040519150601f19603f3d011682016040523d82523d6000602084013e610370565b606091505b50915091506103868583836103d760201b60201c565b9250505092915050565b60003411156103cb576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826103f2576103ed8261046c60201b60201c565b610464565b6000825114801561041a575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561045c57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610453919061071c565b60405180910390fd5b819050610465565b5b9392505050565b60008151111561047f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104c5565b9050919050565b610500816104e5565b811461050b57600080fd5b50565b60008151905061051d816104f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105768261052d565b810181811067ffffffffffffffff821117156105955761059461053e565b5b80604052505050565b60006105a86104b1565b90506105b4828261056d565b919050565b600067ffffffffffffffff8211156105d4576105d361053e565b5b6105dd8261052d565b9050602081019050919050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000610627610622846105b9565b61059e565b90508281526020810184848401111561064357610642610528565b5b61064e8482856105ea565b509392505050565b600082601f83011261066b5761066a610523565b5b815161067b848260208601610614565b91505092915050565b6000806040838503121561069b5761069a6104bb565b5b60006106a98582860161050e565b925050602083015167ffffffffffffffff8111156106ca576106c96104c0565b5b6106d685828601610656565b9150509250929050565b6000602082840312156106f6576106f56104bb565b5b60006107048482850161050e565b91505092915050565b610716816104e5565b82525050565b6000602082019050610731600083018461070d565b92915050565b600081519050919050565b600081905092915050565b600061075882610737565b6107628185610742565b93506107728185602086016105ea565b80840191505092915050565b600061078a828461074d565b915081905092915050565b6080516101b16107af600039600060c701526101b16000f3fe608060405261000c61000e565b005b61001e610019610020565b61009d565b565b600061002a6100c3565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610098919061014e565b905090565b3660008037600080366000845af43d6000803e80600081146100be573d6000f35b3d6000fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b600060208284031215610164576101636100eb565b5b600061017284828501610139565b9150509291505056fea2646970667358221220318efb3add371acc6afd6545498a71373c16dc1386e578ed8c02b6ac326dd4ca64736f6c63430008140033a2646970667358221220c1cd81b7e855501f00e4d4303ee5f053fb5b8dc4ff8d872930f08118f016cc4d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0x11B JUMPI DUP1 PUSH4 0xE5974554 GT PUSH3 0xA3 JUMPI DUP1 PUSH4 0xEFA412D0 GT PUSH3 0x6D JUMPI DUP1 PUSH4 0xEFA412D0 EQ PUSH3 0x6F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x723 JUMPI DUP1 PUSH4 0xF7CEE36A EQ PUSH3 0x751 JUMPI DUP1 PUSH4 0xF87B7A3E EQ PUSH3 0x781 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0xE5974554 EQ PUSH3 0x639 JUMPI DUP1 PUSH4 0xE92D61E5 EQ PUSH3 0x669 JUMPI DUP1 PUSH4 0xE956EAF1 EQ PUSH3 0x699 JUMPI DUP1 PUSH4 0xEB2C5798 EQ PUSH3 0x6C7 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0xB699CE5F GT PUSH3 0xE5 JUMPI DUP1 PUSH4 0xB699CE5F EQ PUSH3 0x589 JUMPI DUP1 PUSH4 0xC53B573D EQ PUSH3 0x5B7 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH3 0x5D9 JUMPI DUP1 PUSH4 0xD6AE3CD5 EQ PUSH3 0x609 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x4CB JUMPI DUP1 PUSH4 0x8DB8AD88 EQ PUSH3 0x4FB JUMPI DUP1 PUSH4 0x9E935704 EQ PUSH3 0x52B JUMPI DUP1 PUSH4 0xAF372DB7 EQ PUSH3 0x55B JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 GT PUSH3 0x19F JUMPI DUP1 PUSH4 0x67D93C81 GT PUSH3 0x169 JUMPI DUP1 PUSH4 0x67D93C81 EQ PUSH3 0x431 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x451 JUMPI DUP1 PUSH4 0x7CA4F8B0 EQ PUSH3 0x46B JUMPI DUP1 PUSH4 0x85D1E2B8 EQ PUSH3 0x49B JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 EQ PUSH3 0x35D JUMPI DUP1 PUSH4 0x457CB586 EQ PUSH3 0x38D JUMPI DUP1 PUSH4 0x56891412 EQ PUSH3 0x3D1 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH3 0x401 JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x1ABDAF6A GT PUSH3 0x1E1 JUMPI DUP1 PUSH4 0x1ABDAF6A EQ PUSH3 0x28B JUMPI DUP1 PUSH4 0x33BEC7E7 EQ PUSH3 0x2CF JUMPI DUP1 PUSH4 0x35CD3599 EQ PUSH3 0x2FD JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH3 0x32D JUMPI PUSH3 0x206 JUMP JUMPDEST DUP1 PUSH4 0x80E1E4E EQ PUSH3 0x20B JUMPI DUP1 PUSH4 0x1152EB41 EQ PUSH3 0x23B JUMPI DUP1 PUSH4 0x1221E6A5 EQ PUSH3 0x26B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x223 PUSH3 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x232 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x253 PUSH3 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x262 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x283 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x27B8 JUMP JUMPDEST PUSH3 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2C6 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0x8EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x315 PUSH3 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x324 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x345 PUSH3 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x354 SWAP2 SWAP1 PUSH3 0x2855 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x375 PUSH3 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x384 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x3B3 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3C8 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E9 PUSH3 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3F8 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x419 PUSH3 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x428 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x449 SWAP2 SWAP1 PUSH3 0x274B JUMP JUMPDEST PUSH3 0xD87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x469 PUSH3 0xE60 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x483 PUSH3 0xE78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x492 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4B3 PUSH3 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4C2 SWAP2 SWAP1 PUSH3 0x28C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4E3 PUSH3 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4F2 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x513 PUSH3 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x522 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x543 PUSH3 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x552 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x581 SWAP2 SWAP1 PUSH3 0x2A75 JUMP JUMPDEST PUSH3 0xF18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x5AF SWAP2 SWAP1 PUSH3 0x2B06 JUMP JUMPDEST PUSH3 0x10B9 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x5C1 PUSH3 0x1667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x5D0 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x5F1 PUSH3 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x600 SWAP2 SWAP1 PUSH3 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x621 PUSH3 0x1C3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x630 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x651 PUSH3 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x660 SWAP2 SWAP1 PUSH3 0x2C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x681 PUSH3 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x690 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x6C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6BF SWAP2 SWAP1 PUSH3 0x2C66 JUMP JUMPDEST PUSH3 0x1C8D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x6F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6ED SWAP2 SWAP1 PUSH3 0x2CAD JUMP JUMPDEST PUSH3 0x1CA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x71B SWAP2 SWAP1 PUSH3 0x2CDF JUMP JUMPDEST PUSH3 0x1D66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x749 SWAP2 SWAP1 PUSH3 0x2CAD JUMP JUMPDEST PUSH3 0x1DDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x769 PUSH3 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x778 SWAP2 SWAP1 PUSH3 0x2D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x7AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x7A7 SWAP2 SWAP1 PUSH3 0x2CAD JUMP JUMPDEST PUSH3 0x1E90 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x7EC PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1221E6A5 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x878 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH3 0x8F4 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4042B09A75E5A67C8CC2A57E00DE6D29FB5202B7207AFBA895EB8B5CC3E2179E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0x95F SWAP3 SWAP2 SWAP1 PUSH3 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x977 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF8C8765E PUSH1 0xE0 SHL ADDRESS PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0xA00 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 ADDRESS DUP3 PUSH1 0x40 MLOAD PUSH3 0xA71 SWAP1 PUSH3 0x2658 JUMP JUMPDEST PUSH3 0xA7E SWAP3 SWAP2 SWAP1 PUSH3 0x2E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFCDF0E51B92207A6C5CFA485E975B62686DA57DA9499FEAFD12185EE26A860D9 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0xB46 SWAP3 SWAP2 SWAP1 PUSH3 0x2E8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x9 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH3 0xB72 SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0xD56 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0xC46 JUMPI PUSH3 0xC45 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x76D9F95C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xD01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD27 SWAP2 SWAP1 PUSH3 0x3088 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP DUP1 DUP6 PUSH3 0xD3B SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH3 0xD4D SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xC13 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xD91 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x67D93C81 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE1D SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xE5C DUP2 PUSH3 0x1F64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0xE6A PUSH3 0x1ED4 JUMP JUMPDEST PUSH3 0xE76 PUSH1 0x0 PUSH3 0x20AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xEB1 PUSH3 0x2187 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH3 0xF22 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFC7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x30F6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xFE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x100D SWAP2 SWAP1 PUSH3 0x314A JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE6DF54A DUP6 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1071 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x317C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x108C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0x10B2 DUP6 PUSH1 0x1 PUSH3 0x21AF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10C5 PUSH3 0x22DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x1114 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH3 0x114A JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH3 0x1159 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH3 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH3 0x11E2 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x124D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x1287 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x12C1 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x12FB JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x133D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1334 SWAP1 PUSH3 0x3231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1348 CALLER PUSH3 0x2304 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2FDCC17 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1438 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x145E SWAP2 SWAP1 PUSH3 0x3298 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CB747BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x14EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1510 SWAP2 SWAP1 PUSH3 0x32CA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH3 0x1659 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH3 0x1650 SWAP2 SWAP1 PUSH3 0x3353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA DUP1 SLOAD SWAP1 POP GT PUSH3 0x16B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16AA SWAP1 PUSH3 0x33C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6C0B3E46 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1749 SWAP2 SWAP1 PUSH3 0x33E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17AA SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x17C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x17EE SWAP2 SWAP1 PUSH3 0x33E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x1BF0 JUMPI PUSH1 0x0 PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x1827 JUMPI PUSH3 0x1826 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x76D9F95C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x18E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1908 SWAP2 SWAP1 PUSH3 0x3088 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD SWAP2 POP SWAP2 POP DUP2 DUP8 PUSH3 0x1929 SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP10 DUP3 LT PUSH3 0x193D JUMPI PUSH1 0x0 PUSH3 0x194C JUMP JUMPDEST DUP2 DUP11 PUSH3 0x194B SWAP2 SWAP1 PUSH3 0x3414 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x195C DUP3 DUP12 PUSH3 0x231C JUMP JUMPDEST SWAP1 POP DUP1 DUP11 PUSH3 0x196C SWAP2 SWAP1 PUSH3 0x3414 JUMP JUMPDEST SWAP10 POP PUSH1 0x0 DUP5 DUP3 PUSH3 0x197E SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH3 0x1997 JUMPI POP POP POP POP POP POP POP POP PUSH3 0x1BDA JUMP JUMPDEST DUP1 DUP14 PUSH3 0x19A5 SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP13 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x19D1 JUMPI POP DUP13 DUP3 DUP7 PUSH3 0x19CF SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST GT JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH3 0x19E1 JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST ISZERO PUSH3 0x1A69 JUMPI DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x56387B91 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A34 SWAP2 SWAP1 PUSH3 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1A64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 ISZERO DUP1 PUSH3 0x1A77 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH3 0x1BD0 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1ADC SWAP3 SWAP2 SWAP1 PUSH3 0x344F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1AFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B22 SWAP2 SWAP1 PUSH3 0x314A JUMP JUMPDEST POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA98D38F0 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B5E SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1B79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1B8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB8AAFDEC9BACDC76BFEA3C330063C391A2904D4F91E71F97A91534F3C8CE4AB5 DUP10 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH3 0x1BC7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH3 0x1BE7 SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x17F4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x1C22 JUMPI PUSH3 0x1C06 DUP2 PUSH3 0x2337 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1C1A SWAP2 SWAP1 PUSH3 0x30BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH3 0x1C97 PUSH3 0x1ED4 JUMP JUMPDEST PUSH3 0x1CA3 DUP3 DUP3 PUSH3 0x21AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x1CB1 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1D23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1D1A SWAP1 PUSH3 0x3231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x1D70 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xBA50596D5D8D3FFFDA559F307B84B1B0BDBA201192D70B393820EAB501346B1E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0x1DD1 SWAP3 SWAP2 SWAP1 PUSH3 0x34B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH3 0x1DE7 PUSH3 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1E5C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E53 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1E67 DUP2 PUSH3 0x20AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x1EDE PUSH3 0x24BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1EFE PUSH3 0xEA4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1F62 JUMPI PUSH3 0x1F24 PUSH3 0x24BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1F59 SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F71 DUP3 PUSH3 0x24C6 JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP1 AND DUP2 PUSH4 0xFFFFFFFF AND LT PUSH3 0x1FC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1FBB SWAP1 PUSH3 0x3536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x1 PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH3 0x1FDA SWAP2 SWAP1 PUSH3 0x3414 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x1FEE JUMPI PUSH3 0x1FED PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x2031 JUMPI PUSH3 0x2030 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH3 0x2079 JUMPI PUSH3 0x2078 PUSH3 0x3558 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20BA PUSH3 0x2187 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x22CB JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x2276 JUMPI DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x21F1 JUMPI PUSH3 0x21F0 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH3 0x2260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2257 SWAP1 PUSH3 0x35D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH3 0x226D SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x21B9 JUMP JUMPDEST POP PUSH1 0xA DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x22D8 JUMP JUMPDEST PUSH3 0x22D6 DUP3 PUSH3 0x1F64 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x230E PUSH3 0x2566 JUMP JUMPDEST PUSH3 0x2319 DUP2 PUSH3 0x25A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH3 0x232D JUMPI DUP2 PUSH3 0x232F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEB82AFB3 PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x2354 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44DD5ED6 CALLVALUE PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x244D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x35F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0xD644E527C1896057CE642ADFBC00F04D6B23D4C2FB30529522184D151DC087DC DUP3 PUSH1 0x40 MLOAD PUSH3 0x24B2 SWAP2 SWAP1 PUSH3 0x2883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x2558 JUMPI DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xA DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH3 0x2506 JUMPI PUSH3 0x2505 PUSH3 0x2F17 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH3 0x2542 JUMPI DUP1 SWAP2 POP POP PUSH3 0x2561 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x254F SWAP1 PUSH3 0x2EE6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x24CE JUMP JUMPDEST POP PUSH4 0xFFFFFFFF SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2570 PUSH3 0x2636 JUMP JUMPDEST PUSH3 0x25A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH3 0x25B3 PUSH3 0x2566 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2628 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x261F SWAP2 SWAP1 PUSH3 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2633 DUP2 PUSH3 0x20AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2642 PUSH3 0x22DC JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x960 DUP1 PUSH3 0x364E DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2693 DUP3 PUSH3 0x2666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26A5 DUP2 PUSH3 0x2686 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x26C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x269A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26E3 DUP2 PUSH3 0x26C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2700 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x26D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2725 DUP2 PUSH3 0x26C8 JUMP JUMPDEST DUP2 EQ PUSH3 0x2731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2745 DUP2 PUSH3 0x271A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2764 JUMPI PUSH3 0x2763 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2774 DUP5 DUP3 DUP6 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2792 DUP2 PUSH3 0x277D JUMP JUMPDEST DUP2 EQ PUSH3 0x279E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x27B2 DUP2 PUSH3 0x2787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27D1 JUMPI PUSH3 0x27D0 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x27E1 DUP5 DUP3 DUP6 ADD PUSH3 0x27A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2815 PUSH3 0x280F PUSH3 0x2809 DUP5 PUSH3 0x2666 JUMP JUMPDEST PUSH3 0x27EA JUMP JUMPDEST PUSH3 0x2666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2829 DUP3 PUSH3 0x27F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x283D DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x284F DUP2 PUSH3 0x2830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x286C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2844 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x287D DUP2 PUSH3 0x277D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x289A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28AD DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x28BF DUP2 PUSH3 0x28A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x28DC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x28B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x28ED DUP2 PUSH3 0x2686 JUMP JUMPDEST DUP2 EQ PUSH3 0x28F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x290D DUP2 PUSH3 0x28E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2968 DUP3 PUSH3 0x291D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x298A JUMPI PUSH3 0x2989 PUSH3 0x292E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299F PUSH3 0x2706 JUMP JUMPDEST SWAP1 POP PUSH3 0x29AD DUP3 DUP3 PUSH3 0x295D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x29D0 JUMPI PUSH3 0x29CF PUSH3 0x292E JUMP JUMPDEST JUMPDEST PUSH3 0x29DB DUP3 PUSH3 0x291D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A0E PUSH3 0x2A08 DUP5 PUSH3 0x29B2 JUMP JUMPDEST PUSH3 0x2993 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2A2D JUMPI PUSH3 0x2A2C PUSH3 0x2918 JUMP JUMPDEST JUMPDEST PUSH3 0x2A3A DUP5 DUP3 DUP6 PUSH3 0x29E8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A5A JUMPI PUSH3 0x2A59 PUSH3 0x2913 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x2A6C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x29F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2A92 JUMPI PUSH3 0x2A91 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2AA2 DUP8 DUP3 DUP9 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x2AB5 DUP8 DUP3 DUP9 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2AC8 DUP8 DUP3 DUP9 ADD PUSH3 0x27A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2AEC JUMPI PUSH3 0x2AEB PUSH3 0x2715 JUMP JUMPDEST JUMPDEST PUSH3 0x2AFA DUP8 DUP3 DUP9 ADD PUSH3 0x2A42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x2B28 JUMPI PUSH3 0x2B27 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B38 DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x2B4B DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x2B5E DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x2B71 DUP11 DUP3 DUP12 ADD PUSH3 0x27A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x2B84 DUP11 DUP3 DUP12 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x2B97 DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x2BAA DUP11 DUP3 DUP12 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2BD0 DUP2 PUSH3 0x2BB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2BED PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2BC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C00 DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C12 DUP2 PUSH3 0x2BF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2C2F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2C07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2C40 DUP2 PUSH3 0x2BB9 JUMP JUMPDEST DUP2 EQ PUSH3 0x2C4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2C60 DUP2 PUSH3 0x2C35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2C80 JUMPI PUSH3 0x2C7F PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2C90 DUP6 DUP3 DUP7 ADD PUSH3 0x2734 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2CA3 DUP6 DUP3 DUP7 ADD PUSH3 0x2C4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CC6 JUMPI PUSH3 0x2CC5 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2CD6 DUP5 DUP3 DUP6 ADD PUSH3 0x28FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2CF8 JUMPI PUSH3 0x2CF7 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D08 DUP5 DUP3 DUP6 ADD PUSH3 0x2C4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D1E DUP3 PUSH3 0x281C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D30 DUP2 PUSH3 0x2D11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D4D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2D25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2D6A PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x26D8 JUMP JUMPDEST PUSH3 0x2D79 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x26D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x2D97 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x2DA6 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x28B4 JUMP JUMPDEST PUSH3 0x2DB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2D25 JUMP JUMPDEST PUSH3 0x2DC4 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x269A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2E09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2DEC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E22 DUP3 PUSH3 0x2DCD JUMP JUMPDEST PUSH3 0x2E2E DUP2 DUP6 PUSH3 0x2DD8 JUMP JUMPDEST SWAP4 POP PUSH3 0x2E40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x2DE9 JUMP JUMPDEST PUSH3 0x2E4B DUP2 PUSH3 0x291D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2E6D PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x269A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x2E81 DUP2 DUP5 PUSH3 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x2EA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x26D8 JUMP JUMPDEST PUSH3 0x2EB0 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x269A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2EF3 DUP3 PUSH3 0x26C8 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH3 0x2F0C JUMPI PUSH3 0x2F0B PUSH3 0x2EB7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F5C DUP2 PUSH3 0x2787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F73 DUP2 PUSH3 0x28E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2F93 JUMPI PUSH3 0x2F92 PUSH3 0x2F46 JUMP JUMPDEST JUMPDEST PUSH3 0x2FA0 PUSH2 0x140 PUSH3 0x2993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2FB2 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x2FC8 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH3 0x2FDE DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH3 0x2FF4 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH3 0x300A DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH3 0x3020 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH3 0x3036 DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH3 0x304C DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH3 0x3063 DUP5 DUP3 DUP6 ADD PUSH3 0x2F62 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH3 0x307B DUP5 DUP3 DUP6 ADD PUSH3 0x2F62 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x30A2 JUMPI PUSH3 0x30A1 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x30B2 DUP5 DUP3 DUP6 ADD PUSH3 0x2F79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30C8 DUP3 PUSH3 0x277D JUMP JUMPDEST SWAP2 POP PUSH3 0x30D5 DUP4 PUSH3 0x277D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x30F0 JUMPI PUSH3 0x30EF PUSH3 0x2EB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x310D PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x311C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x312B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3144 DUP2 PUSH3 0x2C35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3163 JUMPI PUSH3 0x3162 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3173 DUP5 DUP3 DUP6 ADD PUSH3 0x3133 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x3193 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x31A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x31B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0x2872 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x31C5 DUP2 DUP5 PUSH3 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3219 PUSH1 0x14 DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x3226 DUP3 PUSH3 0x31E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x324C DUP2 PUSH3 0x320A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3260 DUP3 PUSH3 0x2686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3272 DUP2 PUSH3 0x3253 JUMP JUMPDEST DUP2 EQ PUSH3 0x327E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3292 DUP2 PUSH3 0x3267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x32B1 JUMPI PUSH3 0x32B0 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x32C1 DUP5 DUP3 DUP6 ADD PUSH3 0x3281 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x32E3 JUMPI PUSH3 0x32E2 PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x32F3 DUP5 DUP3 DUP6 ADD PUSH3 0x2F62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x333B PUSH3 0x3335 PUSH3 0x332F DUP5 PUSH3 0x32FC JUMP JUMPDEST PUSH3 0x27EA JUMP JUMPDEST PUSH3 0x3306 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x334D DUP2 PUSH3 0x331A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x336A PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x3342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A206E6F206163746976652073657175656E6365720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33A8 PUSH1 0x1B DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x33B5 DUP3 PUSH3 0x3370 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x33DB DUP2 PUSH3 0x3399 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x33FB JUMPI PUSH3 0x33FA PUSH3 0x2710 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x340B DUP5 DUP3 DUP6 ADD PUSH3 0x2F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3421 DUP3 PUSH3 0x277D JUMP JUMPDEST SWAP2 POP PUSH3 0x342E DUP4 PUSH3 0x277D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x3449 JUMPI PUSH3 0x3448 PUSH3 0x2EB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x3466 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x269A JUMP JUMPDEST PUSH3 0x3475 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x3493 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x26D8 JUMP JUMPDEST PUSH3 0x34A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x2872 JUMP JUMPDEST PUSH3 0x34B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x2872 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x34D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x2BC5 JUMP JUMPDEST PUSH3 0x34DF PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x2BC5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A206E6F74206163746976650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x351E PUSH1 0x12 DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x352B DUP3 PUSH3 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3551 DUP2 PUSH3 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4465616C65723A20616C72656164792061637469766500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35BF PUSH1 0x16 DUP4 PUSH3 0x31D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x35CC DUP3 PUSH3 0x3587 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x35F2 DUP2 PUSH3 0x35B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x3610 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0x2872 JUMP JUMPDEST PUSH3 0x361F PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x269A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x3633 DUP2 DUP6 PUSH3 0x2E15 JUMP JUMPDEST SWAP1 POP PUSH3 0x3644 PUSH1 0x60 DUP4 ADD DUP5 PUSH3 0x26D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x960 CODESIZE SUB DUP1 PUSH2 0x960 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x70 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x795 JUMP JUMPDEST PUSH2 0x7F DUP3 PUSH2 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x150 JUMPI PUSH2 0x14A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST DUP3 PUSH2 0x306 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x64CED0EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1F2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH1 0x0 SHL PUSH2 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x302 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x370 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x386 DUP6 DUP4 DUP4 PUSH2 0x3D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3F2 JUMPI PUSH2 0x3ED DUP3 PUSH2 0x46C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x41A JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x45C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x465 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x47F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x51D DUP2 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x576 DUP3 PUSH2 0x52D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x595 JUMPI PUSH2 0x594 PUSH2 0x53E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B4 DUP3 DUP3 PUSH2 0x56D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x53E JUMP JUMPDEST JUMPDEST PUSH2 0x5DD DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 PUSH2 0x622 DUP5 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x643 JUMPI PUSH2 0x642 PUSH2 0x528 JUMP JUMPDEST JUMPDEST PUSH2 0x64E DUP5 DUP3 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x523 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x67B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x614 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A9 DUP6 DUP3 DUP7 ADD PUSH2 0x50E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x4C0 JUMP JUMPDEST JUMPDEST PUSH2 0x6D6 DUP6 DUP3 DUP7 ADD PUSH2 0x656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP5 DUP3 DUP6 ADD PUSH2 0x50E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x731 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 DUP3 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x762 DUP2 DUP6 PUSH2 0x742 JUMP JUMPDEST SWAP4 POP PUSH2 0x772 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP3 DUP5 PUSH2 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1B1 PUSH2 0x7AF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xC7 ADD MSTORE PUSH2 0x1B1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A PUSH2 0xC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP15 0xFB GASPRICE 0xDD CALLDATACOPY BYTE 0xCC PUSH11 0xFD6545498A71373C16DC13 DUP7 0xE5 PUSH25 0xED8C02B6AC326DD4CA64736F6C63430008140033A264697066 PUSH20 0x58221220C1CD81B7E855501F00E4D4303EE5F053 0xFB JUMPDEST DUP14 0xC4 SELFDESTRUCT DUP14 DUP8 0x29 ADDRESS CREATE DUP2 XOR CREATE AND 0xCC 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"691:12630:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4363:120;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6556:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3129:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10431:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4920:464;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2572:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3286:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2929:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10685:403;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11210:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6185:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;3224:25:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2403:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2250:37:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3033:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5697:360;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3421:830;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7119:2591;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3345:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2657:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2327:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2843:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9777:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10033:232;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4601:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405::0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2491:31:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13228:91;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2748:23;;;;;;;;;;;;;:::o;4363:120::-;4418:6;4450:18;:25;;;;4436:40;;4363:120;:::o;6556:140::-;2334:13:0;:11;:13::i;:::-;6645:15:11::1;:24;6661:7;6645:24;;;;;;;;;;;;;;;;;;;;;;;;;6630:52;;;6683:5;;;;;;;;;;;6630:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6556:140:::0;:::o;3129:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10431:149::-;2334:13:0;:11;:13::i;:::-;10493:11:11::1;10507:5;;;;;;;;;;;10493:19;;10530:6;10522:5;;:14;;;;;;;;;;;;;;;;;;10551:22;10560:4;10566:6;10551:22;;;;;;;:::i;:::-;;;;;;;;10483:97;10431:149:::0;:::o;4920:464::-;4968:6;2334:13:0;:11;:13::i;:::-;4986:17:11::1;5029:34;;;5073:4;5080:11;;;;;;;;;;;5093;;;;;;;;;;;5114:5;;;;;;;;;;;5006:115;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:135;;5131:13;5179:4;5186;5155:36;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;5131:61;;5202:12;5217:19;;;;;;;;;;;5202:34;;5271:5;5246:15;:22;5262:5;5246:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5291:33;5311:5;5318;5291:33;;;;;;;:::i;:::-;;;;;;;;5334:19;;:21;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5372:5;5365:12;;;;;4920:464:::0;:::o;2572:38::-;;;;;;;;;;;;;:::o;3286:19::-;;;;;;;;;;;;;:::o;2929:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;10685:403::-;10731:7;10750:13;10766:1;10750:17;;10782:8;10777:283;10800:18;:25;;;;10796:1;:29;;;10777:283;;;10846:14;10863:18;10882:1;10863:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10846:38;;10898:20;10936:15;:24;10952:7;10936:24;;;;;;;;;;;;;;;;;;;;;;;;;10898:63;;10975:14;10992:5;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;10975:45;;11043:6;11034:15;;;;;:::i;:::-;;;10832:228;;;10827:3;;;;;:::i;:::-;;;;10777:283;;;;11076:5;11069:12;;;10685:403;:::o;11210:104::-;11259:7;11285:22;;;;;;;;;;;11278:29;;11210:104;:::o;6185:170::-;2334:13:0;:11;:13::i;:::-;6269:15:11::1;:24;6285:7;6269:24;;;;;;;;;;;;;;;;;;;;;;;;;6254:47;;;6302:5;;;;;;;;;;;6254:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6318:30;6340:7;6318:21;:30::i;:::-;;6185:170:::0;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3224:25:11:-;;;;:::o;2403:31::-;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2250:37:11:-;;;;;;;;;;;;:::o;3033:33::-;;;;;;;;;;;;;:::o;5697:360::-;2334:13:0;:11;:13::i;:::-;5827::11::1;5843:15;:24;5859:7;5843:24;;;;;;;;;;;;;;;;;;;;;;;;;5827:40;;5884:5;;;;;;;;;;;5877:26;;;5904:10;5916:5;5923:6;5877:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5955:5;5940:26;;;5967:15;5984:8;;;;;;;;;;;5994:6;6002:12;5940:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6025:25;6036:7;6045:4;6025:10;:25::i;:::-;5817:240;5697:360:::0;;;;:::o;3421:830::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;3710:1:11::1;3692:20;;:6;:20;;;;:50;;;;;3740:1;3716:26;;:12;:26;;;;3692:50;:77;;;;;3767:1;3746:23;;:9;:23;;;;3692:77;:104;;;;;3794:1;3773:23;;:9;:23;;;;3692:104;:141;;;;;3831:1;3800:33;;:19;:33;;;;3692:141;3683:175;;;;;;;;;;;;:::i;:::-;;;;;;;;;3868:26;3883:10;3868:14;:26::i;:::-;3919:6;3904:5;;:22;;;;;;;;;;;;;;;;;;3963:12;3936:11;;:40;;;;;;;;;;;;;;;;;;4000:11;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3986:11;;:34;;;;;;;;;;;;;;;;;;4084:9;4064:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4030:9;;:77;;;;;;;;;;;;;;;;;;4129:10;4117:9;:22;;;;4157:6;4149:5;;:14;;;;;;;;;;;;;;;;;;4184:9;4173:8;;:20;;;;;;;;;;;;;;;;;;4224:19;4203:18;;:40;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;3421:830:11;;;;;;;:::o;7119:2591::-;7163:22;7233:1;7205:18;:25;;;;:29;7197:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7277:12;7292:11;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7277:36;;7323:27;7353:5;;;;;;;;;;;:15;;;7377:4;7353:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7323:60;;7393:20;7433:8;7428:1977;7451:18;:25;;;;7447:1;:29;;;7428:1977;;;7497:14;7514:18;7533:1;7514:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7497:38;;7549:20;7587:15;:24;7603:7;7587:24;;;;;;;;;;;;;;;;;;;;;;;;;7549:63;;7626:37;7666:5;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7626:61;;7702:14;7718;7737:3;:10;;;7749:3;:10;;;7701:59;;;;7790:6;7774:22;;;;;:::i;:::-;;;7944:17;7973:7;7964:6;:16;:39;;8002:1;7964:39;;;7993:6;7983:7;:16;;;;:::i;:::-;7964:39;7944:59;;8142:18;8163:40;8172:9;8183:19;8163:8;:40::i;:::-;8142:61;;8352:10;8329:33;;;;;:::i;:::-;;;8466:21;8503:6;8490:10;:19;;;;:::i;:::-;8466:43;;8544:1;8527:13;:18;8523:65;;8565:8;;;;;;;;;;8523:65;8620:13;8602:31;;;;;:::i;:::-;;;8824:21;8848:15;;;;;;;;;;;:51;;;;8892:7;8876:13;8867:6;:22;;;;:::i;:::-;:32;8848:51;8824:75;;8917:16;:30;;;;;8946:1;8937:6;:10;8917:30;8913:97;;;8967:5;:21;;;8989:5;;;;;;;;;;;8967:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8913:97;9165:16;9164:17;:35;;;;9198:1;9185:10;:14;9164:35;9160:235;;;9226:5;;;;;;;;;;;9219:22;;;9250:5;9258:10;9219:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9287:5;:12;;;9300:10;9287:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9334:46;9352:7;9361:10;9373:6;9334:46;;;;;;;;:::i;:::-;;;;;;;;9160:235;7483:1922;;;;;;;;;7428:1977;7478:3;;;;;:::i;:::-;;;;7428:1977;;;;9609:1;9594:12;:16;9590:114;;;9626:27;9640:12;9626:13;:27::i;:::-;9681:12;9667:10;;:26;;;;;;;:::i;:::-;;;;;;;;9590:114;7187:2523;;;7119:2591;:::o;3345:27::-;;;;;;;;;;;;;:::o;2657:24::-;;;;:::o;2327:19::-;;;;;;;;;;;;;:::o;2843:33::-;;;;;;;;;;;;;:::o;9777:111::-;2334:13:0;:11;:13::i;:::-;9854:27:11::1;9865:7;9874:6;9854:10;:27::i;:::-;9777:111:::0;;:::o;10033:232::-;2334:13:0;:11;:13::i;:::-;10173:1:11::1;10138:37;;:23;:37;;::::0;10130:70:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;10235:23;10210:22;::::0;:48:::1;;;;;;;;;;;;;;;;;;10033:232:::0;:::o;4601:215::-;2334:13:0;:11;:13::i;:::-;4681:9:11::1;4693:15;;;;;;;;;;;4681:27;;4736:16;4718:15;;:34;;;;;;;;;;;;;;;;;;4767:42;4786:4;4792:16;4767:42;;;;;;;:::i;:::-;;;;;;;;4671:145;4601:215:::0;:::o;3405::0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2491:31:11:-;;;;;;;;;;;;;:::o;13228:91::-;13299:13;13288:8;;:24;;;;;;;;;;;;;;;;;;13228:91;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;12396:318:11:-;12461:12;12493:28;12513:7;12493:19;:28::i;:::-;12485:36;;12547:16;12539:24;;:5;:24;;;12531:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12624:18;12671:1;12643:18;:25;;;;:29;;;;:::i;:::-;12624:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12596:18;12615:5;12596:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;12683:18;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12396:318;;;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;11381:372:11:-;11453:6;11449:298;;;11480:8;11475:155;11498:18;:25;;;;11494:1;:29;;;11475:155;;;11581:7;11556:32;;:18;11575:1;11556:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;11548:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;11525:3;;;;;:::i;:::-;;;;11475:155;;;;11643:18;11667:7;11643:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11449:298;;;11706:30;11728:7;11706:21;:30::i;:::-;;11449:298;11381:372;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2557:104:10:-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;2649:1;2641:13;2634:20;;2557:104;;;;:::o;11834:285:11:-;11892:20;11938:34;;;11974:6;11915:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11892:89;;11991:9;;;;;;;;;;;:31;;;12029:9;12040;;12051:8;;;;;;;;;;;12061:7;12070:5;;;;;;;;;;;11991:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12091:21;12105:6;12091:21;;;;;;:::i;:::-;;;;;;;;11882:237;11834:285;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;12919:303:11:-;12987:6;13010:12;13025:1;13010:16;;13005:178;13036:18;:25;;;;13028:5;:33;;;13005:178;;;13119:7;13090:36;;:18;13109:5;13090:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;13086:87;;13153:5;13146:12;;;;;13086:87;13063:7;;;;;:::i;:::-;;;;13005:178;;;;13199:16;13192:23;;12919:303;;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:19:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:93::-;629:7;669:10;662:5;658:22;647:33;;593:93;;;:::o;692:115::-;777:23;794:5;777:23;:::i;:::-;772:3;765:36;692:115;;:::o;813:218::-;904:4;942:2;931:9;927:18;919:26;;955:69;1021:1;1010:9;1006:17;997:6;955:69;:::i;:::-;813:218;;;;:::o;1037:75::-;1070:6;1103:2;1097:9;1087:19;;1037:75;:::o;1118:117::-;1227:1;1224;1217:12;1241:117;1350:1;1347;1340:12;1364:120;1436:23;1453:5;1436:23;:::i;:::-;1429:5;1426:34;1416:62;;1474:1;1471;1464:12;1416:62;1364:120;:::o;1490:137::-;1535:5;1573:6;1560:20;1551:29;;1589:32;1615:5;1589:32;:::i;:::-;1490:137;;;;:::o;1633:327::-;1691:6;1740:2;1728:9;1719:7;1715:23;1711:32;1708:119;;;1746:79;;:::i;:::-;1708:119;1866:1;1891:52;1935:7;1926:6;1915:9;1911:22;1891:52;:::i;:::-;1881:62;;1837:116;1633:327;;;;:::o;1966:77::-;2003:7;2032:5;2021:16;;1966:77;;;:::o;2049:122::-;2122:24;2140:5;2122:24;:::i;:::-;2115:5;2112:35;2102:63;;2161:1;2158;2151:12;2102:63;2049:122;:::o;2177:139::-;2223:5;2261:6;2248:20;2239:29;;2277:33;2304:5;2277:33;:::i;:::-;2177:139;;;;:::o;2322:329::-;2381:6;2430:2;2418:9;2409:7;2405:23;2401:32;2398:119;;;2436:79;;:::i;:::-;2398:119;2556:1;2581:53;2626:7;2617:6;2606:9;2602:22;2581:53;:::i;:::-;2571:63;;2527:117;2322:329;;;;:::o;2657:60::-;2685:3;2706:5;2699:12;;2657:60;;;:::o;2723:142::-;2773:9;2806:53;2824:34;2833:24;2851:5;2833:24;:::i;:::-;2824:34;:::i;:::-;2806:53;:::i;:::-;2793:66;;2723:142;;;:::o;2871:126::-;2921:9;2954:37;2985:5;2954:37;:::i;:::-;2941:50;;2871:126;;;:::o;3003:156::-;3083:9;3116:37;3147:5;3116:37;:::i;:::-;3103:50;;3003:156;;;:::o;3165:191::-;3282:67;3343:5;3282:67;:::i;:::-;3277:3;3270:80;3165:191;;:::o;3362:282::-;3485:4;3523:2;3512:9;3508:18;3500:26;;3536:101;3634:1;3623:9;3619:17;3610:6;3536:101;:::i;:::-;3362:282;;;;:::o;3650:118::-;3737:24;3755:5;3737:24;:::i;:::-;3732:3;3725:37;3650:118;;:::o;3774:222::-;3867:4;3905:2;3894:9;3890:18;3882:26;;3918:71;3986:1;3975:9;3971:17;3962:6;3918:71;:::i;:::-;3774:222;;;;:::o;4002:147::-;4073:9;4106:37;4137:5;4106:37;:::i;:::-;4093:50;;4002:147;;;:::o;4155:173::-;4263:58;4315:5;4263:58;:::i;:::-;4258:3;4251:71;4155:173;;:::o;4334:264::-;4448:4;4486:2;4475:9;4471:18;4463:26;;4499:92;4588:1;4577:9;4573:17;4564:6;4499:92;:::i;:::-;4334:264;;;;:::o;4604:122::-;4677:24;4695:5;4677:24;:::i;:::-;4670:5;4667:35;4657:63;;4716:1;4713;4706:12;4657:63;4604:122;:::o;4732:139::-;4778:5;4816:6;4803:20;4794:29;;4832:33;4859:5;4832:33;:::i;:::-;4732:139;;;;:::o;4877:117::-;4986:1;4983;4976:12;5000:117;5109:1;5106;5099:12;5123:102;5164:6;5215:2;5211:7;5206:2;5199:5;5195:14;5191:28;5181:38;;5123:102;;;:::o;5231:180::-;5279:77;5276:1;5269:88;5376:4;5373:1;5366:15;5400:4;5397:1;5390:15;5417:281;5500:27;5522:4;5500:27;:::i;:::-;5492:6;5488:40;5630:6;5618:10;5615:22;5594:18;5582:10;5579:34;5576:62;5573:88;;;5641:18;;:::i;:::-;5573:88;5681:10;5677:2;5670:22;5460:238;5417:281;;:::o;5704:129::-;5738:6;5765:20;;:::i;:::-;5755:30;;5794:33;5822:4;5814:6;5794:33;:::i;:::-;5704:129;;;:::o;5839:307::-;5900:4;5990:18;5982:6;5979:30;5976:56;;;6012:18;;:::i;:::-;5976:56;6050:29;6072:6;6050:29;:::i;:::-;6042:37;;6134:4;6128;6124:15;6116:23;;5839:307;;;:::o;6152:146::-;6249:6;6244:3;6239;6226:30;6290:1;6281:6;6276:3;6272:16;6265:27;6152:146;;;:::o;6304:423::-;6381:5;6406:65;6422:48;6463:6;6422:48;:::i;:::-;6406:65;:::i;:::-;6397:74;;6494:6;6487:5;6480:21;6532:4;6525:5;6521:16;6570:3;6561:6;6556:3;6552:16;6549:25;6546:112;;;6577:79;;:::i;:::-;6546:112;6667:54;6714:6;6709:3;6704;6667:54;:::i;:::-;6387:340;6304:423;;;;;:::o;6746:338::-;6801:5;6850:3;6843:4;6835:6;6831:17;6827:27;6817:122;;6858:79;;:::i;:::-;6817:122;6975:6;6962:20;7000:78;7074:3;7066:6;7059:4;7051:6;7047:17;7000:78;:::i;:::-;6991:87;;6807:277;6746:338;;;;:::o;7090:941::-;7184:6;7192;7200;7208;7257:3;7245:9;7236:7;7232:23;7228:33;7225:120;;;7264:79;;:::i;:::-;7225:120;7384:1;7409:52;7453:7;7444:6;7433:9;7429:22;7409:52;:::i;:::-;7399:62;;7355:116;7510:2;7536:53;7581:7;7572:6;7561:9;7557:22;7536:53;:::i;:::-;7526:63;;7481:118;7638:2;7664:53;7709:7;7700:6;7689:9;7685:22;7664:53;:::i;:::-;7654:63;;7609:118;7794:2;7783:9;7779:18;7766:32;7825:18;7817:6;7814:30;7811:117;;;7847:79;;:::i;:::-;7811:117;7952:62;8006:7;7997:6;7986:9;7982:22;7952:62;:::i;:::-;7942:72;;7737:287;7090:941;;;;;;;:::o;8037:1201::-;8149:6;8157;8165;8173;8181;8189;8197;8246:3;8234:9;8225:7;8221:23;8217:33;8214:120;;;8253:79;;:::i;:::-;8214:120;8373:1;8398:53;8443:7;8434:6;8423:9;8419:22;8398:53;:::i;:::-;8388:63;;8344:117;8500:2;8526:53;8571:7;8562:6;8551:9;8547:22;8526:53;:::i;:::-;8516:63;;8471:118;8628:2;8654:53;8699:7;8690:6;8679:9;8675:22;8654:53;:::i;:::-;8644:63;;8599:118;8756:2;8782:53;8827:7;8818:6;8807:9;8803:22;8782:53;:::i;:::-;8772:63;;8727:118;8884:3;8911:52;8955:7;8946:6;8935:9;8931:22;8911:52;:::i;:::-;8901:62;;8855:118;9012:3;9039:53;9084:7;9075:6;9064:9;9060:22;9039:53;:::i;:::-;9029:63;;8983:119;9141:3;9168:53;9213:7;9204:6;9193:9;9189:22;9168:53;:::i;:::-;9158:63;;9112:119;8037:1201;;;;;;;;;;:::o;9244:90::-;9278:7;9321:5;9314:13;9307:21;9296:32;;9244:90;;;:::o;9340:109::-;9421:21;9436:5;9421:21;:::i;:::-;9416:3;9409:34;9340:109;;:::o;9455:210::-;9542:4;9580:2;9569:9;9565:18;9557:26;;9593:65;9655:1;9644:9;9640:17;9631:6;9593:65;:::i;:::-;9455:210;;;;:::o;9671:140::-;9735:9;9768:37;9799:5;9768:37;:::i;:::-;9755:50;;9671:140;;;:::o;9817:159::-;9918:51;9963:5;9918:51;:::i;:::-;9913:3;9906:64;9817:159;;:::o;9982:250::-;10089:4;10127:2;10116:9;10112:18;10104:26;;10140:85;10222:1;10211:9;10207:17;10198:6;10140:85;:::i;:::-;9982:250;;;;:::o;10238:116::-;10308:21;10323:5;10308:21;:::i;:::-;10301:5;10298:32;10288:60;;10344:1;10341;10334:12;10288:60;10238:116;:::o;10360:133::-;10403:5;10441:6;10428:20;10419:29;;10457:30;10481:5;10457:30;:::i;:::-;10360:133;;;;:::o;10499:466::-;10563:6;10571;10620:2;10608:9;10599:7;10595:23;10591:32;10588:119;;;10626:79;;:::i;:::-;10588:119;10746:1;10771:52;10815:7;10806:6;10795:9;10791:22;10771:52;:::i;:::-;10761:62;;10717:116;10872:2;10898:50;10940:7;10931:6;10920:9;10916:22;10898:50;:::i;:::-;10888:60;;10843:115;10499:466;;;;;:::o;10971:329::-;11030:6;11079:2;11067:9;11058:7;11054:23;11050:32;11047:119;;;11085:79;;:::i;:::-;11047:119;11205:1;11230:53;11275:7;11266:6;11255:9;11251:22;11230:53;:::i;:::-;11220:63;;11176:117;10971:329;;;;:::o;11306:323::-;11362:6;11411:2;11399:9;11390:7;11386:23;11382:32;11379:119;;;11417:79;;:::i;:::-;11379:119;11537:1;11562:50;11604:7;11595:6;11584:9;11580:22;11562:50;:::i;:::-;11552:60;;11508:114;11306:323;;;;:::o;11635:147::-;11706:9;11739:37;11770:5;11739:37;:::i;:::-;11726:50;;11635:147;;;:::o;11788:173::-;11896:58;11948:5;11896:58;:::i;:::-;11891:3;11884:71;11788:173;;:::o;11967:264::-;12081:4;12119:2;12108:9;12104:18;12096:26;;12132:92;12221:1;12210:9;12206:17;12197:6;12132:92;:::i;:::-;11967:264;;;;:::o;12237:324::-;12354:4;12392:2;12381:9;12377:18;12369:26;;12405:69;12471:1;12460:9;12456:17;12447:6;12405:69;:::i;:::-;12484:70;12550:2;12539:9;12535:18;12526:6;12484:70;:::i;:::-;12237:324;;;;;:::o;12567:637::-;12786:4;12824:3;12813:9;12809:19;12801:27;;12838:71;12906:1;12895:9;12891:17;12882:6;12838:71;:::i;:::-;12919:93;13008:2;12997:9;12993:18;12984:6;12919:93;:::i;:::-;13022;13111:2;13100:9;13096:18;13087:6;13022:93;:::i;:::-;13125:72;13193:2;13182:9;13178:18;13169:6;13125:72;:::i;:::-;12567:637;;;;;;;:::o;13210:98::-;13261:6;13295:5;13289:12;13279:22;;13210:98;;;:::o;13314:168::-;13397:11;13431:6;13426:3;13419:19;13471:4;13466:3;13462:14;13447:29;;13314:168;;;;:::o;13488:246::-;13569:1;13579:113;13593:6;13590:1;13587:13;13579:113;;;13678:1;13673:3;13669:11;13663:18;13659:1;13654:3;13650:11;13643:39;13615:2;13612:1;13608:10;13603:15;;13579:113;;;13726:1;13717:6;13712:3;13708:16;13701:27;13550:184;13488:246;;;:::o;13740:373::-;13826:3;13854:38;13886:5;13854:38;:::i;:::-;13908:70;13971:6;13966:3;13908:70;:::i;:::-;13901:77;;13987:65;14045:6;14040:3;14033:4;14026:5;14022:16;13987:65;:::i;:::-;14077:29;14099:6;14077:29;:::i;:::-;14072:3;14068:39;14061:46;;13830:283;13740:373;;;;:::o;14119:419::-;14258:4;14296:2;14285:9;14281:18;14273:26;;14309:71;14377:1;14366:9;14362:17;14353:6;14309:71;:::i;:::-;14427:9;14421:4;14417:20;14412:2;14401:9;14397:18;14390:48;14455:76;14526:4;14517:6;14455:76;:::i;:::-;14447:84;;14119:419;;;;;:::o;14544:328::-;14663:4;14701:2;14690:9;14686:18;14678:26;;14714:69;14780:1;14769:9;14765:17;14756:6;14714:69;:::i;:::-;14793:72;14861:2;14850:9;14846:18;14837:6;14793:72;:::i;:::-;14544:328;;;;;:::o;14878:180::-;14926:77;14923:1;14916:88;15023:4;15020:1;15013:15;15047:4;15044:1;15037:15;15064:175;15102:3;15125:23;15142:5;15125:23;:::i;:::-;15116:32;;15170:10;15163:5;15160:21;15157:47;;15184:18;;:::i;:::-;15157:47;15231:1;15224:5;15220:13;15213:20;;15064:175;;;:::o;15245:180::-;15293:77;15290:1;15283:88;15390:4;15387:1;15380:15;15414:4;15411:1;15404:15;15431:117;15540:1;15537;15530:12;15677:143;15734:5;15765:6;15759:13;15750:22;;15781:33;15808:5;15781:33;:::i;:::-;15677:143;;;;:::o;15826:::-;15883:5;15914:6;15908:13;15899:22;;15930:33;15957:5;15930:33;:::i;:::-;15826:143;;;;:::o;16016:2066::-;16107:5;16151:6;16139:9;16134:3;16130:19;16126:32;16123:119;;;16161:79;;:::i;:::-;16123:119;16260:23;16276:6;16260:23;:::i;:::-;16251:32;;16344:1;16384:60;16440:3;16431:6;16420:9;16416:22;16384:60;:::i;:::-;16377:4;16370:5;16366:16;16359:86;16293:163;16517:2;16558:60;16614:3;16605:6;16594:9;16590:22;16558:60;:::i;:::-;16551:4;16544:5;16540:16;16533:86;16466:164;16700:2;16741:60;16797:3;16788:6;16777:9;16773:22;16741:60;:::i;:::-;16734:4;16727:5;16723:16;16716:86;16640:173;16880:2;16921:60;16977:3;16968:6;16957:9;16953:22;16921:60;:::i;:::-;16914:4;16907:5;16903:16;16896:86;16823:170;17065:3;17107:60;17163:3;17154:6;17143:9;17139:22;17107:60;:::i;:::-;17100:4;17093:5;17089:16;17082:86;17003:176;17250:3;17292:60;17348:3;17339:6;17328:9;17324:22;17292:60;:::i;:::-;17285:4;17278:5;17274:16;17267:86;17189:175;17434:3;17476:60;17532:3;17523:6;17512:9;17508:22;17476:60;:::i;:::-;17469:4;17462:5;17458:16;17451:86;17374:174;17608:3;17650:60;17706:3;17697:6;17686:9;17682:22;17650:60;:::i;:::-;17643:4;17636:5;17632:16;17625:86;17558:164;17782:3;17826:60;17882:3;17873:6;17862:9;17858:22;17826:60;:::i;:::-;17817:6;17810:5;17806:18;17799:88;17732:166;17959:3;18003:60;18059:3;18050:6;18039:9;18035:22;18003:60;:::i;:::-;17994:6;17987:5;17983:18;17976:88;17908:167;16016:2066;;;;:::o;18088:414::-;18189:6;18238:3;18226:9;18217:7;18213:23;18209:33;18206:120;;;18245:79;;:::i;:::-;18206:120;18365:1;18390:95;18477:7;18468:6;18457:9;18453:22;18390:95;:::i;:::-;18380:105;;18336:159;18088:414;;;;:::o;18508:191::-;18548:3;18567:20;18585:1;18567:20;:::i;:::-;18562:25;;18601:20;18619:1;18601:20;:::i;:::-;18596:25;;18644:1;18641;18637:9;18630:16;;18665:3;18662:1;18659:10;18656:36;;;18672:18;;:::i;:::-;18656:36;18508:191;;;;:::o;18705:442::-;18854:4;18892:2;18881:9;18877:18;18869:26;;18905:71;18973:1;18962:9;18958:17;18949:6;18905:71;:::i;:::-;18986:72;19054:2;19043:9;19039:18;19030:6;18986:72;:::i;:::-;19068;19136:2;19125:9;19121:18;19112:6;19068:72;:::i;:::-;18705:442;;;;;;:::o;19153:137::-;19207:5;19238:6;19232:13;19223:22;;19254:30;19278:5;19254:30;:::i;:::-;19153:137;;;;:::o;19296:345::-;19363:6;19412:2;19400:9;19391:7;19387:23;19383:32;19380:119;;;19418:79;;:::i;:::-;19380:119;19538:1;19563:61;19616:7;19607:6;19596:9;19592:22;19563:61;:::i;:::-;19553:71;;19509:125;19296:345;;;;:::o;19647:640::-;19842:4;19880:3;19869:9;19865:19;19857:27;;19894:71;19962:1;19951:9;19947:17;19938:6;19894:71;:::i;:::-;19975:72;20043:2;20032:9;20028:18;20019:6;19975:72;:::i;:::-;20057;20125:2;20114:9;20110:18;20101:6;20057:72;:::i;:::-;20176:9;20170:4;20166:20;20161:2;20150:9;20146:18;20139:48;20204:76;20275:4;20266:6;20204:76;:::i;:::-;20196:84;;19647:640;;;;;;;:::o;20293:169::-;20377:11;20411:6;20406:3;20399:19;20451:4;20446:3;20442:14;20427:29;;20293:169;;;;:::o;20468:170::-;20608:22;20604:1;20596:6;20592:14;20585:46;20468:170;:::o;20644:366::-;20786:3;20807:67;20871:2;20866:3;20807:67;:::i;:::-;20800:74;;20883:93;20972:3;20883:93;:::i;:::-;21001:2;20996:3;20992:12;20985:19;;20644:366;;;:::o;21016:419::-;21182:4;21220:2;21209:9;21205:18;21197:26;;21269:9;21263:4;21259:20;21255:1;21244:9;21240:17;21233:47;21297:131;21423:4;21297:131;:::i;:::-;21289:139;;21016:419;;;:::o;21441:117::-;21499:7;21528:24;21546:5;21528:24;:::i;:::-;21517:35;;21441:117;;;:::o;21564:164::-;21658:45;21697:5;21658:45;:::i;:::-;21651:5;21648:56;21638:84;;21718:1;21715;21708:12;21638:84;21564:164;:::o;21734:185::-;21812:5;21843:6;21837:13;21828:22;;21859:54;21907:5;21859:54;:::i;:::-;21734:185;;;;:::o;21925:393::-;22016:6;22065:2;22053:9;22044:7;22040:23;22036:32;22033:119;;;22071:79;;:::i;:::-;22033:119;22191:1;22216:85;22293:7;22284:6;22273:9;22269:22;22216:85;:::i;:::-;22206:95;;22162:149;21925:393;;;;:::o;22324:351::-;22394:6;22443:2;22431:9;22422:7;22418:23;22414:32;22411:119;;;22449:79;;:::i;:::-;22411:119;22569:1;22594:64;22650:7;22641:6;22630:9;22626:22;22594:64;:::i;:::-;22584:74;;22540:128;22324:351;;;;:::o;22681:85::-;22726:7;22755:5;22744:16;;22681:85;;;:::o;22772:101::-;22808:7;22848:18;22841:5;22837:30;22826:41;;22772:101;;;:::o;22879:156::-;22936:9;22969:60;22986:42;22995:32;23021:5;22995:32;:::i;:::-;22986:42;:::i;:::-;22969:60;:::i;:::-;22956:73;;22879:156;;;:::o;23041:145::-;23135:44;23173:5;23135:44;:::i;:::-;23130:3;23123:57;23041:145;;:::o;23192:236::-;23292:4;23330:2;23319:9;23315:18;23307:26;;23343:78;23418:1;23407:9;23403:17;23394:6;23343:78;:::i;:::-;23192:236;;;;:::o;23434:177::-;23574:29;23570:1;23562:6;23558:14;23551:53;23434:177;:::o;23617:366::-;23759:3;23780:67;23844:2;23839:3;23780:67;:::i;:::-;23773:74;;23856:93;23945:3;23856:93;:::i;:::-;23974:2;23969:3;23965:12;23958:19;;23617:366;;;:::o;23989:419::-;24155:4;24193:2;24182:9;24178:18;24170:26;;24242:9;24236:4;24232:20;24228:1;24217:9;24213:17;24206:47;24270:131;24396:4;24270:131;:::i;:::-;24262:139;;23989:419;;;:::o;24414:351::-;24484:6;24533:2;24521:9;24512:7;24508:23;24504:32;24501:119;;;24539:79;;:::i;:::-;24501:119;24659:1;24684:64;24740:7;24731:6;24720:9;24716:22;24684:64;:::i;:::-;24674:74;;24630:128;24414:351;;;;:::o;24771:194::-;24811:4;24831:20;24849:1;24831:20;:::i;:::-;24826:25;;24865:20;24883:1;24865:20;:::i;:::-;24860:25;;24909:1;24906;24902:9;24894:17;;24933:1;24927:4;24924:11;24921:37;;;24938:18;;:::i;:::-;24921:37;24771:194;;;;:::o;24971:332::-;25092:4;25130:2;25119:9;25115:18;25107:26;;25143:71;25211:1;25200:9;25196:17;25187:6;25143:71;:::i;:::-;25224:72;25292:2;25281:9;25277:18;25268:6;25224:72;:::i;:::-;24971:332;;;;;:::o;25309:438::-;25456:4;25494:2;25483:9;25479:18;25471:26;;25507:69;25573:1;25562:9;25558:17;25549:6;25507:69;:::i;:::-;25586:72;25654:2;25643:9;25639:18;25630:6;25586:72;:::i;:::-;25668;25736:2;25725:9;25721:18;25712:6;25668:72;:::i;:::-;25309:438;;;;;;:::o;25753:308::-;25862:4;25900:2;25889:9;25885:18;25877:26;;25913:65;25975:1;25964:9;25960:17;25951:6;25913:65;:::i;:::-;25988:66;26050:2;26039:9;26035:18;26026:6;25988:66;:::i;:::-;25753:308;;;;;:::o;26067:168::-;26207:20;26203:1;26195:6;26191:14;26184:44;26067:168;:::o;26241:366::-;26383:3;26404:67;26468:2;26463:3;26404:67;:::i;:::-;26397:74;;26480:93;26569:3;26480:93;:::i;:::-;26598:2;26593:3;26589:12;26582:19;;26241:366;;;:::o;26613:419::-;26779:4;26817:2;26806:9;26802:18;26794:26;;26866:9;26860:4;26856:20;26852:1;26841:9;26837:17;26830:47;26894:131;27020:4;26894:131;:::i;:::-;26886:139;;26613:419;;;:::o;27038:180::-;27086:77;27083:1;27076:88;27183:4;27180:1;27173:15;27207:4;27204:1;27197:15;27224:172;27364:24;27360:1;27352:6;27348:14;27341:48;27224:172;:::o;27402:366::-;27544:3;27565:67;27629:2;27624:3;27565:67;:::i;:::-;27558:74;;27641:93;27730:3;27641:93;:::i;:::-;27759:2;27754:3;27750:12;27743:19;;27402:366;;;:::o;27774:419::-;27940:4;27978:2;27967:9;27963:18;27955:26;;28027:9;28021:4;28017:20;28013:1;28002:9;27998:17;27991:47;28055:131;28181:4;28055:131;:::i;:::-;28047:139;;27774:419;;;:::o;28199:636::-;28392:4;28430:3;28419:9;28415:19;28407:27;;28444:71;28512:1;28501:9;28497:17;28488:6;28444:71;:::i;:::-;28525:72;28593:2;28582:9;28578:18;28569:6;28525:72;:::i;:::-;28644:9;28638:4;28634:20;28629:2;28618:9;28614:18;28607:48;28672:76;28743:4;28734:6;28672:76;:::i;:::-;28664:84;;28758:70;28824:2;28813:9;28809:18;28800:6;28758:70;:::i;:::-;28199:636;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3271000","executionCost":"3635","totalCost":"3274635"},"external":{"activeSequencerCount()":"2520","activeSequencerIds(uint256)":"6595","addAgent()":"infinite","implementation()":"2634","initialize(address,address,address,uint256,uint32,address,address)":"infinite","l2ChainId()":"2540","l2Gas()":"2517","l2Minter()":"2561","l2RewardDispatcher()":"2581","lockFor(uint32,address,uint256,bytes)":"infinite","lockingInfo()":"infinite","lockingPool()":"infinite","messenger()":"infinite","metis()":"infinite","owner()":"2622","relock()":"infinite","renounceOwnership()":"infinite","sequencerAgentCount()":"2561","sequencerAgentTemplate()":"2579","sequencerAgents(uint32)":"2913","setActive(uint32,bool)":"infinite","setL2Gas(uint32)":"infinite","setL2Minter(address)":"24832","setSequencerAgentTemplate(address)":"infinite","setWithdrawRewards(bool)":"infinite","sumRewards()":"2518","totalLocked()":"infinite","transferOwnership(address)":"infinite","unlock(uint32)":"infinite","unlockClaim(uint32)":"infinite","withdrawRewards()":"2610"},"internal":{"_findFromActiveList(uint32)":"infinite","_mintL2EMetis(uint256)":"infinite","_removeFromActiveList(uint32)":"infinite","_setActive(uint32,bool)":"infinite"}},"methodIdentifiers":{"activeSequencerCount()":"1152eb41","activeSequencerIds(uint256)":"1abdaf6a","addAgent()":"35cd3599","implementation()":"5c60da1b","initialize(address,address,address,uint256,uint32,address,address)":"b699ce5f","l2ChainId()":"d6ae3cd5","l2Gas()":"3cbb6979","l2Minter()":"080e1e4e","l2RewardDispatcher()":"e92d61e5","lockFor(uint32,address,uint256,bytes)":"af372db7","lockingInfo()":"f7cee36a","lockingPool()":"85d1e2b8","messenger()":"3cb747bf","metis()":"e5974554","owner()":"8da5cb5b","relock()":"c53b573d","renounceOwnership()":"715018a6","sequencerAgentCount()":"9e935704","sequencerAgentTemplate()":"8db8ad88","sequencerAgents(uint32)":"457cb586","setActive(uint32,bool)":"e956eaf1","setL2Gas(uint32)":"33bec7e7","setL2Minter(address)":"f87b7a3e","setSequencerAgentTemplate(address)":"eb2c5798","setWithdrawRewards(bool)":"efa412d0","sumRewards()":"7ca4f8b0","totalLocked()":"56891412","transferOwnership(address)":"f2fde38b","unlock(uint32)":"67d93c81","unlockClaim(uint32)":"1221e6a5","withdrawRewards()":"c7b8981c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldValue\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newValue\",\"type\":\"uint32\"}],\"name\":\"L2GasSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"L2MetisMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"SequencerAgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"SequencerAgentTemplateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"SequencerRelocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"WithdrawRewardsSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activeSequencerCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeSequencerIds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addAgent\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_metis\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lockingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1Bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_l2Minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2RewardDispatcher\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2ChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Gas\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2RewardDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"agentId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sequencerSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubKey\",\"type\":\"bytes\"}],\"name\":\"lockFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingInfo\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingPool\",\"outputs\":[{\"internalType\":\"contract ILockingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract ICrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metis\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalProcessed\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerAgentCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerAgentTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"sequencerAgents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"agentId\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"setL2Gas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2GasAddress\",\"type\":\"address\"}],\"name\":\"setL2Minter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sequencerAgentTemplate\",\"type\":\"address\"}],\"name\":\"setSequencerAgentTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_withdrawRewards\",\"type\":\"bool\"}],\"name\":\"setWithdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sumRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"agentId\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"agentId\",\"type\":\"uint32\"}],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"L2GasSet(uint32,uint32)\":{\"params\":{\"oldValue\":\"The old L2 gas limit.        \"}},\"L2MetisMinted(uint256)\":{\"params\":{\"amount\":\"The amount of Metis tokens that have been minted.\"}},\"SequencerAgentAdded(uint32,address)\":{\"params\":{\"agent\":\"address of the agent\",\"index\":\"index of the agent\"}},\"SequencerAgentTemplateSet(address,address)\":{\"params\":{\"newValue\":\"The address of the new sequencer agent template.\",\"oldValue\":\"The address of the old sequencer agent template.\"}},\"SequencerRelocked(uint32,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of Metis tokens that have been added to the lock.\",\"index\":\"The index of the sequencer agent in the sequencer list.\",\"reward\":\"The amount of additional rewards that have been locked.\"}},\"WithdrawRewardsSet(bool,bool)\":{\"params\":{\"newValue\":\"The new withdrawRewards.\",\"oldValue\":\"The old withdrawRewards.\"}}},\"kind\":\"dev\",\"methods\":{\"activeSequencerCount()\":{\"returns\":{\"_0\":\"The number of active sequencers.\"}},\"addAgent()\":{\"returns\":{\"_0\":\"The index of the new sequencer agent.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The implementation address\"}},\"lockFor(uint32,address,uint256,bytes)\":{\"params\":{\"agentId\":\"The index of the sequencer agent.\",\"amount\":\"The amount of Metis tokens to lock.\",\"sequencerSigner\":\"The address of the sequencer signer.\",\"signerPubKey\":\"The public key of the sequencer signer.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"relock()\":{\"details\":\"The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\",\"returns\":{\"totalProcessed\":\"The total amount of Metis tokens and rewards that have been relocked.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setL2Gas(uint32)\":{\"details\":\"The L2 gas limit is used when minting eMetis tokens on Layer 2.\",\"params\":{\"_l2Gas\":\"The new L2 gas limit.\"}},\"setSequencerAgentTemplate(address)\":{\"params\":{\"_sequencerAgentTemplate\":\"The address of the new sequencer agent template.\"}},\"setWithdrawRewards(bool)\":{\"params\":{\"_withdrawRewards\":\"The new value of the withdrawRewards flag.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlock(uint32)\":{\"params\":{\"agentId\":\"The index of the sequencer agent.\"}},\"unlockClaim(uint32)\":{\"params\":{\"agentId\":\"The index of the sequencer agent.\"}}},\"title\":\"Dealer\",\"version\":1},\"userdoc\":{\"events\":{\"L2GasSet(uint32,uint32)\":{\"notice\":\"Emits when the L2 gas limit is set.\"},\"L2MetisMinted(uint256)\":{\"notice\":\"Emits when Metis tokens are minted on Layer 2.\"},\"SequencerAgentAdded(uint32,address)\":{\"notice\":\"Emits when a new sequencer agent is added\"},\"SequencerAgentTemplateSet(address,address)\":{\"notice\":\"Emits when the sequencer agent template is set.\"},\"SequencerRelocked(uint32,uint256,uint256)\":{\"notice\":\"Emits when additional Metis tokens and rewards are locked for a sequencer.\"},\"WithdrawRewardsSet(bool,bool)\":{\"notice\":\"Emits when withdrawRewards is set.\"}},\"kind\":\"user\",\"methods\":{\"activeSequencerCount()\":{\"notice\":\"Returns the number of active sequencers.\"},\"activeSequencerIds(uint256)\":{\"notice\":\"The list of active sequencer agent IDs.\"},\"addAgent()\":{\"notice\":\"Adds a new sequencer agent.\"},\"implementation()\":{\"notice\":\"Use Dealer as a beacon of BeaconProxy for SequencerAgent\"},\"initialize(address,address,address,uint256,uint32,address,address)\":{\"notice\":\"Initializes the contract.\"},\"l2ChainId()\":{\"notice\":\"The ID of the L2 chain.\"},\"l2Gas()\":{\"notice\":\"L2 gas limit.\"},\"l2Minter()\":{\"notice\":\"The address of the L2 MetisMinter contract.\"},\"l2RewardDispatcher()\":{\"notice\":\"The address of the L2 RewardDispatcher contract.\"},\"lockFor(uint32,address,uint256,bytes)\":{\"notice\":\"Locks Metis tokens for a new sequencer.\"},\"lockingInfo()\":{\"notice\":\"The LockingInfo contract address.\"},\"lockingPool()\":{\"notice\":\"The LockingPool contract address.\"},\"messenger()\":{\"notice\":\"The L2 messenger contract.\"},\"metis()\":{\"notice\":\"The Metis token.\"},\"relock()\":{\"notice\":\"Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\"},\"sequencerAgentCount()\":{\"notice\":\"The number of sequencer agents.\"},\"sequencerAgentTemplate()\":{\"notice\":\"The template contract for sequencer agents.\"},\"sequencerAgents(uint32)\":{\"notice\":\"The list of sequencer agents.\"},\"setActive(uint32,bool)\":{\"notice\":\"Sets the active status of a sequencer agent.\"},\"setL2Gas(uint32)\":{\"notice\":\"Sets the L2 gas limit.\"},\"setSequencerAgentTemplate(address)\":{\"notice\":\"Sets the sequencer agent template.\"},\"setWithdrawRewards(bool)\":{\"notice\":\"set withdraw rewards\"},\"sumRewards()\":{\"notice\":\"The sum of rewards of all sequencers.\"},\"totalLocked()\":{\"notice\":\"Returns the total amount of Metis tokens that have been locked for all sequencers.\"},\"unlock(uint32)\":{\"notice\":\"Unlock Metis tokens and terminate the sequencer.\"},\"unlockClaim(uint32)\":{\"notice\":\"The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\"},\"withdrawRewards()\":{\"notice\":\"withdraw rewards\"}},\"notice\":\"The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dealer.sol\":\"Dealer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"../ERC1967/ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\\n *\\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\\n * the beacon to not upgrade the implementation maliciously.\\n *\\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\\n * an inconsistent state where the beacon storage slot does not match the beacon address.\\n */\\ncontract BeaconProxy is Proxy {\\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\\n    address private immutable _beacon;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\\n        _beacon = beacon;\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the beacon.\\n     */\\n    function _getBeacon() internal view virtual returns (address) {\\n        return _beacon;\\n    }\\n}\\n\",\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"contracts/Dealer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"../interface/ICrossDomainEnabled.sol\\\";\\nimport \\\"../interface/ILockingPool.sol\\\";\\nimport \\\"../interface/IVeMetisMinter.sol\\\";\\nimport \\\"../interface/ICrossDomainMessenger.sol\\\";\\nimport \\\"./SequencerAgent.sol\\\";\\n\\n\\n/// @title Dealer\\n/// @notice The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.\\ncontract Dealer is OwnableUpgradeable {\\n\\n    /// @notice Emits when a new sequencer agent is added\\n    /// @param index index of the agent\\n    /// @param agent address of the agent\\n    event SequencerAgentAdded(uint32 index, address agent);\\n\\n    /// @notice Emits when additional Metis tokens and rewards are locked for a sequencer.\\n    /// @param index The index of the sequencer agent in the sequencer list.\\n    /// @param amount The amount of Metis tokens that have been added to the lock.\\n    /// @param reward The amount of additional rewards that have been locked.\\n    event SequencerRelocked(uint32 index, uint256 amount, uint256 reward);\\n\\n    /// @notice Emits when Metis tokens are minted on Layer 2.\\n    /// @param amount The amount of Metis tokens that have been minted.\\n    event L2MetisMinted(uint256 amount);\\n\\n    /// @notice Emits when the sequencer agent template is set.\\n    /// @param oldValue The address of the old sequencer agent template.\\n    /// @param newValue The address of the new sequencer agent template.\\n    event SequencerAgentTemplateSet(address indexed oldValue, address indexed newValue);\\n\\n    /// @notice Emits when the L2 gas limit is set.\\n    /// @param oldValue The old L2 gas limit.        \\n    event L2GasSet(uint32 oldValue, uint32 newValue);\\n\\n    /// @notice Emits when withdrawRewards is set.\\n    /// @param oldValue The old withdrawRewards.\\n    /// @param newValue The new withdrawRewards.\\n    event WithdrawRewardsSet(bool oldValue, bool newValue);\\n\\n    /// @notice The template contract for sequencer agents.\\n    address public sequencerAgentTemplate;\\n\\n    /// @notice The Metis token.\\n    IERC20 public metis;\\n\\n    /// @notice The LockingPool contract address.\\n    ILockingPool public lockingPool;\\n\\n    /// @notice The LockingInfo contract address.\\n    ILockingInfo public lockingInfo;\\n\\n    /// @notice The L2 messenger contract.\\n    ICrossDomainMessenger public messenger;\\n\\n    /// @notice The ID of the L2 chain.\\n    uint256 public l2ChainId;\\n\\n    /// @notice The address of the L2 MetisMinter contract.\\n    address public l2Minter;\\n\\n    /// @notice The address of the L2 RewardDispatcher contract.\\n    address public l2RewardDispatcher;\\n\\n    /// @notice The list of sequencer agents.\\n    mapping(uint32 => address) public sequencerAgents;\\n\\n    /// @notice The number of sequencer agents.\\n    uint32 public sequencerAgentCount;\\n\\n    /// @notice The list of active sequencer agent IDs.\\n    uint32[] public activeSequencerIds;\\n\\n    /// @notice The sum of rewards of all sequencers.\\n    uint256 public sumRewards;\\n\\n    /// @notice L2 gas limit.\\n    uint32 public l2Gas;\\n\\n    /// @notice withdraw rewards\\n    bool public withdrawRewards;\\n\\n    /// @notice Initializes the contract.\\n    function initialize( \\n        address _metis, \\n        address _lockingPool, \\n        address _l1Bridge, \\n        uint256 _l2ChainId, \\n        uint32 _l2Gas, \\n        address _l2Minter, \\n        address _l2RewardDispatcher\\n        ) public initializer {\\n        require( _metis != address(0) && _lockingPool != address(0) && _l1Bridge != address(0) && _l2Minter != address(0) && _l2RewardDispatcher != address(0), \\\"Dealer: zero address\\\");\\n        __Ownable_init(msg.sender);\\n        metis = IERC20(_metis);\\n        lockingPool = ILockingPool(_lockingPool);\\n        lockingInfo = lockingPool.escrow();\\n        messenger = ICrossDomainMessenger(ICrossDomainEnabled(_l1Bridge).messenger());\\n        l2ChainId = _l2ChainId;\\n        l2Gas = _l2Gas;\\n        l2Minter = _l2Minter;\\n        l2RewardDispatcher = _l2RewardDispatcher;\\n\\n    }\\n\\n    /// @notice Returns the number of active sequencers.\\n    /// @return The number of active sequencers.\\n    function activeSequencerCount() external view returns (uint32) {\\n        return uint32(activeSequencerIds.length);\\n    }\\n\\n    /// @notice set withdraw rewards\\n    /// @param _withdrawRewards The new value of the withdrawRewards flag.\\n    function setWithdrawRewards(bool _withdrawRewards) external onlyOwner {\\n        bool _old = withdrawRewards;\\n        withdrawRewards = _withdrawRewards;\\n        emit WithdrawRewardsSet(_old, _withdrawRewards);\\n    }\\n\\n    /// @notice Adds a new sequencer agent.\\n    /// @return The index of the new sequencer agent.\\n    function addAgent() external onlyOwner returns (uint32) {\\n        bytes memory data = abi.encodeWithSelector(SequencerAgent.initialize.selector, address(this), lockingPool, lockingInfo, address(metis));\\n        address clone = address(new BeaconProxy(address(this), data));\\n        uint32 index = sequencerAgentCount;\\n        sequencerAgents[index] = clone;\\n        emit SequencerAgentAdded(index, clone);\\n        sequencerAgentCount++;\\n        return index;\\n    }\\n\\n    /// @notice Locks Metis tokens for a new sequencer.\\n    /// @param agentId The index of the sequencer agent.\\n    /// @param sequencerSigner The address of the sequencer signer.\\n    /// @param amount The amount of Metis tokens to lock.\\n    /// @param signerPubKey The public key of the sequencer signer.\\n    function lockFor(uint32 agentId, address sequencerSigner, uint256 amount, bytes memory signerPubKey) external onlyOwner {\\n        address agent = sequencerAgents[agentId];\\n        IERC20(metis).transferFrom(msg.sender, agent, amount);\\n        SequencerAgent(agent).lock(sequencerSigner, l2Minter, amount, signerPubKey);\\n        _setActive(agentId, true);\\n    }\\n\\n    /// @notice Unlock Metis tokens and terminate the sequencer.\\n    /// @param agentId The index of the sequencer agent.\\n    function unlock(uint32 agentId) external payable onlyOwner {\\n        SequencerAgent(sequencerAgents[agentId]).unlock(l2Gas);\\n        _removeFromActiveList(agentId);\\n    }\\n\\n    /// @notice The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\\n    /// @param agentId The index of the sequencer agent.\\n    function unlockClaim(uint32 agentId) external payable onlyOwner {\\n        SequencerAgent(sequencerAgents[agentId]).unlockClaim(l2Gas);\\n    }\\n\\n    /// @notice Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\\n    /// @dev The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\\n    /// @return totalProcessed The total amount of Metis tokens and rewards that have been relocked.\\n    function relock() external payable returns (uint256 totalProcessed) {\\n        require(activeSequencerIds.length > 0, \\\"Dealer: no active sequencer\\\");\\n\\n        uint maxLock = lockingInfo.maxLock();\\n        uint256 undistributedAmount = metis.balanceOf(address(this));\\n        uint256 totalRewards = 0;\\n\\n        for (uint32 i = 0; i < activeSequencerIds.length; i++) {\\n            uint32 agentId = activeSequencerIds[i];\\n            SequencerAgent agent = SequencerAgent(sequencerAgents[agentId]);\\n            ILockingPool.SequencerData memory seq = agent.sequencerData();\\n            (uint256 reward, uint256 locked) = (seq.reward, seq.amount);\\n            totalRewards += reward;\\n\\n            // The lock quota means the amount of Metis tokens that can be locked for the sequencer, due to the maximum lock amount.\\n            uint256 lockQuota = locked < maxLock ? maxLock - locked : 0;\\n\\n            // The amount of Metis tokens that can be locked is the minimum of the lock quota and the undistributed amount.\\n            uint256 lockAmount = Math.min(lockQuota, undistributedAmount);\\n\\n            // The undistributed amount should be reduced by the amount of Metis tokens that have been locked.\\n            undistributedAmount -= lockAmount;\\n\\n            // If there is not any lock amount or reward, the process should be skipped.\\n            uint256 toBeProcessed = lockAmount + reward;\\n            if (toBeProcessed == 0) {\\n                continue;\\n            }\\n\\n            totalProcessed += toBeProcessed;\\n\\n            // The rewards are withdrawn if the `withdrawRewards` flag is set to true, or if the locked amount plus the amount to be processed exceeds the maximum lock amount.\\n            bool _withdrawRewards = withdrawRewards || locked + toBeProcessed > maxLock;\\n            if (_withdrawRewards && reward > 0) {\\n                agent.withdrawRewards(l2Gas);\\n            }\\n\\n            // If the lock amount is not zero, or if we decided to convert the rewards to lock amount, the `relock` function is called.\\n            if (!_withdrawRewards || lockAmount > 0) {\\n                IERC20(metis).transfer(address(agent), lockAmount);\\n                agent.relock(lockAmount);\\n                emit SequencerRelocked(agentId, lockAmount, reward);\\n            }\\n        }\\n\\n        // In the event of any rewards, the MetisMinter contract on Layer 2 is invoked to mint eMetis tokens. These tokens are then distributed as rewards to seMetis holders.\\n        if (totalRewards > 0) {\\n            _mintL2EMetis(totalRewards);\\n            sumRewards += totalRewards;\\n        }\\n    }\\n\\n    /// @notice Sets the active status of a sequencer agent.\\n    function setActive(uint32 agentId, bool active) external onlyOwner {\\n        _setActive(agentId, active);\\n    }\\n\\n    /// @notice Sets the sequencer agent template.\\n    /// @param _sequencerAgentTemplate The address of the new sequencer agent template.\\n    function setSequencerAgentTemplate(address _sequencerAgentTemplate) external onlyOwner {\\n        require(_sequencerAgentTemplate != address(0), \\\"Dealer: zero address\\\");\\n        sequencerAgentTemplate = _sequencerAgentTemplate;\\n    }\\n\\n    /// @notice Sets the L2 gas limit.\\n    /// @param _l2Gas The new L2 gas limit.\\n    /// @dev The L2 gas limit is used when minting eMetis tokens on Layer 2.\\n    function setL2Gas(uint32 _l2Gas) external onlyOwner {\\n        uint32 _old = l2Gas;\\n        l2Gas = _l2Gas;\\n        emit L2GasSet(_old, _l2Gas);\\n    }\\n\\n    /// @notice Returns the total amount of Metis tokens that have been locked for all sequencers.\\n    function totalLocked() external view returns (uint256) {\\n        uint256 total = 0;\\n        for (uint32 i = 0; i < activeSequencerIds.length; i++) {\\n            uint32 agentId = activeSequencerIds[i];\\n            SequencerAgent agent = SequencerAgent(sequencerAgents[agentId]);\\n            uint256 locked = agent.sequencerData().amount;\\n            total += locked;\\n        }\\n        return total;\\n    }\\n\\n    /// @notice Use Dealer as a beacon of BeaconProxy for SequencerAgent\\n    /// @return The implementation address\\n    function implementation() external view returns (address) {\\n        return sequencerAgentTemplate;\\n    }\\n\\n    /// @notice Sets the active status of a sequencer agent.\\n    function _setActive(uint32 agentId, bool active) internal {\\n        if (active) {\\n            for (uint32 i = 0; i < activeSequencerIds.length; i++) {\\n                require(activeSequencerIds[i] != agentId, \\\"Dealer: already active\\\");\\n            }\\n            activeSequencerIds.push(agentId);\\n        } else {\\n            _removeFromActiveList(agentId);\\n        }\\n    }\\n\\n    /// @notice mint veMetis on Layer 2\\n    /// @param amount Metis amount\\n    function _mintL2EMetis(uint256 amount) internal {\\n        bytes memory message = abi.encodeWithSelector(IVeMetisMinter.mintFromL1.selector, amount);\\n        messenger.sendMessageViaChainId{value:msg.value}(l2ChainId, l2Minter, message, l2Gas);\\n        emit L2MetisMinted(amount);\\n    }\\n\\n    /// @notice Removes a sequencer agent from the active list.\\n    /// @param agentId The index of the sequencer agent.\\n    /// @dev The sequencer agent is removed from the active list by swapping it with the last element in the list, and then popping the last element.\\n    function _removeFromActiveList(uint32 agentId) internal returns (uint32 index) {\\n        index = _findFromActiveList(agentId);\\n        require(index < type(uint32).max, \\\"Dealer: not active\\\");\\n        activeSequencerIds[index] = activeSequencerIds[activeSequencerIds.length - 1];\\n        activeSequencerIds.pop();\\n    }\\n\\n    /// @notice Finds the index of a sequencer agent in the active list.\\n    /// @param agentId The index of the sequencer agent.\\n    /// @return The index of the sequencer agent in the active list.\\n    function _findFromActiveList(uint32 agentId) internal view returns (uint32) {\\n        for (uint32 index = 0; index < activeSequencerIds.length; index++) {\\n            if (activeSequencerIds[index] == agentId) {\\n                return index;\\n            }\\n        }\\n        return type(uint32).max;\\n    }\\n\\n    function setL2Minter(address _l2GasAddress) public{\\n        l2Minter = _l2GasAddress;\\n    }\\n}\",\"keccak256\":\"0x3fa5d7186db6f3f96264f5d9769411db9326573d6b4e251d28c612853c2af734\",\"license\":\"MIT\"},\"contracts/SequencerAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interface/ILockingPool.sol\\\";\\nimport \\\"../interface/ILockingInfo.sol\\\";\\n\\ncontract SequencerAgent is ContextUpgradeable {\\n    address public dealer;\\n    ILockingPool public lockingPool;\\n    ILockingInfo public lockingInfo;\\n    IERC20 public metis;\\n    uint256 public sequencerId;\\n    address public sequencerSigner;\\n    bool public active;\\n\\n    modifier onlyDealer() {\\n        require(msg.sender == dealer, \\\"SequencerAgent: only dealer\\\");\\n        _;\\n    }\\n\\n    function initialize(address _dealer, ILockingPool _lockingPool, ILockingInfo _lockingInfo, address _metis) external initializer {\\n        dealer = _dealer;\\n        lockingPool = _lockingPool;\\n        lockingInfo = _lockingInfo;\\n        metis = IERC20(_metis);\\n    }\\n\\n    function lock(address _sequencerSigner, address _rewardRecipient, uint256 _amount, bytes memory _signerPubKey) public onlyDealer {\\n        require(sequencerId == 0, \\\"SequencerAgent: sequencer already locked\\\");\\n        require(_sequencerSigner != address(0) && _rewardRecipient != address(0), \\\"SequencerAgent: zero address\\\");\\n        require(_amount > 0, \\\"SequencerAgent: zero amount\\\");\\n\\n        sequencerSigner = _sequencerSigner;\\n        metis.approve(address(lockingInfo), type(uint256).max);\\n        lockingPool.lockWithRewardRecipient(sequencerSigner, _rewardRecipient, _amount, _signerPubKey);\\n        sequencerId = lockingPool.seqSigners(sequencerSigner);\\n        active = true;\\n    }\\n\\n    function relock(uint256 amount) public onlyDealer {\\n        lockingPool.relock(sequencerId, amount, true);\\n    }\\n\\n    function withdrawRewards(uint32 l2Gas) public onlyDealer {\\n        lockingPool.withdrawRewards(sequencerId, l2Gas);\\n    }\\n\\n    function sequencerData() public view returns (ILockingPool.SequencerData memory) {\\n        return lockingPool.sequencers(sequencerId);\\n    }\\n\\n    function unlock(uint32 l2Gas) public payable onlyDealer {\\n        lockingPool.unlock{value: msg.value}(sequencerId, l2Gas);\\n        active = false;\\n    }\\n\\n    function unlockClaim(uint32 l2Gas) public payable onlyDealer {\\n        lockingPool.unlockClaim{value: msg.value}(sequencerId, l2Gas);\\n        IERC20(metis).transfer(dealer, IERC20(metis).balanceOf(address(this)));\\n    }\\n}\",\"keccak256\":\"0xe9673f5dbd9cf1928a47f48b976298ddc584a2e46d256097c1c9aa0ba92114a6\",\"license\":\"MIT\"},\"interface/ICrossDomainEnabled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ICrossDomainEnabled {\\n    function messenger() external view returns (address);\\n}\",\"keccak256\":\"0x2806d6261202f57849c4e98c2f5786882886e45c67751c2b38dd5f9d0456a7fa\",\"license\":\"MIT\"},\"interface/ICrossDomainMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit,\\n        uint256 chainId\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n    \\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _chainId L2 chain id.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n    function replayMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        address _sender,\\n        bytes memory _message,\\n        uint256 _queueIndex,\\n        uint32 _oldGasLimit,\\n        uint32 _newGasLimit\\n    )external;\\n}\",\"keccak256\":\"0xfc7bee4eda45bec59ba5ebf35ab65e4d9dbc0092407a67b33e4e338e6be1336f\",\"license\":\"MIT\"},\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amoun in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0xe63cc48d66aa1359f5b9048a3f21be6f2926130b0360cc495c23737dd7248f1e\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n}\",\"keccak256\":\"0x43a28aeb18dc696d8c141ca49d1ecb62341b01e9d18471c4df9921cd3f98f227\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"},\"interface/IVeMetisMinter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IVeMetisMinter {\\n    function mint(address user, uint256 amount) external;\\n\\n    function mintFromL1(uint256 amount) external;\\n\\n    function depositToL1Dealer(uint256 amount) external payable;\\n}\",\"keccak256\":\"0x19711cc1c9f794c07bf02cca34f9895ef30b1372ca32b5c7a9d1d46147ac158c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2455,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerAgentTemplate","offset":0,"slot":"0","type":"t_address"},{"astId":2459,"contract":"contracts/Dealer.sol:Dealer","label":"metis","offset":0,"slot":"1","type":"t_contract(IERC20)979"},{"astId":2463,"contract":"contracts/Dealer.sol:Dealer","label":"lockingPool","offset":0,"slot":"2","type":"t_contract(ILockingPool)3940"},{"astId":2467,"contract":"contracts/Dealer.sol:Dealer","label":"lockingInfo","offset":0,"slot":"3","type":"t_contract(ILockingInfo)3817"},{"astId":2471,"contract":"contracts/Dealer.sol:Dealer","label":"messenger","offset":0,"slot":"4","type":"t_contract(ICrossDomainMessenger)3607"},{"astId":2474,"contract":"contracts/Dealer.sol:Dealer","label":"l2ChainId","offset":0,"slot":"5","type":"t_uint256"},{"astId":2477,"contract":"contracts/Dealer.sol:Dealer","label":"l2Minter","offset":0,"slot":"6","type":"t_address"},{"astId":2480,"contract":"contracts/Dealer.sol:Dealer","label":"l2RewardDispatcher","offset":0,"slot":"7","type":"t_address"},{"astId":2485,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerAgents","offset":0,"slot":"8","type":"t_mapping(t_uint32,t_address)"},{"astId":2488,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerAgentCount","offset":0,"slot":"9","type":"t_uint32"},{"astId":2492,"contract":"contracts/Dealer.sol:Dealer","label":"activeSequencerIds","offset":0,"slot":"10","type":"t_array(t_uint32)dyn_storage"},{"astId":2495,"contract":"contracts/Dealer.sol:Dealer","label":"sumRewards","offset":0,"slot":"11","type":"t_uint256"},{"astId":2498,"contract":"contracts/Dealer.sol:Dealer","label":"l2Gas","offset":0,"slot":"12","type":"t_uint32"},{"astId":2501,"contract":"contracts/Dealer.sol:Dealer","label":"withdrawRewards","offset":4,"slot":"12","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint32)dyn_storage":{"base":"t_uint32","encoding":"dynamic_array","label":"uint32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ICrossDomainMessenger)3607":{"encoding":"inplace","label":"contract ICrossDomainMessenger","numberOfBytes":"20"},"t_contract(IERC20)979":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(ILockingInfo)3817":{"encoding":"inplace","label":"contract ILockingInfo","numberOfBytes":"20"},"t_contract(ILockingPool)3940":{"encoding":"inplace","label":"contract ILockingPool","numberOfBytes":"20"},"t_mapping(t_uint32,t_address)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"events":{"L2GasSet(uint32,uint32)":{"notice":"Emits when the L2 gas limit is set."},"L2MetisMinted(uint256)":{"notice":"Emits when Metis tokens are minted on Layer 2."},"SequencerAgentAdded(uint32,address)":{"notice":"Emits when a new sequencer agent is added"},"SequencerAgentTemplateSet(address,address)":{"notice":"Emits when the sequencer agent template is set."},"SequencerRelocked(uint32,uint256,uint256)":{"notice":"Emits when additional Metis tokens and rewards are locked for a sequencer."},"WithdrawRewardsSet(bool,bool)":{"notice":"Emits when withdrawRewards is set."}},"kind":"user","methods":{"activeSequencerCount()":{"notice":"Returns the number of active sequencers."},"activeSequencerIds(uint256)":{"notice":"The list of active sequencer agent IDs."},"addAgent()":{"notice":"Adds a new sequencer agent."},"implementation()":{"notice":"Use Dealer as a beacon of BeaconProxy for SequencerAgent"},"initialize(address,address,address,uint256,uint32,address,address)":{"notice":"Initializes the contract."},"l2ChainId()":{"notice":"The ID of the L2 chain."},"l2Gas()":{"notice":"L2 gas limit."},"l2Minter()":{"notice":"The address of the L2 MetisMinter contract."},"l2RewardDispatcher()":{"notice":"The address of the L2 RewardDispatcher contract."},"lockFor(uint32,address,uint256,bytes)":{"notice":"Locks Metis tokens for a new sequencer."},"lockingInfo()":{"notice":"The LockingInfo contract address."},"lockingPool()":{"notice":"The LockingPool contract address."},"messenger()":{"notice":"The L2 messenger contract."},"metis()":{"notice":"The Metis token."},"relock()":{"notice":"Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers."},"sequencerAgentCount()":{"notice":"The number of sequencer agents."},"sequencerAgentTemplate()":{"notice":"The template contract for sequencer agents."},"sequencerAgents(uint32)":{"notice":"The list of sequencer agents."},"setActive(uint32,bool)":{"notice":"Sets the active status of a sequencer agent."},"setL2Gas(uint32)":{"notice":"Sets the L2 gas limit."},"setSequencerAgentTemplate(address)":{"notice":"Sets the sequencer agent template."},"setWithdrawRewards(bool)":{"notice":"set withdraw rewards"},"sumRewards()":{"notice":"The sum of rewards of all sequencers."},"totalLocked()":{"notice":"Returns the total amount of Metis tokens that have been locked for all sequencers."},"unlock(uint32)":{"notice":"Unlock Metis tokens and terminate the sequencer."},"unlockClaim(uint32)":{"notice":"The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed."},"withdrawRewards()":{"notice":"withdraw rewards"}},"notice":"The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.","version":1}}},"contracts/SequencerAgent.sol":{"SequencerAgent":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"active","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dealer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dealer","type":"address"},{"internalType":"contract ILockingPool","name":"_lockingPool","type":"address"},{"internalType":"contract ILockingInfo","name":"_lockingInfo","type":"address"},{"internalType":"address","name":"_metis","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sequencerSigner","type":"address"},{"internalType":"address","name":"_rewardRecipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubKey","type":"bytes"}],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockingInfo","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockingPool","outputs":[{"internalType":"contract ILockingPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metis","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"relock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sequencerData","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"internalType":"struct ILockingPool.SequencerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"l2Gas","type":"uint32"}],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"l2Gas","type":"uint32"}],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"l2Gas","type":"uint32"}],"name":"withdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611e7a806100206000396000f3fe6080604052600436106100dd5760003560e01c80639de2ee211161007f578063ce6df54a11610059578063ce6df54a1461026e578063e597455414610297578063f7cee36a146102c2578063f8c8765e146102ed576100dd565b80639de2ee21146101ef578063a98d38f01461021a578063c3b550c814610243576100dd565b806356387b91116100bb57806356387b911461015457806367d93c811461017d57806376d9f95c1461019957806385d1e2b8146101c4576100dd565b806302fb0c5e146100e257806304a78fca1461010d5780631221e6a514610138575b600080fd5b3480156100ee57600080fd5b506100f7610316565b6040516101049190611266565b60405180910390f35b34801561011957600080fd5b50610122610329565b60405161012f919061129a565b60405180910390f35b610152600480360381019061014d9190611305565b61032f565b005b34801561016057600080fd5b5061017b60048036038101906101769190611305565b6105ae565b005b61019760048036038101906101929190611305565b6106d0565b005b3480156101a557600080fd5b506101ae61080e565b6040516101bb919061144e565b60405180910390f35b3480156101d057600080fd5b506101d96108ba565b6040516101e691906114c9565b60405180910390f35b3480156101fb57600080fd5b506102046108e0565b60405161021191906114f3565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c919061153a565b610904565b005b34801561024f57600080fd5b50610258610a29565b60405161026591906114f3565b60405180910390f35b34801561027a57600080fd5b50610295600480360381019061029091906116d9565b610a4f565b005b3480156102a357600080fd5b506102ac610ecc565b6040516102b9919061177d565b60405180910390f35b3480156102ce57600080fd5b506102d7610ef2565b6040516102e491906117b9565b60405180910390f35b3480156102f957600080fd5b50610314600480360381019061030f9190611850565b610f18565b005b600560149054906101000a900460ff1681565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b490611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ddc74de34600454846040518463ffffffff1660e01b815260040161041d929190611943565b6000604051808303818588803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b5050505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161050991906114f3565b602060405180830381865afa158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a9190611981565b6040518363ffffffff1660e01b81526004016105679291906119ae565b6020604051808303816000875af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190611a03565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317396687600454836040518363ffffffff1660e01b815260040161069b929190611943565b600060405180830381600087803b1580156106b557600080fd5b505af11580156106c9573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663262c0e6634600454846040518463ffffffff1660e01b81526004016107be929190611943565b6000604051808303818588803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b50505050506000600560146101000a81548160ff02191690831515021790555050565b6108166111cc565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636ba7ccff6004546040518263ffffffff1660e01b8152600401610873919061129a565b61014060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190611b40565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663015bb1806004548360016040518463ffffffff1660e01b81526004016109f493929190611b6e565b600060405180830381600087803b158015610a0e57600080fd5b505af1158015610a22573d6000803e3d6000fd5b5050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611914565b60405180910390fd5b600060045414610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1990611c17565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610b8c5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc290611c83565b60405180910390fd5b60008211610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611cef565b60405180910390fd5b83600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610cee9291906119ae565b6020604051808303816000875af1158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d319190611a03565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ad42030600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585856040518563ffffffff1660e01b8152600401610db59493929190611d8e565b600060405180830381600087803b158015610dcf57600080fd5b505af1158015610de3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663beb26755600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610e6491906114f3565b602060405180830381865afa158015610e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea59190611981565b6004819055506001600560146101000a81548160ff02191690831515021790555050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f226111a4565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610f705750825b9050600060018367ffffffffffffffff16148015610fa5575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610fb3575080155b15610fea576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561103a5760018560000160086101000a81548160ff0219169083151502179055505b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156111995760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516111909190611e29565b60405180910390a15b505050505050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60008115159050919050565b6112608161124b565b82525050565b600060208201905061127b6000830184611257565b92915050565b6000819050919050565b61129481611281565b82525050565b60006020820190506112af600083018461128b565b92915050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6112e2816112c9565b81146112ed57600080fd5b50565b6000813590506112ff816112d9565b92915050565b60006020828403121561131b5761131a6112bf565b5b6000611329848285016112f0565b91505092915050565b61133b81611281565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061136c82611341565b9050919050565b61137c81611361565b82525050565b610140820160008201516113996000850182611332565b5060208201516113ac6020850182611332565b5060408201516113bf6040850182611332565b5060608201516113d26060850182611332565b5060808201516113e56080850182611332565b5060a08201516113f860a0850182611332565b5060c082015161140b60c0850182611332565b5060e082015161141e60e0850182611332565b50610100820151611433610100850182611373565b50610120820151611448610120850182611373565b50505050565b6000610140820190506114646000830184611382565b92915050565b6000819050919050565b600061148f61148a61148584611341565b61146a565b611341565b9050919050565b60006114a182611474565b9050919050565b60006114b382611496565b9050919050565b6114c3816114a8565b82525050565b60006020820190506114de60008301846114ba565b92915050565b6114ed81611361565b82525050565b600060208201905061150860008301846114e4565b92915050565b61151781611281565b811461152257600080fd5b50565b6000813590506115348161150e565b92915050565b6000602082840312156115505761154f6112bf565b5b600061155e84828501611525565b91505092915050565b61157081611361565b811461157b57600080fd5b50565b60008135905061158d81611567565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115e68261159d565b810181811067ffffffffffffffff82111715611605576116046115ae565b5b80604052505050565b60006116186112b5565b905061162482826115dd565b919050565b600067ffffffffffffffff821115611644576116436115ae565b5b61164d8261159d565b9050602081019050919050565b82818337600083830152505050565b600061167c61167784611629565b61160e565b90508281526020810184848401111561169857611697611598565b5b6116a384828561165a565b509392505050565b600082601f8301126116c0576116bf611593565b5b81356116d0848260208601611669565b91505092915050565b600080600080608085870312156116f3576116f26112bf565b5b60006117018782880161157e565b94505060206117128782880161157e565b935050604061172387828801611525565b925050606085013567ffffffffffffffff811115611744576117436112c4565b5b611750878288016116ab565b91505092959194509250565b600061176782611496565b9050919050565b6117778161175c565b82525050565b6000602082019050611792600083018461176e565b92915050565b60006117a382611496565b9050919050565b6117b381611798565b82525050565b60006020820190506117ce60008301846117aa565b92915050565b60006117df82611361565b9050919050565b6117ef816117d4565b81146117fa57600080fd5b50565b60008135905061180c816117e6565b92915050565b600061181d82611361565b9050919050565b61182d81611812565b811461183857600080fd5b50565b60008135905061184a81611824565b92915050565b6000806000806080858703121561186a576118696112bf565b5b60006118788782880161157e565b9450506020611889878288016117fd565b935050604061189a8782880161183b565b92505060606118ab8782880161157e565b91505092959194509250565b600082825260208201905092915050565b7f53657175656e6365724167656e743a206f6e6c79206465616c65720000000000600082015250565b60006118fe601b836118b7565b9150611909826118c8565b602082019050919050565b6000602082019050818103600083015261192d816118f1565b9050919050565b61193d816112c9565b82525050565b6000604082019050611958600083018561128b565b6119656020830184611934565b9392505050565b60008151905061197b8161150e565b92915050565b600060208284031215611997576119966112bf565b5b60006119a58482850161196c565b91505092915050565b60006040820190506119c360008301856114e4565b6119d0602083018461128b565b9392505050565b6119e08161124b565b81146119eb57600080fd5b50565b6000815190506119fd816119d7565b92915050565b600060208284031215611a1957611a186112bf565b5b6000611a27848285016119ee565b91505092915050565b600080fd5b600081519050611a4481611567565b92915050565b60006101408284031215611a6157611a60611a30565b5b611a6c61014061160e565b90506000611a7c8482850161196c565b6000830152506020611a908482850161196c565b6020830152506040611aa48482850161196c565b6040830152506060611ab88482850161196c565b6060830152506080611acc8482850161196c565b60808301525060a0611ae08482850161196c565b60a08301525060c0611af48482850161196c565b60c08301525060e0611b088482850161196c565b60e083015250610100611b1d84828501611a35565b61010083015250610120611b3384828501611a35565b6101208301525092915050565b60006101408284031215611b5757611b566112bf565b5b6000611b6584828501611a4a565b91505092915050565b6000606082019050611b83600083018661128b565b611b90602083018561128b565b611b9d6040830184611257565b949350505050565b7f53657175656e6365724167656e743a2073657175656e63657220616c7265616460008201527f79206c6f636b6564000000000000000000000000000000000000000000000000602082015250565b6000611c016028836118b7565b9150611c0c82611ba5565b604082019050919050565b60006020820190508181036000830152611c3081611bf4565b9050919050565b7f53657175656e6365724167656e743a207a65726f206164647265737300000000600082015250565b6000611c6d601c836118b7565b9150611c7882611c37565b602082019050919050565b60006020820190508181036000830152611c9c81611c60565b9050919050565b7f53657175656e6365724167656e743a207a65726f20616d6f756e740000000000600082015250565b6000611cd9601b836118b7565b9150611ce482611ca3565b602082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d49578082015181840152602081019050611d2e565b60008484015250505050565b6000611d6082611d0f565b611d6a8185611d1a565b9350611d7a818560208601611d2b565b611d838161159d565b840191505092915050565b6000608082019050611da360008301876114e4565b611db060208301866114e4565b611dbd604083018561128b565b8181036060830152611dcf8184611d55565b905095945050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611e13611e0e611e0984611dda565b61146a565b611de4565b9050919050565b611e2381611df8565b82525050565b6000602082019050611e3e6000830184611e1a565b9291505056fea2646970667358221220037fb11de3adbb0e002b0ffe02d76d8089d12fe57f02b416093d99c95981e5b264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DE2EE21 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xCE6DF54A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCE6DF54A EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xE5974554 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF7CEE36A EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x2ED JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x9DE2EE21 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA98D38F0 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC3B550C8 EQ PUSH2 0x243 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x56387B91 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x56387B91 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x67D93C81 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x76D9F95C EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x85D1E2B8 EQ PUSH2 0x1C4 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x4A78FCA EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x1221E6A5 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DDC74DE CALLVALUE PUSH1 0x4 SLOAD DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP3 SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17396687 PUSH1 0x4 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x262C0E66 CALLVALUE PUSH1 0x4 SLOAD DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x816 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BA7CCFF PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x15BB180 PUSH1 0x4 SLOAD DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP1 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP1 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEE SWAP3 SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD42030 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBEB26755 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF22 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF70 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xFA5 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x103A JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP9 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1294 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x128B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E2 DUP2 PUSH2 0x12C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12FF DUP2 PUSH2 0x12D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1329 DUP5 DUP3 DUP6 ADD PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133B DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136C DUP3 PUSH2 0x1341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x1361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1399 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x13AC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x13BF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x13D2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13E5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13F8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x140B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x141E PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x1433 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x1373 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x1448 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x1373 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1382 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148F PUSH2 0x148A PUSH2 0x1485 DUP5 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A1 DUP3 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B3 DUP3 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C3 DUP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14ED DUP2 PUSH2 0x1361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1508 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1517 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1534 DUP2 PUSH2 0x150E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1550 JUMPI PUSH2 0x154F PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x155E DUP5 DUP3 DUP6 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1570 DUP2 PUSH2 0x1361 JUMP JUMPDEST DUP2 EQ PUSH2 0x157B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158D DUP2 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15E6 DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1605 JUMPI PUSH2 0x1604 PUSH2 0x15AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1618 PUSH2 0x12B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1624 DUP3 DUP3 PUSH2 0x15DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1644 JUMPI PUSH2 0x1643 PUSH2 0x15AE JUMP JUMPDEST JUMPDEST PUSH2 0x164D DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C PUSH2 0x1677 DUP5 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0x160E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1697 PUSH2 0x1598 JUMP JUMPDEST JUMPDEST PUSH2 0x16A3 DUP5 DUP3 DUP6 PUSH2 0x165A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C0 JUMPI PUSH2 0x16BF PUSH2 0x1593 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16F3 JUMPI PUSH2 0x16F2 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1712 DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1723 DUP8 DUP3 DUP9 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x12C4 JUMP JUMPDEST JUMPDEST PUSH2 0x1750 DUP8 DUP3 DUP9 ADD PUSH2 0x16AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1767 DUP3 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1777 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1792 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x176E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP3 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B3 DUP2 PUSH2 0x1798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180C DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP3 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x1812 JUMP JUMPDEST DUP2 EQ PUSH2 0x1838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x184A DUP2 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1869 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1878 DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x183B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A206F6E6C79206465616C65720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FE PUSH1 0x1B DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP3 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x192D DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193D DUP2 PUSH2 0x12C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1958 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1965 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1934 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x197B DUP2 PUSH2 0x150E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A5 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19C3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x19D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x128B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FD DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP5 DUP3 DUP6 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A44 DUP2 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x1A30 JUMP JUMPDEST JUMPDEST PUSH2 0x1A6C PUSH2 0x140 PUSH2 0x160E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A7C DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1A90 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1AA4 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1AB8 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1ACC DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1B08 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x1B1D DUP5 DUP3 DUP6 ADD PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B57 JUMPI PUSH2 0x1B56 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B65 DUP5 DUP3 DUP6 ADD PUSH2 0x1A4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B83 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1B90 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1B9D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A2073657175656E63657220616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x79206C6F636B6564000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C01 PUSH1 0x28 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0C DUP3 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C30 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A207A65726F206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6D PUSH1 0x1C DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C78 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9C DUP2 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A207A65726F20616D6F756E740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x1B DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D60 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x1D6A DUP2 DUP6 PUSH2 0x1D1A JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D83 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DA3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x1DB0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x1DBD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x128B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DCF DUP2 DUP5 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E13 PUSH2 0x1E0E PUSH2 0x1E09 DUP5 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST PUSH2 0x1DE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E23 DUP2 PUSH2 0x1DF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH32 0xB11DE3ADBB0E002B0FFE02D76D8089D12FE57F02B416093D99C95981E5B26473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"270:2125:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_getInitializableStorage_447":{"entryPoint":4516,"id":447,"parameterSlots":0,"returnSlots":1},"@active_3300":{"entryPoint":790,"id":3300,"parameterSlots":0,"returnSlots":0},"@dealer_3285":{"entryPoint":2272,"id":3285,"parameterSlots":0,"returnSlots":0},"@initialize_3346":{"entryPoint":3864,"id":3346,"parameterSlots":4,"returnSlots":0},"@lock_3429":{"entryPoint":2639,"id":3429,"parameterSlots":4,"returnSlots":0},"@lockingInfo_3291":{"entryPoint":3826,"id":3291,"parameterSlots":0,"returnSlots":0},"@lockingPool_3288":{"entryPoint":2234,"id":3288,"parameterSlots":0,"returnSlots":0},"@metis_3294":{"entryPoint":3788,"id":3294,"parameterSlots":0,"returnSlots":0},"@relock_3445":{"entryPoint":2308,"id":3445,"parameterSlots":1,"returnSlots":0},"@sequencerData_3472":{"entryPoint":2062,"id":3472,"parameterSlots":0,"returnSlots":1},"@sequencerId_3296":{"entryPoint":809,"id":3296,"parameterSlots":0,"returnSlots":0},"@sequencerSigner_3298":{"entryPoint":2601,"id":3298,"parameterSlots":0,"returnSlots":0},"@unlockClaim_3528":{"entryPoint":815,"id":3528,"parameterSlots":1,"returnSlots":0},"@unlock_3494":{"entryPoint":1744,"id":3494,"parameterSlots":1,"returnSlots":0},"@withdrawRewards_3460":{"entryPoint":1454,"id":3460,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5737,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":6709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5803,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ILockingInfo_$3817":{"entryPoint":6203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ILockingPool_$3940":{"entryPoint":6141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory":{"entryPoint":6730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6508,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":4848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5849,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_contract$_ILockingPool_$3940t_contract$_ILockingInfo_$3817t_address":{"entryPoint":6224,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_SequencerData_$3844_memory_ptr_fromMemory":{"entryPoint":6976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":4869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":4979,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5348,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4695,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":7509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack":{"entryPoint":5998,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack":{"entryPoint":6058,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack":{"entryPoint":5306,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":7706,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68_to_t_string_memory_ptr_fromStack":{"entryPoint":7372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db_to_t_string_memory_ptr_fromStack":{"entryPoint":7156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934_to_t_string_memory_ptr_fromStack":{"entryPoint":7264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d_to_t_string_memory_ptr_fromStack":{"entryPoint":6385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_SequencerData_$3844_memory_ptr_to_t_struct$_SequencerData_$3844_memory_ptr_fromStack":{"entryPoint":4994,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4914,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":6452,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7566,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6574,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed":{"entryPoint":6013,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILockingInfo_$3817__to_t_address__fromStack_reversed":{"entryPoint":6073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILockingPool_$3940__to_t_address__fromStack_reversed":{"entryPoint":5321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":7721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7191,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7299,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_SequencerData_$3844_memory_ptr__to_t_struct$_SequencerData_$3844_memory_ptr__fromStack_reversed":{"entryPoint":5198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":7022,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed":{"entryPoint":6467,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":5646,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4789,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":5673,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7439,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7450,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6327,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4683,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ILockingInfo_$3817":{"entryPoint":6162,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ILockingPool_$3940":{"entryPoint":6100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":7642,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4929,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4809,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7652,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$979_to_t_address":{"entryPoint":5980,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ILockingInfo_$3817_to_t_address":{"entryPoint":6040,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ILockingPool_$3940_to_t_address":{"entryPoint":5288,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":7672,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5270,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5236,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5722,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7467,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5597,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5226,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":5550,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5523,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":6704,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5528,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4804,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4799,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5533,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68":{"entryPoint":7331,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db":{"entryPoint":7077,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934":{"entryPoint":7223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d":{"entryPoint":6344,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5479,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6615,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ILockingInfo_$3817":{"entryPoint":6180,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ILockingPool_$3940":{"entryPoint":6118,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5390,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":4825,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24837:19","statements":[{"body":{"nodeType":"YulBlock","src":"49:48:19","statements":[{"nodeType":"YulAssignment","src":"59:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"77:6:19"},"nodeType":"YulFunctionCall","src":"77:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"70:6:19"},"nodeType":"YulFunctionCall","src":"70:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"59:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41:7:19","type":""}],"src":"7:90:19"},{"body":{"nodeType":"YulBlock","src":"162:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"179:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"199:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"184:14:19"},"nodeType":"YulFunctionCall","src":"184:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"172:6:19"},"nodeType":"YulFunctionCall","src":"172:34:19"},"nodeType":"YulExpressionStatement","src":"172:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"150:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"157:3:19","type":""}],"src":"103:109:19"},{"body":{"nodeType":"YulBlock","src":"310:118:19","statements":[{"nodeType":"YulAssignment","src":"320:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"332:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"343:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"328:3:19"},"nodeType":"YulFunctionCall","src":"328:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"320:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"394:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"407:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"418:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:19"},"nodeType":"YulFunctionCall","src":"403:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"356:37:19"},"nodeType":"YulFunctionCall","src":"356:65:19"},"nodeType":"YulExpressionStatement","src":"356:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"282:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"294:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"305:4:19","type":""}],"src":"218:210:19"},{"body":{"nodeType":"YulBlock","src":"479:32:19","statements":[{"nodeType":"YulAssignment","src":"489:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"500:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"489:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"461:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"471:7:19","type":""}],"src":"434:77:19"},{"body":{"nodeType":"YulBlock","src":"582:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"599:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"604:17:19"},"nodeType":"YulFunctionCall","src":"604:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"592:6:19"},"nodeType":"YulFunctionCall","src":"592:37:19"},"nodeType":"YulExpressionStatement","src":"592:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"577:3:19","type":""}],"src":"517:118:19"},{"body":{"nodeType":"YulBlock","src":"739:124:19","statements":[{"nodeType":"YulAssignment","src":"749:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"761:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"772:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"757:3:19"},"nodeType":"YulFunctionCall","src":"757:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"749:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"829:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"842:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"853:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"838:3:19"},"nodeType":"YulFunctionCall","src":"838:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"785:43:19"},"nodeType":"YulFunctionCall","src":"785:71:19"},"nodeType":"YulExpressionStatement","src":"785:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"711:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"723:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"734:4:19","type":""}],"src":"641:222:19"},{"body":{"nodeType":"YulBlock","src":"909:35:19","statements":[{"nodeType":"YulAssignment","src":"919:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"929:5:19"},"nodeType":"YulFunctionCall","src":"929:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"919:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"902:6:19","type":""}],"src":"869:75:19"},{"body":{"nodeType":"YulBlock","src":"1039:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1056:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1049:6:19"},"nodeType":"YulFunctionCall","src":"1049:12:19"},"nodeType":"YulExpressionStatement","src":"1049:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"950:117:19"},{"body":{"nodeType":"YulBlock","src":"1162:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1179:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1182:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1172:6:19"},"nodeType":"YulFunctionCall","src":"1172:12:19"},"nodeType":"YulExpressionStatement","src":"1172:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1073:117:19"},{"body":{"nodeType":"YulBlock","src":"1240:49:19","statements":[{"nodeType":"YulAssignment","src":"1250:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1265:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1272:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1261:3:19"},"nodeType":"YulFunctionCall","src":"1261:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1250:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1222:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1232:7:19","type":""}],"src":"1196:93:19"},{"body":{"nodeType":"YulBlock","src":"1337:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"1393:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1402:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1405:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1395:6:19"},"nodeType":"YulFunctionCall","src":"1395:12:19"},"nodeType":"YulExpressionStatement","src":"1395:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1360:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1384:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1367:16:19"},"nodeType":"YulFunctionCall","src":"1367:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1357:2:19"},"nodeType":"YulFunctionCall","src":"1357:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1350:6:19"},"nodeType":"YulFunctionCall","src":"1350:42:19"},"nodeType":"YulIf","src":"1347:62:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1330:5:19","type":""}],"src":"1295:120:19"},{"body":{"nodeType":"YulBlock","src":"1472:86:19","statements":[{"nodeType":"YulAssignment","src":"1482:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1491:12:19"},"nodeType":"YulFunctionCall","src":"1491:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1482:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1546:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1520:25:19"},"nodeType":"YulFunctionCall","src":"1520:32:19"},"nodeType":"YulExpressionStatement","src":"1520:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1450:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1458:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1466:5:19","type":""}],"src":"1421:137:19"},{"body":{"nodeType":"YulBlock","src":"1629:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"1675:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1677:77:19"},"nodeType":"YulFunctionCall","src":"1677:79:19"},"nodeType":"YulExpressionStatement","src":"1677:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1650:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1659:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1646:3:19"},"nodeType":"YulFunctionCall","src":"1646:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1671:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1642:3:19"},"nodeType":"YulFunctionCall","src":"1642:32:19"},"nodeType":"YulIf","src":"1639:119:19"},{"nodeType":"YulBlock","src":"1768:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1783:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1797:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1787:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1812:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1846:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1857:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1842:3:19"},"nodeType":"YulFunctionCall","src":"1842:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1866:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"1822:19:19"},"nodeType":"YulFunctionCall","src":"1822:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1812:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1599:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1610:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1622:6:19","type":""}],"src":"1564:327:19"},{"body":{"nodeType":"YulBlock","src":"1952:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1969:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1992:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1974:17:19"},"nodeType":"YulFunctionCall","src":"1974:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1962:6:19"},"nodeType":"YulFunctionCall","src":"1962:37:19"},"nodeType":"YulExpressionStatement","src":"1962:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1940:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1947:3:19","type":""}],"src":"1897:108:19"},{"body":{"nodeType":"YulBlock","src":"2056:81:19","statements":[{"nodeType":"YulAssignment","src":"2066:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2081:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2088:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2077:3:19"},"nodeType":"YulFunctionCall","src":"2077:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2066:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2038:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2048:7:19","type":""}],"src":"2011:126:19"},{"body":{"nodeType":"YulBlock","src":"2188:51:19","statements":[{"nodeType":"YulAssignment","src":"2198:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2227:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2209:17:19"},"nodeType":"YulFunctionCall","src":"2209:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2198:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2170:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2180:7:19","type":""}],"src":"2143:96:19"},{"body":{"nodeType":"YulBlock","src":"2300:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2317:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2340:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2322:17:19"},"nodeType":"YulFunctionCall","src":"2322:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2310:6:19"},"nodeType":"YulFunctionCall","src":"2310:37:19"},"nodeType":"YulExpressionStatement","src":"2310:37:19"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2288:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2295:3:19","type":""}],"src":"2245:108:19"},{"body":{"nodeType":"YulBlock","src":"2565:1856:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2575:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2591:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2596:6:19","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:19"},"nodeType":"YulFunctionCall","src":"2587:16:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"2579:4:19","type":""}]},{"nodeType":"YulBlock","src":"2613:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2650:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2680:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2676:3:19"},"nodeType":"YulFunctionCall","src":"2676:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2670:5:19"},"nodeType":"YulFunctionCall","src":"2670:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2654:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2740:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2758:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2763:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2754:3:19"},"nodeType":"YulFunctionCall","src":"2754:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2706:33:19"},"nodeType":"YulFunctionCall","src":"2706:63:19"},"nodeType":"YulExpressionStatement","src":"2706:63:19"}]},{"nodeType":"YulBlock","src":"2789:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2826:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2856:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2863:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2852:3:19"},"nodeType":"YulFunctionCall","src":"2852:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2846:5:19"},"nodeType":"YulFunctionCall","src":"2846:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2830:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2916:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2934:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2939:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2930:3:19"},"nodeType":"YulFunctionCall","src":"2930:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2882:33:19"},"nodeType":"YulFunctionCall","src":"2882:63:19"},"nodeType":"YulExpressionStatement","src":"2882:63:19"}]},{"nodeType":"YulBlock","src":"2965:175:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3011:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3041:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3048:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:19"},"nodeType":"YulFunctionCall","src":"3037:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3031:5:19"},"nodeType":"YulFunctionCall","src":"3031:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3015:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3101:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3119:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3124:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3115:3:19"},"nodeType":"YulFunctionCall","src":"3115:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3067:33:19"},"nodeType":"YulFunctionCall","src":"3067:63:19"},"nodeType":"YulExpressionStatement","src":"3067:63:19"}]},{"nodeType":"YulBlock","src":"3150:172:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3193:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3223:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3230:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3219:3:19"},"nodeType":"YulFunctionCall","src":"3219:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3213:5:19"},"nodeType":"YulFunctionCall","src":"3213:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3197:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3283:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3301:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3306:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3297:3:19"},"nodeType":"YulFunctionCall","src":"3297:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3249:33:19"},"nodeType":"YulFunctionCall","src":"3249:63:19"},"nodeType":"YulExpressionStatement","src":"3249:63:19"}]},{"nodeType":"YulBlock","src":"3332:177:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3380:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3410:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3417:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:19"},"nodeType":"YulFunctionCall","src":"3406:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3400:5:19"},"nodeType":"YulFunctionCall","src":"3400:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3384:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3470:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3488:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3493:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3484:3:19"},"nodeType":"YulFunctionCall","src":"3484:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3436:33:19"},"nodeType":"YulFunctionCall","src":"3436:63:19"},"nodeType":"YulExpressionStatement","src":"3436:63:19"}]},{"nodeType":"YulBlock","src":"3519:176:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3566:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3596:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3603:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:19"},"nodeType":"YulFunctionCall","src":"3592:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3586:5:19"},"nodeType":"YulFunctionCall","src":"3586:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3570:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3656:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3674:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3670:3:19"},"nodeType":"YulFunctionCall","src":"3670:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3622:33:19"},"nodeType":"YulFunctionCall","src":"3622:63:19"},"nodeType":"YulExpressionStatement","src":"3622:63:19"}]},{"nodeType":"YulBlock","src":"3705:175:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3751:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3781:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3788:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:19"},"nodeType":"YulFunctionCall","src":"3777:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3771:5:19"},"nodeType":"YulFunctionCall","src":"3771:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3755:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3841:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3859:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3864:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3855:3:19"},"nodeType":"YulFunctionCall","src":"3855:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3807:33:19"},"nodeType":"YulFunctionCall","src":"3807:63:19"},"nodeType":"YulExpressionStatement","src":"3807:63:19"}]},{"nodeType":"YulBlock","src":"3890:165:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3926:43:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3956:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3963:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3952:3:19"},"nodeType":"YulFunctionCall","src":"3952:16:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3946:5:19"},"nodeType":"YulFunctionCall","src":"3946:23:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3930:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4016:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4034:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4039:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4030:3:19"},"nodeType":"YulFunctionCall","src":"4030:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3982:33:19"},"nodeType":"YulFunctionCall","src":"3982:63:19"},"nodeType":"YulExpressionStatement","src":"3982:63:19"}]},{"nodeType":"YulBlock","src":"4065:169:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4101:45:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4131:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4138:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4127:3:19"},"nodeType":"YulFunctionCall","src":"4127:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4121:5:19"},"nodeType":"YulFunctionCall","src":"4121:25:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4105:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4193:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4211:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4216:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4207:3:19"},"nodeType":"YulFunctionCall","src":"4207:16:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4159:33:19"},"nodeType":"YulFunctionCall","src":"4159:65:19"},"nodeType":"YulExpressionStatement","src":"4159:65:19"}]},{"nodeType":"YulBlock","src":"4244:170:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4281:45:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4311:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4318:6:19","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:19"},"nodeType":"YulFunctionCall","src":"4307:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4301:5:19"},"nodeType":"YulFunctionCall","src":"4301:25:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4285:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4373:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4391:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4396:6:19","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:19"},"nodeType":"YulFunctionCall","src":"4387:16:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4339:33:19"},"nodeType":"YulFunctionCall","src":"4339:65:19"},"nodeType":"YulExpressionStatement","src":"4339:65:19"}]}]},"name":"abi_encode_t_struct$_SequencerData_$3844_memory_ptr_to_t_struct$_SequencerData_$3844_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2552:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2559:3:19","type":""}],"src":"2437:1984:19"},{"body":{"nodeType":"YulBlock","src":"4587:187:19","statements":[{"nodeType":"YulAssignment","src":"4597:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4609:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4620:3:19","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4605:3:19"},"nodeType":"YulFunctionCall","src":"4605:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4597:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4740:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4753:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4764:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4749:3:19"},"nodeType":"YulFunctionCall","src":"4749:17:19"}],"functionName":{"name":"abi_encode_t_struct$_SequencerData_$3844_memory_ptr_to_t_struct$_SequencerData_$3844_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4634:105:19"},"nodeType":"YulFunctionCall","src":"4634:133:19"},"nodeType":"YulExpressionStatement","src":"4634:133:19"}]},"name":"abi_encode_tuple_t_struct$_SequencerData_$3844_memory_ptr__to_t_struct$_SequencerData_$3844_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4559:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4571:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4582:4:19","type":""}],"src":"4427:347:19"},{"body":{"nodeType":"YulBlock","src":"4812:28:19","statements":[{"nodeType":"YulAssignment","src":"4822:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"4829:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4822:3:19"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4798:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4808:3:19","type":""}],"src":"4780:60:19"},{"body":{"nodeType":"YulBlock","src":"4906:82:19","statements":[{"nodeType":"YulAssignment","src":"4916:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4974:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4956:17:19"},"nodeType":"YulFunctionCall","src":"4956:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4947:8:19"},"nodeType":"YulFunctionCall","src":"4947:34:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4929:17:19"},"nodeType":"YulFunctionCall","src":"4929:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4916:9:19"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4886:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4896:9:19","type":""}],"src":"4846:142:19"},{"body":{"nodeType":"YulBlock","src":"5054:66:19","statements":[{"nodeType":"YulAssignment","src":"5064:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5108:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5077:30:19"},"nodeType":"YulFunctionCall","src":"5077:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5064:9:19"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5034:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5044:9:19","type":""}],"src":"4994:126:19"},{"body":{"nodeType":"YulBlock","src":"5207:66:19","statements":[{"nodeType":"YulAssignment","src":"5217:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5230:30:19"},"nodeType":"YulFunctionCall","src":"5230:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5217:9:19"}]}]},"name":"convert_t_contract$_ILockingPool_$3940_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5187:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5197:9:19","type":""}],"src":"5126:147:19"},{"body":{"nodeType":"YulBlock","src":"5365:87:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5382:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5439:5:19"}],"functionName":{"name":"convert_t_contract$_ILockingPool_$3940_to_t_address","nodeType":"YulIdentifier","src":"5387:51:19"},"nodeType":"YulFunctionCall","src":"5387:58:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5375:6:19"},"nodeType":"YulFunctionCall","src":"5375:71:19"},"nodeType":"YulExpressionStatement","src":"5375:71:19"}]},"name":"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5353:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5360:3:19","type":""}],"src":"5279:173:19"},{"body":{"nodeType":"YulBlock","src":"5577:145:19","statements":[{"nodeType":"YulAssignment","src":"5587:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5599:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5610:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5595:3:19"},"nodeType":"YulFunctionCall","src":"5595:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5587:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5688:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5701:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5712:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5697:3:19"},"nodeType":"YulFunctionCall","src":"5697:17:19"}],"functionName":{"name":"abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5623:64:19"},"nodeType":"YulFunctionCall","src":"5623:92:19"},"nodeType":"YulExpressionStatement","src":"5623:92:19"}]},"name":"abi_encode_tuple_t_contract$_ILockingPool_$3940__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5549:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5561:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5572:4:19","type":""}],"src":"5458:264:19"},{"body":{"nodeType":"YulBlock","src":"5793:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5810:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5833:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5815:17:19"},"nodeType":"YulFunctionCall","src":"5815:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:19"},"nodeType":"YulFunctionCall","src":"5803:37:19"},"nodeType":"YulExpressionStatement","src":"5803:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5781:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5788:3:19","type":""}],"src":"5728:118:19"},{"body":{"nodeType":"YulBlock","src":"5950:124:19","statements":[{"nodeType":"YulAssignment","src":"5960:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5972:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5983:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5968:3:19"},"nodeType":"YulFunctionCall","src":"5968:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5960:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6040:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6053:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6064:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6049:3:19"},"nodeType":"YulFunctionCall","src":"6049:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5996:43:19"},"nodeType":"YulFunctionCall","src":"5996:71:19"},"nodeType":"YulExpressionStatement","src":"5996:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5922:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5934:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5945:4:19","type":""}],"src":"5852:222:19"},{"body":{"nodeType":"YulBlock","src":"6123:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"6180:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6189:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6192:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6182:6:19"},"nodeType":"YulFunctionCall","src":"6182:12:19"},"nodeType":"YulExpressionStatement","src":"6182:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6146:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6171:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6153:17:19"},"nodeType":"YulFunctionCall","src":"6153:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6143:2:19"},"nodeType":"YulFunctionCall","src":"6143:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6136:6:19"},"nodeType":"YulFunctionCall","src":"6136:43:19"},"nodeType":"YulIf","src":"6133:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6116:5:19","type":""}],"src":"6080:122:19"},{"body":{"nodeType":"YulBlock","src":"6260:87:19","statements":[{"nodeType":"YulAssignment","src":"6270:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6292:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6279:12:19"},"nodeType":"YulFunctionCall","src":"6279:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6270:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6308:26:19"},"nodeType":"YulFunctionCall","src":"6308:33:19"},"nodeType":"YulExpressionStatement","src":"6308:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6238:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6246:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6254:5:19","type":""}],"src":"6208:139:19"},{"body":{"nodeType":"YulBlock","src":"6419:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"6465:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6467:77:19"},"nodeType":"YulFunctionCall","src":"6467:79:19"},"nodeType":"YulExpressionStatement","src":"6467:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6440:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6449:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6436:3:19"},"nodeType":"YulFunctionCall","src":"6436:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6461:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6432:3:19"},"nodeType":"YulFunctionCall","src":"6432:32:19"},"nodeType":"YulIf","src":"6429:119:19"},{"nodeType":"YulBlock","src":"6558:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6573:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6587:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6577:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6602:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6637:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6648:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6633:3:19"},"nodeType":"YulFunctionCall","src":"6633:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6657:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6612:20:19"},"nodeType":"YulFunctionCall","src":"6612:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6602:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6389:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6400:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6412:6:19","type":""}],"src":"6353:329:19"},{"body":{"nodeType":"YulBlock","src":"6731:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"6788:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6797:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6800:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6790:6:19"},"nodeType":"YulFunctionCall","src":"6790:12:19"},"nodeType":"YulExpressionStatement","src":"6790:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6754:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6779:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6761:17:19"},"nodeType":"YulFunctionCall","src":"6761:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6751:2:19"},"nodeType":"YulFunctionCall","src":"6751:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6744:6:19"},"nodeType":"YulFunctionCall","src":"6744:43:19"},"nodeType":"YulIf","src":"6741:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6724:5:19","type":""}],"src":"6688:122:19"},{"body":{"nodeType":"YulBlock","src":"6868:87:19","statements":[{"nodeType":"YulAssignment","src":"6878:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6900:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6887:12:19"},"nodeType":"YulFunctionCall","src":"6887:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6878:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6943:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6916:26:19"},"nodeType":"YulFunctionCall","src":"6916:33:19"},"nodeType":"YulExpressionStatement","src":"6916:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6846:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6854:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6862:5:19","type":""}],"src":"6816:139:19"},{"body":{"nodeType":"YulBlock","src":"7050:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7067:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7070:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7060:6:19"},"nodeType":"YulFunctionCall","src":"7060:12:19"},"nodeType":"YulExpressionStatement","src":"7060:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6961:117:19"},{"body":{"nodeType":"YulBlock","src":"7173:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7190:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7193:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7183:6:19"},"nodeType":"YulFunctionCall","src":"7183:12:19"},"nodeType":"YulExpressionStatement","src":"7183:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7084:117:19"},{"body":{"nodeType":"YulBlock","src":"7255:54:19","statements":[{"nodeType":"YulAssignment","src":"7265:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7283:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7290:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7279:3:19"},"nodeType":"YulFunctionCall","src":"7279:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7299:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7295:3:19"},"nodeType":"YulFunctionCall","src":"7295:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7275:3:19"},"nodeType":"YulFunctionCall","src":"7275:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7265:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7238:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7248:6:19","type":""}],"src":"7207:102:19"},{"body":{"nodeType":"YulBlock","src":"7343:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7360:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7363:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7353:6:19"},"nodeType":"YulFunctionCall","src":"7353:88:19"},"nodeType":"YulExpressionStatement","src":"7353:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7457:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7460:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7450:6:19"},"nodeType":"YulFunctionCall","src":"7450:15:19"},"nodeType":"YulExpressionStatement","src":"7450:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7481:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7484:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7474:6:19"},"nodeType":"YulFunctionCall","src":"7474:15:19"},"nodeType":"YulExpressionStatement","src":"7474:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7315:180:19"},{"body":{"nodeType":"YulBlock","src":"7544:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7554:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7576:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7606:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7584:21:19"},"nodeType":"YulFunctionCall","src":"7584:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:19"},"nodeType":"YulFunctionCall","src":"7572:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7558:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7723:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7725:16:19"},"nodeType":"YulFunctionCall","src":"7725:18:19"},"nodeType":"YulExpressionStatement","src":"7725:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7666:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"7678:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7663:2:19"},"nodeType":"YulFunctionCall","src":"7663:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7702:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7714:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7699:2:19"},"nodeType":"YulFunctionCall","src":"7699:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7660:2:19"},"nodeType":"YulFunctionCall","src":"7660:62:19"},"nodeType":"YulIf","src":"7657:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7761:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7765:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7754:6:19"},"nodeType":"YulFunctionCall","src":"7754:22:19"},"nodeType":"YulExpressionStatement","src":"7754:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7530:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"7538:4:19","type":""}],"src":"7501:281:19"},{"body":{"nodeType":"YulBlock","src":"7829:88:19","statements":[{"nodeType":"YulAssignment","src":"7839:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7849:18:19"},"nodeType":"YulFunctionCall","src":"7849:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7839:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7898:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"7906:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7878:19:19"},"nodeType":"YulFunctionCall","src":"7878:33:19"},"nodeType":"YulExpressionStatement","src":"7878:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7813:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7822:6:19","type":""}],"src":"7788:129:19"},{"body":{"nodeType":"YulBlock","src":"7989:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"8094:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8096:16:19"},"nodeType":"YulFunctionCall","src":"8096:18:19"},"nodeType":"YulExpressionStatement","src":"8096:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8066:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8074:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8063:2:19"},"nodeType":"YulFunctionCall","src":"8063:30:19"},"nodeType":"YulIf","src":"8060:56:19"},{"nodeType":"YulAssignment","src":"8126:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8156:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8134:21:19"},"nodeType":"YulFunctionCall","src":"8134:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8126:4:19"}]},{"nodeType":"YulAssignment","src":"8200:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8212:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"8218:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:19"},"nodeType":"YulFunctionCall","src":"8208:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8200:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7973:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7984:4:19","type":""}],"src":"7923:307:19"},{"body":{"nodeType":"YulBlock","src":"8300:82:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8323:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"8328:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8333:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8310:12:19"},"nodeType":"YulFunctionCall","src":"8310:30:19"},"nodeType":"YulExpressionStatement","src":"8310:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8360:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8365:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8356:3:19"},"nodeType":"YulFunctionCall","src":"8356:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"8374:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8349:6:19"},"nodeType":"YulFunctionCall","src":"8349:27:19"},"nodeType":"YulExpressionStatement","src":"8349:27:19"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8282:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8287:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"8292:6:19","type":""}],"src":"8236:146:19"},{"body":{"nodeType":"YulBlock","src":"8471:340:19","statements":[{"nodeType":"YulAssignment","src":"8481:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8547:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8506:40:19"},"nodeType":"YulFunctionCall","src":"8506:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8490:15:19"},"nodeType":"YulFunctionCall","src":"8490:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8481:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8571:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"8578:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8564:6:19"},"nodeType":"YulFunctionCall","src":"8564:21:19"},"nodeType":"YulExpressionStatement","src":"8564:21:19"},{"nodeType":"YulVariableDeclaration","src":"8594:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8609:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8605:3:19"},"nodeType":"YulFunctionCall","src":"8605:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8598:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"8659:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8661:77:19"},"nodeType":"YulFunctionCall","src":"8661:79:19"},"nodeType":"YulExpressionStatement","src":"8661:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8640:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8645:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8636:3:19"},"nodeType":"YulFunctionCall","src":"8636:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"8654:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8633:2:19"},"nodeType":"YulFunctionCall","src":"8633:25:19"},"nodeType":"YulIf","src":"8630:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8788:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"8793:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8798:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8751:36:19"},"nodeType":"YulFunctionCall","src":"8751:54:19"},"nodeType":"YulExpressionStatement","src":"8751:54:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8444:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"8449:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8457:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8465:5:19","type":""}],"src":"8388:423:19"},{"body":{"nodeType":"YulBlock","src":"8891:277:19","statements":[{"body":{"nodeType":"YulBlock","src":"8940:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8942:77:19"},"nodeType":"YulFunctionCall","src":"8942:79:19"},"nodeType":"YulExpressionStatement","src":"8942:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8919:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"8927:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8915:3:19"},"nodeType":"YulFunctionCall","src":"8915:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"8934:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8911:3:19"},"nodeType":"YulFunctionCall","src":"8911:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8904:6:19"},"nodeType":"YulFunctionCall","src":"8904:35:19"},"nodeType":"YulIf","src":"8901:122:19"},{"nodeType":"YulVariableDeclaration","src":"9032:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9059:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9046:12:19"},"nodeType":"YulFunctionCall","src":"9046:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9036:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9075:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9135:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9143:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9131:3:19"},"nodeType":"YulFunctionCall","src":"9131:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"9150:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"9158:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9084:46:19"},"nodeType":"YulFunctionCall","src":"9084:78:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9075:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8869:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8877:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8885:5:19","type":""}],"src":"8830:338:19"},{"body":{"nodeType":"YulBlock","src":"9300:817:19","statements":[{"body":{"nodeType":"YulBlock","src":"9347:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9349:77:19"},"nodeType":"YulFunctionCall","src":"9349:79:19"},"nodeType":"YulExpressionStatement","src":"9349:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9321:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"9330:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9317:3:19"},"nodeType":"YulFunctionCall","src":"9317:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9342:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9313:3:19"},"nodeType":"YulFunctionCall","src":"9313:33:19"},"nodeType":"YulIf","src":"9310:120:19"},{"nodeType":"YulBlock","src":"9440:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9455:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9469:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9459:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9484:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9519:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9530:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9515:3:19"},"nodeType":"YulFunctionCall","src":"9515:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9539:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9494:20:19"},"nodeType":"YulFunctionCall","src":"9494:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9484:6:19"}]}]},{"nodeType":"YulBlock","src":"9567:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9582:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9596:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9586:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9612:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9647:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9658:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9643:3:19"},"nodeType":"YulFunctionCall","src":"9643:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9667:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9622:20:19"},"nodeType":"YulFunctionCall","src":"9622:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9612:6:19"}]}]},{"nodeType":"YulBlock","src":"9695:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9710:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9724:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9714:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9740:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9775:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9786:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9771:3:19"},"nodeType":"YulFunctionCall","src":"9771:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9795:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9750:20:19"},"nodeType":"YulFunctionCall","src":"9750:53:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9740:6:19"}]}]},{"nodeType":"YulBlock","src":"9823:287:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9838:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:19"},"nodeType":"YulFunctionCall","src":"9865:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9852:12:19"},"nodeType":"YulFunctionCall","src":"9852:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9842:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9931:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9933:77:19"},"nodeType":"YulFunctionCall","src":"9933:79:19"},"nodeType":"YulExpressionStatement","src":"9933:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9903:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9911:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9900:2:19"},"nodeType":"YulFunctionCall","src":"9900:30:19"},"nodeType":"YulIf","src":"9897:117:19"},{"nodeType":"YulAssignment","src":"10028:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10072:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10083:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10068:3:19"},"nodeType":"YulFunctionCall","src":"10068:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10092:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10038:29:19"},"nodeType":"YulFunctionCall","src":"10038:62:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10028:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9246:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9257:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9269:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9277:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9285:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9293:6:19","type":""}],"src":"9174:943:19"},{"body":{"nodeType":"YulBlock","src":"10197:66:19","statements":[{"nodeType":"YulAssignment","src":"10207:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10251:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10220:30:19"},"nodeType":"YulFunctionCall","src":"10220:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10207:9:19"}]}]},"name":"convert_t_contract$_IERC20_$979_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10177:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10187:9:19","type":""}],"src":"10123:140:19"},{"body":{"nodeType":"YulBlock","src":"10348:80:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10365:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10415:5:19"}],"functionName":{"name":"convert_t_contract$_IERC20_$979_to_t_address","nodeType":"YulIdentifier","src":"10370:44:19"},"nodeType":"YulFunctionCall","src":"10370:51:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10358:6:19"},"nodeType":"YulFunctionCall","src":"10358:64:19"},"nodeType":"YulExpressionStatement","src":"10358:64:19"}]},"name":"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10336:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10343:3:19","type":""}],"src":"10269:159:19"},{"body":{"nodeType":"YulBlock","src":"10546:138:19","statements":[{"nodeType":"YulAssignment","src":"10556:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10568:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:19"},"nodeType":"YulFunctionCall","src":"10564:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10556:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10650:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10663:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10674:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10659:3:19"},"nodeType":"YulFunctionCall","src":"10659:17:19"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10592:57:19"},"nodeType":"YulFunctionCall","src":"10592:85:19"},"nodeType":"YulExpressionStatement","src":"10592:85:19"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10518:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10530:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10541:4:19","type":""}],"src":"10434:250:19"},{"body":{"nodeType":"YulBlock","src":"10771:66:19","statements":[{"nodeType":"YulAssignment","src":"10781:50:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10825:5:19"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10794:30:19"},"nodeType":"YulFunctionCall","src":"10794:37:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10781:9:19"}]}]},"name":"convert_t_contract$_ILockingInfo_$3817_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10751:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10761:9:19","type":""}],"src":"10690:147:19"},{"body":{"nodeType":"YulBlock","src":"10929:87:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10946:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11003:5:19"}],"functionName":{"name":"convert_t_contract$_ILockingInfo_$3817_to_t_address","nodeType":"YulIdentifier","src":"10951:51:19"},"nodeType":"YulFunctionCall","src":"10951:58:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10939:6:19"},"nodeType":"YulFunctionCall","src":"10939:71:19"},"nodeType":"YulExpressionStatement","src":"10939:71:19"}]},"name":"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10917:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10924:3:19","type":""}],"src":"10843:173:19"},{"body":{"nodeType":"YulBlock","src":"11141:145:19","statements":[{"nodeType":"YulAssignment","src":"11151:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11163:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11174:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11159:3:19"},"nodeType":"YulFunctionCall","src":"11159:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11151:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11252:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11265:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11276:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11261:3:19"},"nodeType":"YulFunctionCall","src":"11261:17:19"}],"functionName":{"name":"abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11187:64:19"},"nodeType":"YulFunctionCall","src":"11187:92:19"},"nodeType":"YulExpressionStatement","src":"11187:92:19"}]},"name":"abi_encode_tuple_t_contract$_ILockingInfo_$3817__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11113:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11125:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11136:4:19","type":""}],"src":"11022:264:19"},{"body":{"nodeType":"YulBlock","src":"11358:51:19","statements":[{"nodeType":"YulAssignment","src":"11368:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11397:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11379:17:19"},"nodeType":"YulFunctionCall","src":"11379:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11368:7:19"}]}]},"name":"cleanup_t_contract$_ILockingPool_$3940","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11340:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11350:7:19","type":""}],"src":"11292:117:19"},{"body":{"nodeType":"YulBlock","src":"11479:100:19","statements":[{"body":{"nodeType":"YulBlock","src":"11557:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11566:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11569:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11559:6:19"},"nodeType":"YulFunctionCall","src":"11559:12:19"},"nodeType":"YulExpressionStatement","src":"11559:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11502:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11548:5:19"}],"functionName":{"name":"cleanup_t_contract$_ILockingPool_$3940","nodeType":"YulIdentifier","src":"11509:38:19"},"nodeType":"YulFunctionCall","src":"11509:45:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11499:2:19"},"nodeType":"YulFunctionCall","src":"11499:56:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11492:6:19"},"nodeType":"YulFunctionCall","src":"11492:64:19"},"nodeType":"YulIf","src":"11489:84:19"}]},"name":"validator_revert_t_contract$_ILockingPool_$3940","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11472:5:19","type":""}],"src":"11415:164:19"},{"body":{"nodeType":"YulBlock","src":"11658:108:19","statements":[{"nodeType":"YulAssignment","src":"11668:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11690:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11677:12:19"},"nodeType":"YulFunctionCall","src":"11677:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11668:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11754:5:19"}],"functionName":{"name":"validator_revert_t_contract$_ILockingPool_$3940","nodeType":"YulIdentifier","src":"11706:47:19"},"nodeType":"YulFunctionCall","src":"11706:54:19"},"nodeType":"YulExpressionStatement","src":"11706:54:19"}]},"name":"abi_decode_t_contract$_ILockingPool_$3940","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11636:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"11644:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11652:5:19","type":""}],"src":"11585:181:19"},{"body":{"nodeType":"YulBlock","src":"11838:51:19","statements":[{"nodeType":"YulAssignment","src":"11848:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11877:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11859:17:19"},"nodeType":"YulFunctionCall","src":"11859:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11848:7:19"}]}]},"name":"cleanup_t_contract$_ILockingInfo_$3817","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11820:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11830:7:19","type":""}],"src":"11772:117:19"},{"body":{"nodeType":"YulBlock","src":"11959:100:19","statements":[{"body":{"nodeType":"YulBlock","src":"12037:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12046:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12049:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12039:6:19"},"nodeType":"YulFunctionCall","src":"12039:12:19"},"nodeType":"YulExpressionStatement","src":"12039:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11982:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12028:5:19"}],"functionName":{"name":"cleanup_t_contract$_ILockingInfo_$3817","nodeType":"YulIdentifier","src":"11989:38:19"},"nodeType":"YulFunctionCall","src":"11989:45:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11979:2:19"},"nodeType":"YulFunctionCall","src":"11979:56:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11972:6:19"},"nodeType":"YulFunctionCall","src":"11972:64:19"},"nodeType":"YulIf","src":"11969:84:19"}]},"name":"validator_revert_t_contract$_ILockingInfo_$3817","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11952:5:19","type":""}],"src":"11895:164:19"},{"body":{"nodeType":"YulBlock","src":"12138:108:19","statements":[{"nodeType":"YulAssignment","src":"12148:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12170:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12157:12:19"},"nodeType":"YulFunctionCall","src":"12157:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12148:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12234:5:19"}],"functionName":{"name":"validator_revert_t_contract$_ILockingInfo_$3817","nodeType":"YulIdentifier","src":"12186:47:19"},"nodeType":"YulFunctionCall","src":"12186:54:19"},"nodeType":"YulExpressionStatement","src":"12186:54:19"}]},"name":"abi_decode_t_contract$_ILockingInfo_$3817","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12116:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"12124:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12132:5:19","type":""}],"src":"12065:181:19"},{"body":{"nodeType":"YulBlock","src":"12411:690:19","statements":[{"body":{"nodeType":"YulBlock","src":"12458:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12460:77:19"},"nodeType":"YulFunctionCall","src":"12460:79:19"},"nodeType":"YulExpressionStatement","src":"12460:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12432:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12441:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12428:3:19"},"nodeType":"YulFunctionCall","src":"12428:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"12453:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12424:3:19"},"nodeType":"YulFunctionCall","src":"12424:33:19"},"nodeType":"YulIf","src":"12421:120:19"},{"nodeType":"YulBlock","src":"12551:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12566:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12580:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12570:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12595:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12630:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12641:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12626:3:19"},"nodeType":"YulFunctionCall","src":"12626:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12650:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12605:20:19"},"nodeType":"YulFunctionCall","src":"12605:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12595:6:19"}]}]},{"nodeType":"YulBlock","src":"12678:139:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12693:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12707:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12697:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12723:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12779:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12790:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12775:3:19"},"nodeType":"YulFunctionCall","src":"12775:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12799:7:19"}],"functionName":{"name":"abi_decode_t_contract$_ILockingPool_$3940","nodeType":"YulIdentifier","src":"12733:41:19"},"nodeType":"YulFunctionCall","src":"12733:74:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12723:6:19"}]}]},{"nodeType":"YulBlock","src":"12827:139:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12842:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12856:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12846:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12872:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12939:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12924:3:19"},"nodeType":"YulFunctionCall","src":"12924:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12948:7:19"}],"functionName":{"name":"abi_decode_t_contract$_ILockingInfo_$3817","nodeType":"YulIdentifier","src":"12882:41:19"},"nodeType":"YulFunctionCall","src":"12882:74:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12872:6:19"}]}]},{"nodeType":"YulBlock","src":"12976:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12991:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13005:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12995:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13021:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13056:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13067:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:19"},"nodeType":"YulFunctionCall","src":"13052:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13076:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13031:20:19"},"nodeType":"YulFunctionCall","src":"13031:53:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13021:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_contract$_ILockingPool_$3940t_contract$_ILockingInfo_$3817t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12357:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12368:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12380:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12388:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12396:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12404:6:19","type":""}],"src":"12252:849:19"},{"body":{"nodeType":"YulBlock","src":"13203:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13220:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"13225:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13213:6:19"},"nodeType":"YulFunctionCall","src":"13213:19:19"},"nodeType":"YulExpressionStatement","src":"13213:19:19"},{"nodeType":"YulAssignment","src":"13241:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13260:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13265:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13256:3:19"},"nodeType":"YulFunctionCall","src":"13256:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13241:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13175:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"13180:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13191:11:19","type":""}],"src":"13107:169:19"},{"body":{"nodeType":"YulBlock","src":"13388:71:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13410:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13418:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13406:3:19"},"nodeType":"YulFunctionCall","src":"13406:14:19"},{"hexValue":"53657175656e6365724167656e743a206f6e6c79206465616c6572","kind":"string","nodeType":"YulLiteral","src":"13422:29:19","type":"","value":"SequencerAgent: only dealer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:19"},"nodeType":"YulFunctionCall","src":"13399:53:19"},"nodeType":"YulExpressionStatement","src":"13399:53:19"}]},"name":"store_literal_in_memory_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13380:6:19","type":""}],"src":"13282:177:19"},{"body":{"nodeType":"YulBlock","src":"13611:220:19","statements":[{"nodeType":"YulAssignment","src":"13621:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13687:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13692:2:19","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13628:58:19"},"nodeType":"YulFunctionCall","src":"13628:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13621:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13793:3:19"}],"functionName":{"name":"store_literal_in_memory_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d","nodeType":"YulIdentifier","src":"13704:88:19"},"nodeType":"YulFunctionCall","src":"13704:93:19"},"nodeType":"YulExpressionStatement","src":"13704:93:19"},{"nodeType":"YulAssignment","src":"13806:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13817:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13822:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13813:3:19"},"nodeType":"YulFunctionCall","src":"13813:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13806:3:19"}]}]},"name":"abi_encode_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13599:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13607:3:19","type":""}],"src":"13465:366:19"},{"body":{"nodeType":"YulBlock","src":"14008:248:19","statements":[{"nodeType":"YulAssignment","src":"14018:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14030:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14041:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14026:3:19"},"nodeType":"YulFunctionCall","src":"14026:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14018:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14065:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14076:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14061:3:19"},"nodeType":"YulFunctionCall","src":"14061:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14084:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14090:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14080:3:19"},"nodeType":"YulFunctionCall","src":"14080:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14054:6:19"},"nodeType":"YulFunctionCall","src":"14054:47:19"},"nodeType":"YulExpressionStatement","src":"14054:47:19"},{"nodeType":"YulAssignment","src":"14110:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14244:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14118:124:19"},"nodeType":"YulFunctionCall","src":"14118:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14110:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13988:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14003:4:19","type":""}],"src":"13837:419:19"},{"body":{"nodeType":"YulBlock","src":"14325:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14342:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14364:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"14347:16:19"},"nodeType":"YulFunctionCall","src":"14347:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14335:6:19"},"nodeType":"YulFunctionCall","src":"14335:36:19"},"nodeType":"YulExpressionStatement","src":"14335:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14313:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14320:3:19","type":""}],"src":"14262:115:19"},{"body":{"nodeType":"YulBlock","src":"14507:204:19","statements":[{"nodeType":"YulAssignment","src":"14517:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14529:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14540:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14525:3:19"},"nodeType":"YulFunctionCall","src":"14525:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14517:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14597:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14610:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14621:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14606:3:19"},"nodeType":"YulFunctionCall","src":"14606:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14553:43:19"},"nodeType":"YulFunctionCall","src":"14553:71:19"},"nodeType":"YulExpressionStatement","src":"14553:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14676:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14689:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"14700:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14685:3:19"},"nodeType":"YulFunctionCall","src":"14685:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14634:41:19"},"nodeType":"YulFunctionCall","src":"14634:70:19"},"nodeType":"YulExpressionStatement","src":"14634:70:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14471:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14483:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14491:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14502:4:19","type":""}],"src":"14383:328:19"},{"body":{"nodeType":"YulBlock","src":"14780:80:19","statements":[{"nodeType":"YulAssignment","src":"14790:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14805:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14799:5:19"},"nodeType":"YulFunctionCall","src":"14799:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14790:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14848:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"14821:26:19"},"nodeType":"YulFunctionCall","src":"14821:33:19"},"nodeType":"YulExpressionStatement","src":"14821:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14758:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"14766:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14774:5:19","type":""}],"src":"14717:143:19"},{"body":{"nodeType":"YulBlock","src":"14943:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"14989:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14991:77:19"},"nodeType":"YulFunctionCall","src":"14991:79:19"},"nodeType":"YulExpressionStatement","src":"14991:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14964:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14973:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14960:3:19"},"nodeType":"YulFunctionCall","src":"14960:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"14985:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14956:3:19"},"nodeType":"YulFunctionCall","src":"14956:32:19"},"nodeType":"YulIf","src":"14953:119:19"},{"nodeType":"YulBlock","src":"15082:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15097:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15111:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15101:6:19","type":""}]},{"nodeType":"YulAssignment","src":"15126:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15172:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"15183:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15168:3:19"},"nodeType":"YulFunctionCall","src":"15168:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15192:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15136:31:19"},"nodeType":"YulFunctionCall","src":"15136:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15126:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14913:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14924:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14936:6:19","type":""}],"src":"14866:351:19"},{"body":{"nodeType":"YulBlock","src":"15349:206:19","statements":[{"nodeType":"YulAssignment","src":"15359:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15371:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15382:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15367:3:19"},"nodeType":"YulFunctionCall","src":"15367:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15359:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15439:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15452:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15463:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15448:3:19"},"nodeType":"YulFunctionCall","src":"15448:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15395:43:19"},"nodeType":"YulFunctionCall","src":"15395:71:19"},"nodeType":"YulExpressionStatement","src":"15395:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15520:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15533:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15544:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15529:3:19"},"nodeType":"YulFunctionCall","src":"15529:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15476:43:19"},"nodeType":"YulFunctionCall","src":"15476:72:19"},"nodeType":"YulExpressionStatement","src":"15476:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15313:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15325:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15333:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15344:4:19","type":""}],"src":"15223:332:19"},{"body":{"nodeType":"YulBlock","src":"15601:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"15655:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15664:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15667:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15657:6:19"},"nodeType":"YulFunctionCall","src":"15657:12:19"},"nodeType":"YulExpressionStatement","src":"15657:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15624:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15646:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15631:14:19"},"nodeType":"YulFunctionCall","src":"15631:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15621:2:19"},"nodeType":"YulFunctionCall","src":"15621:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15614:6:19"},"nodeType":"YulFunctionCall","src":"15614:40:19"},"nodeType":"YulIf","src":"15611:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15594:5:19","type":""}],"src":"15561:116:19"},{"body":{"nodeType":"YulBlock","src":"15743:77:19","statements":[{"nodeType":"YulAssignment","src":"15753:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15768:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15762:5:19"},"nodeType":"YulFunctionCall","src":"15762:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15753:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15808:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15784:23:19"},"nodeType":"YulFunctionCall","src":"15784:30:19"},"nodeType":"YulExpressionStatement","src":"15784:30:19"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15721:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"15729:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15737:5:19","type":""}],"src":"15683:137:19"},{"body":{"nodeType":"YulBlock","src":"15900:271:19","statements":[{"body":{"nodeType":"YulBlock","src":"15946:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15948:77:19"},"nodeType":"YulFunctionCall","src":"15948:79:19"},"nodeType":"YulExpressionStatement","src":"15948:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15921:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15930:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15917:3:19"},"nodeType":"YulFunctionCall","src":"15917:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"15942:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15913:3:19"},"nodeType":"YulFunctionCall","src":"15913:32:19"},"nodeType":"YulIf","src":"15910:119:19"},{"nodeType":"YulBlock","src":"16039:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16054:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16068:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16058:6:19","type":""}]},{"nodeType":"YulAssignment","src":"16083:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16126:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16137:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16122:3:19"},"nodeType":"YulFunctionCall","src":"16122:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16146:7:19"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"16093:28:19"},"nodeType":"YulFunctionCall","src":"16093:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16083:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15870:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15881:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15893:6:19","type":""}],"src":"15826:345:19"},{"body":{"nodeType":"YulBlock","src":"16266:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16283:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16286:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16276:6:19"},"nodeType":"YulFunctionCall","src":"16276:12:19"},"nodeType":"YulExpressionStatement","src":"16276:12:19"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"16177:117:19"},{"body":{"nodeType":"YulBlock","src":"16389:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16406:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16409:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16399:6:19"},"nodeType":"YulFunctionCall","src":"16399:12:19"},"nodeType":"YulExpressionStatement","src":"16399:12:19"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"16300:117:19"},{"body":{"nodeType":"YulBlock","src":"16486:80:19","statements":[{"nodeType":"YulAssignment","src":"16496:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16511:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16505:5:19"},"nodeType":"YulFunctionCall","src":"16505:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16496:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16554:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"16527:26:19"},"nodeType":"YulFunctionCall","src":"16527:33:19"},"nodeType":"YulExpressionStatement","src":"16527:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16464:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"16472:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16480:5:19","type":""}],"src":"16423:143:19"},{"body":{"nodeType":"YulBlock","src":"16710:1969:19","statements":[{"body":{"nodeType":"YulBlock","src":"16756:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"16758:77:19"},"nodeType":"YulFunctionCall","src":"16758:79:19"},"nodeType":"YulExpressionStatement","src":"16758:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"16731:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16736:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16727:3:19"},"nodeType":"YulFunctionCall","src":"16727:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"16748:6:19","type":"","value":"0x0140"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16723:3:19"},"nodeType":"YulFunctionCall","src":"16723:32:19"},"nodeType":"YulIf","src":"16720:119:19"},{"nodeType":"YulAssignment","src":"16848:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16873:6:19","type":"","value":"0x0140"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16857:15:19"},"nodeType":"YulFunctionCall","src":"16857:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16848:5:19"}]},{"nodeType":"YulBlock","src":"16890:163:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16927:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16941:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16931:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16967:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16974:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16963:3:19"},"nodeType":"YulFunctionCall","src":"16963:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17017:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17028:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17013:3:19"},"nodeType":"YulFunctionCall","src":"17013:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17037:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16981:31:19"},"nodeType":"YulFunctionCall","src":"16981:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16956:6:19"},"nodeType":"YulFunctionCall","src":"16956:86:19"},"nodeType":"YulExpressionStatement","src":"16956:86:19"}]},{"nodeType":"YulBlock","src":"17063:164:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17100:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17114:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17104:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17141:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17148:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17137:3:19"},"nodeType":"YulFunctionCall","src":"17137:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17191:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17202:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17187:3:19"},"nodeType":"YulFunctionCall","src":"17187:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17211:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17155:31:19"},"nodeType":"YulFunctionCall","src":"17155:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17130:6:19"},"nodeType":"YulFunctionCall","src":"17130:86:19"},"nodeType":"YulExpressionStatement","src":"17130:86:19"}]},{"nodeType":"YulBlock","src":"17237:173:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17283:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17297:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17287:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17324:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17331:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17320:3:19"},"nodeType":"YulFunctionCall","src":"17320:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17374:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17385:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17370:3:19"},"nodeType":"YulFunctionCall","src":"17370:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17394:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17338:31:19"},"nodeType":"YulFunctionCall","src":"17338:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17313:6:19"},"nodeType":"YulFunctionCall","src":"17313:86:19"},"nodeType":"YulExpressionStatement","src":"17313:86:19"}]},{"nodeType":"YulBlock","src":"17420:170:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17463:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17477:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17467:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17504:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17511:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17500:3:19"},"nodeType":"YulFunctionCall","src":"17500:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17554:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17565:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17550:3:19"},"nodeType":"YulFunctionCall","src":"17550:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17574:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17518:31:19"},"nodeType":"YulFunctionCall","src":"17518:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17493:6:19"},"nodeType":"YulFunctionCall","src":"17493:86:19"},"nodeType":"YulExpressionStatement","src":"17493:86:19"}]},{"nodeType":"YulBlock","src":"17600:176:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17648:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17662:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17652:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17690:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17697:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17686:3:19"},"nodeType":"YulFunctionCall","src":"17686:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17740:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17751:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17736:3:19"},"nodeType":"YulFunctionCall","src":"17736:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17760:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17704:31:19"},"nodeType":"YulFunctionCall","src":"17704:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17679:6:19"},"nodeType":"YulFunctionCall","src":"17679:86:19"},"nodeType":"YulExpressionStatement","src":"17679:86:19"}]},{"nodeType":"YulBlock","src":"17786:175:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17833:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17847:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17837:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17875:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17882:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17871:3:19"},"nodeType":"YulFunctionCall","src":"17871:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17925:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17936:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17921:3:19"},"nodeType":"YulFunctionCall","src":"17921:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"17945:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17889:31:19"},"nodeType":"YulFunctionCall","src":"17889:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17864:6:19"},"nodeType":"YulFunctionCall","src":"17864:86:19"},"nodeType":"YulExpressionStatement","src":"17864:86:19"}]},{"nodeType":"YulBlock","src":"17971:174:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18017:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18031:3:19","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18021:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18059:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18066:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18055:3:19"},"nodeType":"YulFunctionCall","src":"18055:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18109:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"18120:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18105:3:19"},"nodeType":"YulFunctionCall","src":"18105:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"18129:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18073:31:19"},"nodeType":"YulFunctionCall","src":"18073:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18048:6:19"},"nodeType":"YulFunctionCall","src":"18048:86:19"},"nodeType":"YulExpressionStatement","src":"18048:86:19"}]},{"nodeType":"YulBlock","src":"18155:164:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18191:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18205:3:19","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18195:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18233:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18240:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18229:3:19"},"nodeType":"YulFunctionCall","src":"18229:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18283:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"18294:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18279:3:19"},"nodeType":"YulFunctionCall","src":"18279:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"18303:3:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18247:31:19"},"nodeType":"YulFunctionCall","src":"18247:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18222:6:19"},"nodeType":"YulFunctionCall","src":"18222:86:19"},"nodeType":"YulExpressionStatement","src":"18222:86:19"}]},{"nodeType":"YulBlock","src":"18329:166:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18365:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18379:3:19","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18369:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18407:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18414:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18403:3:19"},"nodeType":"YulFunctionCall","src":"18403:18:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18459:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"18470:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18455:3:19"},"nodeType":"YulFunctionCall","src":"18455:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"18479:3:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"18423:31:19"},"nodeType":"YulFunctionCall","src":"18423:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18396:6:19"},"nodeType":"YulFunctionCall","src":"18396:88:19"},"nodeType":"YulExpressionStatement","src":"18396:88:19"}]},{"nodeType":"YulBlock","src":"18505:167:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18542:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18556:3:19","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18546:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18584:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18591:6:19","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18580:3:19"},"nodeType":"YulFunctionCall","src":"18580:18:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18636:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"18647:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18632:3:19"},"nodeType":"YulFunctionCall","src":"18632:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"18656:3:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"18600:31:19"},"nodeType":"YulFunctionCall","src":"18600:60:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18573:6:19"},"nodeType":"YulFunctionCall","src":"18573:88:19"},"nodeType":"YulExpressionStatement","src":"18573:88:19"}]}]},"name":"abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16685:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"16696:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16704:5:19","type":""}],"src":"16613:2066:19"},{"body":{"nodeType":"YulBlock","src":"18793:306:19","statements":[{"body":{"nodeType":"YulBlock","src":"18840:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18842:77:19"},"nodeType":"YulFunctionCall","src":"18842:79:19"},"nodeType":"YulExpressionStatement","src":"18842:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18814:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"18823:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18810:3:19"},"nodeType":"YulFunctionCall","src":"18810:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"18835:3:19","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18806:3:19"},"nodeType":"YulFunctionCall","src":"18806:33:19"},"nodeType":"YulIf","src":"18803:120:19"},{"nodeType":"YulBlock","src":"18933:159:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18948:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18962:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18952:6:19","type":""}]},{"nodeType":"YulAssignment","src":"18977:105:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19054:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"19065:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19050:3:19"},"nodeType":"YulFunctionCall","src":"19050:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19074:7:19"}],"functionName":{"name":"abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"18987:62:19"},"nodeType":"YulFunctionCall","src":"18987:95:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18977:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_SequencerData_$3844_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18763:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18774:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18786:6:19","type":""}],"src":"18685:414:19"},{"body":{"nodeType":"YulBlock","src":"19253:282:19","statements":[{"nodeType":"YulAssignment","src":"19263:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19275:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19286:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19271:3:19"},"nodeType":"YulFunctionCall","src":"19271:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19263:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19343:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19356:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19367:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19352:3:19"},"nodeType":"YulFunctionCall","src":"19352:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19299:43:19"},"nodeType":"YulFunctionCall","src":"19299:71:19"},"nodeType":"YulExpressionStatement","src":"19299:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19424:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19437:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19448:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19433:3:19"},"nodeType":"YulFunctionCall","src":"19433:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19380:43:19"},"nodeType":"YulFunctionCall","src":"19380:72:19"},"nodeType":"YulExpressionStatement","src":"19380:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19500:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19513:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19524:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19509:3:19"},"nodeType":"YulFunctionCall","src":"19509:18:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"19462:37:19"},"nodeType":"YulFunctionCall","src":"19462:66:19"},"nodeType":"YulExpressionStatement","src":"19462:66:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19209:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19221:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19229:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19237:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19248:4:19","type":""}],"src":"19105:430:19"},{"body":{"nodeType":"YulBlock","src":"19647:121:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19669:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19677:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19665:3:19"},"nodeType":"YulFunctionCall","src":"19665:14:19"},{"hexValue":"53657175656e6365724167656e743a2073657175656e63657220616c72656164","kind":"string","nodeType":"YulLiteral","src":"19681:34:19","type":"","value":"SequencerAgent: sequencer alread"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19658:6:19"},"nodeType":"YulFunctionCall","src":"19658:58:19"},"nodeType":"YulExpressionStatement","src":"19658:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19737:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19745:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19733:3:19"},"nodeType":"YulFunctionCall","src":"19733:15:19"},{"hexValue":"79206c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"19750:10:19","type":"","value":"y locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19726:6:19"},"nodeType":"YulFunctionCall","src":"19726:35:19"},"nodeType":"YulExpressionStatement","src":"19726:35:19"}]},"name":"store_literal_in_memory_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19639:6:19","type":""}],"src":"19541:227:19"},{"body":{"nodeType":"YulBlock","src":"19920:220:19","statements":[{"nodeType":"YulAssignment","src":"19930:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19996:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20001:2:19","type":"","value":"40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19937:58:19"},"nodeType":"YulFunctionCall","src":"19937:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19930:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20102:3:19"}],"functionName":{"name":"store_literal_in_memory_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db","nodeType":"YulIdentifier","src":"20013:88:19"},"nodeType":"YulFunctionCall","src":"20013:93:19"},"nodeType":"YulExpressionStatement","src":"20013:93:19"},{"nodeType":"YulAssignment","src":"20115:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20126:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20131:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20122:3:19"},"nodeType":"YulFunctionCall","src":"20122:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20115:3:19"}]}]},"name":"abi_encode_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19908:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19916:3:19","type":""}],"src":"19774:366:19"},{"body":{"nodeType":"YulBlock","src":"20317:248:19","statements":[{"nodeType":"YulAssignment","src":"20327:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20339:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20350:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20335:3:19"},"nodeType":"YulFunctionCall","src":"20335:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20327:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20374:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20385:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20370:3:19"},"nodeType":"YulFunctionCall","src":"20370:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20393:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20399:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20389:3:19"},"nodeType":"YulFunctionCall","src":"20389:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20363:6:19"},"nodeType":"YulFunctionCall","src":"20363:47:19"},"nodeType":"YulExpressionStatement","src":"20363:47:19"},{"nodeType":"YulAssignment","src":"20419:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20553:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20427:124:19"},"nodeType":"YulFunctionCall","src":"20427:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20419:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20297:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20312:4:19","type":""}],"src":"20146:419:19"},{"body":{"nodeType":"YulBlock","src":"20677:72:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20699:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20707:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20695:3:19"},"nodeType":"YulFunctionCall","src":"20695:14:19"},{"hexValue":"53657175656e6365724167656e743a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"20711:30:19","type":"","value":"SequencerAgent: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20688:6:19"},"nodeType":"YulFunctionCall","src":"20688:54:19"},"nodeType":"YulExpressionStatement","src":"20688:54:19"}]},"name":"store_literal_in_memory_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20669:6:19","type":""}],"src":"20571:178:19"},{"body":{"nodeType":"YulBlock","src":"20901:220:19","statements":[{"nodeType":"YulAssignment","src":"20911:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20977:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20982:2:19","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20918:58:19"},"nodeType":"YulFunctionCall","src":"20918:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20911:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21083:3:19"}],"functionName":{"name":"store_literal_in_memory_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934","nodeType":"YulIdentifier","src":"20994:88:19"},"nodeType":"YulFunctionCall","src":"20994:93:19"},"nodeType":"YulExpressionStatement","src":"20994:93:19"},{"nodeType":"YulAssignment","src":"21096:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21107:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21112:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21103:3:19"},"nodeType":"YulFunctionCall","src":"21103:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21096:3:19"}]}]},"name":"abi_encode_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20889:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20897:3:19","type":""}],"src":"20755:366:19"},{"body":{"nodeType":"YulBlock","src":"21298:248:19","statements":[{"nodeType":"YulAssignment","src":"21308:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21320:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21331:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21316:3:19"},"nodeType":"YulFunctionCall","src":"21316:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21308:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21355:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21366:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21351:3:19"},"nodeType":"YulFunctionCall","src":"21351:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21374:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21380:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21370:3:19"},"nodeType":"YulFunctionCall","src":"21370:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21344:6:19"},"nodeType":"YulFunctionCall","src":"21344:47:19"},"nodeType":"YulExpressionStatement","src":"21344:47:19"},{"nodeType":"YulAssignment","src":"21400:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21534:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21408:124:19"},"nodeType":"YulFunctionCall","src":"21408:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21400:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21278:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21293:4:19","type":""}],"src":"21127:419:19"},{"body":{"nodeType":"YulBlock","src":"21658:71:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21680:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21688:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21676:3:19"},"nodeType":"YulFunctionCall","src":"21676:14:19"},{"hexValue":"53657175656e6365724167656e743a207a65726f20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"21692:29:19","type":"","value":"SequencerAgent: zero amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21669:6:19"},"nodeType":"YulFunctionCall","src":"21669:53:19"},"nodeType":"YulExpressionStatement","src":"21669:53:19"}]},"name":"store_literal_in_memory_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21650:6:19","type":""}],"src":"21552:177:19"},{"body":{"nodeType":"YulBlock","src":"21881:220:19","statements":[{"nodeType":"YulAssignment","src":"21891:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21957:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21962:2:19","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21898:58:19"},"nodeType":"YulFunctionCall","src":"21898:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21891:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22063:3:19"}],"functionName":{"name":"store_literal_in_memory_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68","nodeType":"YulIdentifier","src":"21974:88:19"},"nodeType":"YulFunctionCall","src":"21974:93:19"},"nodeType":"YulExpressionStatement","src":"21974:93:19"},{"nodeType":"YulAssignment","src":"22076:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22087:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"22092:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22083:3:19"},"nodeType":"YulFunctionCall","src":"22083:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22076:3:19"}]}]},"name":"abi_encode_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21869:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21877:3:19","type":""}],"src":"21735:366:19"},{"body":{"nodeType":"YulBlock","src":"22278:248:19","statements":[{"nodeType":"YulAssignment","src":"22288:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22300:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22311:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22296:3:19"},"nodeType":"YulFunctionCall","src":"22296:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22288:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22335:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22346:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22331:3:19"},"nodeType":"YulFunctionCall","src":"22331:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22354:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22360:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22350:3:19"},"nodeType":"YulFunctionCall","src":"22350:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22324:6:19"},"nodeType":"YulFunctionCall","src":"22324:47:19"},"nodeType":"YulExpressionStatement","src":"22324:47:19"},{"nodeType":"YulAssignment","src":"22380:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22514:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22388:124:19"},"nodeType":"YulFunctionCall","src":"22388:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22380:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22258:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22273:4:19","type":""}],"src":"22107:419:19"},{"body":{"nodeType":"YulBlock","src":"22590:40:19","statements":[{"nodeType":"YulAssignment","src":"22601:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22617:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22611:5:19"},"nodeType":"YulFunctionCall","src":"22611:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22601:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22573:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22583:6:19","type":""}],"src":"22532:98:19"},{"body":{"nodeType":"YulBlock","src":"22731:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22748:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"22753:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22741:6:19"},"nodeType":"YulFunctionCall","src":"22741:19:19"},"nodeType":"YulExpressionStatement","src":"22741:19:19"},{"nodeType":"YulAssignment","src":"22769:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22788:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"22793:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22784:3:19"},"nodeType":"YulFunctionCall","src":"22784:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22769:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22703:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"22708:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22719:11:19","type":""}],"src":"22636:168:19"},{"body":{"nodeType":"YulBlock","src":"22872:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"22882:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"22891:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22886:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"22951:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22976:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"22981:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22972:3:19"},"nodeType":"YulFunctionCall","src":"22972:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22995:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"23000:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22991:3:19"},"nodeType":"YulFunctionCall","src":"22991:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22985:5:19"},"nodeType":"YulFunctionCall","src":"22985:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22965:6:19"},"nodeType":"YulFunctionCall","src":"22965:39:19"},"nodeType":"YulExpressionStatement","src":"22965:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22912:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"22915:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22909:2:19"},"nodeType":"YulFunctionCall","src":"22909:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22923:19:19","statements":[{"nodeType":"YulAssignment","src":"22925:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22934:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"22937:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22930:3:19"},"nodeType":"YulFunctionCall","src":"22930:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22925:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"22905:3:19","statements":[]},"src":"22901:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23034:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23039:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23030:3:19"},"nodeType":"YulFunctionCall","src":"23030:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"23048:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23023:6:19"},"nodeType":"YulFunctionCall","src":"23023:27:19"},"nodeType":"YulExpressionStatement","src":"23023:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22854:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22859:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"22864:6:19","type":""}],"src":"22810:246:19"},{"body":{"nodeType":"YulBlock","src":"23152:283:19","statements":[{"nodeType":"YulVariableDeclaration","src":"23162:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23208:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23176:31:19"},"nodeType":"YulFunctionCall","src":"23176:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23166:6:19","type":""}]},{"nodeType":"YulAssignment","src":"23223:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23288:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23293:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23230:57:19"},"nodeType":"YulFunctionCall","src":"23230:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23223:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23348:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"23355:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23344:3:19"},"nodeType":"YulFunctionCall","src":"23344:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"23362:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23367:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23309:34:19"},"nodeType":"YulFunctionCall","src":"23309:65:19"},"nodeType":"YulExpressionStatement","src":"23309:65:19"},{"nodeType":"YulAssignment","src":"23383:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23394:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23421:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23399:21:19"},"nodeType":"YulFunctionCall","src":"23399:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23390:3:19"},"nodeType":"YulFunctionCall","src":"23390:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23383:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23133:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23140:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23148:3:19","type":""}],"src":"23062:373:19"},{"body":{"nodeType":"YulBlock","src":"23641:440:19","statements":[{"nodeType":"YulAssignment","src":"23651:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23663:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23674:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23659:3:19"},"nodeType":"YulFunctionCall","src":"23659:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23651:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23732:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23745:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23756:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23741:3:19"},"nodeType":"YulFunctionCall","src":"23741:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23688:43:19"},"nodeType":"YulFunctionCall","src":"23688:71:19"},"nodeType":"YulExpressionStatement","src":"23688:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23813:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23826:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23837:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23822:3:19"},"nodeType":"YulFunctionCall","src":"23822:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23769:43:19"},"nodeType":"YulFunctionCall","src":"23769:72:19"},"nodeType":"YulExpressionStatement","src":"23769:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23895:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23908:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23919:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23904:3:19"},"nodeType":"YulFunctionCall","src":"23904:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23851:43:19"},"nodeType":"YulFunctionCall","src":"23851:72:19"},"nodeType":"YulExpressionStatement","src":"23851:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23944:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23955:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23940:3:19"},"nodeType":"YulFunctionCall","src":"23940:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23964:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"23970:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23960:3:19"},"nodeType":"YulFunctionCall","src":"23960:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23933:6:19"},"nodeType":"YulFunctionCall","src":"23933:48:19"},"nodeType":"YulExpressionStatement","src":"23933:48:19"},{"nodeType":"YulAssignment","src":"23990:84:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24060:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"24069:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23998:61:19"},"nodeType":"YulFunctionCall","src":"23998:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23990:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23589:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23601:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23609:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23617:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23625:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23636:4:19","type":""}],"src":"23441:640:19"},{"body":{"nodeType":"YulBlock","src":"24140:32:19","statements":[{"nodeType":"YulAssignment","src":"24150:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"24161:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24150:7:19"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24122:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24132:7:19","type":""}],"src":"24087:85:19"},{"body":{"nodeType":"YulBlock","src":"24222:57:19","statements":[{"nodeType":"YulAssignment","src":"24232:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24247:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"24254:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24243:3:19"},"nodeType":"YulFunctionCall","src":"24243:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24232:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24204:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24214:7:19","type":""}],"src":"24178:101:19"},{"body":{"nodeType":"YulBlock","src":"24352:89:19","statements":[{"nodeType":"YulAssignment","src":"24362:73:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24427:5:19"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"24401:25:19"},"nodeType":"YulFunctionCall","src":"24401:32:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"24392:8:19"},"nodeType":"YulFunctionCall","src":"24392:42:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"24375:16:19"},"nodeType":"YulFunctionCall","src":"24375:60:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24362:9:19"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24332:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24342:9:19","type":""}],"src":"24285:156:19"},{"body":{"nodeType":"YulBlock","src":"24519:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24536:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24579:5:19"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"24541:37:19"},"nodeType":"YulFunctionCall","src":"24541:44:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24529:6:19"},"nodeType":"YulFunctionCall","src":"24529:57:19"},"nodeType":"YulExpressionStatement","src":"24529:57:19"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24507:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24514:3:19","type":""}],"src":"24447:145:19"},{"body":{"nodeType":"YulBlock","src":"24703:131:19","statements":[{"nodeType":"YulAssignment","src":"24713:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24725:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24736:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24721:3:19"},"nodeType":"YulFunctionCall","src":"24721:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24713:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24800:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24813:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"24824:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24809:3:19"},"nodeType":"YulFunctionCall","src":"24809:17:19"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24749:50:19"},"nodeType":"YulFunctionCall","src":"24749:78:19"},"nodeType":"YulExpressionStatement","src":"24749:78:19"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24675:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24687:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24698:4:19","type":""}],"src":"24598:236:19"}]},"contents":"{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct ILockingPool.SequencerData -> struct ILockingPool.SequencerData\n    function abi_encode_t_struct$_SequencerData_$3844_memory_ptr_to_t_struct$_SequencerData_$3844_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // reward\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // activationBatch\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // updatedBatch\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deactivationBatch\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // deactivationTime\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // unlockClaimTime\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // nonce\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // signer\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_SequencerData_$3844_memory_ptr__to_t_struct$_SequencerData_$3844_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_SequencerData_$3844_memory_ptr_to_t_struct$_SequencerData_$3844_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILockingPool_$3940_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILockingPool_$3940_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILockingPool_$3940__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILockingPool_$3940_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$979_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$979_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILockingInfo_$3817_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILockingInfo_$3817_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILockingInfo_$3817__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILockingInfo_$3817_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_ILockingPool_$3940(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ILockingPool_$3940(value) {\n        if iszero(eq(value, cleanup_t_contract$_ILockingPool_$3940(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ILockingPool_$3940(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ILockingPool_$3940(value)\n    }\n\n    function cleanup_t_contract$_ILockingInfo_$3817(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ILockingInfo_$3817(value) {\n        if iszero(eq(value, cleanup_t_contract$_ILockingInfo_$3817(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ILockingInfo_$3817(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ILockingInfo_$3817(value)\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_ILockingPool_$3940t_contract$_ILockingInfo_$3817t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_ILockingPool_$3940(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_ILockingInfo_$3817(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d(memPtr) {\n\n        mstore(add(memPtr, 0), \"SequencerAgent: only dealer\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb0c050cb5dd09f0d4f6ddffdf29838727b43221b49519d348e4e4fe56b2b51d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct ILockingPool.SequencerData\n    function abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0140) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // amount\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // reward\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // activationBatch\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // updatedBatch\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // deactivationBatch\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // deactivationTime\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // unlockClaimTime\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // nonce\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // owner\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // signer\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_SequencerData_$3844_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_SequencerData_$3844_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db(memPtr) {\n\n        mstore(add(memPtr, 0), \"SequencerAgent: sequencer alread\")\n\n        mstore(add(memPtr, 32), \"y locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd7a41062c02f38c8970c9432b0d5f74ddb051621bf81e1c5e666b9cccb981db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934(memPtr) {\n\n        mstore(add(memPtr, 0), \"SequencerAgent: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4e52cdecb587958942976687dadab6ee9498bd6c894d7013ca3cecfe0e86934_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68(memPtr) {\n\n        mstore(add(memPtr, 0), \"SequencerAgent: zero amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9472ec648f19c3abf9a5e4e38d79dc99f831329a946c6455293fd21f5c26fd68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100dd5760003560e01c80639de2ee211161007f578063ce6df54a11610059578063ce6df54a1461026e578063e597455414610297578063f7cee36a146102c2578063f8c8765e146102ed576100dd565b80639de2ee21146101ef578063a98d38f01461021a578063c3b550c814610243576100dd565b806356387b91116100bb57806356387b911461015457806367d93c811461017d57806376d9f95c1461019957806385d1e2b8146101c4576100dd565b806302fb0c5e146100e257806304a78fca1461010d5780631221e6a514610138575b600080fd5b3480156100ee57600080fd5b506100f7610316565b6040516101049190611266565b60405180910390f35b34801561011957600080fd5b50610122610329565b60405161012f919061129a565b60405180910390f35b610152600480360381019061014d9190611305565b61032f565b005b34801561016057600080fd5b5061017b60048036038101906101769190611305565b6105ae565b005b61019760048036038101906101929190611305565b6106d0565b005b3480156101a557600080fd5b506101ae61080e565b6040516101bb919061144e565b60405180910390f35b3480156101d057600080fd5b506101d96108ba565b6040516101e691906114c9565b60405180910390f35b3480156101fb57600080fd5b506102046108e0565b60405161021191906114f3565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c919061153a565b610904565b005b34801561024f57600080fd5b50610258610a29565b60405161026591906114f3565b60405180910390f35b34801561027a57600080fd5b50610295600480360381019061029091906116d9565b610a4f565b005b3480156102a357600080fd5b506102ac610ecc565b6040516102b9919061177d565b60405180910390f35b3480156102ce57600080fd5b506102d7610ef2565b6040516102e491906117b9565b60405180910390f35b3480156102f957600080fd5b50610314600480360381019061030f9190611850565b610f18565b005b600560149054906101000a900460ff1681565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b490611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ddc74de34600454846040518463ffffffff1660e01b815260040161041d929190611943565b6000604051808303818588803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b5050505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161050991906114f3565b602060405180830381865afa158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a9190611981565b6040518363ffffffff1660e01b81526004016105679291906119ae565b6020604051808303816000875af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190611a03565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317396687600454836040518363ffffffff1660e01b815260040161069b929190611943565b600060405180830381600087803b1580156106b557600080fd5b505af11580156106c9573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075590611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663262c0e6634600454846040518463ffffffff1660e01b81526004016107be929190611943565b6000604051808303818588803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b50505050506000600560146101000a81548160ff02191690831515021790555050565b6108166111cc565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636ba7ccff6004546040518263ffffffff1660e01b8152600401610873919061129a565b61014060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190611b40565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990611914565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663015bb1806004548360016040518463ffffffff1660e01b81526004016109f493929190611b6e565b600060405180830381600087803b158015610a0e57600080fd5b505af1158015610a22573d6000803e3d6000fd5b5050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611914565b60405180910390fd5b600060045414610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1990611c17565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610b8c5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc290611c83565b60405180910390fd5b60008211610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611cef565b60405180910390fd5b83600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610cee9291906119ae565b6020604051808303816000875af1158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d319190611a03565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ad42030600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585856040518563ffffffff1660e01b8152600401610db59493929190611d8e565b600060405180830381600087803b158015610dcf57600080fd5b505af1158015610de3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663beb26755600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610e6491906114f3565b602060405180830381865afa158015610e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea59190611981565b6004819055506001600560146101000a81548160ff02191690831515021790555050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f226111a4565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610f705750825b9050600060018367ffffffffffffffff16148015610fa5575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610fb3575080155b15610fea576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561103a5760018560000160086101000a81548160ff0219169083151502179055505b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156111995760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516111909190611e29565b60405180910390a15b505050505050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60008115159050919050565b6112608161124b565b82525050565b600060208201905061127b6000830184611257565b92915050565b6000819050919050565b61129481611281565b82525050565b60006020820190506112af600083018461128b565b92915050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b6112e2816112c9565b81146112ed57600080fd5b50565b6000813590506112ff816112d9565b92915050565b60006020828403121561131b5761131a6112bf565b5b6000611329848285016112f0565b91505092915050565b61133b81611281565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061136c82611341565b9050919050565b61137c81611361565b82525050565b610140820160008201516113996000850182611332565b5060208201516113ac6020850182611332565b5060408201516113bf6040850182611332565b5060608201516113d26060850182611332565b5060808201516113e56080850182611332565b5060a08201516113f860a0850182611332565b5060c082015161140b60c0850182611332565b5060e082015161141e60e0850182611332565b50610100820151611433610100850182611373565b50610120820151611448610120850182611373565b50505050565b6000610140820190506114646000830184611382565b92915050565b6000819050919050565b600061148f61148a61148584611341565b61146a565b611341565b9050919050565b60006114a182611474565b9050919050565b60006114b382611496565b9050919050565b6114c3816114a8565b82525050565b60006020820190506114de60008301846114ba565b92915050565b6114ed81611361565b82525050565b600060208201905061150860008301846114e4565b92915050565b61151781611281565b811461152257600080fd5b50565b6000813590506115348161150e565b92915050565b6000602082840312156115505761154f6112bf565b5b600061155e84828501611525565b91505092915050565b61157081611361565b811461157b57600080fd5b50565b60008135905061158d81611567565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115e68261159d565b810181811067ffffffffffffffff82111715611605576116046115ae565b5b80604052505050565b60006116186112b5565b905061162482826115dd565b919050565b600067ffffffffffffffff821115611644576116436115ae565b5b61164d8261159d565b9050602081019050919050565b82818337600083830152505050565b600061167c61167784611629565b61160e565b90508281526020810184848401111561169857611697611598565b5b6116a384828561165a565b509392505050565b600082601f8301126116c0576116bf611593565b5b81356116d0848260208601611669565b91505092915050565b600080600080608085870312156116f3576116f26112bf565b5b60006117018782880161157e565b94505060206117128782880161157e565b935050604061172387828801611525565b925050606085013567ffffffffffffffff811115611744576117436112c4565b5b611750878288016116ab565b91505092959194509250565b600061176782611496565b9050919050565b6117778161175c565b82525050565b6000602082019050611792600083018461176e565b92915050565b60006117a382611496565b9050919050565b6117b381611798565b82525050565b60006020820190506117ce60008301846117aa565b92915050565b60006117df82611361565b9050919050565b6117ef816117d4565b81146117fa57600080fd5b50565b60008135905061180c816117e6565b92915050565b600061181d82611361565b9050919050565b61182d81611812565b811461183857600080fd5b50565b60008135905061184a81611824565b92915050565b6000806000806080858703121561186a576118696112bf565b5b60006118788782880161157e565b9450506020611889878288016117fd565b935050604061189a8782880161183b565b92505060606118ab8782880161157e565b91505092959194509250565b600082825260208201905092915050565b7f53657175656e6365724167656e743a206f6e6c79206465616c65720000000000600082015250565b60006118fe601b836118b7565b9150611909826118c8565b602082019050919050565b6000602082019050818103600083015261192d816118f1565b9050919050565b61193d816112c9565b82525050565b6000604082019050611958600083018561128b565b6119656020830184611934565b9392505050565b60008151905061197b8161150e565b92915050565b600060208284031215611997576119966112bf565b5b60006119a58482850161196c565b91505092915050565b60006040820190506119c360008301856114e4565b6119d0602083018461128b565b9392505050565b6119e08161124b565b81146119eb57600080fd5b50565b6000815190506119fd816119d7565b92915050565b600060208284031215611a1957611a186112bf565b5b6000611a27848285016119ee565b91505092915050565b600080fd5b600081519050611a4481611567565b92915050565b60006101408284031215611a6157611a60611a30565b5b611a6c61014061160e565b90506000611a7c8482850161196c565b6000830152506020611a908482850161196c565b6020830152506040611aa48482850161196c565b6040830152506060611ab88482850161196c565b6060830152506080611acc8482850161196c565b60808301525060a0611ae08482850161196c565b60a08301525060c0611af48482850161196c565b60c08301525060e0611b088482850161196c565b60e083015250610100611b1d84828501611a35565b61010083015250610120611b3384828501611a35565b6101208301525092915050565b60006101408284031215611b5757611b566112bf565b5b6000611b6584828501611a4a565b91505092915050565b6000606082019050611b83600083018661128b565b611b90602083018561128b565b611b9d6040830184611257565b949350505050565b7f53657175656e6365724167656e743a2073657175656e63657220616c7265616460008201527f79206c6f636b6564000000000000000000000000000000000000000000000000602082015250565b6000611c016028836118b7565b9150611c0c82611ba5565b604082019050919050565b60006020820190508181036000830152611c3081611bf4565b9050919050565b7f53657175656e6365724167656e743a207a65726f206164647265737300000000600082015250565b6000611c6d601c836118b7565b9150611c7882611c37565b602082019050919050565b60006020820190508181036000830152611c9c81611c60565b9050919050565b7f53657175656e6365724167656e743a207a65726f20616d6f756e740000000000600082015250565b6000611cd9601b836118b7565b9150611ce482611ca3565b602082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d49578082015181840152602081019050611d2e565b60008484015250505050565b6000611d6082611d0f565b611d6a8185611d1a565b9350611d7a818560208601611d2b565b611d838161159d565b840191505092915050565b6000608082019050611da360008301876114e4565b611db060208301866114e4565b611dbd604083018561128b565b8181036060830152611dcf8184611d55565b905095945050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611e13611e0e611e0984611dda565b61146a565b611de4565b9050919050565b611e2381611df8565b82525050565b6000602082019050611e3e6000830184611e1a565b9291505056fea2646970667358221220037fb11de3adbb0e002b0ffe02d76d8089d12fe57f02b416093d99c95981e5b264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DE2EE21 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xCE6DF54A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xCE6DF54A EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xE5974554 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF7CEE36A EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x2ED JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x9DE2EE21 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA98D38F0 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC3B550C8 EQ PUSH2 0x243 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x56387B91 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x56387B91 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x67D93C81 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x76D9F95C EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x85D1E2B8 EQ PUSH2 0x1C4 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x4A78FCA EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x1221E6A5 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DDC74DE CALLVALUE PUSH1 0x4 SLOAD DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP3 SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17396687 PUSH1 0x4 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x755 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x262C0E66 CALLVALUE PUSH1 0x4 SLOAD DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x816 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BA7CCFF PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x15BB180 PUSH1 0x4 SLOAD DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB19 SWAP1 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP1 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEE SWAP3 SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD42030 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBEB26755 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE64 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF22 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF70 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xFA5 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x103A JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP9 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1294 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x128B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E2 DUP2 PUSH2 0x12C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12FF DUP2 PUSH2 0x12D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1329 DUP5 DUP3 DUP6 ADD PUSH2 0x12F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x133B DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136C DUP3 PUSH2 0x1341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x1361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1399 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x13AC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x13BF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x13D2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x13E5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x13F8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x140B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x141E PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1332 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x1433 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x1373 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x1448 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x1373 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1382 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148F PUSH2 0x148A PUSH2 0x1485 DUP5 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A1 DUP3 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B3 DUP3 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C3 DUP2 PUSH2 0x14A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14ED DUP2 PUSH2 0x1361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1508 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1517 DUP2 PUSH2 0x1281 JUMP JUMPDEST DUP2 EQ PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1534 DUP2 PUSH2 0x150E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1550 JUMPI PUSH2 0x154F PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x155E DUP5 DUP3 DUP6 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1570 DUP2 PUSH2 0x1361 JUMP JUMPDEST DUP2 EQ PUSH2 0x157B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158D DUP2 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15E6 DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1605 JUMPI PUSH2 0x1604 PUSH2 0x15AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1618 PUSH2 0x12B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1624 DUP3 DUP3 PUSH2 0x15DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1644 JUMPI PUSH2 0x1643 PUSH2 0x15AE JUMP JUMPDEST JUMPDEST PUSH2 0x164D DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C PUSH2 0x1677 DUP5 PUSH2 0x1629 JUMP JUMPDEST PUSH2 0x160E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1697 PUSH2 0x1598 JUMP JUMPDEST JUMPDEST PUSH2 0x16A3 DUP5 DUP3 DUP6 PUSH2 0x165A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C0 JUMPI PUSH2 0x16BF PUSH2 0x1593 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16F3 JUMPI PUSH2 0x16F2 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1712 DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1723 DUP8 DUP3 DUP9 ADD PUSH2 0x1525 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x12C4 JUMP JUMPDEST JUMPDEST PUSH2 0x1750 DUP8 DUP3 DUP9 ADD PUSH2 0x16AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1767 DUP3 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1777 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1792 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x176E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP3 PUSH2 0x1496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B3 DUP2 PUSH2 0x1798 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180C DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP3 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x1812 JUMP JUMPDEST DUP2 EQ PUSH2 0x1838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x184A DUP2 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1869 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1878 DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x183B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A206F6E6C79206465616C65720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FE PUSH1 0x1B DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP3 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x192D DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x193D DUP2 PUSH2 0x12C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1958 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1965 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1934 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x197B DUP2 PUSH2 0x150E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A5 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19C3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x19D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x128B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FD DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP5 DUP3 DUP6 ADD PUSH2 0x19EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A44 DUP2 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x1A30 JUMP JUMPDEST JUMPDEST PUSH2 0x1A6C PUSH2 0x140 PUSH2 0x160E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A7C DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1A90 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1AA4 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1AB8 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1ACC DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1B08 DUP5 DUP3 DUP6 ADD PUSH2 0x196C JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x1B1D DUP5 DUP3 DUP6 ADD PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B57 JUMPI PUSH2 0x1B56 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B65 DUP5 DUP3 DUP6 ADD PUSH2 0x1A4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B83 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1B90 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x1B9D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A2073657175656E63657220616C72656164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x79206C6F636B6564000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C01 PUSH1 0x28 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0C DUP3 PUSH2 0x1BA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C30 DUP2 PUSH2 0x1BF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A207A65726F206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6D PUSH1 0x1C DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C78 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C9C DUP2 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53657175656E6365724167656E743A207A65726F20616D6F756E740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x1B DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D60 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH2 0x1D6A DUP2 DUP6 PUSH2 0x1D1A JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D83 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DA3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x1DB0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x1DBD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x128B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1DCF DUP2 DUP5 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E13 PUSH2 0x1E0E PUSH2 0x1E09 DUP5 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x146A JUMP JUMPDEST PUSH2 0x1DE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E23 DUP2 PUSH2 0x1DF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH32 0xB11DE3ADBB0E002B0FFE02D76D8089D12FE57F02B416093D99C95981E5B26473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"270:2125:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2174:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1742:121;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2015:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1869:140;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;349:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1624:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;928:690;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;423:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;657:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;516:18;;;;;;;;;;;;;:::o;448:26::-;;;;:::o;2174:219::-;595:6;;;;;;;;;;581:20;;:10;:20;;;573:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2245:11:::1;;;;;;;;;;;:23;;;2276:9;2287:11;;2300:5;2245:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2323:5;;;;;;;;;;;2316:22;;;2339:6;::::0;::::1;;;;;;;;2354:5;;;;;;;;;;;2347:23;;;2379:4;2347:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2316:70;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2174:219:::0;:::o;1742:121::-;595:6;;;;;;;;;;581:20;;:10;:20;;;573:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:11:::1;;;;;;;;;;;:27;;;1837:11;;1850:5;1809:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1742:121:::0;:::o;2015:153::-;595:6;;;;;;;;;;581:20;;:10;:20;;;573:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:11:::1;;;;;;;;;;;:18;;;2107:9;2118:11;;2131:5;2081:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2156:5;2147:6;;:14;;;;;;;;;;;;;;;;;;2015:153:::0;:::o;1869:140::-;1915:33;;:::i;:::-;1967:11;;;;;;;;;;;:22;;;1990:11;;1967:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1960:42;;1869:140;:::o;349:31::-;;;;;;;;;;;;;:::o;322:21::-;;;;;;;;;;;;:::o;1624:112::-;595:6;;;;;;;;;;581:20;;:10;:20;;;573:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1684:11:::1;;;;;;;;;;;:18;;;1703:11;;1716:6;1724:4;1684:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1624:112:::0;:::o;480:30::-;;;;;;;;;;;;;:::o;928:690::-;595:6;;;;;;;;;;581:20;;:10;:20;;;573:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1090:1:::1;1075:11;;:16;1067:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1182:1;1154:30;;:16;:30;;;;:64;;;;;1216:1;1188:30;;:16;:30;;;;1154:64;1146:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;1279:1;1269:7;:11;1261:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1341:16;1323:15;;:34;;;;;;;;;;;;;;;;;;1367:5;;;;;;;;;;;:13;;;1389:11;;;;;;;;;;;1403:17;1367:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1431:11;;;;;;;;;;;:35;;;1467:15;;;;;;;;;;;1484:16;1502:7;1511:13;1431:94;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1549:11;;;;;;;;;;;:22;;;1572:15;;;;;;;;;;;1549:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1535:11;:53;;;;1607:4;1598:6;;:13;;;;;;;;;;;;;;;;;;928:690:::0;;;;:::o;423:19::-;;;;;;;;;;;;;:::o;386:31::-;;;;;;;;;;;;;:::o;657:265::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;804:7:12::1;795:6;::::0;:16:::1;;;;;;;;;;;;;;;;;;835:12;821:11;;:26;;;;;;;;;;;;;;;;;;871:12;857:11;;:26;;;;;;;;;;;;;;;;;;908:6;893:5;;:22;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;657:265:12;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:90:19:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:118::-;604:24;622:5;604:24;:::i;:::-;599:3;592:37;517:118;;:::o;641:222::-;734:4;772:2;761:9;757:18;749:26;;785:71;853:1;842:9;838:17;829:6;785:71;:::i;:::-;641:222;;;;:::o;869:75::-;902:6;935:2;929:9;919:19;;869:75;:::o;950:117::-;1059:1;1056;1049:12;1073:117;1182:1;1179;1172:12;1196:93;1232:7;1272:10;1265:5;1261:22;1250:33;;1196:93;;;:::o;1295:120::-;1367:23;1384:5;1367:23;:::i;:::-;1360:5;1357:34;1347:62;;1405:1;1402;1395:12;1347:62;1295:120;:::o;1421:137::-;1466:5;1504:6;1491:20;1482:29;;1520:32;1546:5;1520:32;:::i;:::-;1421:137;;;;:::o;1564:327::-;1622:6;1671:2;1659:9;1650:7;1646:23;1642:32;1639:119;;;1677:79;;:::i;:::-;1639:119;1797:1;1822:52;1866:7;1857:6;1846:9;1842:22;1822:52;:::i;:::-;1812:62;;1768:116;1564:327;;;;:::o;1897:108::-;1974:24;1992:5;1974:24;:::i;:::-;1969:3;1962:37;1897:108;;:::o;2011:126::-;2048:7;2088:42;2081:5;2077:54;2066:65;;2011:126;;;:::o;2143:96::-;2180:7;2209:24;2227:5;2209:24;:::i;:::-;2198:35;;2143:96;;;:::o;2245:108::-;2322:24;2340:5;2322:24;:::i;:::-;2317:3;2310:37;2245:108;;:::o;2437:1984::-;2596:6;2591:3;2587:16;2687:4;2680:5;2676:16;2670:23;2706:63;2763:4;2758:3;2754:14;2740:12;2706:63;:::i;:::-;2613:166;2863:4;2856:5;2852:16;2846:23;2882:63;2939:4;2934:3;2930:14;2916:12;2882:63;:::i;:::-;2789:166;3048:4;3041:5;3037:16;3031:23;3067:63;3124:4;3119:3;3115:14;3101:12;3067:63;:::i;:::-;2965:175;3230:4;3223:5;3219:16;3213:23;3249:63;3306:4;3301:3;3297:14;3283:12;3249:63;:::i;:::-;3150:172;3417:4;3410:5;3406:16;3400:23;3436:63;3493:4;3488:3;3484:14;3470:12;3436:63;:::i;:::-;3332:177;3603:4;3596:5;3592:16;3586:23;3622:63;3679:4;3674:3;3670:14;3656:12;3622:63;:::i;:::-;3519:176;3788:4;3781:5;3777:16;3771:23;3807:63;3864:4;3859:3;3855:14;3841:12;3807:63;:::i;:::-;3705:175;3963:4;3956:5;3952:16;3946:23;3982:63;4039:4;4034:3;4030:14;4016:12;3982:63;:::i;:::-;3890:165;4138:6;4131:5;4127:18;4121:25;4159:65;4216:6;4211:3;4207:16;4193:12;4159:65;:::i;:::-;4065:169;4318:6;4311:5;4307:18;4301:25;4339:65;4396:6;4391:3;4387:16;4373:12;4339:65;:::i;:::-;4244:170;2565:1856;2437:1984;;:::o;4427:347::-;4582:4;4620:3;4609:9;4605:19;4597:27;;4634:133;4764:1;4753:9;4749:17;4740:6;4634:133;:::i;:::-;4427:347;;;;:::o;4780:60::-;4808:3;4829:5;4822:12;;4780:60;;;:::o;4846:142::-;4896:9;4929:53;4947:34;4956:24;4974:5;4956:24;:::i;:::-;4947:34;:::i;:::-;4929:53;:::i;:::-;4916:66;;4846:142;;;:::o;4994:126::-;5044:9;5077:37;5108:5;5077:37;:::i;:::-;5064:50;;4994:126;;;:::o;5126:147::-;5197:9;5230:37;5261:5;5230:37;:::i;:::-;5217:50;;5126:147;;;:::o;5279:173::-;5387:58;5439:5;5387:58;:::i;:::-;5382:3;5375:71;5279:173;;:::o;5458:264::-;5572:4;5610:2;5599:9;5595:18;5587:26;;5623:92;5712:1;5701:9;5697:17;5688:6;5623:92;:::i;:::-;5458:264;;;;:::o;5728:118::-;5815:24;5833:5;5815:24;:::i;:::-;5810:3;5803:37;5728:118;;:::o;5852:222::-;5945:4;5983:2;5972:9;5968:18;5960:26;;5996:71;6064:1;6053:9;6049:17;6040:6;5996:71;:::i;:::-;5852:222;;;;:::o;6080:122::-;6153:24;6171:5;6153:24;:::i;:::-;6146:5;6143:35;6133:63;;6192:1;6189;6182:12;6133:63;6080:122;:::o;6208:139::-;6254:5;6292:6;6279:20;6270:29;;6308:33;6335:5;6308:33;:::i;:::-;6208:139;;;;:::o;6353:329::-;6412:6;6461:2;6449:9;6440:7;6436:23;6432:32;6429:119;;;6467:79;;:::i;:::-;6429:119;6587:1;6612:53;6657:7;6648:6;6637:9;6633:22;6612:53;:::i;:::-;6602:63;;6558:117;6353:329;;;;:::o;6688:122::-;6761:24;6779:5;6761:24;:::i;:::-;6754:5;6751:35;6741:63;;6800:1;6797;6790:12;6741:63;6688:122;:::o;6816:139::-;6862:5;6900:6;6887:20;6878:29;;6916:33;6943:5;6916:33;:::i;:::-;6816:139;;;;:::o;6961:117::-;7070:1;7067;7060:12;7084:117;7193:1;7190;7183:12;7207:102;7248:6;7299:2;7295:7;7290:2;7283:5;7279:14;7275:28;7265:38;;7207:102;;;:::o;7315:180::-;7363:77;7360:1;7353:88;7460:4;7457:1;7450:15;7484:4;7481:1;7474:15;7501:281;7584:27;7606:4;7584:27;:::i;:::-;7576:6;7572:40;7714:6;7702:10;7699:22;7678:18;7666:10;7663:34;7660:62;7657:88;;;7725:18;;:::i;:::-;7657:88;7765:10;7761:2;7754:22;7544:238;7501:281;;:::o;7788:129::-;7822:6;7849:20;;:::i;:::-;7839:30;;7878:33;7906:4;7898:6;7878:33;:::i;:::-;7788:129;;;:::o;7923:307::-;7984:4;8074:18;8066:6;8063:30;8060:56;;;8096:18;;:::i;:::-;8060:56;8134:29;8156:6;8134:29;:::i;:::-;8126:37;;8218:4;8212;8208:15;8200:23;;7923:307;;;:::o;8236:146::-;8333:6;8328:3;8323;8310:30;8374:1;8365:6;8360:3;8356:16;8349:27;8236:146;;;:::o;8388:423::-;8465:5;8490:65;8506:48;8547:6;8506:48;:::i;:::-;8490:65;:::i;:::-;8481:74;;8578:6;8571:5;8564:21;8616:4;8609:5;8605:16;8654:3;8645:6;8640:3;8636:16;8633:25;8630:112;;;8661:79;;:::i;:::-;8630:112;8751:54;8798:6;8793:3;8788;8751:54;:::i;:::-;8471:340;8388:423;;;;;:::o;8830:338::-;8885:5;8934:3;8927:4;8919:6;8915:17;8911:27;8901:122;;8942:79;;:::i;:::-;8901:122;9059:6;9046:20;9084:78;9158:3;9150:6;9143:4;9135:6;9131:17;9084:78;:::i;:::-;9075:87;;8891:277;8830:338;;;;:::o;9174:943::-;9269:6;9277;9285;9293;9342:3;9330:9;9321:7;9317:23;9313:33;9310:120;;;9349:79;;:::i;:::-;9310:120;9469:1;9494:53;9539:7;9530:6;9519:9;9515:22;9494:53;:::i;:::-;9484:63;;9440:117;9596:2;9622:53;9667:7;9658:6;9647:9;9643:22;9622:53;:::i;:::-;9612:63;;9567:118;9724:2;9750:53;9795:7;9786:6;9775:9;9771:22;9750:53;:::i;:::-;9740:63;;9695:118;9880:2;9869:9;9865:18;9852:32;9911:18;9903:6;9900:30;9897:117;;;9933:79;;:::i;:::-;9897:117;10038:62;10092:7;10083:6;10072:9;10068:22;10038:62;:::i;:::-;10028:72;;9823:287;9174:943;;;;;;;:::o;10123:140::-;10187:9;10220:37;10251:5;10220:37;:::i;:::-;10207:50;;10123:140;;;:::o;10269:159::-;10370:51;10415:5;10370:51;:::i;:::-;10365:3;10358:64;10269:159;;:::o;10434:250::-;10541:4;10579:2;10568:9;10564:18;10556:26;;10592:85;10674:1;10663:9;10659:17;10650:6;10592:85;:::i;:::-;10434:250;;;;:::o;10690:147::-;10761:9;10794:37;10825:5;10794:37;:::i;:::-;10781:50;;10690:147;;;:::o;10843:173::-;10951:58;11003:5;10951:58;:::i;:::-;10946:3;10939:71;10843:173;;:::o;11022:264::-;11136:4;11174:2;11163:9;11159:18;11151:26;;11187:92;11276:1;11265:9;11261:17;11252:6;11187:92;:::i;:::-;11022:264;;;;:::o;11292:117::-;11350:7;11379:24;11397:5;11379:24;:::i;:::-;11368:35;;11292:117;;;:::o;11415:164::-;11509:45;11548:5;11509:45;:::i;:::-;11502:5;11499:56;11489:84;;11569:1;11566;11559:12;11489:84;11415:164;:::o;11585:181::-;11652:5;11690:6;11677:20;11668:29;;11706:54;11754:5;11706:54;:::i;:::-;11585:181;;;;:::o;11772:117::-;11830:7;11859:24;11877:5;11859:24;:::i;:::-;11848:35;;11772:117;;;:::o;11895:164::-;11989:45;12028:5;11989:45;:::i;:::-;11982:5;11979:56;11969:84;;12049:1;12046;12039:12;11969:84;11895:164;:::o;12065:181::-;12132:5;12170:6;12157:20;12148:29;;12186:54;12234:5;12186:54;:::i;:::-;12065:181;;;;:::o;12252:849::-;12380:6;12388;12396;12404;12453:3;12441:9;12432:7;12428:23;12424:33;12421:120;;;12460:79;;:::i;:::-;12421:120;12580:1;12605:53;12650:7;12641:6;12630:9;12626:22;12605:53;:::i;:::-;12595:63;;12551:117;12707:2;12733:74;12799:7;12790:6;12779:9;12775:22;12733:74;:::i;:::-;12723:84;;12678:139;12856:2;12882:74;12948:7;12939:6;12928:9;12924:22;12882:74;:::i;:::-;12872:84;;12827:139;13005:2;13031:53;13076:7;13067:6;13056:9;13052:22;13031:53;:::i;:::-;13021:63;;12976:118;12252:849;;;;;;;:::o;13107:169::-;13191:11;13225:6;13220:3;13213:19;13265:4;13260:3;13256:14;13241:29;;13107:169;;;;:::o;13282:177::-;13422:29;13418:1;13410:6;13406:14;13399:53;13282:177;:::o;13465:366::-;13607:3;13628:67;13692:2;13687:3;13628:67;:::i;:::-;13621:74;;13704:93;13793:3;13704:93;:::i;:::-;13822:2;13817:3;13813:12;13806:19;;13465:366;;;:::o;13837:419::-;14003:4;14041:2;14030:9;14026:18;14018:26;;14090:9;14084:4;14080:20;14076:1;14065:9;14061:17;14054:47;14118:131;14244:4;14118:131;:::i;:::-;14110:139;;13837:419;;;:::o;14262:115::-;14347:23;14364:5;14347:23;:::i;:::-;14342:3;14335:36;14262:115;;:::o;14383:328::-;14502:4;14540:2;14529:9;14525:18;14517:26;;14553:71;14621:1;14610:9;14606:17;14597:6;14553:71;:::i;:::-;14634:70;14700:2;14689:9;14685:18;14676:6;14634:70;:::i;:::-;14383:328;;;;;:::o;14717:143::-;14774:5;14805:6;14799:13;14790:22;;14821:33;14848:5;14821:33;:::i;:::-;14717:143;;;;:::o;14866:351::-;14936:6;14985:2;14973:9;14964:7;14960:23;14956:32;14953:119;;;14991:79;;:::i;:::-;14953:119;15111:1;15136:64;15192:7;15183:6;15172:9;15168:22;15136:64;:::i;:::-;15126:74;;15082:128;14866:351;;;;:::o;15223:332::-;15344:4;15382:2;15371:9;15367:18;15359:26;;15395:71;15463:1;15452:9;15448:17;15439:6;15395:71;:::i;:::-;15476:72;15544:2;15533:9;15529:18;15520:6;15476:72;:::i;:::-;15223:332;;;;;:::o;15561:116::-;15631:21;15646:5;15631:21;:::i;:::-;15624:5;15621:32;15611:60;;15667:1;15664;15657:12;15611:60;15561:116;:::o;15683:137::-;15737:5;15768:6;15762:13;15753:22;;15784:30;15808:5;15784:30;:::i;:::-;15683:137;;;;:::o;15826:345::-;15893:6;15942:2;15930:9;15921:7;15917:23;15913:32;15910:119;;;15948:79;;:::i;:::-;15910:119;16068:1;16093:61;16146:7;16137:6;16126:9;16122:22;16093:61;:::i;:::-;16083:71;;16039:125;15826:345;;;;:::o;16177:117::-;16286:1;16283;16276:12;16423:143;16480:5;16511:6;16505:13;16496:22;;16527:33;16554:5;16527:33;:::i;:::-;16423:143;;;;:::o;16613:2066::-;16704:5;16748:6;16736:9;16731:3;16727:19;16723:32;16720:119;;;16758:79;;:::i;:::-;16720:119;16857:23;16873:6;16857:23;:::i;:::-;16848:32;;16941:1;16981:60;17037:3;17028:6;17017:9;17013:22;16981:60;:::i;:::-;16974:4;16967:5;16963:16;16956:86;16890:163;17114:2;17155:60;17211:3;17202:6;17191:9;17187:22;17155:60;:::i;:::-;17148:4;17141:5;17137:16;17130:86;17063:164;17297:2;17338:60;17394:3;17385:6;17374:9;17370:22;17338:60;:::i;:::-;17331:4;17324:5;17320:16;17313:86;17237:173;17477:2;17518:60;17574:3;17565:6;17554:9;17550:22;17518:60;:::i;:::-;17511:4;17504:5;17500:16;17493:86;17420:170;17662:3;17704:60;17760:3;17751:6;17740:9;17736:22;17704:60;:::i;:::-;17697:4;17690:5;17686:16;17679:86;17600:176;17847:3;17889:60;17945:3;17936:6;17925:9;17921:22;17889:60;:::i;:::-;17882:4;17875:5;17871:16;17864:86;17786:175;18031:3;18073:60;18129:3;18120:6;18109:9;18105:22;18073:60;:::i;:::-;18066:4;18059:5;18055:16;18048:86;17971:174;18205:3;18247:60;18303:3;18294:6;18283:9;18279:22;18247:60;:::i;:::-;18240:4;18233:5;18229:16;18222:86;18155:164;18379:3;18423:60;18479:3;18470:6;18459:9;18455:22;18423:60;:::i;:::-;18414:6;18407:5;18403:18;18396:88;18329:166;18556:3;18600:60;18656:3;18647:6;18636:9;18632:22;18600:60;:::i;:::-;18591:6;18584:5;18580:18;18573:88;18505:167;16613:2066;;;;:::o;18685:414::-;18786:6;18835:3;18823:9;18814:7;18810:23;18806:33;18803:120;;;18842:79;;:::i;:::-;18803:120;18962:1;18987:95;19074:7;19065:6;19054:9;19050:22;18987:95;:::i;:::-;18977:105;;18933:159;18685:414;;;;:::o;19105:430::-;19248:4;19286:2;19275:9;19271:18;19263:26;;19299:71;19367:1;19356:9;19352:17;19343:6;19299:71;:::i;:::-;19380:72;19448:2;19437:9;19433:18;19424:6;19380:72;:::i;:::-;19462:66;19524:2;19513:9;19509:18;19500:6;19462:66;:::i;:::-;19105:430;;;;;;:::o;19541:227::-;19681:34;19677:1;19669:6;19665:14;19658:58;19750:10;19745:2;19737:6;19733:15;19726:35;19541:227;:::o;19774:366::-;19916:3;19937:67;20001:2;19996:3;19937:67;:::i;:::-;19930:74;;20013:93;20102:3;20013:93;:::i;:::-;20131:2;20126:3;20122:12;20115:19;;19774:366;;;:::o;20146:419::-;20312:4;20350:2;20339:9;20335:18;20327:26;;20399:9;20393:4;20389:20;20385:1;20374:9;20370:17;20363:47;20427:131;20553:4;20427:131;:::i;:::-;20419:139;;20146:419;;;:::o;20571:178::-;20711:30;20707:1;20699:6;20695:14;20688:54;20571:178;:::o;20755:366::-;20897:3;20918:67;20982:2;20977:3;20918:67;:::i;:::-;20911:74;;20994:93;21083:3;20994:93;:::i;:::-;21112:2;21107:3;21103:12;21096:19;;20755:366;;;:::o;21127:419::-;21293:4;21331:2;21320:9;21316:18;21308:26;;21380:9;21374:4;21370:20;21366:1;21355:9;21351:17;21344:47;21408:131;21534:4;21408:131;:::i;:::-;21400:139;;21127:419;;;:::o;21552:177::-;21692:29;21688:1;21680:6;21676:14;21669:53;21552:177;:::o;21735:366::-;21877:3;21898:67;21962:2;21957:3;21898:67;:::i;:::-;21891:74;;21974:93;22063:3;21974:93;:::i;:::-;22092:2;22087:3;22083:12;22076:19;;21735:366;;;:::o;22107:419::-;22273:4;22311:2;22300:9;22296:18;22288:26;;22360:9;22354:4;22350:20;22346:1;22335:9;22331:17;22324:47;22388:131;22514:4;22388:131;:::i;:::-;22380:139;;22107:419;;;:::o;22532:98::-;22583:6;22617:5;22611:12;22601:22;;22532:98;;;:::o;22636:168::-;22719:11;22753:6;22748:3;22741:19;22793:4;22788:3;22784:14;22769:29;;22636:168;;;;:::o;22810:246::-;22891:1;22901:113;22915:6;22912:1;22909:13;22901:113;;;23000:1;22995:3;22991:11;22985:18;22981:1;22976:3;22972:11;22965:39;22937:2;22934:1;22930:10;22925:15;;22901:113;;;23048:1;23039:6;23034:3;23030:16;23023:27;22872:184;22810:246;;;:::o;23062:373::-;23148:3;23176:38;23208:5;23176:38;:::i;:::-;23230:70;23293:6;23288:3;23230:70;:::i;:::-;23223:77;;23309:65;23367:6;23362:3;23355:4;23348:5;23344:16;23309:65;:::i;:::-;23399:29;23421:6;23399:29;:::i;:::-;23394:3;23390:39;23383:46;;23152:283;23062:373;;;;:::o;23441:640::-;23636:4;23674:3;23663:9;23659:19;23651:27;;23688:71;23756:1;23745:9;23741:17;23732:6;23688:71;:::i;:::-;23769:72;23837:2;23826:9;23822:18;23813:6;23769:72;:::i;:::-;23851;23919:2;23908:9;23904:18;23895:6;23851:72;:::i;:::-;23970:9;23964:4;23960:20;23955:2;23944:9;23940:18;23933:48;23998:76;24069:4;24060:6;23998:76;:::i;:::-;23990:84;;23441:640;;;;;;;:::o;24087:85::-;24132:7;24161:5;24150:16;;24087:85;;;:::o;24178:101::-;24214:7;24254:18;24247:5;24243:30;24232:41;;24178:101;;;:::o;24285:156::-;24342:9;24375:60;24392:42;24401:32;24427:5;24401:32;:::i;:::-;24392:42;:::i;:::-;24375:60;:::i;:::-;24362:73;;24285:156;;;:::o;24447:145::-;24541:44;24579:5;24541:44;:::i;:::-;24536:3;24529:57;24447:145;;:::o;24598:236::-;24698:4;24736:2;24725:9;24721:18;24713:26;;24749:78;24824:1;24813:9;24809:17;24800:6;24749:78;:::i;:::-;24598:236;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1560400","executionCost":"1631","totalCost":"1562031"},"external":{"active()":"2545","dealer()":"2534","initialize(address,address,address,address)":"infinite","lock(address,address,uint256,bytes)":"infinite","lockingInfo()":"infinite","lockingPool()":"infinite","metis()":"infinite","relock(uint256)":"infinite","sequencerData()":"infinite","sequencerId()":"2475","sequencerSigner()":"2581","unlock(uint32)":"infinite","unlockClaim(uint32)":"infinite","withdrawRewards(uint32)":"infinite"}},"methodIdentifiers":{"active()":"02fb0c5e","dealer()":"9de2ee21","initialize(address,address,address,address)":"f8c8765e","lock(address,address,uint256,bytes)":"ce6df54a","lockingInfo()":"f7cee36a","lockingPool()":"85d1e2b8","metis()":"e5974554","relock(uint256)":"a98d38f0","sequencerData()":"76d9f95c","sequencerId()":"04a78fca","sequencerSigner()":"c3b550c8","unlock(uint32)":"67d93c81","unlockClaim(uint32)":"1221e6a5","withdrawRewards(uint32)":"56387b91"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dealer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dealer\",\"type\":\"address\"},{\"internalType\":\"contract ILockingPool\",\"name\":\"_lockingPool\",\"type\":\"address\"},{\"internalType\":\"contract ILockingInfo\",\"name\":\"_lockingInfo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_metis\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sequencerSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubKey\",\"type\":\"bytes\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingInfo\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingPool\",\"outputs\":[{\"internalType\":\"contract ILockingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metis\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"relock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct ILockingPool.SequencerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"l2Gas\",\"type\":\"uint32\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SequencerAgent.sol\":\"SequencerAgent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/SequencerAgent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interface/ILockingPool.sol\\\";\\nimport \\\"../interface/ILockingInfo.sol\\\";\\n\\ncontract SequencerAgent is ContextUpgradeable {\\n    address public dealer;\\n    ILockingPool public lockingPool;\\n    ILockingInfo public lockingInfo;\\n    IERC20 public metis;\\n    uint256 public sequencerId;\\n    address public sequencerSigner;\\n    bool public active;\\n\\n    modifier onlyDealer() {\\n        require(msg.sender == dealer, \\\"SequencerAgent: only dealer\\\");\\n        _;\\n    }\\n\\n    function initialize(address _dealer, ILockingPool _lockingPool, ILockingInfo _lockingInfo, address _metis) external initializer {\\n        dealer = _dealer;\\n        lockingPool = _lockingPool;\\n        lockingInfo = _lockingInfo;\\n        metis = IERC20(_metis);\\n    }\\n\\n    function lock(address _sequencerSigner, address _rewardRecipient, uint256 _amount, bytes memory _signerPubKey) public onlyDealer {\\n        require(sequencerId == 0, \\\"SequencerAgent: sequencer already locked\\\");\\n        require(_sequencerSigner != address(0) && _rewardRecipient != address(0), \\\"SequencerAgent: zero address\\\");\\n        require(_amount > 0, \\\"SequencerAgent: zero amount\\\");\\n\\n        sequencerSigner = _sequencerSigner;\\n        metis.approve(address(lockingInfo), type(uint256).max);\\n        lockingPool.lockWithRewardRecipient(sequencerSigner, _rewardRecipient, _amount, _signerPubKey);\\n        sequencerId = lockingPool.seqSigners(sequencerSigner);\\n        active = true;\\n    }\\n\\n    function relock(uint256 amount) public onlyDealer {\\n        lockingPool.relock(sequencerId, amount, true);\\n    }\\n\\n    function withdrawRewards(uint32 l2Gas) public onlyDealer {\\n        lockingPool.withdrawRewards(sequencerId, l2Gas);\\n    }\\n\\n    function sequencerData() public view returns (ILockingPool.SequencerData memory) {\\n        return lockingPool.sequencers(sequencerId);\\n    }\\n\\n    function unlock(uint32 l2Gas) public payable onlyDealer {\\n        lockingPool.unlock{value: msg.value}(sequencerId, l2Gas);\\n        active = false;\\n    }\\n\\n    function unlockClaim(uint32 l2Gas) public payable onlyDealer {\\n        lockingPool.unlockClaim{value: msg.value}(sequencerId, l2Gas);\\n        IERC20(metis).transfer(dealer, IERC20(metis).balanceOf(address(this)));\\n    }\\n}\",\"keccak256\":\"0xe9673f5dbd9cf1928a47f48b976298ddc584a2e46d256097c1c9aa0ba92114a6\",\"license\":\"MIT\"},\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amoun in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0xe63cc48d66aa1359f5b9048a3f21be6f2926130b0360cc495c23737dd7248f1e\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n}\",\"keccak256\":\"0x43a28aeb18dc696d8c141ca49d1ecb62341b01e9d18471c4df9921cd3f98f227\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3285,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"dealer","offset":0,"slot":"0","type":"t_address"},{"astId":3288,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"lockingPool","offset":0,"slot":"1","type":"t_contract(ILockingPool)3940"},{"astId":3291,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"lockingInfo","offset":0,"slot":"2","type":"t_contract(ILockingInfo)3817"},{"astId":3294,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"metis","offset":0,"slot":"3","type":"t_contract(IERC20)979"},{"astId":3296,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"sequencerId","offset":0,"slot":"4","type":"t_uint256"},{"astId":3298,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"sequencerSigner","offset":0,"slot":"5","type":"t_address"},{"astId":3300,"contract":"contracts/SequencerAgent.sol:SequencerAgent","label":"active","offset":20,"slot":"5","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)979":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(ILockingInfo)3817":{"encoding":"inplace","label":"contract ILockingInfo","numberOfBytes":"20"},"t_contract(ILockingPool)3940":{"encoding":"inplace","label":"contract ILockingPool","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ICrossDomainEnabled.sol":{"ICrossDomainEnabled":{"abi":[{"inputs":[],"name":"messenger","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"messenger()":"3cb747bf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ICrossDomainEnabled.sol\":\"ICrossDomainEnabled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ICrossDomainEnabled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ICrossDomainEnabled {\\n    function messenger() external view returns (address);\\n}\",\"keccak256\":\"0x2806d6261202f57849c4e98c2f5786882886e45c67751c2b38dd5f9d0456a7fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ICrossDomainMessenger.sol":{"ICrossDomainMessenger":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"FailedRelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"RelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"messageNonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"chainId","type":"uint256"}],"name":"SentMessage","type":"event"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint256","name":"_queueIndex","type":"uint256"},{"internalType":"uint32","name":"_oldGasLimit","type":"uint32"},{"internalType":"uint32","name":"_newGasLimit","type":"uint32"}],"name":"replayMessageViaChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"}],"name":"sendMessageViaChainId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"sendMessage(address,bytes,uint32)":{"params":{"_gasLimit":"Gas limit for the provided message.","_message":"Message to send to the target.","_target":"Target contract address."}},"sendMessageViaChainId(uint256,address,bytes,uint32)":{"params":{"_chainId":"L2 chain id.","_gasLimit":"Gas limit for the provided message.","_message":"Message to send to the target.","_target":"Target contract address."}}},"title":"ICrossDomainMessenger","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"replayMessageViaChainId(uint256,address,address,bytes,uint256,uint32,uint32)":"91744b9f","sendMessage(address,bytes,uint32)":"3dbb202b","sendMessageViaChainId(uint256,address,bytes,uint32)":"44dd5ed6","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_queueIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_oldGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_newGasLimit\",\"type\":\"uint32\"}],\"name\":\"replayMessageViaChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessageViaChainId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_gasLimit\":\"Gas limit for the provided message.\",\"_message\":\"Message to send to the target.\",\"_target\":\"Target contract address.\"}},\"sendMessageViaChainId(uint256,address,bytes,uint32)\":{\"params\":{\"_chainId\":\"L2 chain id.\",\"_gasLimit\":\"Gas limit for the provided message.\",\"_message\":\"Message to send to the target.\",\"_target\":\"Target contract address.\"}}},\"title\":\"ICrossDomainMessenger\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a cross domain message to the target messenger.\"},\"sendMessageViaChainId(uint256,address,bytes,uint32)\":{\"notice\":\"Sends a cross domain message to the target messenger.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ICrossDomainMessenger.sol\":\"ICrossDomainMessenger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ICrossDomainMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit,\\n        uint256 chainId\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n    \\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _chainId L2 chain id.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n    function replayMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        address _sender,\\n        bytes memory _message,\\n        uint256 _queueIndex,\\n        uint32 _oldGasLimit,\\n        uint32 _newGasLimit\\n    )external;\\n}\",\"keccak256\":\"0xfc7bee4eda45bec59ba5ebf35ab65e4d9dbc0092407a67b33e4e338e6be1336f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"sendMessage(address,bytes,uint32)":{"notice":"Sends a cross domain message to the target messenger."},"sendMessageViaChainId(uint256,address,bytes,uint32)":{"notice":"Sends a cross domain message to the target messenger."}},"version":1}}},"interface/ILockingInfo.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId."}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amoun in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","maxLock()":"6c0b3e46","minLock()":"f037c630","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amoun in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfo.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amoun in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0xe63cc48d66aa1359f5b9048a3f21be6f2926130b0360cc495c23737dd7248f1e\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingPool.sol":{"ILockingPool":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldReward","type":"uint256"}],"name":"RewardUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_n","type":"uint256"}],"name":"SetSignerUpdateThrottle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newMpc","type":"address"}],"name":"UpdateMpc","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_cur","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_prev","type":"uint256"}],"name":"WithrawDelayTimeChange","type":"event"},{"inputs":[],"name":"escrow","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"address","name":"_rewardRecipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockWithRewardRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_lockReward","type":"bool"}],"name":"relock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"seqSigners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"name":"sequencers","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"internalType":"struct ILockingPool.SequencerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"withdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RewardUpdate(uint256,uint256)":{"details":"Emitted when the proxy update threshold in 'updateBlockReward()'.","params":{"newReward":"new block reward","oldReward":"old block reward"}},"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetSignerUpdateThrottle(uint256)":{"details":"Emitted when SignerUpdateThrottle is updated","params":{"_n":"new min value"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}},"UpdateMpc(address)":{"details":"Emitted when mpc address update in 'UpdateMpc'","params":{"_newMpc":"new min lock."}},"WithrawDelayTimeChange(uint256,uint256)":{"details":"Emitted when WITHDRAWAL_DELAY is updated.","params":{"_cur":"current withdraw delay time","_prev":"previours withdraw delay time"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"escrow()":"e2fdcc17","lockFor(address,uint256,bytes)":"af70cba5","lockWithRewardRecipient(address,address,uint256,bytes)":"9ad42030","relock(uint256,uint256,bool)":"015bb180","seqOwners(address)":"169abefc","seqSigners(address)":"beb26755","sequencers(uint256)":"6ba7ccff","unlock(uint256,uint32)":"262c0e66","unlockClaim(uint256,uint32)":"8ddc74de","withdrawRewards(uint256,uint32)":"17396687"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReward\",\"type\":\"uint256\"}],\"name\":\"RewardUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"}],\"name\":\"SetSignerUpdateThrottle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newMpc\",\"type\":\"address\"}],\"name\":\"UpdateMpc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cur\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WithrawDelayTimeChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"escrow\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockWithRewardRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_lockReward\",\"type\":\"bool\"}],\"name\":\"relock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"seqSigners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"name\":\"sequencers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct ILockingPool.SequencerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardUpdate(uint256,uint256)\":{\"details\":\"Emitted when the proxy update threshold in 'updateBlockReward()'.\",\"params\":{\"newReward\":\"new block reward\",\"oldReward\":\"old block reward\"}},\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetSignerUpdateThrottle(uint256)\":{\"details\":\"Emitted when SignerUpdateThrottle is updated\",\"params\":{\"_n\":\"new min value\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}},\"UpdateMpc(address)\":{\"details\":\"Emitted when mpc address update in 'UpdateMpc'\",\"params\":{\"_newMpc\":\"new min lock.\"}},\"WithrawDelayTimeChange(uint256,uint256)\":{\"details\":\"Emitted when WITHDRAWAL_DELAY is updated.\",\"params\":{\"_cur\":\"current withdraw delay time\",\"_prev\":\"previours withdraw delay time\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingPool.sol\":\"ILockingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amoun in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0xe63cc48d66aa1359f5b9048a3f21be6f2926130b0360cc495c23737dd7248f1e\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n}\",\"keccak256\":\"0x43a28aeb18dc696d8c141ca49d1ecb62341b01e9d18471c4df9921cd3f98f227\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ISequencerInfo.sol":{"ISequencerInfo":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"seqOwners(address)":"169abefc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ISequencerInfo.sol\":\"ISequencerInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/IVeMetisMinter.sol":{"IVeMetisMinter":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositToL1Dealer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintFromL1","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"depositToL1Dealer(uint256)":"ce40eb30","mint(address,uint256)":"40c10f19","mintFromL1(uint256)":"eb82afb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToL1Dealer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintFromL1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IVeMetisMinter.sol\":\"IVeMetisMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IVeMetisMinter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IVeMetisMinter {\\n    function mint(address user, uint256 amount) external;\\n\\n    function mintFromL1(uint256 amount) external;\\n\\n    function depositToL1Dealer(uint256 amount) external payable;\\n}\",\"keccak256\":\"0x19711cc1c9f794c07bf02cca34f9895ef30b1372ca32b5c7a9d1d46147ac158c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}