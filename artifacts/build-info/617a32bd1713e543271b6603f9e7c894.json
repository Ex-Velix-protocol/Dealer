{"id":"617a32bd1713e543271b6603f9e7c894","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"./IBeacon.sol\";\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\n *\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n * the beacon to not upgrade the implementation maliciously.\n *\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n * an inconsistent state where the beacon storage slot does not match the beacon address.\n */\ncontract BeaconProxy is Proxy {\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\n    address private immutable _beacon;\n\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\n        _beacon = beacon;\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Returns the beacon.\n     */\n    function _getBeacon() internal view virtual returns (address) {\n        return _beacon;\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/Dealer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../interface/ICrossDomainEnabled.sol\";\nimport \"../interface/ILockingPool.sol\";\nimport \"../interface/IVeMetisMinter.sol\";\nimport \"../interface/ICrossDomainMessenger.sol\";\nimport \"../interface/IL1ERC20Bridge.sol\";\n\n\n/// @title Dealer\n/// @notice The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.\ncontract Dealer is OwnableUpgradeable {\n\n    /// @notice Emits when a new sequencer agent is added\n    /// @param index index of the agent\n    /// @param agent address of the agent\n    event SequencerAgentAdded(uint32 index, address agent);\n\n    /// @notice Emits when additional Metis tokens and rewards are locked for a sequencer.\n    /// @param index The index of the sequencer agent in the sequencer list.\n    /// @param amount The amount of Metis tokens that have been added to the lock.\n    /// @param reward The amount of additional rewards that have been locked.\n    event SequencerRelocked(uint32 index, uint256 amount, uint256 reward);\n\n    /// @notice Emits when Metis tokens are minted on Layer 2.\n    /// @param amount The amount of Metis tokens that have been minted.\n    event L2MetisMinted(uint256 amount);\n\n    /// @notice Emits when the sequencer agent template is set.\n    /// @param oldValue The address of the old sequencer agent template.\n    /// @param newValue The address of the new sequencer agent template.\n    event SequencerAgentTemplateSet(address indexed oldValue, address indexed newValue);\n\n    /// @notice Emits when the L2 gas limit is set.\n    /// @param oldValue The old L2 gas limit.        \n    event L2GasSet(uint32 oldValue, uint32 newValue);\n\n    /// @notice Emits when withdrawRewards is set.\n    /// @param oldValue The old withdrawRewards.\n    /// @param newValue The new withdrawRewards.\n    event WithdrawRewardsSet(bool oldValue, bool newValue);\n\n    /// @notice The template contract for sequencer agents.\n    address public sequencerAgentTemplate;\n\n    /// @notice The Metis token.\n    IERC20 public metis;\n\n    /// @notice The LockingPool contract address.\n    ILockingPool public lockingPool;\n\n    /// @notice The LockingInfo contract address.\n    ILockingInfo public lockingInfo;\n\n    /// @notice The L2 messenger contract.\n    ICrossDomainMessenger public messenger;\n\n    /// @notice The ID of the L2 chain.\n    uint256 public l2ChainId;\n\n    /// @notice The address of the L2 MetisMinter contract.\n    address public l2Minter;\n\n    /// @notice The address of the L2 RewardDispatcher contract.\n    address public l2RewardDispatcher;\n\n    /// @notice The list of sequencer agents.\n    mapping(uint32 => address) public sequencerAgents;\n\n    /// @notice The number of sequencer agents.\n    uint32 public sequencerAgentCount;\n\n    /// @notice The list of active sequencer agent IDs.\n    uint32[] public activeSequencerIds;\n\n    /// @notice The sum of rewards of all sequencers.\n    uint256 public sumRewards;\n\n    /// @notice L2 gas limit.\n    uint32 public l2Gas;\n\n    /// @notice withdraw rewards\n    bool public withdrawRewards;\n\n    uint256 public sequencerId;\n    address public sequencerSigner;\n    bool public active;\n    address public redemptionQueue;\n    /// @notice Withdaws Metis token and deposits Metis tokens into the redemption queue.\n    /// @param recipient The recipient of the  Metis token on  L2 (redemptionQueue).\n    /// @param amount The amount of Metis tokens that have been deposited.\n    event StakingAmountWithdrawn(address indexed recipient, uint256 amount);\n\n    /// @notice Emits when the sequencer initial balance is locked.\n    /// @param sequencerSigner The address of the sequencer signer.\n    /// @param amount The amount of Metis tokens that have been locked.\n    /// @param active The status of the sequencer.\n    event SequencerInitialBalanceLocked(address indexed sequencerSigner, uint256 amount,bool active);\n\n    /// @notice Emits when the sequencer is terminated.\n    /// @param sequencerSigner The address of the sequencer signer.\n    event SequencerTerminated(address indexed sequencerSigner);\n\n    /// @notice Emits when the rewards are withdrawn.\n    /// @param sequencerId The ID of the sequencer.\n    /// @param reward The amount of rewards that have been withdrawn.\n    event RewardsWithdrawn(uint256 indexed sequencerId, uint256 reward);\n\n    /// @notice Emits when the sequencer is relocked.\n    /// @param isRelocked The status of the sequencer.\n    event IsSequencerRelocked(bool isRelocked);\n\n    /// @notice Initializes the contract.\n    function initialize( \n        address _metis, \n        address _lockingPool, \n        address _l1Bridge, \n        uint256 _l2ChainId, \n        uint32 _l2Gas, \n        address _l2Minter, \n        address _l2RewardDispatcher\n        ) public initializer {\n        require( _metis != address(0) && _lockingPool != address(0) && _l1Bridge != address(0) && _l2Minter != address(0) && _l2RewardDispatcher != address(0), \"Dealer: zero address\");\n        __Ownable_init(msg.sender);\n        metis = IERC20(_metis);\n        lockingPool = ILockingPool(_lockingPool);\n        lockingInfo = lockingPool.escrow();\n        messenger = ICrossDomainMessenger(ICrossDomainEnabled(_l1Bridge).messenger());\n        l2ChainId = _l2ChainId;\n        l2Gas = _l2Gas;\n        l2Minter = _l2Minter;\n        l2RewardDispatcher = _l2RewardDispatcher;\n\n    }\n\n    /// @notice Locks Metis tokens for a new sequencer.\n    /// @param _sequencerSigner The address of the sequencer signer.\n    /// @param _amount The amount of Metis tokens to lock.\n    /// @param _signerPubKey The public key of the sequencer signer.\n    function lockFor(\n        address _sequencerSigner,\n        uint256 _amount,\n        bytes memory _signerPubKey\n    ) external onlyOwner {\n        // Check if the Dealer contract has sufficient Metis balance\n        uint256 dealerBalance = metis.balanceOf(address(this));\n        require(dealerBalance >= _amount, \"Dealer: Insufficient Metis balance\");\n\n        sequencerSigner = _sequencerSigner;\n\n        // Approve the LockingInfo contract to spend the specified amount of tokens\n        require(\n            metis.approve(address(lockingInfo), type(uint256).max),\n            \"Dealer: Approval to LockingInfo failed\"\n        );\n\n        // Attempt to lock the tokens by calling LockingPool's lockFor function\n        lockingPool.lockWithRewardRecipient(sequencerSigner,l2Minter, _amount, _signerPubKey);\n\n        // Retrieve and store the sequencer ID for tracking purposes\n        sequencerId = lockingPool.seqSigners(sequencerSigner);\n        active = true;\n        emit SequencerInitialBalanceLocked(sequencerSigner, _amount, active);\n    }\n\n\n    /// @notice Unlock Metis tokens and terminate the sequencer.\n    function unlock() external payable onlyOwner {\n        lockingPool.unlock{value: msg.value}(sequencerId, l2Gas);\n        active = false;\n        emit SequencerTerminated(sequencerSigner);\n    }\n\n    /// @notice The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\n    function unlockClaim() external payable onlyOwner {\n        lockingPool.unlockClaim{value: msg.value}(sequencerId, l2Gas);\n    }\n\n    function sequencerData() public view returns (ILockingPool.SequencerData memory) {\n        return lockingPool.sequencers(sequencerId);\n    }\n\n    /// @notice Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\n    /// @dev The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\n    /// @return totalProcessed The total amount of Metis tokens and rewards that have been relocked.\n    function relock() external payable returns (uint256 totalProcessed) {\n        require(active, \"Dealer: no active sequencer\");\n\n        uint maxLock = ILockingInfo(lockingInfo).maxLock();\n        uint256 undistributedAmount = metis.balanceOf(address(this));\n        uint256 totalRewards = 0;\n        for (uint32 i = 0; i < 1; i++) {\n            ILockingPool.SequencerData memory seq = sequencerData();\n            (uint256 reward, uint256 locked) = (seq.reward, seq.amount);\n            totalRewards += reward;\n\n            // The lock quota means the amount of Metis tokens that can be locked for the sequencer, due to the maximum lock amount.\n            uint256 lockQuota = locked < maxLock ? maxLock - locked : 0;\n\n            // The amount of Metis tokens that can be locked is the minimum of the lock quota and the undistributed amount.\n            uint256 lockAmount = Math.min(lockQuota, undistributedAmount);\n\n            // The undistributed amount should be reduced by the amount of Metis tokens that have been locked.\n            undistributedAmount -= lockAmount;\n            \n             // If there is not any lock amount or reward, the process should be skipped.\n            uint256 toBeProcessed = lockAmount + reward;\n            if (toBeProcessed == 0) {\n                continue;\n            }\n\n            totalProcessed += toBeProcessed;\n\n            // The rewards are withdrawn  if the locked amount plus the amount to be processed exceeds the maximum lock amount.\n            bool _withdrawRewards = locked + toBeProcessed > maxLock;\n            if (_withdrawRewards && reward > 0) {\n                lockingPool.withdrawRewards(sequencerId, l2Gas);\n                emit RewardsWithdrawn(sequencerId, reward);\n            }\n\n            // If the lock amount is not zero, or if we decided to convert the rewards to lock amount, the `relock` function is called.\n            if (!_withdrawRewards || lockAmount > 0) {\n                lockingPool.relock(sequencerId, lockAmount, true);\n                emit SequencerRelocked(0, lockAmount, reward);\n            }\n        }   \n\n        // In the event of any rewards, the MetisMinter contract on Layer 2 is invoked to mint eMetis tokens. These tokens are then distributed as rewards to seMetis holders.\n        if (totalRewards > 0) {\n            _mintL2EMetis(totalRewards);\n            sumRewards += totalRewards;\n        }\n\n        emit IsSequencerRelocked(true);\n    }\n\n    /// @notice Sets the L2 gas limit.\n    /// @param _l2Gas The new L2 gas limit.\n    /// @dev The L2 gas limit is used when minting eMetis tokens on Layer 2.\n    function setL2Gas(uint32 _l2Gas) external onlyOwner {\n        uint32 _old = l2Gas;\n        l2Gas = _l2Gas;\n        emit L2GasSet(_old, _l2Gas);\n    }\n\n    /// @notice Returns the total amount of Metis tokens that have been locked for all sequencers.\n    function totalLocked() external view returns (uint256) {\n        return sequencerData().amount;\n    }\n\n    /// @notice mint veMetis on Layer 2\n    /// @param amount Metis amount\n    function _mintL2EMetis(uint256 amount) internal {\n        bytes memory message = abi.encodeWithSelector(IVeMetisMinter.mintFromL1.selector, amount);\n        messenger.sendMessageViaChainId{value:msg.value}(l2ChainId, l2Minter, message, l2Gas);\n        emit L2MetisMinted(amount);\n    }\n\n    /// @notice withdraw locked Metis tokens and deposits them into the redemptionQueue.\n    /// @param amount The amount of Metis tokens to withdraw.\n    function withdrawStakingAmount(uint256 amount) public payable onlyOwner {\n        lockingPool.withdraw(sequencerId, amount);\n\n        address bridge = ILockingInfo(lockingInfo).bridge();\n        IERC20(ILockingInfo(lockingInfo).l1Token()).approve(bridge, amount);\n        IL1ERC20Bridge(bridge).depositERC20ToByChainId{value: msg.value}(l2ChainId, ILockingInfo(lockingInfo).l1Token(), ILockingInfo(lockingInfo).l2Token(), redemptionQueue, amount, l2Gas, \"\");\n        emit StakingAmountWithdrawn(redemptionQueue,amount);\n    }\n\n    // Setters\n    function setL2Minter(address _l2MinterAddress) public onlyOwner{\n        l2Minter = _l2MinterAddress;\n    }\n\n    function setRedemptionQueue(address _redemptionQueue) public onlyOwner {\n        redemptionQueue = _redemptionQueue;\n    }\n\n    function setL2RewardDispatcher(address _l2RewardDispatcher) public onlyOwner {\n        l2RewardDispatcher = _l2RewardDispatcher;\n    }\n    \n}"},"interface/ICrossDomainEnabled.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface ICrossDomainEnabled {\n    function messenger() external view returns (address);\n}"},"interface/ICrossDomainMessenger.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title ICrossDomainMessenger\n */\ninterface ICrossDomainMessenger {\n    /**********\n     * Events *\n     **********/\n\n    event SentMessage(\n        address indexed target,\n        address sender,\n        bytes message,\n        uint256 messageNonce,\n        uint256 gasLimit,\n        uint256 chainId\n    );\n    event RelayedMessage(bytes32 indexed msgHash);\n    event FailedRelayedMessage(bytes32 indexed msgHash);\n\n    /*************\n     * Variables *\n     *************/\n\n    function xDomainMessageSender() external view returns (address);\n\n    /********************\n     * Public Functions *\n     ********************/\n    \n    /**\n     * Sends a cross domain message to the target messenger.\n     * @param _target Target contract address.\n     * @param _message Message to send to the target.\n     * @param _gasLimit Gas limit for the provided message.\n     */\n    function sendMessage(\n        address _target,\n        bytes calldata _message,\n        uint32 _gasLimit\n    ) external payable;\n\n\n    /**\n     * Sends a cross domain message to the target messenger.\n     * @param _chainId L2 chain id.\n     * @param _target Target contract address.\n     * @param _message Message to send to the target.\n     * @param _gasLimit Gas limit for the provided message.\n     */\n    function sendMessageViaChainId(\n        uint256 _chainId,\n        address _target,\n        bytes calldata _message,\n        uint32 _gasLimit\n    ) external payable;\n\n    function replayMessageViaChainId(\n        uint256 _chainId,\n        address _target,\n        address _sender,\n        bytes memory _message,\n        uint256 _queueIndex,\n        uint32 _oldGasLimit,\n        uint32 _newGasLimit\n    )external;\n}"},"interface/IL1ERC20Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >0.5.0 <0.9.0;\n\n/**\n * @title IL1ERC20Bridge\n */\ninterface IL1ERC20Bridge {\n    /**********\n     * Events *\n     **********/\n\n    event ERC20DepositInitiated(\n        address indexed _l1Token,\n        address indexed _l2Token,\n        address indexed _from,\n        address _to,\n        uint256 _amount,\n        bytes _data\n    );\n\n    event ERC20WithdrawalFinalized(\n        address indexed _l1Token,\n        address indexed _l2Token,\n        address indexed _from,\n        address _to,\n        uint256 _amount,\n        bytes _data\n    );\n\n    event ERC20ChainID(uint256 _chainid);\n    \n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * @dev get the address of the corresponding L2 bridge contract.\n     * @return Address of the corresponding L2 bridge contract.\n     */\n    function l2TokenBridge() external returns (address);\n\n    /**\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _amount Amount of the ERC20 to deposit\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20(\n        address _l1Token,\n        address _l2Token,\n        uint256 _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    ) external;\n\n    /**\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _to L2 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20To(\n        address _l1Token,\n        address _l2Token,\n        address _to,\n        uint256 _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    ) external;\n    \n    /**\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\n     * @param _chainid chainid\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _amount Amount of the ERC20 to deposit\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20ByChainId (\n        uint256 _chainid,\n        address _l1Token,\n        address _l2Token,\n        uint _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    )\n        external payable;\n\n    /**\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\n     * @param _chainid chainid\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _to L2 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20ToByChainId (\n        uint256 _chainid,\n        address _l1Token,\n        address _l2Token,\n        address _to,\n        uint _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    )\n        external payable;\n    /*************************\n     * Cross-chain Functions *\n     *************************/\n\n    /**\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n     * L1 ERC20 token.\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\n     *\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\n     * @param _from L2 address initiating the transfer.\n     * @param _to L1 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _data Data provided by the sender on L2. This data is provided\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\n     *   length, these contracts provide no guarantees about its content.\n     */\n    function finalizeERC20Withdrawal(\n        address _l1Token,\n        address _l2Token,\n        address _from,\n        address _to,\n        uint256 _amount,\n        bytes calldata _data\n    ) external;\n    \n    /**\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n     * L1 ERC20 token.\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\n     *\n     * @param _chainid chainid\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\n     * @param _from L2 address initiating the transfer.\n     * @param _to L1 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _data Data provided by the sender on L2. This data is provided\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\n     *   length, these contracts provide no guarantees about its content.\n     */    \n     function finalizeERC20WithdrawalByChainId (\n        uint256 _chainid,\n        address _l1Token,\n        address _l2Token,\n        address _from,\n        address _to,\n        uint _amount,\n        bytes calldata _data\n    )\n        external;\n    /**\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n     * L1 ERC20 token.\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\n     *\n     * @param _chainid chainid\n     * @param _from L2 address initiating the transfer.\n     * @param _to L1 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _data Data provided by the sender on L2. This data is provided\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\n     *   length, these contracts provide no guarantees about its content.\n     */    \n    function finalizeMetisWithdrawalByChainId (\n        uint256 _chainid,\n        address _from,\n        address _to,\n        uint _amount,\n        bytes calldata _data\n    )\n        external;\n}"},"interface/ILockingInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\nimport {ILockingInfo as ILockingInfoRaw} from \"./ILockingInfoRaw.sol\";\n\ninterface ILockingInfo is ILockingInfoRaw {\n    function bridge() external view returns(address);\n    function l1Token() external view returns(address);\n    function l2Token() external view returns(address);\n    function minLock() external view returns(uint256);\n    function maxLock() external view returns(uint256);\n}"},"interface/ILockingInfoRaw.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\n\ninterface ILockingInfo {\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n     * @param _newMinLock new min lock.\n     */\n    event SetMinLock(uint256 _newMinLock);\n\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n     * @param _newMaxLock new max lock.\n     */\n    event SetMaxLock(uint256 _newMaxLock);\n\n    /**\n     * @dev Emitted when the reward payer is changed\n     * @param _payer new reward payer\n     */\n    event SetRewardPayer(address _payer);\n\n    /**\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n     * @param signer sequencer address.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param activationBatch sequencer's first epoch as proposer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     * @param signerPubkey public key of the sequencer\n     */\n    event Locked(\n        address indexed signer,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 indexed activationBatch,\n        uint256 amount,\n        uint256 total,\n        bytes signerPubkey\n    );\n\n    /**\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking new amount\n     * @param total the total locking amount\n     */\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\n\n    /**\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount withdraw new amount\n     */\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\n\n    /**\n     * @dev Emitted when sequencer relocking in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param newAmount the updated lock amount.\n     */\n    event LockUpdate(\n        uint256 indexed sequencerId,\n        uint256 indexed nonce,\n        uint256 indexed newAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param recipient the address receive reward tokens\n     * @param amount the reward amount.\n     * @param totalAmount total rewards has liquidated\n     */\n    event ClaimRewards(\n        uint256 indexed sequencerId,\n        address recipient,\n        uint256 indexed amount,\n        uint256 indexed totalAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param deactivationBatch  last batch for sequencer.\n     * @param deactivationTime unlock block timestamp.\n     * @param unlockClaimTime when user can claim locked token.\n     * @param amount locking amount\n     */\n    event UnlockInit(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 deactivationBatch,\n        uint256 deactivationTime,\n        uint256 unlockClaimTime,\n        uint256 indexed amount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     */\n    event Unlocked(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 amount,\n        uint256 total\n    );\n\n    /**\n     * @dev Emitted when batch update in  'batchSubmitRewards'\n     * @param _newBatchId new batchId.\n     *\n     *      Note from maintainer:\n     *      for compatibility, the event is retained\n     */\n    event BatchSubmitReward(uint256 _newBatchId);\n\n    /**\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param oldSigner oldSigner old address of the sequencer.\n     * @param newSigner newSigner new address of the sequencer.\n     * @param signerPubkey signerPubkey public key of the sequencer.\n     */\n    event SignerChange(\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        address indexed oldSigner,\n        address indexed newSigner,\n        bytes signerPubkey\n    );\n\n    function newSequencer(\n        uint256 _id,\n        address _owner,\n        address _signer,\n        uint256 _amount,\n        uint256 _batchId,\n        bytes calldata _signerPubkey\n    ) external;\n\n    function increaseLocked(\n        uint256 _seqId,\n        uint256 _nonce,\n        address _owner,\n        uint256 _locked,\n        uint256 _incoming,\n        uint256 _fromReward\n    ) external;\n\n    function withdrawLocking(\n        uint256 _seqId,\n        address _owner,\n        uint256 _nonce,\n        uint256 _amount,\n        uint256 _locked\n    ) external;\n\n    function initializeUnlock(\n        uint256 _seqId,\n        uint256 _reward,\n        uint32 _l2gas,\n        ISequencerInfo.Sequencer calldata _seq\n    ) external payable;\n\n    function finalizeUnlock(\n        address _owner,\n        uint256 _seqId,\n        uint256 _amount,\n        uint256 _reward,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function liquidateReward(\n        uint256 _seqId,\n        uint256 _amount,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\n\n    function logSignerChange(\n        uint256 sequencerId,\n        address oldSigner,\n        address newSigner,\n        uint256 nonce,\n        bytes calldata signerPubkey\n    ) external;\n}"},"interface/ILockingPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.9;\n\nimport \"./ILockingInfo.sol\";\nimport \"./ISequencerInfo.sol\";\n\ninterface ILockingPool is ISequencerInfo {\n    struct SequencerData {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n    }\n\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\n    function escrow() external view returns (ILockingInfo);\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\n    function seqSigners(address signer) external view returns (uint256 seqId);\n\n    /**\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\n     * @param _cur current withdraw delay time\n     * @param _prev previours withdraw delay time\n     */\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\n\n    /**\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n     * @param newReward new block reward\n     * @param oldReward  old block reward\n     */\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\n\n    /**\n     * @dev Emitted when mpc address update in 'UpdateMpc'\n     * @param _newMpc new min lock.\n     */\n    event UpdateMpc(address _newMpc);\n\n    /**\n     * @dev Emitted when SignerUpdateThrottle is updated\n     * @param _n new min value\n     */\n    event SetSignerUpdateThrottle(uint256 _n);\n    function withdraw(uint256 _seqId, uint256 _amount) external;\n}"},"interface/ISequencerInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface ISequencerInfo {\n    error OwnedSequencer();\n    error SignerExisted();\n    error NoSuchSeq();\n    error NullAddress();\n    error SeqNotActive();\n    error NotSeqOwner();\n    error NotSeqSigner();\n    error NoRewardRecipient();\n    error NotWhitelisted();\n\n    // the sequencer status\n    enum Status {\n        Unavailabe, // placeholder for default value\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\n        Active, // the sequencer is active when it locks tokens on the contract\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\n    }\n\n    struct Sequencer {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n        bytes pubkey; // sequencer signer pubkey\n        address rewardRecipient; // sequencer rewarder recipient address\n        Status status; // sequencer status\n    }\n\n    /**\n     * @dev Emitted if owner call 'setWhitelist'\n     * @param _user the address who can lock token\n     * @param _yes white address state\n     */\n    event SetWhitelist(address _user, bool _yes);\n\n    /**\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n     * @param _seqId the sequencerId\n     * @param _recipient the address receive reward token\n     */\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\n\n    /**\n     * @dev Emitted when sequencer owner is changed\n     * @param _seqId the sequencerId\n     * @param _owner the sequencer owner\n     */\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\n\n    function seqOwners(address owner) external returns (uint256 seqId);\n}"},"interface/IVeMetisMinter.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\ninterface IVeMetisMinter {\n    function mint(address user, uint256 amount) external;\n\n    function mintFromL1(uint256 amount) external;\n\n    function depositToL1Dealer(uint256 amount) external payable;\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[494],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":495,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,494,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1289:56:0","statements":[{"nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8846:55:1","statements":[{"nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[494],"Initializable":[448]},"id":495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":495,"sourceUnit":449,"src":"126:63:2","symbolAliases":[{"foreign":{"id":451,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":454,"name":"Initializable","nameLocations":["728:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:2"},"id":455,"nodeType":"InheritanceSpecifier","src":"728:13:2"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"191:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":494,"linearizedBaseContracts":[494,448],"name":"ContextUpgradeable","nameLocation":"706:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":460,"nodeType":"Block","src":"800:7:2","statements":[]},"id":461,"implemented":true,"kind":"function","modifiers":[{"id":458,"kind":"modifierInvocation","modifierName":{"id":457,"name":"onlyInitializing","nameLocations":["783:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:2"},"nodeType":"ModifierInvocation","src":"783:16:2"}],"name":"__Context_init","nameLocation":"757:14:2","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"771:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":494,"src":"748:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":466,"nodeType":"Block","src":"875:7:2","statements":[]},"id":467,"implemented":true,"kind":"function","modifiers":[{"id":464,"kind":"modifierInvocation","modifierName":{"id":463,"name":"onlyInitializing","nameLocations":["858:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:2"},"nodeType":"ModifierInvocation","src":"858:16:2"}],"name":"__Context_init_unchained","nameLocation":"822:24:2","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"846:2:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"875:0:2"},"scope":494,"src":"813:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":475,"nodeType":"Block","src":"949:34:2","statements":[{"expression":{"expression":{"id":472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:2","memberName":"sender","nodeType":"MemberAccess","src":"966:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":471,"id":474,"nodeType":"Return","src":"959:17:2"}]},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:2","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"906:2:2"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:2"},"scope":494,"src":"887:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"1056:32:2","statements":[{"expression":{"expression":{"id":481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:2","memberName":"data","nodeType":"MemberAccess","src":"1073:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":480,"id":483,"nodeType":"Return","src":"1066:15:2"}]},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:2","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":485,"src":"1040:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:2"},"scope":494,"src":"989:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":492,"nodeType":"Block","src":"1166:25:2","statements":[{"expression":{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":489,"id":491,"nodeType":"Return","src":"1176:8:2"}]},"id":493,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:2","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"1123:2:2"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":493,"src":"1157:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:2"},"scope":494,"src":"1094:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":495,"src":"688:505:2","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1232],"ERC1967Utils":[797],"IBeacon":[901],"StorageSlot":[1342]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":496,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:3"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":798,"sourceUnit":902,"src":"140:46:3","symbolAliases":[{"foreign":{"id":497,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"148:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":798,"sourceUnit":1233,"src":"187:48:3","symbolAliases":[{"foreign":{"id":499,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"195:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":798,"sourceUnit":1343,"src":"236:56:3","symbolAliases":[{"foreign":{"id":501,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"244:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"294:154:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":797,"linearizedBaseContracts":[797],"name":"ERC1967Utils","nameLocation":"457:12:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"660:68:3","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":508,"name":"Upgraded","nameLocation":"739:8:3","nodeType":"EventDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:3","nodeType":"VariableDeclaration","scope":508,"src":"748:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:3"},"src":"733:47:3"},{"anonymous":false,"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"786:67:3","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":515,"name":"AdminChanged","nameLocation":"864:12:3","nodeType":"EventDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:3","nodeType":"VariableDeclaration","scope":515,"src":"877:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:3","nodeType":"VariableDeclaration","scope":515,"src":"900:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:3"},"src":"858:60:3"},{"anonymous":false,"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"924:59:3","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":520,"name":"BeaconUpgraded","nameLocation":"994:14:3","nodeType":"EventDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:3","nodeType":"VariableDeclaration","scope":520,"src":"1009:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:3"},"src":"988:45:3"},{"constant":true,"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"1039:170:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":524,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:3","nodeType":"VariableDeclaration","scope":797,"src":"1279:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"1400:69:3","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":529,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:3","nodeType":"ErrorDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:3","nodeType":"VariableDeclaration","scope":529,"src":"1509:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:3"},"src":"1474:59:3"},{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"1539:60:3","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":534,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:3","nodeType":"ErrorDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"admin","nameLocation":"1638:5:3","nodeType":"VariableDeclaration","scope":534,"src":"1630:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:3"},"src":"1604:41:3"},{"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"1651:61:3","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":539,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:3","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:3","nodeType":"VariableDeclaration","scope":539,"src":"1744:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:3"},"src":"1717:43:3"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"1766:82:3","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":542,"name":"ERC1967NonPayable","nameLocation":"1859:17:3","nodeType":"ErrorDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"1876:2:3"},"src":"1853:26:3"},{"body":{"id":554,"nodeType":"Block","src":"2018:77:3","statements":[{"expression":{"expression":{"arguments":[{"id":550,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2062:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":548,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2035:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"2035:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"2035:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"2028:60:3"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"1885:67:3","text":" @dev Returns the current implementation address."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:3","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"1983:2:3"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"2009:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:3"},"scope":797,"src":"1957:138:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"2249:218:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":561,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2263:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:3","memberName":"code","nodeType":"MemberAccess","src":"2263:22:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:3","memberName":"length","nodeType":"MemberAccess","src":"2263:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":571,"nodeType":"IfStatement","src":"2259:119:3","trueBody":{"id":570,"nodeType":"Block","src":"2299:79:3","statements":[{"errorCall":{"arguments":[{"id":567,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2349:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":566,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2320:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"RevertStatement","src":"2313:54:3"}]}},{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":575,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"2414:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":572,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2387:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"2387:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"2387:53:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":578,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2443:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":580,"nodeType":"ExpressionStatement","src":"2387:73:3"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"2101:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:3","nodeType":"VariableDeclaration","scope":582,"src":"2214:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2249:0:3"},"scope":797,"src":"2186:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":615,"nodeType":"Block","src":"2860:254:3","statements":[{"expression":{"arguments":[{"id":591,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2889:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":590,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"2870:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"2870:37:3"},{"eventCall":{"arguments":[{"id":595,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2931:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":594,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"2922:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"EmitStatement","src":"2917:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":598,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2964:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:3","memberName":"length","nodeType":"MemberAccess","src":"2964:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":613,"nodeType":"Block","src":"3065:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":610,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"3079:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"3079:18:3"}]},"id":614,"nodeType":"IfStatement","src":"2960:148:3","trueBody":{"id":609,"nodeType":"Block","src":"2981:78:3","statements":[{"expression":{"arguments":[{"id":605,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3024:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3043:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":602,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2995:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1232_$","typeString":"type(library Address)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"2995:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":608,"nodeType":"ExpressionStatement","src":"2995:53:3"}]}}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"2473:301:3","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:3","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:3","nodeType":"VariableDeclaration","scope":616,"src":"2805:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"data","nameLocation":"2845:4:3","nodeType":"VariableDeclaration","scope":616,"src":"2832:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:3"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"2860:0:3"},"scope":797,"src":"2779:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3120:145:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":620,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:3","nodeType":"VariableDeclaration","scope":797,"src":"3335:105:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"3844:68:3","statements":[{"expression":{"expression":{"arguments":[{"id":628,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3888:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":626,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3861:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"3861:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"3861:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":625,"id":631,"nodeType":"Return","src":"3854:51:3"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"3447:340:3","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:3","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"3809:2:3"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"3835:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:3"},"scope":797,"src":"3792:120:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"4039:172:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4053:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"4049:91:3","trueBody":{"id":652,"nodeType":"Block","src":"4077:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4098:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"4091:38:3"}]}},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":657,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4176:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":654,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4149:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"4149:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"4149:44:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":660,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4196:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":662,"nodeType":"ExpressionStatement","src":"4149:55:3"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"3918:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:3","nodeType":"VariableDeclaration","scope":664,"src":"4013:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"4039:0:3"},"scope":797,"src":"3994:217:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":680,"nodeType":"Block","src":"4379:85:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":671,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4419:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"4394:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"EmitStatement","src":"4389:39:3"},{"expression":{"arguments":[{"id":677,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"4448:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":676,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"4438:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"4438:19:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"4217:109:3","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:3","nodeType":"VariableDeclaration","scope":681,"src":"4352:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:3"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"4379:0:3"},"scope":797,"src":"4331:133:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"4470:201:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":685,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:3","nodeType":"VariableDeclaration","scope":797,"src":"4741:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"4963:69:3","statements":[{"expression":{"expression":{"arguments":[{"id":693,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5007:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":691,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4980:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"4980:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"4980:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":690,"id":696,"nodeType":"Return","src":"4973:52:3"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"4854:51:3","text":" @dev Returns the current beacon."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"4928:2:3"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"4954:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:3"},"scope":797,"src":"4910:122:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":743,"nodeType":"Block","src":"5161:390:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":704,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5175:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:3","memberName":"code","nodeType":"MemberAccess","src":"5175:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:3","memberName":"length","nodeType":"MemberAccess","src":"5175:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"5171:95:3","trueBody":{"id":713,"nodeType":"Block","src":"5203:63:3","statements":[{"errorCall":{"arguments":[{"id":710,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5245:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":709,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5224:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"RevertStatement","src":"5217:38:3"}]}},{"expression":{"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":718,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5303:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":715,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5276:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1342_$","typeString":"type(library StorageSlot)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"5276:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1238_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1237,"src":"5276:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":721,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5324:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"nodeType":"ExpressionStatement","src":"5276:57:3"},{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:3","nodeType":"VariableDeclaration","scope":743,"src":"5344:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":731,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":727,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5383:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":726,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$901_$","typeString":"type(contract IBeacon)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$901","typeString":"contract IBeacon"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":900,"src":"5375:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":732,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"5424:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:3","memberName":"code","nodeType":"MemberAccess","src":"5424:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:3","memberName":"length","nodeType":"MemberAccess","src":"5424:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"5420:125:3","trueBody":{"id":741,"nodeType":"Block","src":"5463:82:3","statements":[{"errorCall":{"arguments":[{"id":738,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"5513:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":737,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5484:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"RevertStatement","src":"5477:57:3"}]}}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"5038:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":744,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:3","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:3","nodeType":"VariableDeclaration","scope":744,"src":"5134:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:3"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"5161:0:3"},"scope":797,"src":"5114:437:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":781,"nodeType":"Block","src":"6155:254:3","statements":[{"expression":{"arguments":[{"id":753,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6176:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6165:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"6165:21:3"},{"eventCall":{"arguments":[{"id":757,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6216:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":756,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6201:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"EmitStatement","src":"6196:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":760,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6241:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:3","memberName":"length","nodeType":"MemberAccess","src":"6241:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":779,"nodeType":"Block","src":"6360:43:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"6374:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"6374:18:3"}]},"id":780,"nodeType":"IfStatement","src":"6237:166:3","trueBody":{"id":775,"nodeType":"Block","src":"6258:96:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":768,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6309:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":767,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"6301:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$901_$","typeString":"type(contract IBeacon)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$901","typeString":"contract IBeacon"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":900,"src":"6301:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":764,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"6272:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1232_$","typeString":"type(library Address)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"6272:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":774,"nodeType":"ExpressionStatement","src":"6272:71:3"}]}}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"5557:514:3","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:3","nodeType":"VariableDeclaration","scope":782,"src":"6108:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"data","nameLocation":"6140:4:3","nodeType":"VariableDeclaration","scope":782,"src":"6127:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:3"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"6155:0:3"},"scope":797,"src":"6076:333:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"6634:86:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6648:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:3","memberName":"value","nodeType":"MemberAccess","src":"6648:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":794,"nodeType":"IfStatement","src":"6644:70:3","trueBody":{"id":793,"nodeType":"Block","src":"6663:51:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":790,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"6684:17:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"RevertStatement","src":"6677:26:3"}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"6415:178:3","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:3","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"6623:2:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"6634:0:3"},"scope":797,"src":"6598:122:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":798,"src":"449:6273:3","usedErrors":[529,534,539,542],"usedEvents":[508,515,520]}],"src":"114:6609:3"},"id":3},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[833]},"id":834,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"125:598:4","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":833,"linearizedBaseContracts":[833],"name":"Proxy","nameLocation":"742:5:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":807,"nodeType":"Block","src":"1009:835:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1028:810:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1281:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1284:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1287:12:4"},"nodeType":"YulFunctionCall","src":"1287:14:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1268:12:4"},"nodeType":"YulFunctionCall","src":"1268:34:4"},"nodeType":"YulExpressionStatement","src":"1268:34:4"},{"nodeType":"YulVariableDeclaration","src":"1429:74:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1456:3:4"},"nodeType":"YulFunctionCall","src":"1456:5:4"},{"name":"implementation","nodeType":"YulIdentifier","src":"1463:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1479:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1482:12:4"},"nodeType":"YulFunctionCall","src":"1482:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1501:1:4","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1443:12:4"},"nodeType":"YulFunctionCall","src":"1443:60:4"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1433:6:4","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1571:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1574:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1577:14:4"},"nodeType":"YulFunctionCall","src":"1577:16:4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1556:14:4"},"nodeType":"YulFunctionCall","src":"1556:38:4"},"nodeType":"YulExpressionStatement","src":"1556:38:4"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1689:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1714:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1717:14:4"},"nodeType":"YulFunctionCall","src":"1717:16:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:4"},"nodeType":"YulFunctionCall","src":"1707:27:4"},"nodeType":"YulExpressionStatement","src":"1707:27:4"}]},"nodeType":"YulCase","src":"1682:66:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1687:1:4","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1769:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1797:14:4"},"nodeType":"YulFunctionCall","src":"1797:16:4"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1787:6:4"},"nodeType":"YulFunctionCall","src":"1787:27:4"},"nodeType":"YulExpressionStatement","src":"1787:27:4"}]},"nodeType":"YulCase","src":"1761:67:4","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1615:6:4"},"nodeType":"YulSwitch","src":"1608:220:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":803,"isOffset":false,"isSlot":false,"src":"1463:14:4","valueSize":1}],"id":806,"nodeType":"InlineAssembly","src":"1019:819:4"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"754:190:4","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:4","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"implementation","nameLocation":"976:14:4","nodeType":"VariableDeclaration","scope":808,"src":"968:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:4"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"1009:0:4"},"scope":833,"src":"949:895:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1850:173:4","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":814,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"2052:2:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"2086:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:4"},"scope":833,"src":"2028:67:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"2361:45:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":819,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2381:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":818,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2371:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"ExpressionStatement","src":"2371:28:4"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"2101:217:4","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:4","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"2341:2:4"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"2361:0:4"},"scope":833,"src":"2323:83:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":831,"nodeType":"Block","src":"2639:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":828,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2649:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"2649:11:4"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"2412:186:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":832,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"2611:2:4"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"2639:0:4"},"scope":833,"src":"2603:64:4","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":834,"src":"724:1945:4","usedErrors":[],"usedEvents":[]}],"src":"99:2571:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","exportedSymbols":{"BeaconProxy":[891],"ERC1967Utils":[797],"IBeacon":[901],"Proxy":[833]},"id":892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":835,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"./IBeacon.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":902,"src":"138:38:5","symbolAliases":[{"foreign":{"id":836,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"146:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":834,"src":"177:35:5","symbolAliases":[{"foreign":{"id":838,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"185:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"../ERC1967/ERC1967Utils.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":892,"sourceUnit":798,"src":"213:57:5","symbolAliases":[{"foreign":{"id":840,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"221:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":843,"name":"Proxy","nameLocations":["1139:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":833,"src":"1139:5:5"},"id":844,"nodeType":"InheritanceSpecifier","src":"1139:5:5"}],"canonicalName":"BeaconProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"272:842:5","text":" @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\n CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n the beacon to not upgrade the implementation maliciously.\n IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n an inconsistent state where the beacon storage slot does not match the beacon address."},"fullyImplemented":true,"id":891,"linearizedBaseContracts":[891,833],"name":"BeaconProxy","nameLocation":"1124:11:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":846,"mutability":"immutable","name":"_beacon","nameLocation":"1275:7:5","nodeType":"VariableDeclaration","scope":891,"src":"1249:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"1249:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":865,"nodeType":"Block","src":"1827:92:5","statements":[{"expression":{"arguments":[{"id":857,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1873:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1881:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":854,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1837:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$797_$","typeString":"type(library ERC1967Utils)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:22:5","memberName":"upgradeBeaconToAndCall","nodeType":"MemberAccess","referencedDeclaration":782,"src":"1837:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"1837:49:5"},{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"_beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"1896:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":862,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1906:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1896:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":864,"nodeType":"ExpressionStatement","src":"1896:16:5"}]},"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"1289:478:5","text":" @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}.\n - If `data` is empty, `msg.value` must be zero."},"id":866,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"beacon","nameLocation":"1792:6:5","nodeType":"VariableDeclaration","scope":866,"src":"1784:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"data","nameLocation":"1813:4:5","nodeType":"VariableDeclaration","scope":866,"src":"1800:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"1800:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1783:35:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[],"src":"1827:0:5"},"scope":891,"src":"1772:147:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[814],"body":{"id":880,"nodeType":"Block","src":"2098:62:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":874,"name":"_getBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2123:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2123:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"2115:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$901_$","typeString":"type(contract IBeacon)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$901","typeString":"contract IBeacon"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2137:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":900,"src":"2115:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":872,"id":879,"nodeType":"Return","src":"2108:45:5"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"1925:92:5","text":" @dev Returns the current implementation address of the associated beacon."},"id":881,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2031:15:5","nodeType":"FunctionDefinition","overrides":{"id":869,"nodeType":"OverrideSpecifier","overrides":[],"src":"2071:8:5"},"parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"2046:2:5"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"2089:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:9:5"},"scope":891,"src":"2022:138:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":889,"nodeType":"Block","src":"2276:31:5","statements":[{"expression":{"id":887,"name":"_beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2293:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":886,"id":888,"nodeType":"Return","src":"2286:14:5"}]},"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"2166:43:5","text":" @dev Returns the beacon."},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"2223:10:5","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[],"src":"2233:2:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"2267:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2266:9:5"},"scope":891,"src":"2214:93:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":892,"src":"1115:1194:5","usedErrors":[529,539,542,992,995],"usedEvents":[520]}],"src":"112:2198:5"},"id":5},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[901]},"id":902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":893,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"134:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":901,"linearizedBaseContracts":[901],"name":"IBeacon","nameLocation":"224:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"238:168:6","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":900,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:6","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"434:2:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":900,"src":"460:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:6"},"scope":901,"src":"411:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":902,"src":"214:257:6","usedErrors":[],"usedEvents":[]}],"src":"108:364:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[979]},"id":980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":903,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"132:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":979,"linearizedBaseContracts":[979],"name":"IERC20","nameLocation":"213:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"226:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":913,"name":"Transfer","nameLocation":"395:8:7","nodeType":"EventDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:7","nodeType":"VariableDeclaration","scope":913,"src":"404:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:7","nodeType":"VariableDeclaration","scope":913,"src":"426:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:7","nodeType":"VariableDeclaration","scope":913,"src":"446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:7"},"src":"389:72:7"},{"anonymous":false,"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"467:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":922,"name":"Approval","nameLocation":"626:8:7","nodeType":"EventDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":922,"src":"635:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:7","nodeType":"VariableDeclaration","scope":922,"src":"658:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:7","nodeType":"VariableDeclaration","scope":922,"src":"683:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:7"},"src":"620:78:7"},{"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"704:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":928,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":979,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"835:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":936,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:7","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"account","nameLocation":"938:7:7","nodeType":"VariableDeclaration","scope":936,"src":"930:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:7"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:7"},"scope":979,"src":"911:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"985:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":946,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:7","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"to","nameLocation":"1229:2:7","nodeType":"VariableDeclaration","scope":946,"src":"1221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"value","nameLocation":"1241:5:7","nodeType":"VariableDeclaration","scope":946,"src":"1233:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:7"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"1266:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":943,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:7"},"scope":979,"src":"1203:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"1278:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":956,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:7","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"owner","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":956,"src":"1566:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"spender","nameLocation":"1589:7:7","nodeType":"VariableDeclaration","scope":956,"src":"1581:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:7"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"1621:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:7"},"scope":979,"src":"1547:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1636:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:7","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"spender","nameLocation":"2333:7:7","nodeType":"VariableDeclaration","scope":966,"src":"2325:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2350:5:7","nodeType":"VariableDeclaration","scope":966,"src":"2342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:7"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2375:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:7"},"scope":979,"src":"2308:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"2387:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":978,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:7","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"from","nameLocation":"2719:4:7","nodeType":"VariableDeclaration","scope":978,"src":"2711:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"to","nameLocation":"2733:2:7","nodeType":"VariableDeclaration","scope":978,"src":"2725:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"value","nameLocation":"2745:5:7","nodeType":"VariableDeclaration","scope":978,"src":"2737:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:7"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"2770:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":975,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:7"},"scope":979,"src":"2689:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":980,"src":"203:2575:7","usedErrors":[],"usedEvents":[913,922]}],"src":"106:2673:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1232]},"id":1233,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":981,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"127:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1232,"linearizedBaseContracts":[1232],"name":"Address","nameLocation":"203:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"217:94:8","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":987,"name":"AddressInsufficientBalance","nameLocation":"322:26:8","nodeType":"ErrorDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"account","nameLocation":"357:7:8","nodeType":"VariableDeclaration","scope":987,"src":"349:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:8"},"src":"316:50:8"},{"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"372:75:8","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":992,"name":"AddressEmptyCode","nameLocation":"458:16:8","nodeType":"ErrorDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"target","nameLocation":"483:6:8","nodeType":"VariableDeclaration","scope":992,"src":"475:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:8"},"src":"452:39:8"},{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"497:89:8","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":995,"name":"FailedInnerCall","nameLocation":"597:15:8","nodeType":"ErrorDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"612:2:8"},"src":"591:24:8"},{"body":{"id":1035,"nodeType":"Block","src":"1602:260:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1005,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1624:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:8","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1008,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1640:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1018,"nodeType":"IfStatement","src":"1612:109:8","trueBody":{"id":1017,"nodeType":"Block","src":"1648:73:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1013,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1704:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:8","typeDescriptions":{}}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1010,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1669:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"RevertStatement","src":"1662:48:8"}]}},{"assignments":[1020,null],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"success","nameLocation":"1737:7:8","nodeType":"VariableDeclaration","scope":1035,"src":"1732:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1019,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1027,"initialValue":{"arguments":[{"hexValue":"","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1021,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"1750:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:8","memberName":"call","nodeType":"MemberAccess","src":"1750:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1023,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1772:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:8"},{"condition":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:8","subExpression":{"id":1028,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1798:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1034,"nodeType":"IfStatement","src":"1793:63:8","trueBody":{"id":1033,"nodeType":"Block","src":"1807:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1030,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1828:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"RevertStatement","src":"1821:24:8"}]}}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"621:905:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:8","nodeType":"VariableDeclaration","scope":1036,"src":"1550:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"amount","nameLocation":"1585:6:8","nodeType":"VariableDeclaration","scope":1036,"src":"1577:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:8"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"1602:0:8"},"scope":1232,"src":"1531:331:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1052,"nodeType":"Block","src":"2794:62:8","statements":[{"expression":{"arguments":[{"id":1047,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2833:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2841:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2811:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1045,"id":1051,"nodeType":"Return","src":"2804:45:8"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1868:832:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:8","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"target","nameLocation":"2735:6:8","nodeType":"VariableDeclaration","scope":1053,"src":"2727:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"data","nameLocation":"2756:4:8","nodeType":"VariableDeclaration","scope":1053,"src":"2743:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1040,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:8"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"2780:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:8"},"scope":1232,"src":"2705:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"3293:279:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3315:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:8","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3331:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1080,"nodeType":"IfStatement","src":"3303:108:8","trueBody":{"id":1079,"nodeType":"Block","src":"3338:73:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1075,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3394:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1232","typeString":"library Address"}],"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:8","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1072,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"3359:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"RevertStatement","src":"3352:48:8"}]}},{"assignments":[1082,1084],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"success","nameLocation":"3426:7:8","nodeType":"VariableDeclaration","scope":1098,"src":"3421:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:8","nodeType":"VariableDeclaration","scope":1098,"src":"3435:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3488:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1085,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3462:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:8","memberName":"call","nodeType":"MemberAccess","src":"3462:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3481:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:8"},{"expression":{"arguments":[{"id":1093,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3537:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3545:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1095,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3554:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1092,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3510:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1064,"id":1097,"nodeType":"Return","src":"3503:62:8"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"2862:313:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:8","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"target","nameLocation":"3219:6:8","nodeType":"VariableDeclaration","scope":1099,"src":"3211:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"data","nameLocation":"3240:4:8","nodeType":"VariableDeclaration","scope":1099,"src":"3227:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"value","nameLocation":"3254:5:8","nodeType":"VariableDeclaration","scope":1099,"src":"3246:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:8"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"3279:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:8"},"scope":1232,"src":"3180:392:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"3811:154:8","statements":[{"assignments":[1110,1112],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"success","nameLocation":"3827:7:8","nodeType":"VariableDeclaration","scope":1124,"src":"3822:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:8","nodeType":"VariableDeclaration","scope":1124,"src":"3836:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1111,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[{"id":1115,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3881:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1113,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3863:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:8"},{"expression":{"arguments":[{"id":1119,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3930:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"3938:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1121,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"3947:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1118,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3903:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1108,"id":1123,"nodeType":"Return","src":"3896:62:8"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"3578:128:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:8","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"target","nameLocation":"3747:6:8","nodeType":"VariableDeclaration","scope":1125,"src":"3739:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"data","nameLocation":"3768:4:8","nodeType":"VariableDeclaration","scope":1125,"src":"3755:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:8"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"3797:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:8"},"scope":1232,"src":"3711:254:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"4203:156:8","statements":[{"assignments":[1136,1138],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"success","nameLocation":"4219:7:8","nodeType":"VariableDeclaration","scope":1150,"src":"4214:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1135,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:8","nodeType":"VariableDeclaration","scope":1150,"src":"4228:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1143,"initialValue":{"arguments":[{"id":1141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4275:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1139,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4255:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:8"},{"expression":{"arguments":[{"id":1145,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4324:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"4332:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4341:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1144,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4297:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1134,"id":1149,"nodeType":"Return","src":"4290:62:8"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"3971:130:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"target","nameLocation":"4144:6:8","nodeType":"VariableDeclaration","scope":1151,"src":"4136:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"data","nameLocation":"4165:4:8","nodeType":"VariableDeclaration","scope":1151,"src":"4152:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"4189:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:8"},"scope":1232,"src":"4106:253:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1190,"nodeType":"Block","src":"4783:424:8","statements":[{"condition":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:8","subExpression":{"id":1163,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"4798:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1188,"nodeType":"Block","src":"4857:344:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1170,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"5045:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:8","memberName":"length","nodeType":"MemberAccess","src":"5045:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1174,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"5071:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:8","memberName":"code","nodeType":"MemberAccess","src":"5071:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:8","memberName":"length","nodeType":"MemberAccess","src":"5071:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"nodeType":"IfStatement","src":"5041:119:8","trueBody":{"id":1184,"nodeType":"Block","src":"5096:64:8","statements":[{"errorCall":{"arguments":[{"id":1181,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"5138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1180,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"5121:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"RevertStatement","src":"5114:31:8"}]}},{"expression":{"id":1186,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"5180:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1162,"id":1187,"nodeType":"Return","src":"5173:17:8"}]},"id":1189,"nodeType":"IfStatement","src":"4793:408:8","trueBody":{"id":1169,"nodeType":"Block","src":"4807:44:8","statements":[{"expression":{"arguments":[{"id":1166,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"4829:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1165,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4821:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"4821:19:8"}]}}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"4365:255:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"target","nameLocation":"4678:6:8","nodeType":"VariableDeclaration","scope":1191,"src":"4670:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"success","nameLocation":"4699:7:8","nodeType":"VariableDeclaration","scope":1191,"src":"4694:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1155,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:8","nodeType":"VariableDeclaration","scope":1191,"src":"4716:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1157,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"4769:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1160,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:8"},"scope":1232,"src":"4625:582:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"5509:122:8","statements":[{"condition":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:8","subExpression":{"id":1201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5524:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1210,"nodeType":"Block","src":"5583:42:8","statements":[{"expression":{"id":1208,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5604:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1200,"id":1209,"nodeType":"Return","src":"5597:17:8"}]},"id":1211,"nodeType":"IfStatement","src":"5519:106:8","trueBody":{"id":1207,"nodeType":"Block","src":"5533:44:8","statements":[{"expression":{"arguments":[{"id":1204,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"5555:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1203,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5547:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"5547:19:8"}]}}]},"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"5213:189:8","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:8","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"success","nameLocation":"5438:7:8","nodeType":"VariableDeclaration","scope":1213,"src":"5433:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1193,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:8","nodeType":"VariableDeclaration","scope":1213,"src":"5447:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1195,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:8"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"5495:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:8"},"scope":1232,"src":"5407:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"5798:461:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1219,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"5874:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:8","memberName":"length","nodeType":"MemberAccess","src":"5874:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1228,"nodeType":"Block","src":"6204:49:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1225,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6225:15:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"RevertStatement","src":"6218:24:8"}]},"id":1229,"nodeType":"IfStatement","src":"5870:383:8","trueBody":{"id":1224,"nodeType":"Block","src":"5897:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:8"},"nodeType":"YulFunctionCall","src":"6096:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:8"},"nodeType":"YulFunctionCall","src":"6137:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:8"},"nodeType":"YulFunctionCall","src":"6130:44:8"},"nodeType":"YulExpressionStatement","src":"6130:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1216,"isOffset":false,"isSlot":false,"src":"6102:10:8","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"6145:10:8","valueSize":1}],"id":1223,"nodeType":"InlineAssembly","src":"6046:142:8"}]}}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"5637:101:8","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:8","nodeType":"VariableDeclaration","scope":1231,"src":"5760:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1215,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:8"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"5798:0:8"},"scope":1232,"src":"5743:516:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1233,"src":"195:6066:8","usedErrors":[987,992,995],"usedEvents":[]}],"src":"101:6161:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1342]},"id":1343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1234,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"219:1025:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1342,"linearizedBaseContracts":[1342],"name":"StorageSlot","nameLocation":"1253:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1238,"members":[{"constant":false,"id":1237,"mutability":"mutable","name":"value","nameLocation":"1308:5:9","nodeType":"VariableDeclaration","scope":1238,"src":"1300:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:9","nodeType":"StructDefinition","scope":1342,"src":"1271:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1241,"members":[{"constant":false,"id":1240,"mutability":"mutable","name":"value","nameLocation":"1360:5:9","nodeType":"VariableDeclaration","scope":1241,"src":"1355:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:9","nodeType":"StructDefinition","scope":1342,"src":"1326:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1244,"members":[{"constant":false,"id":1243,"mutability":"mutable","name":"value","nameLocation":"1415:5:9","nodeType":"VariableDeclaration","scope":1244,"src":"1407:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:9","nodeType":"StructDefinition","scope":1342,"src":"1378:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1247,"members":[{"constant":false,"id":1246,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1247,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1342,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1250,"members":[{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"1523:5:9","nodeType":"VariableDeclaration","scope":1250,"src":"1516:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1248,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:9","nodeType":"StructDefinition","scope":1342,"src":"1488:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1253,"members":[{"constant":false,"id":1252,"mutability":"mutable","name":"value","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1253,"src":"1568:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:9","nodeType":"StructDefinition","scope":1342,"src":"1541:45:9","visibility":"public"},{"body":{"id":1263,"nodeType":"Block","src":"1768:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:9","statements":[{"nodeType":"YulAssignment","src":"1844:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1260,"isOffset":false,"isSlot":true,"src":"1844:6:9","suffix":"slot","valueSize":1},{"declaration":1256,"isOffset":false,"isSlot":false,"src":"1854:4:9","valueSize":1}],"id":1262,"nodeType":"InlineAssembly","src":"1821:47:9"}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"1592:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:9","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"slot","nameLocation":"1716:4:9","nodeType":"VariableDeclaration","scope":1264,"src":"1708:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:9"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"r","nameLocation":"1765:1:9","nodeType":"VariableDeclaration","scope":1264,"src":"1745:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1259,"nodeType":"UserDefinedTypeName","pathNode":{"id":1258,"name":"AddressSlot","nameLocations":["1745:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1238,"src":"1745:11:9"},"referencedDeclaration":1238,"src":"1745:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1238_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:9"},"scope":1342,"src":"1684:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"2056:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:9","statements":[{"nodeType":"YulAssignment","src":"2132:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1271,"isOffset":false,"isSlot":true,"src":"2132:6:9","suffix":"slot","valueSize":1},{"declaration":1267,"isOffset":false,"isSlot":false,"src":"2142:4:9","valueSize":1}],"id":1273,"nodeType":"InlineAssembly","src":"2109:47:9"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"1880:87:9","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:9","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"slot","nameLocation":"2004:4:9","nodeType":"VariableDeclaration","scope":1275,"src":"1996:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:9"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"r","nameLocation":"2053:1:9","nodeType":"VariableDeclaration","scope":1275,"src":"2033:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1241_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1270,"nodeType":"UserDefinedTypeName","pathNode":{"id":1269,"name":"BooleanSlot","nameLocations":["2033:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"2033:11:9"},"referencedDeclaration":1241,"src":"2033:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1241_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:9"},"scope":1342,"src":"1972:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"2344:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:9","statements":[{"nodeType":"YulAssignment","src":"2420:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1282,"isOffset":false,"isSlot":true,"src":"2420:6:9","suffix":"slot","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"2430:4:9","valueSize":1}],"id":1284,"nodeType":"InlineAssembly","src":"2397:47:9"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2168:87:9","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:9","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"slot","nameLocation":"2292:4:9","nodeType":"VariableDeclaration","scope":1286,"src":"2284:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:9"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"r","nameLocation":"2341:1:9","nodeType":"VariableDeclaration","scope":1286,"src":"2321:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1244_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1281,"nodeType":"UserDefinedTypeName","pathNode":{"id":1280,"name":"Bytes32Slot","nameLocations":["2321:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1244,"src":"2321:11:9"},"referencedDeclaration":1244,"src":"2321:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1244_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:9"},"scope":1342,"src":"2260:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"2632:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:9","statements":[{"nodeType":"YulAssignment","src":"2708:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1293,"isOffset":false,"isSlot":true,"src":"2708:6:9","suffix":"slot","valueSize":1},{"declaration":1289,"isOffset":false,"isSlot":false,"src":"2718:4:9","valueSize":1}],"id":1295,"nodeType":"InlineAssembly","src":"2685:47:9"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"2456:87:9","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:9","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"slot","nameLocation":"2580:4:9","nodeType":"VariableDeclaration","scope":1297,"src":"2572:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:9"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"r","nameLocation":"2629:1:9","nodeType":"VariableDeclaration","scope":1297,"src":"2609:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1247_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1292,"nodeType":"UserDefinedTypeName","pathNode":{"id":1291,"name":"Uint256Slot","nameLocations":["2609:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"2609:11:9"},"referencedDeclaration":1247,"src":"2609:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1247_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:9"},"scope":1342,"src":"2548:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1307,"nodeType":"Block","src":"2917:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:9","statements":[{"nodeType":"YulAssignment","src":"2993:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1304,"isOffset":false,"isSlot":true,"src":"2993:6:9","suffix":"slot","valueSize":1},{"declaration":1300,"isOffset":false,"isSlot":false,"src":"3003:4:9","valueSize":1}],"id":1306,"nodeType":"InlineAssembly","src":"2970:47:9"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"2744:86:9","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"slot","nameLocation":"2866:4:9","nodeType":"VariableDeclaration","scope":1308,"src":"2858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:9"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"r","nameLocation":"2914:1:9","nodeType":"VariableDeclaration","scope":1308,"src":"2895:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1303,"nodeType":"UserDefinedTypeName","pathNode":{"id":1302,"name":"StringSlot","nameLocations":["2895:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"2895:10:9"},"referencedDeclaration":1250,"src":"2895:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:9"},"scope":1342,"src":"2835:188:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1318,"nodeType":"Block","src":"3225:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:9","statements":[{"nodeType":"YulAssignment","src":"3301:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1315,"isOffset":false,"isSlot":true,"src":"3301:6:9","suffix":"slot","valueSize":1},{"declaration":1311,"isOffset":false,"isSlot":true,"src":"3311:10:9","suffix":"slot","valueSize":1}],"id":1317,"nodeType":"InlineAssembly","src":"3278:53:9"}]},"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"3029:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:9","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"store","nameLocation":"3173:5:9","nodeType":"VariableDeclaration","scope":1319,"src":"3158:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1310,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:9"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"r","nameLocation":"3222:1:9","nodeType":"VariableDeclaration","scope":1319,"src":"3203:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"StringSlot","nameLocations":["3203:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"3203:10:9"},"referencedDeclaration":1250,"src":"3203:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1250_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:9"},"scope":1342,"src":"3135:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1329,"nodeType":"Block","src":"3513:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:9","statements":[{"nodeType":"YulAssignment","src":"3589:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1326,"isOffset":false,"isSlot":true,"src":"3589:6:9","suffix":"slot","valueSize":1},{"declaration":1322,"isOffset":false,"isSlot":false,"src":"3599:4:9","valueSize":1}],"id":1328,"nodeType":"InlineAssembly","src":"3566:47:9"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"3343:85:9","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:9","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"slot","nameLocation":"3463:4:9","nodeType":"VariableDeclaration","scope":1330,"src":"3455:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:9"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"r","nameLocation":"3510:1:9","nodeType":"VariableDeclaration","scope":1330,"src":"3492:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1325,"nodeType":"UserDefinedTypeName","pathNode":{"id":1324,"name":"BytesSlot","nameLocations":["3492:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"3492:9:9"},"referencedDeclaration":1253,"src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:9"},"scope":1342,"src":"3433:186:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1340,"nodeType":"Block","src":"3816:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:9","statements":[{"nodeType":"YulAssignment","src":"3892:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1337,"isOffset":false,"isSlot":true,"src":"3892:6:9","suffix":"slot","valueSize":1},{"declaration":1333,"isOffset":false,"isSlot":true,"src":"3902:10:9","suffix":"slot","valueSize":1}],"id":1339,"nodeType":"InlineAssembly","src":"3869:53:9"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"3625:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1341,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:9","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"store","nameLocation":"3765:5:9","nodeType":"VariableDeclaration","scope":1341,"src":"3751:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:9"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"r","nameLocation":"3813:1:9","nodeType":"VariableDeclaration","scope":1341,"src":"3795:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1336,"nodeType":"UserDefinedTypeName","pathNode":{"id":1335,"name":"BytesSlot","nameLocations":["3795:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"3795:9:9"},"referencedDeclaration":1253,"src":"3795:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1253_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:9"},"scope":1342,"src":"3729:199:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1343,"src":"1245:2685:9","usedErrors":[],"usedEvents":[]}],"src":"193:3738:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2396]},"id":2397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1344,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"129:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2396,"linearizedBaseContracts":[2396],"name":"Math","nameLocation":"211:4:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"222:50:10","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1348,"name":"MathOverflowedMulDiv","nameLocation":"283:20:10","nodeType":"ErrorDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"303:2:10"},"src":"277:29:10"},{"canonicalName":"Math.Rounding","id":1353,"members":[{"id":1349,"name":"Floor","nameLocation":"336:5:10","nodeType":"EnumValue","src":"336:5:10"},{"id":1350,"name":"Ceil","nameLocation":"379:4:10","nodeType":"EnumValue","src":"379:4:10"},{"id":1351,"name":"Trunc","nameLocation":"421:5:10","nodeType":"EnumValue","src":"421:5:10"},{"id":1352,"name":"Expand","nameLocation":"451:6:10","nodeType":"EnumValue","src":"451:6:10"}],"name":"Rounding","nameLocation":"317:8:10","nodeType":"EnumDefinition","src":"312:169:10"},{"body":{"id":1384,"nodeType":"Block","src":"661:140:10","statements":[{"id":1383,"nodeType":"UncheckedBlock","src":"671:124:10","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"c","nameLocation":"703:1:10","nodeType":"VariableDeclaration","scope":1383,"src":"695:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"707:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1368,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"711:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"730:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"734:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"726:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1364,"id":1377,"nodeType":"Return","src":"737:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1380,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"782:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1364,"id":1382,"nodeType":"Return","src":"768:16:10"}]}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"487:93:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:10","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1385,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1385,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"646:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1360,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"652:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:10"},"scope":2396,"src":"585:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"984:113:10","statements":[{"id":1411,"nodeType":"UncheckedBlock","src":"994:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1026:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"1018:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1396,"id":1403,"nodeType":"Return","src":"1029:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"1074:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1078:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1396,"id":1410,"nodeType":"Return","src":"1060:20:10"}]}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"807:96:10","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:10","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"a","nameLocation":"932:1:10","nodeType":"VariableDeclaration","scope":1413,"src":"924:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"b","nameLocation":"943:1:10","nodeType":"VariableDeclaration","scope":1413,"src":"935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:10"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"969:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"975:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:10"},"scope":2396,"src":"908:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"1283:417:10","statements":[{"id":1453,"nodeType":"UncheckedBlock","src":"1293:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"IfStatement","src":"1547:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1424,"id":1431,"nodeType":"Return","src":"1559:16:10"}},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"c","nameLocation":"1597:1:10","nodeType":"VariableDeclaration","scope":1453,"src":"1589:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1438,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1605:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1624:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1628:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1633:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1448,"nodeType":"IfStatement","src":"1620:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1424,"id":1447,"nodeType":"Return","src":"1636:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1450,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1681:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1424,"id":1452,"nodeType":"Return","src":"1667:16:10"}]}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"1103:99:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:10","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"a","nameLocation":"1231:1:10","nodeType":"VariableDeclaration","scope":1455,"src":"1223:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"b","nameLocation":"1242:1:10","nodeType":"VariableDeclaration","scope":1455,"src":"1234:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:10"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"1268:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1420,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"1274:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:10"},"scope":2396,"src":"1207:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1482,"nodeType":"Block","src":"1887:114:10","statements":[{"id":1481,"nodeType":"UncheckedBlock","src":"1897:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"1921:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1466,"id":1473,"nodeType":"Return","src":"1933:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1978:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1466,"id":1480,"nodeType":"Return","src":"1964:20:10"}]}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"1706:100:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:10","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"a","nameLocation":"1835:1:10","nodeType":"VariableDeclaration","scope":1483,"src":"1827:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"b","nameLocation":"1846:1:10","nodeType":"VariableDeclaration","scope":1483,"src":"1838:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:10"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1872:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1462,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1878:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:10"},"scope":2396,"src":"1811:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"2198:114:10","statements":[{"id":1509,"nodeType":"UncheckedBlock","src":"2208:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2236:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"nodeType":"IfStatement","src":"2232:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1494,"id":1501,"nodeType":"Return","src":"2244:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2289:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2293:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1494,"id":1508,"nodeType":"Return","src":"2275:20:10"}]}]},"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"2007:110:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:10","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"a","nameLocation":"2146:1:10","nodeType":"VariableDeclaration","scope":1511,"src":"2138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"b","nameLocation":"2157:1:10","nodeType":"VariableDeclaration","scope":1511,"src":"2149:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:10"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"2183:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1490,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"2189:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:10"},"scope":2396,"src":"2122:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1528,"nodeType":"Block","src":"2449:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2466:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2478:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:10","trueExpression":{"id":1524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2474:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1520,"id":1527,"nodeType":"Return","src":"2459:20:10"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"2318:59:10","text":" @dev Returns the largest of two numbers."},"id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:10","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"a","nameLocation":"2403:1:10","nodeType":"VariableDeclaration","scope":1529,"src":"2395:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"b","nameLocation":"2414:1:10","nodeType":"VariableDeclaration","scope":1529,"src":"2406:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:10"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"2440:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:10"},"scope":2396,"src":"2382:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1546,"nodeType":"Block","src":"2624:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2641:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2645:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2653:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:10","trueExpression":{"id":1542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1538,"id":1545,"nodeType":"Return","src":"2634:20:10"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"2492:60:10","text":" @dev Returns the smallest of two numbers."},"id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:10","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"a","nameLocation":"2578:1:10","nodeType":"VariableDeclaration","scope":1547,"src":"2570:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"b","nameLocation":"2589:1:10","nodeType":"VariableDeclaration","scope":1547,"src":"2581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:10"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"2615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:10"},"scope":2396,"src":"2557:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"2845:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2900:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2904:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2910:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1562,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2914:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1556,"id":1568,"nodeType":"Return","src":"2892:28:10"}]},"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"2667:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:10","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"a","nameLocation":"2799:1:10","nodeType":"VariableDeclaration","scope":1570,"src":"2791:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"b","nameLocation":"2810:1:10","nodeType":"VariableDeclaration","scope":1570,"src":"2802:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:10"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1570,"src":"2836:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:10"},"scope":2396,"src":"2774:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"3219:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3233:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1588,"nodeType":"IfStatement","src":"3229:127:10","trueBody":{"id":1587,"nodeType":"Block","src":"3241:115:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3340:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3344:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1579,"id":1586,"nodeType":"Return","src":"3333:12:10"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3444:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"3458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3467:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:10","trueExpression":{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1579,"id":1602,"nodeType":"Return","src":"3437:35:10"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"2933:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:10","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"a","nameLocation":"3173:1:10","nodeType":"VariableDeclaration","scope":1604,"src":"3165:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"b","nameLocation":"3184:1:10","nodeType":"VariableDeclaration","scope":1604,"src":"3176:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:10"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"3210:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:10"},"scope":2396,"src":"3148:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"3901:4018:10","statements":[{"id":1728,"nodeType":"UncheckedBlock","src":"3911:4002:10","statements":[{"assignments":[1617],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:10","nodeType":"VariableDeclaration","scope":1728,"src":"4232:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"4248:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1619,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4252:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:10"},{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:10","nodeType":"VariableDeclaration","scope":1728,"src":"4312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1624,"nodeType":"VariableDeclarationStatement","src":"4312:13:10"},{"AST":{"nodeType":"YulBlock","src":"4392:122:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:10"},"nodeType":"YulFunctionCall","src":"4433:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:10"},"nodeType":"YulFunctionCall","src":"4420:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:10","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:10"},"nodeType":"YulFunctionCall","src":"4470:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:10"},"nodeType":"YulFunctionCall","src":"4486:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:10"},"nodeType":"YulFunctionCall","src":"4466:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1617,"isOffset":false,"isSlot":false,"src":"4478:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"4493:5:10","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"4457:5:10","valueSize":1},{"declaration":1607,"isOffset":false,"isSlot":false,"src":"4427:1:10","valueSize":1},{"declaration":1609,"isOffset":false,"isSlot":false,"src":"4430:1:10","valueSize":1}],"id":1625,"nodeType":"InlineAssembly","src":"4383:131:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"4591:368:10","trueBody":{"id":1633,"nodeType":"Block","src":"4607:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4933:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1615,"id":1632,"nodeType":"Return","src":"4918:26:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1636,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"5080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1642,"nodeType":"IfStatement","src":"5061:88:10","trueBody":{"id":1641,"nodeType":"Block","src":"5087:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1638,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5112:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1640,"nodeType":"RevertStatement","src":"5105:29:10"}]}},{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:10","nodeType":"VariableDeclaration","scope":1728,"src":"5404:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1645,"nodeType":"VariableDeclarationStatement","src":"5404:17:10"},{"AST":{"nodeType":"YulBlock","src":"5444:291:10","statements":[{"nodeType":"YulAssignment","src":"5513:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:10"},"nodeType":"YulFunctionCall","src":"5526:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:10"}]},{"nodeType":"YulAssignment","src":"5633:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:10"},"nodeType":"YulFunctionCall","src":"5653:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:10"},"nodeType":"YulFunctionCall","src":"5642:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:10"}]},{"nodeType":"YulAssignment","src":"5691:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:10"},"nodeType":"YulFunctionCall","src":"5700:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":false,"src":"5539:11:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"5667:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"5691:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"5704:5:10","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"5633:5:10","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"5646:5:10","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"5513:9:10","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"5656:9:10","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"5711:9:10","valueSize":1},{"declaration":1607,"isOffset":false,"isSlot":false,"src":"5533:1:10","valueSize":1},{"declaration":1609,"isOffset":false,"isSlot":false,"src":"5536:1:10","valueSize":1}],"id":1646,"nodeType":"InlineAssembly","src":"5435:300:10"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"twos","nameLocation":"5947:4:10","nodeType":"VariableDeclaration","scope":1728,"src":"5939:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5954:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1651,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"5973:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:10"},{"AST":{"nodeType":"YulBlock","src":"6008:362:10","statements":[{"nodeType":"YulAssignment","src":"6073:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:10"},"nodeType":"YulFunctionCall","src":"6088:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:10"}]},{"nodeType":"YulAssignment","src":"6177:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:10"},"nodeType":"YulFunctionCall","src":"6186:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:10"}]},{"nodeType":"YulAssignment","src":"6317:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:10"},"nodeType":"YulFunctionCall","src":"6333:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:10"},"nodeType":"YulFunctionCall","src":"6329:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:10"},"nodeType":"YulFunctionCall","src":"6325:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":false,"src":"6073:11:10","valueSize":1},{"declaration":1611,"isOffset":false,"isSlot":false,"src":"6092:11:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"6177:5:10","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"6190:5:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6105:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6197:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6317:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6340:4:10","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"6347:4:10","valueSize":1}],"id":1656,"nodeType":"InlineAssembly","src":"5999:371:10"},{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6436:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1659,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6453:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1662,"nodeType":"ExpressionStatement","src":"6436:21:10"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:10","nodeType":"VariableDeclaration","scope":1728,"src":"6775:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1671,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1666,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:10"},{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1674,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1675,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"7031:36:10"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7100:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7115:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1683,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1687,"nodeType":"ExpressionStatement","src":"7100:36:10"},{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1688,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7170:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7185:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1691,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1695,"nodeType":"ExpressionStatement","src":"7170:36:10"},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1696,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7255:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1699,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1703,"nodeType":"ExpressionStatement","src":"7240:36:10"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7325:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1707,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"7310:36:10"},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1712,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7396:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1715,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1719,"nodeType":"ExpressionStatement","src":"7381:36:10"},{"expression":{"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7851:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"7860:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1722,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1725,"nodeType":"ExpressionStatement","src":"7851:24:10"},{"expression":{"id":1726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1615,"id":1727,"nodeType":"Return","src":"7889:13:10"}]}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"3485:313:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:10","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"x","nameLocation":"3827:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"3819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"y","nameLocation":"3838:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"3830:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:10","nodeType":"VariableDeclaration","scope":1730,"src":"3841:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:10"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"result","nameLocation":"3893:6:10","nodeType":"VariableDeclaration","scope":1730,"src":"3885:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:10"},"scope":2396,"src":"3803:4116:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"8161:192:10","statements":[{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"result","nameLocation":"8179:6:10","nodeType":"VariableDeclaration","scope":1772,"src":"8171:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1752,"initialValue":{"arguments":[{"id":1748,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8195:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1749,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"8198:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1750,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8201:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1747,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1730,1773],"referencedDeclaration":1730,"src":"8188:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1754,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"8244:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":1753,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"8227:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1757,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8264:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1758,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"8267:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1759,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8270:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1756,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"8257:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"8223:101:10","trueBody":{"id":1768,"nodeType":"Block","src":"8288:36:10","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8302:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1767,"nodeType":"ExpressionStatement","src":"8302:11:10"}]}},{"expression":{"id":1770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"8340:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1744,"id":1771,"nodeType":"Return","src":"8333:13:10"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"7925:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:10","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"x","nameLocation":"8075:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"8067:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"y","nameLocation":"8086:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"8078:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:10","nodeType":"VariableDeclaration","scope":1773,"src":"8089:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:10","nodeType":"VariableDeclaration","scope":1773,"src":"8110:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":1739,"nodeType":"UserDefinedTypeName","pathNode":{"id":1738,"name":"Rounding","nameLocations":["8110:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"8110:8:10"},"referencedDeclaration":1353,"src":"8110:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:10"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"8152:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:10"},"scope":2396,"src":"8051:302:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"8644:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"8658:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1787,"nodeType":"IfStatement","src":"8654:45:10","trueBody":{"id":1786,"nodeType":"Block","src":"8666:33:10","statements":[{"expression":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1780,"id":1785,"nodeType":"Return","src":"8680:8:10"}]}},{"assignments":[1789],"declarations":[{"constant":false,"id":1789,"mutability":"mutable","name":"result","nameLocation":"9386:6:10","nodeType":"VariableDeclaration","scope":1884,"src":"9378:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9406:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2052,2087],"referencedDeclaration":2052,"src":"9401:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:10"},{"id":1883,"nodeType":"UncheckedBlock","src":"9815:408:10","statements":[{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9839:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9858:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9862:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"9839:35:10"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9888:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9907:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"9888:35:10"},{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9947:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9956:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9960:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1831,"nodeType":"ExpressionStatement","src":"9937:35:10"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"9996:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10005:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10009:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"nodeType":"ExpressionStatement","src":"9986:35:10"},{"expression":{"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10035:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10045:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10058:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"nodeType":"ExpressionStatement","src":"10035:35:10"},{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10084:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10094:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10103:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10107:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"10084:35:10"},{"expression":{"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10133:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10143:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10152:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10156:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1875,"nodeType":"ExpressionStatement","src":"10133:35:10"},{"expression":{"arguments":[{"id":1877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10193:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"10201:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10189:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1780,"id":1882,"nodeType":"Return","src":"10182:30:10"}]}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"8359:223:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:10","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"a","nameLocation":"8609:1:10","nodeType":"VariableDeclaration","scope":1885,"src":"8601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:10"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"8635:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:10"},"scope":2396,"src":"8587:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"10405:164:10","statements":[{"id":1918,"nodeType":"UncheckedBlock","src":"10415:148:10","statements":[{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"result","nameLocation":"10447:6:10","nodeType":"VariableDeclaration","scope":1918,"src":"10439:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1901,"initialValue":{"arguments":[{"id":1899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"10461:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1885,1920],"referencedDeclaration":1885,"src":"10456:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10484:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1904,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"10511:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":1903,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"10494:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10533:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"10542:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:10","trueExpression":{"hexValue":"31","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1895,"id":1917,"nodeType":"Return","src":"10477:75:10"}]}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"10235:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:10","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"a","nameLocation":"10351:1:10","nodeType":"VariableDeclaration","scope":1920,"src":"10343:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:10","nodeType":"VariableDeclaration","scope":1920,"src":"10354:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":1890,"nodeType":"UserDefinedTypeName","pathNode":{"id":1889,"name":"Rounding","nameLocations":["10354:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"10354:8:10"},"referencedDeclaration":1353,"src":"10354:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:10"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"10396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:10"},"scope":2396,"src":"10329:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2051,"nodeType":"Block","src":"10760:922:10","statements":[{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"result","nameLocation":"10778:6:10","nodeType":"VariableDeclaration","scope":2051,"src":"10770:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1931,"initialValue":{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:10"},{"id":2048,"nodeType":"UncheckedBlock","src":"10798:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10826:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1946,"nodeType":"IfStatement","src":"10822:99:10","trueBody":{"id":1945,"nodeType":"Block","src":"10844:77:10","statements":[{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10862:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1940,"nodeType":"ExpressionStatement","src":"10862:13:10"},{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"10893:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"10893:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10938:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"10934:96:10","trueBody":{"id":1960,"nodeType":"Block","src":"10955:75:10","statements":[{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"10973:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"10973:12:10"},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11003:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"11003:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11047:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"11043:96:10","trueBody":{"id":1975,"nodeType":"Block","src":"11064:75:10","statements":[{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11082:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"11082:12:10"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11112:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"11112:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11156:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"nodeType":"IfStatement","src":"11152:96:10","trueBody":{"id":1990,"nodeType":"Block","src":"11173:75:10","statements":[{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11191:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"11191:12:10"},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11221:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"11221:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11265:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"11261:93:10","trueBody":{"id":2005,"nodeType":"Block","src":"11281:73:10","statements":[{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11299:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"11299:11:10"},{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11328:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"11328:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11371:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"11367:93:10","trueBody":{"id":2020,"nodeType":"Block","src":"11387:73:10","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11405:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2015,"nodeType":"ExpressionStatement","src":"11405:11:10"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11434:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"11434:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11477:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"11473:93:10","trueBody":{"id":2035,"nodeType":"Block","src":"11493:73:10","statements":[{"expression":{"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11511:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2030,"nodeType":"ExpressionStatement","src":"11511:11:10"},{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11540:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"11540:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11583:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"11579:64:10","trueBody":{"id":2046,"nodeType":"Block","src":"11599:44:10","statements":[{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11617:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ExpressionStatement","src":"11617:11:10"}]}}]},{"expression":{"id":2049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11669:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1927,"id":2050,"nodeType":"Return","src":"11662:13:10"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"10575:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:10","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"value","nameLocation":"10721:5:10","nodeType":"VariableDeclaration","scope":2052,"src":"10713:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:10"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"10751:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:10"},"scope":2396,"src":"10699:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"11915:168:10","statements":[{"id":2085,"nodeType":"UncheckedBlock","src":"11925:152:10","statements":[{"assignments":[2064],"declarations":[{"constant":false,"id":2064,"mutability":"mutable","name":"result","nameLocation":"11957:6:10","nodeType":"VariableDeclaration","scope":2085,"src":"11949:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2068,"initialValue":{"arguments":[{"id":2066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"11971:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2065,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2052,2087],"referencedDeclaration":2052,"src":"11966:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"11998:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2071,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"12025:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2070,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"12008:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"12043:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"12052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:10","trueExpression":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2062,"id":2084,"nodeType":"Return","src":"11991:75:10"}]}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"11688:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:10","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"value","nameLocation":"11857:5:10","nodeType":"VariableDeclaration","scope":2087,"src":"11849:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:10","nodeType":"VariableDeclaration","scope":2087,"src":"11864:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"Rounding","nameLocations":["11864:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"11864:8:10"},"referencedDeclaration":1353,"src":"11864:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:10"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"11906:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:10"},"scope":2396,"src":"11835:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"12276:854:10","statements":[{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"result","nameLocation":"12294:6:10","nodeType":"VariableDeclaration","scope":2215,"src":"12286:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2098,"initialValue":{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:10"},{"id":2212,"nodeType":"UncheckedBlock","src":"12314:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12342:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2115,"nodeType":"IfStatement","src":"12338:103:10","trueBody":{"id":2114,"nodeType":"Block","src":"12361:80:10","statements":[{"expression":{"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12379:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2109,"nodeType":"ExpressionStatement","src":"12379:17:10"},{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ExpressionStatement","src":"12414:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2132,"nodeType":"IfStatement","src":"12454:103:10","trueBody":{"id":2131,"nodeType":"Block","src":"12477:80:10","statements":[{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12495:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2126,"nodeType":"ExpressionStatement","src":"12495:17:10"},{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12530:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"12530:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12574:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"12570:103:10","trueBody":{"id":2148,"nodeType":"Block","src":"12593:80:10","statements":[{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12611:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"12611:17:10"},{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12646:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"12646:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12690:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2166,"nodeType":"IfStatement","src":"12686:100:10","trueBody":{"id":2165,"nodeType":"Block","src":"12708:78:10","statements":[{"expression":{"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12726:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2160,"nodeType":"ExpressionStatement","src":"12726:16:10"},{"expression":{"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2164,"nodeType":"ExpressionStatement","src":"12760:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12803:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"12799:100:10","trueBody":{"id":2182,"nodeType":"Block","src":"12821:78:10","statements":[{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12839:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"12839:16:10"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12873:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"nodeType":"ExpressionStatement","src":"12873:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2200,"nodeType":"IfStatement","src":"12912:100:10","trueBody":{"id":2199,"nodeType":"Block","src":"12934:78:10","statements":[{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12952:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"12952:16:10"},{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"12986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ExpressionStatement","src":"12986:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"13029:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"nodeType":"IfStatement","src":"13025:66:10","trueBody":{"id":2210,"nodeType":"Block","src":"13047:44:10","statements":[{"expression":{"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"13065:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2209,"nodeType":"ExpressionStatement","src":"13065:11:10"}]}}]},{"expression":{"id":2213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"13117:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2094,"id":2214,"nodeType":"Return","src":"13110:13:10"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"12089:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:10","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"12237:5:10","nodeType":"VariableDeclaration","scope":2216,"src":"12229:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:10"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"12267:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:10"},"scope":2396,"src":"12214:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"13365:170:10","statements":[{"id":2249,"nodeType":"UncheckedBlock","src":"13375:154:10","statements":[{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"result","nameLocation":"13407:6:10","nodeType":"VariableDeclaration","scope":2249,"src":"13399:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2232,"initialValue":{"arguments":[{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13422:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2229,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2216,2251],"referencedDeclaration":2216,"src":"13416:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13449:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2235,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"13476:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2234,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"13459:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13495:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13504:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:10","trueExpression":{"hexValue":"31","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2226,"id":2248,"nodeType":"Return","src":"13442:76:10"}]}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"13136:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:10","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"value","nameLocation":"13307:5:10","nodeType":"VariableDeclaration","scope":2251,"src":"13299:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:10","nodeType":"VariableDeclaration","scope":2251,"src":"13314:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2221,"nodeType":"UserDefinedTypeName","pathNode":{"id":2220,"name":"Rounding","nameLocations":["13314:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"13314:8:10"},"referencedDeclaration":1353,"src":"13314:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:10"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"13356:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:10"},"scope":2396,"src":"13284:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2337,"nodeType":"Block","src":"13855:600:10","statements":[{"assignments":[2260],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"result","nameLocation":"13873:6:10","nodeType":"VariableDeclaration","scope":2337,"src":"13865:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:10"},{"id":2334,"nodeType":"UncheckedBlock","src":"13893:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"13921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"IfStatement","src":"13917:98:10","trueBody":{"id":2276,"nodeType":"Block","src":"13939:76:10","statements":[{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"13957:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ExpressionStatement","src":"13957:13:10"},{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"13988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"13988:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14032:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"nodeType":"IfStatement","src":"14028:95:10","trueBody":{"id":2291,"nodeType":"Block","src":"14049:74:10","statements":[{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14067:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2286,"nodeType":"ExpressionStatement","src":"14067:12:10"},{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14097:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ExpressionStatement","src":"14097:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14140:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"14136:95:10","trueBody":{"id":2306,"nodeType":"Block","src":"14157:74:10","statements":[{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"14175:12:10"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"14205:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2322,"nodeType":"IfStatement","src":"14244:95:10","trueBody":{"id":2321,"nodeType":"Block","src":"14265:74:10","statements":[{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14283:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"nodeType":"ExpressionStatement","src":"14283:12:10"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14313:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"14313:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"14356:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"nodeType":"IfStatement","src":"14352:64:10","trueBody":{"id":2332,"nodeType":"Block","src":"14372:44:10","statements":[{"expression":{"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ExpressionStatement","src":"14390:11:10"}]}}]},{"expression":{"id":2335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"14442:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2258,"id":2336,"nodeType":"Return","src":"14435:13:10"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"13541:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:10","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"value","nameLocation":"13816:5:10","nodeType":"VariableDeclaration","scope":2338,"src":"13808:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:10"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"13846:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:10"},"scope":2396,"src":"13792:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2375,"nodeType":"Block","src":"14692:177:10","statements":[{"id":2374,"nodeType":"UncheckedBlock","src":"14702:161:10","statements":[{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"result","nameLocation":"14734:6:10","nodeType":"VariableDeclaration","scope":2374,"src":"14726:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"initialValue":{"arguments":[{"id":2352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14750:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2351,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2338,2376],"referencedDeclaration":2338,"src":"14743:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"14777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2357,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"14804:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2356,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"14787:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1353_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"14823:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14838:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:10","trueExpression":{"hexValue":"31","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2348,"id":2373,"nodeType":"Return","src":"14770:82:10"}]}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"14461:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:10","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"value","nameLocation":"14634:5:10","nodeType":"VariableDeclaration","scope":2376,"src":"14626:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:10","nodeType":"VariableDeclaration","scope":2376,"src":"14641:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"Rounding","nameLocations":["14641:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"14641:8:10"},"referencedDeclaration":1353,"src":"14641:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:10"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2376,"src":"14683:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:10"},"scope":2396,"src":"14610:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"15067:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2387,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"15090:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2385,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:10","typeDescriptions":{}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2384,"id":2393,"nodeType":"Return","src":"15077:31:10"}]},"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"14875:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:10","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:10","nodeType":"VariableDeclaration","scope":2395,"src":"15019:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"},"typeName":{"id":2379,"nodeType":"UserDefinedTypeName","pathNode":{"id":2378,"name":"Rounding","nameLocations":["15019:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1353,"src":"15019:8:10"},"referencedDeclaration":1353,"src":"15019:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1353","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:10"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"15061:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2382,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:10"},"scope":2396,"src":"14993:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2397,"src":"203:14914:10","usedErrors":[1348],"usedEvents":[]}],"src":"103:15015:10"},"id":10},"contracts/Dealer.sol":{"ast":{"absolutePath":"contracts/Dealer.sol","exportedSymbols":{"BeaconProxy":[891],"ContextUpgradeable":[494],"Dealer":[3121],"ERC1967Utils":[797],"IBeacon":[901],"ICrossDomainEnabled":[3129],"ICrossDomainMessenger":[3199],"IERC20":[979],"IL1ERC20Bridge":[3353],"ILockingInfo":[3387],"ILockingInfoRaw":[3607],"ILockingPool":[3737],"ISequencerInfo":[3819],"IVeMetisMinter":[3839],"Initializable":[448],"Math":[2396],"OwnableUpgradeable":[194],"Proxy":[833]},"id":3122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2398,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":2397,"src":"56:53:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","file":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","id":2400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":892,"src":"110:62:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":980,"src":"173:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":195,"src":"230:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ICrossDomainEnabled.sol","file":"../interface/ICrossDomainEnabled.sol","id":2403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":3130,"src":"306:46:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ILockingPool.sol","file":"../interface/ILockingPool.sol","id":2404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":3738,"src":"353:39:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/IVeMetisMinter.sol","file":"../interface/IVeMetisMinter.sol","id":2405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":3840,"src":"393:41:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ICrossDomainMessenger.sol","file":"../interface/ICrossDomainMessenger.sol","id":2406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":3200,"src":"435:48:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/IL1ERC20Bridge.sol","file":"../interface/IL1ERC20Bridge.sol","id":2407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3122,"sourceUnit":3354,"src":"484:41:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2409,"name":"OwnableUpgradeable","nameLocations":["721:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"721:18:11"},"id":2410,"nodeType":"InheritanceSpecifier","src":"721:18:11"}],"canonicalName":"Dealer","contractDependencies":[],"contractKind":"contract","documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"528:174:11","text":"@title Dealer\n @notice The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents."},"fullyImplemented":true,"id":3121,"linearizedBaseContracts":[3121,194,494,448],"name":"Dealer","nameLocation":"711:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"747:135:11","text":"@notice Emits when a new sequencer agent is added\n @param index index of the agent\n @param agent address of the agent"},"eventSelector":"fcdf0e51b92207a6c5cfa485e975b62686da57da9499feafd12185ee26a860d9","id":2417,"name":"SequencerAgentAdded","nameLocation":"893:19:11","nodeType":"EventDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"920:5:11","nodeType":"VariableDeclaration","scope":2417,"src":"913:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2412,"name":"uint32","nodeType":"ElementaryTypeName","src":"913:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2415,"indexed":false,"mutability":"mutable","name":"agent","nameLocation":"935:5:11","nodeType":"VariableDeclaration","scope":2417,"src":"927:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"912:29:11"},"src":"887:55:11"},{"anonymous":false,"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"948:324:11","text":"@notice Emits when additional Metis tokens and rewards are locked for a sequencer.\n @param index The index of the sequencer agent in the sequencer list.\n @param amount The amount of Metis tokens that have been added to the lock.\n @param reward The amount of additional rewards that have been locked."},"eventSelector":"b8aafdec9bacdc76bfea3c330063c391a2904d4f91e71f97a91534f3c8ce4ab5","id":2426,"name":"SequencerRelocked","nameLocation":"1283:17:11","nodeType":"EventDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"1308:5:11","nodeType":"VariableDeclaration","scope":2426,"src":"1301:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2419,"name":"uint32","nodeType":"ElementaryTypeName","src":"1301:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2422,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1323:6:11","nodeType":"VariableDeclaration","scope":2426,"src":"1315:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1315:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2424,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"1339:6:11","nodeType":"VariableDeclaration","scope":2426,"src":"1331:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:46:11"},"src":"1277:70:11"},{"anonymous":false,"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1353:130:11","text":"@notice Emits when Metis tokens are minted on Layer 2.\n @param amount The amount of Metis tokens that have been minted."},"eventSelector":"d644e527c1896057ce642adfbc00f04d6b23d4c2fb30529522184d151dc087dc","id":2431,"name":"L2MetisMinted","nameLocation":"1494:13:11","nodeType":"EventDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1516:6:11","nodeType":"VariableDeclaration","scope":2431,"src":"1508:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1508:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1507:16:11"},"src":"1488:36:11"},{"anonymous":false,"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"1530:205:11","text":"@notice Emits when the sequencer agent template is set.\n @param oldValue The address of the old sequencer agent template.\n @param newValue The address of the new sequencer agent template."},"eventSelector":"89f95c1c05541b14dfba454fd2db710f8e161c6d351a2d325053db70b7d93fda","id":2438,"name":"SequencerAgentTemplateSet","nameLocation":"1746:25:11","nodeType":"EventDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"indexed":true,"mutability":"mutable","name":"oldValue","nameLocation":"1788:8:11","nodeType":"VariableDeclaration","scope":2438,"src":"1772:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"1772:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"indexed":true,"mutability":"mutable","name":"newValue","nameLocation":"1814:8:11","nodeType":"VariableDeclaration","scope":2438,"src":"1798:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1771:52:11"},"src":"1740:84:11"},{"anonymous":false,"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"1830:101:11","text":"@notice Emits when the L2 gas limit is set.\n @param oldValue The old L2 gas limit.        "},"eventSelector":"4042b09a75e5a67c8cc2a57e00de6d29fb5202b7207afba895eb8b5cc3e2179e","id":2445,"name":"L2GasSet","nameLocation":"1942:8:11","nodeType":"EventDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"indexed":false,"mutability":"mutable","name":"oldValue","nameLocation":"1958:8:11","nodeType":"VariableDeclaration","scope":2445,"src":"1951:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2440,"name":"uint32","nodeType":"ElementaryTypeName","src":"1951:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2443,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"1975:8:11","nodeType":"VariableDeclaration","scope":2445,"src":"1968:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2442,"name":"uint32","nodeType":"ElementaryTypeName","src":"1968:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1950:34:11"},"src":"1936:49:11"},{"anonymous":false,"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"1991:144:11","text":"@notice Emits when withdrawRewards is set.\n @param oldValue The old withdrawRewards.\n @param newValue The new withdrawRewards."},"eventSelector":"ba50596d5d8d3fffda559f307b84b1b0bdba201192d70b393820eab501346b1e","id":2452,"name":"WithdrawRewardsSet","nameLocation":"2146:18:11","nodeType":"EventDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"indexed":false,"mutability":"mutable","name":"oldValue","nameLocation":"2170:8:11","nodeType":"VariableDeclaration","scope":2452,"src":"2165:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2447,"name":"bool","nodeType":"ElementaryTypeName","src":"2165:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2450,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"2185:8:11","nodeType":"VariableDeclaration","scope":2452,"src":"2180:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2449,"name":"bool","nodeType":"ElementaryTypeName","src":"2180:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2164:30:11"},"src":"2140:55:11"},{"constant":false,"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"2201:55:11","text":"@notice The template contract for sequencer agents."},"functionSelector":"8db8ad88","id":2455,"mutability":"mutable","name":"sequencerAgentTemplate","nameLocation":"2276:22:11","nodeType":"VariableDeclaration","scope":3121,"src":"2261:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"2261:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"2305:28:11","text":"@notice The Metis token."},"functionSelector":"e5974554","id":2459,"mutability":"mutable","name":"metis","nameLocation":"2352:5:11","nodeType":"VariableDeclaration","scope":3121,"src":"2338:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"},"typeName":{"id":2458,"nodeType":"UserDefinedTypeName","pathNode":{"id":2457,"name":"IERC20","nameLocations":["2338:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"2338:6:11"},"referencedDeclaration":979,"src":"2338:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"2364:45:11","text":"@notice The LockingPool contract address."},"functionSelector":"85d1e2b8","id":2463,"mutability":"mutable","name":"lockingPool","nameLocation":"2434:11:11","nodeType":"VariableDeclaration","scope":3121,"src":"2414:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"},"typeName":{"id":2462,"nodeType":"UserDefinedTypeName","pathNode":{"id":2461,"name":"ILockingPool","nameLocations":["2414:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":3737,"src":"2414:12:11"},"referencedDeclaration":3737,"src":"2414:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"visibility":"public"},{"constant":false,"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"2452:45:11","text":"@notice The LockingInfo contract address."},"functionSelector":"f7cee36a","id":2467,"mutability":"mutable","name":"lockingInfo","nameLocation":"2522:11:11","nodeType":"VariableDeclaration","scope":3121,"src":"2502:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"},"typeName":{"id":2466,"nodeType":"UserDefinedTypeName","pathNode":{"id":2465,"name":"ILockingInfo","nameLocations":["2502:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":3387,"src":"2502:12:11"},"referencedDeclaration":3387,"src":"2502:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"visibility":"public"},{"constant":false,"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"2540:38:11","text":"@notice The L2 messenger contract."},"functionSelector":"3cb747bf","id":2471,"mutability":"mutable","name":"messenger","nameLocation":"2612:9:11","nodeType":"VariableDeclaration","scope":3121,"src":"2583:38:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3199","typeString":"contract ICrossDomainMessenger"},"typeName":{"id":2470,"nodeType":"UserDefinedTypeName","pathNode":{"id":2469,"name":"ICrossDomainMessenger","nameLocations":["2583:21:11"],"nodeType":"IdentifierPath","referencedDeclaration":3199,"src":"2583:21:11"},"referencedDeclaration":3199,"src":"2583:21:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3199","typeString":"contract ICrossDomainMessenger"}},"visibility":"public"},{"constant":false,"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"2628:35:11","text":"@notice The ID of the L2 chain."},"functionSelector":"d6ae3cd5","id":2474,"mutability":"mutable","name":"l2ChainId","nameLocation":"2683:9:11","nodeType":"VariableDeclaration","scope":3121,"src":"2668:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2668:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"2699:55:11","text":"@notice The address of the L2 MetisMinter contract."},"functionSelector":"080e1e4e","id":2477,"mutability":"mutable","name":"l2Minter","nameLocation":"2774:8:11","nodeType":"VariableDeclaration","scope":3121,"src":"2759:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"2759:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"2789:60:11","text":"@notice The address of the L2 RewardDispatcher contract."},"functionSelector":"e92d61e5","id":2480,"mutability":"mutable","name":"l2RewardDispatcher","nameLocation":"2869:18:11","nodeType":"VariableDeclaration","scope":3121,"src":"2854:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"2854:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"2894:41:11","text":"@notice The list of sequencer agents."},"functionSelector":"457cb586","id":2485,"mutability":"mutable","name":"sequencerAgents","nameLocation":"2974:15:11","nodeType":"VariableDeclaration","scope":3121,"src":"2940:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"},"typeName":{"id":2484,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2482,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"2940:26:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_address_$","typeString":"mapping(uint32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"2958:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"2996:43:11","text":"@notice The number of sequencer agents."},"functionSelector":"9e935704","id":2488,"mutability":"mutable","name":"sequencerAgentCount","nameLocation":"3058:19:11","nodeType":"VariableDeclaration","scope":3121,"src":"3044:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2487,"name":"uint32","nodeType":"ElementaryTypeName","src":"3044:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"3084:51:11","text":"@notice The list of active sequencer agent IDs."},"functionSelector":"1abdaf6a","id":2492,"mutability":"mutable","name":"activeSequencerIds","nameLocation":"3156:18:11","nodeType":"VariableDeclaration","scope":3121,"src":"3140:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage","typeString":"uint32[]"},"typeName":{"baseType":{"id":2490,"name":"uint32","nodeType":"ElementaryTypeName","src":"3140:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2491,"nodeType":"ArrayTypeName","src":"3140:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"3181:49:11","text":"@notice The sum of rewards of all sequencers."},"functionSelector":"7ca4f8b0","id":2495,"mutability":"mutable","name":"sumRewards","nameLocation":"3250:10:11","nodeType":"VariableDeclaration","scope":3121,"src":"3235:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"3267:25:11","text":"@notice L2 gas limit."},"functionSelector":"3cbb6979","id":2498,"mutability":"mutable","name":"l2Gas","nameLocation":"3311:5:11","nodeType":"VariableDeclaration","scope":3121,"src":"3297:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2497,"name":"uint32","nodeType":"ElementaryTypeName","src":"3297:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"3323:28:11","text":"@notice withdraw rewards"},"functionSelector":"c7b8981c","id":2501,"mutability":"mutable","name":"withdrawRewards","nameLocation":"3368:15:11","nodeType":"VariableDeclaration","scope":3121,"src":"3356:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2500,"name":"bool","nodeType":"ElementaryTypeName","src":"3356:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"04a78fca","id":2503,"mutability":"mutable","name":"sequencerId","nameLocation":"3405:11:11","nodeType":"VariableDeclaration","scope":3121,"src":"3390:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c3b550c8","id":2505,"mutability":"mutable","name":"sequencerSigner","nameLocation":"3437:15:11","nodeType":"VariableDeclaration","scope":3121,"src":"3422:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"3422:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"02fb0c5e","id":2507,"mutability":"mutable","name":"active","nameLocation":"3470:6:11","nodeType":"VariableDeclaration","scope":3121,"src":"3458:18:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"3458:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"97ec19be","id":2509,"mutability":"mutable","name":"redemptionQueue","nameLocation":"3497:15:11","nodeType":"VariableDeclaration","scope":3121,"src":"3482:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"3518:245:11","text":"@notice Withdaws Metis token and deposits Metis tokens into the redemption queue.\n @param recipient The recipient of the  Metis token on  L2 (redemptionQueue).\n @param amount The amount of Metis tokens that have been deposited."},"eventSelector":"6ef7a26d50cec3f1a210bed887413d426c9c13575a17872c54e00c4287ac5dce","id":2516,"name":"StakingAmountWithdrawn","nameLocation":"3774:22:11","nodeType":"EventDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3813:9:11","nodeType":"VariableDeclaration","scope":2516,"src":"3797:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"3797:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3832:6:11","nodeType":"VariableDeclaration","scope":2516,"src":"3824:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3796:43:11"},"src":"3768:72:11"},{"anonymous":false,"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"3846:254:11","text":"@notice Emits when the sequencer initial balance is locked.\n @param sequencerSigner The address of the sequencer signer.\n @param amount The amount of Metis tokens that have been locked.\n @param active The status of the sequencer."},"eventSelector":"b1e87a33084279cb2bff2d1271034cf695f539ee73bbd934d1625703d585d84a","id":2525,"name":"SequencerInitialBalanceLocked","nameLocation":"4111:29:11","nodeType":"EventDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"indexed":true,"mutability":"mutable","name":"sequencerSigner","nameLocation":"4157:15:11","nodeType":"VariableDeclaration","scope":2525,"src":"4141:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"4141:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2521,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4182:6:11","nodeType":"VariableDeclaration","scope":2525,"src":"4174:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"indexed":false,"mutability":"mutable","name":"active","nameLocation":"4194:6:11","nodeType":"VariableDeclaration","scope":2525,"src":"4189:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2522,"name":"bool","nodeType":"ElementaryTypeName","src":"4189:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4140:61:11"},"src":"4105:97:11"},{"anonymous":false,"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"4208:119:11","text":"@notice Emits when the sequencer is terminated.\n @param sequencerSigner The address of the sequencer signer."},"eventSelector":"bac99876b6a1c26412460d61d913235a30f0ea99585ffcfd53c0faae6ed33134","id":2530,"name":"SequencerTerminated","nameLocation":"4338:19:11","nodeType":"EventDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"indexed":true,"mutability":"mutable","name":"sequencerSigner","nameLocation":"4374:15:11","nodeType":"VariableDeclaration","scope":2530,"src":"4358:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2527,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4357:33:11"},"src":"4332:59:11"},{"anonymous":false,"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"4397:171:11","text":"@notice Emits when the rewards are withdrawn.\n @param sequencerId The ID of the sequencer.\n @param reward The amount of rewards that have been withdrawn."},"eventSelector":"630af8b49bb398089a74eacdb08106c528436090bdb35d7302152dc5117df9bd","id":2537,"name":"RewardsWithdrawn","nameLocation":"4579:16:11","nodeType":"EventDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"4612:11:11","nodeType":"VariableDeclaration","scope":2537,"src":"4596:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"4596:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2535,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"4633:6:11","nodeType":"VariableDeclaration","scope":2537,"src":"4625:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4625:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4595:45:11"},"src":"4573:68:11"},{"anonymous":false,"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"4647:104:11","text":"@notice Emits when the sequencer is relocked.\n @param isRelocked The status of the sequencer."},"eventSelector":"1e2aed425906c5ed1ac5aff65e04a30adda54675483414997c879ca7f92a2a57","id":2542,"name":"IsSequencerRelocked","nameLocation":"4762:19:11","nodeType":"EventDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"indexed":false,"mutability":"mutable","name":"isRelocked","nameLocation":"4787:10:11","nodeType":"VariableDeclaration","scope":2542,"src":"4782:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2539,"name":"bool","nodeType":"ElementaryTypeName","src":"4782:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4781:17:11"},"src":"4756:43:11"},{"body":{"id":2649,"nodeType":"Block","src":"5099:578:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"_metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"5118:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5136:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5128:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"5128:7:11","typeDescriptions":{}}},"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5128:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5118:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"_lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"5142:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5166:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5158:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:11","typeDescriptions":{}}},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5142:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5118:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"_l1Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"5172:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5193:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5185:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"5185:7:11","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5185:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5172:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5118:77:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"_l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"5199:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5220:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5212:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"5212:7:11","typeDescriptions":{}}},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5212:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5199:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5118:104:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"_l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"5226:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5257:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"5249:7:11","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5249:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5226:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5118:141:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a207a65726f2061646472657373","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5261:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","typeString":"literal_string \"Dealer: zero address\""},"value":"Dealer: zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","typeString":"literal_string \"Dealer: zero address\""}],"id":2562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5109:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5109:175:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2599,"nodeType":"ExpressionStatement","src":"5109:175:11"},{"expression":{"arguments":[{"expression":{"id":2601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5309:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5313:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5309:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2600,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"5294:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5294:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2604,"nodeType":"ExpressionStatement","src":"5294:26:11"},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2605,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"5330:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2607,"name":"_metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"5345:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2606,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5338:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"src":"5330:22:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2610,"nodeType":"ExpressionStatement","src":"5330:22:11"},{"expression":{"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2611,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5362:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2613,"name":"_lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"5389:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2612,"name":"ILockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"5376:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingPool_$3737_$","typeString":"type(contract ILockingPool)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5376:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"src":"5362:40:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2616,"nodeType":"ExpressionStatement","src":"5362:40:11"},{"expression":{"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2617,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"5412:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2618,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"5426:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5438:6:11","memberName":"escrow","nodeType":"MemberAccess","referencedDeclaration":3690,"src":"5426:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_ILockingInfo_$3387_$","typeString":"function () view external returns (contract ILockingInfo)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"src":"5412:34:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"id":2622,"nodeType":"ExpressionStatement","src":"5412:34:11"},{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2623,"name":"messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5456:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3199","typeString":"contract ICrossDomainMessenger"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2626,"name":"_l1Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"5510:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2625,"name":"ICrossDomainEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"5490:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICrossDomainEnabled_$3129_$","typeString":"type(contract ICrossDomainEnabled)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5490:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainEnabled_$3129","typeString":"contract ICrossDomainEnabled"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5521:9:11","memberName":"messenger","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"5490:40:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5490:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2624,"name":"ICrossDomainMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"5468:21:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICrossDomainMessenger_$3199_$","typeString":"type(contract ICrossDomainMessenger)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3199","typeString":"contract ICrossDomainMessenger"}},"src":"5456:77:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3199","typeString":"contract ICrossDomainMessenger"}},"id":2632,"nodeType":"ExpressionStatement","src":"5456:77:11"},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2633,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"5543:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2634,"name":"_l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5543:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"5543:22:11"},{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2637,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"5575:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2638,"name":"_l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5583:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5575:14:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2640,"nodeType":"ExpressionStatement","src":"5575:14:11"},{"expression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2641,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"5599:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2642,"name":"_l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"5610:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2644,"nodeType":"ExpressionStatement","src":"5599:20:11"},{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2645,"name":"l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5629:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2646,"name":"_l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"5650:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5629:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2648,"nodeType":"ExpressionStatement","src":"5629:40:11"}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"4805:37:11","text":"@notice Initializes the contract."},"functionSelector":"b699ce5f","id":2650,"implemented":true,"kind":"function","modifiers":[{"id":2560,"kind":"modifierInvocation","modifierName":{"id":2559,"name":"initializer","nameLocations":["5087:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"5087:11:11"},"nodeType":"ModifierInvocation","src":"5087:11:11"}],"name":"initialize","nameLocation":"4856:10:11","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"_metis","nameLocation":"4885:6:11","nodeType":"VariableDeclaration","scope":2650,"src":"4877:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"4877:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"_lockingPool","nameLocation":"4910:12:11","nodeType":"VariableDeclaration","scope":2650,"src":"4902:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"4902:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"_l1Bridge","nameLocation":"4941:9:11","nodeType":"VariableDeclaration","scope":2650,"src":"4933:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"4933:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"_l2ChainId","nameLocation":"4969:10:11","nodeType":"VariableDeclaration","scope":2650,"src":"4961:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"_l2Gas","nameLocation":"4997:6:11","nodeType":"VariableDeclaration","scope":2650,"src":"4990:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2552,"name":"uint32","nodeType":"ElementaryTypeName","src":"4990:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"_l2Minter","nameLocation":"5022:9:11","nodeType":"VariableDeclaration","scope":2650,"src":"5014:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"_l2RewardDispatcher","nameLocation":"5050:19:11","nodeType":"VariableDeclaration","scope":2650,"src":"5042:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"5042:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4866:213:11"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[],"src":"5099:0:11"},"scope":3121,"src":"4847:830:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2725,"nodeType":"Block","src":"6073:910:11","statements":[{"assignments":[2663],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"dealerBalance","nameLocation":"6160:13:11","nodeType":"VariableDeclaration","scope":2725,"src":"6152:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"6152:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2671,"initialValue":{"arguments":[{"arguments":[{"id":2668,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"6200:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Dealer_$3121","typeString":"contract Dealer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dealer_$3121","typeString":"contract Dealer"}],"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6192:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"6192:7:11","typeDescriptions":{}}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6192:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2664,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"6176:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6182:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":936,"src":"6176:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6152:54:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"dealerBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"6224:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2674,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"6241:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6224:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a20496e73756666696369656e74204d657469732062616c616e6365","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6250:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3","typeString":"literal_string \"Dealer: Insufficient Metis balance\""},"value":"Dealer: Insufficient Metis balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3","typeString":"literal_string \"Dealer: Insufficient Metis balance\""}],"id":2672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6216:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6216:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"6216:71:11"},{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6298:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2680,"name":"_sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"6316:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6298:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2682,"nodeType":"ExpressionStatement","src":"6298:34:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2688,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"6470:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}],"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6462:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"6462:7:11","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6462:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6489:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"6489:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6484:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6498:3:11","memberName":"max","nodeType":"MemberAccess","src":"6484:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2684,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"6448:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6454:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":966,"src":"6448:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6448:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a20417070726f76616c20746f204c6f636b696e67496e666f206661696c6564","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6516:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa","typeString":"literal_string \"Dealer: Approval to LockingInfo failed\""},"value":"Dealer: Approval to LockingInfo failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa","typeString":"literal_string \"Dealer: Approval to LockingInfo failed\""}],"id":2683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6427:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6427:139:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2698,"nodeType":"ExpressionStatement","src":"6427:139:11"},{"expression":{"arguments":[{"id":2702,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6693:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2703,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"6709:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2704,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"6719:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2705,"name":"_signerPubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"6728:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2699,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"6657:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6669:23:11","memberName":"lockWithRewardRecipient","nodeType":"MemberAccess","referencedDeclaration":3654,"src":"6657:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory) external"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6657:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2707,"nodeType":"ExpressionStatement","src":"6657:85:11"},{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2708,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"6822:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2711,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6859:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2709,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"6836:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6848:10:11","memberName":"seqSigners","nodeType":"MemberAccess","referencedDeclaration":3705,"src":"6836:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6836:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6822:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"6822:53:11"},{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2715,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6885:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6894:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6885:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2718,"nodeType":"ExpressionStatement","src":"6885:13:11"},{"eventCall":{"arguments":[{"id":2720,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6943:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2721,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"6960:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2722,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6969:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2719,"name":"SequencerInitialBalanceLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6913:29:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6913:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"EmitStatement","src":"6908:68:11"}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"5683:248:11","text":"@notice Locks Metis tokens for a new sequencer.\n @param _sequencerSigner The address of the sequencer signer.\n @param _amount The amount of Metis tokens to lock.\n @param _signerPubKey The public key of the sequencer signer."},"functionSelector":"af70cba5","id":2726,"implemented":true,"kind":"function","modifiers":[{"id":2660,"kind":"modifierInvocation","modifierName":{"id":2659,"name":"onlyOwner","nameLocations":["6063:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6063:9:11"},"nodeType":"ModifierInvocation","src":"6063:9:11"}],"name":"lockFor","nameLocation":"5945:7:11","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"_sequencerSigner","nameLocation":"5970:16:11","nodeType":"VariableDeclaration","scope":2726,"src":"5962:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"5962:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"_amount","nameLocation":"6004:7:11","nodeType":"VariableDeclaration","scope":2726,"src":"5996:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"5996:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"_signerPubKey","nameLocation":"6034:13:11","nodeType":"VariableDeclaration","scope":2726,"src":"6021:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2656,"name":"bytes","nodeType":"ElementaryTypeName","src":"6021:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5952:101:11"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[],"src":"6073:0:11"},"scope":3121,"src":"5936:1047:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2750,"nodeType":"Block","src":"7100:148:11","statements":[{"expression":{"arguments":[{"id":2738,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"7147:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2739,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"7160:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2732,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7110:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7122:6:11","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"7110:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32) payable external"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7136:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:5:11","memberName":"value","nodeType":"MemberAccess","src":"7136:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7110:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$value","typeString":"function (uint256,uint32) payable external"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7110:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"ExpressionStatement","src":"7110:56:11"},{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"7176:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7185:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7176:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2745,"nodeType":"ExpressionStatement","src":"7176:14:11"},{"eventCall":{"arguments":[{"id":2747,"name":"sequencerSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"7225:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2746,"name":"SequencerTerminated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"7205:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"EmitStatement","src":"7200:41:11"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"6990:60:11","text":"@notice Unlock Metis tokens and terminate the sequencer."},"functionSelector":"a69df4b5","id":2751,"implemented":true,"kind":"function","modifiers":[{"id":2730,"kind":"modifierInvocation","modifierName":{"id":2729,"name":"onlyOwner","nameLocations":["7090:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7090:9:11"},"nodeType":"ModifierInvocation","src":"7090:9:11"}],"name":"unlock","nameLocation":"7064:6:11","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[],"src":"7070:2:11"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[],"src":"7100:0:11"},"scope":3121,"src":"7055:193:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2767,"nodeType":"Block","src":"7442:78:11","statements":[{"expression":{"arguments":[{"id":2763,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"7494:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2764,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"7507:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2757,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7452:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7464:11:11","memberName":"unlockClaim","nodeType":"MemberAccess","referencedDeclaration":3684,"src":"7452:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32) payable external"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7483:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7487:5:11","memberName":"value","nodeType":"MemberAccess","src":"7483:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7452:41:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_uint32_$returns$__$value","typeString":"function (uint256,uint32) payable external"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7452:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2766,"nodeType":"ExpressionStatement","src":"7452:61:11"}]},"documentation":{"id":2752,"nodeType":"StructuredDocumentation","src":"7254:133:11","text":"@notice The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed."},"functionSelector":"feafaa6b","id":2768,"implemented":true,"kind":"function","modifiers":[{"id":2755,"kind":"modifierInvocation","modifierName":{"id":2754,"name":"onlyOwner","nameLocations":["7432:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7432:9:11"},"nodeType":"ModifierInvocation","src":"7432:9:11"}],"name":"unlockClaim","nameLocation":"7401:11:11","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[],"src":"7412:2:11"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[],"src":"7442:0:11"},"scope":3121,"src":"7392:128:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2779,"nodeType":"Block","src":"7607:59:11","statements":[{"expression":{"arguments":[{"id":2776,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"7647:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2774,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7624:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7636:10:11","memberName":"sequencers","nodeType":"MemberAccess","referencedDeclaration":3698,"src":"7624:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_SequencerData_$3634_memory_ptr_$","typeString":"function (uint256) view external returns (struct ILockingPool.SequencerData memory)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"functionReturnParameters":2773,"id":2778,"nodeType":"Return","src":"7617:42:11"}]},"functionSelector":"76d9f95c","id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"sequencerData","nameLocation":"7535:13:11","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[],"src":"7548:2:11"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"7572:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":2771,"nodeType":"UserDefinedTypeName","pathNode":{"id":2770,"name":"ILockingPool.SequencerData","nameLocations":["7572:12:11","7585:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3634,"src":"7572:26:11"},"referencedDeclaration":3634,"src":"7572:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"src":"7571:35:11"},"scope":3121,"src":"7526:140:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2952,"nodeType":"Block","src":"8157:2374:11","statements":[{"expression":{"arguments":[{"id":2787,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"8175:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465616c65723a206e6f206163746976652073657175656e636572","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8183:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","typeString":"literal_string \"Dealer: no active sequencer\""},"value":"Dealer: no active sequencer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","typeString":"literal_string \"Dealer: no active sequencer\""}],"id":2786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8167:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2790,"nodeType":"ExpressionStatement","src":"8167:46:11"},{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"maxLock","nameLocation":"8229:7:11","nodeType":"VariableDeclaration","scope":2952,"src":"8224:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint","nodeType":"ElementaryTypeName","src":"8224:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2798,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2794,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"8252:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}],"id":2793,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"8239:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingInfo_$3387_$","typeString":"type(contract ILockingInfo)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8239:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8265:7:11","memberName":"maxLock","nodeType":"MemberAccess","referencedDeclaration":3386,"src":"8239:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8239:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8224:50:11"},{"assignments":[2800],"declarations":[{"constant":false,"id":2800,"mutability":"mutable","name":"undistributedAmount","nameLocation":"8292:19:11","nodeType":"VariableDeclaration","scope":2952,"src":"8284:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"8284:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2808,"initialValue":{"arguments":[{"arguments":[{"id":2805,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"8338:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Dealer_$3121","typeString":"contract Dealer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Dealer_$3121","typeString":"contract Dealer"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8330:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"8330:7:11","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8330:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2801,"name":"metis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"8314:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8320:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":936,"src":"8314:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8284:60:11"},{"assignments":[2810],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"totalRewards","nameLocation":"8362:12:11","nodeType":"VariableDeclaration","scope":2952,"src":"8354:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"8354:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2812,"initialValue":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8354:24:11"},{"body":{"id":2933,"nodeType":"Block","src":"8419:1763:11","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"seq","nameLocation":"8467:3:11","nodeType":"VariableDeclaration","scope":2933,"src":"8433:37:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":2826,"nodeType":"UserDefinedTypeName","pathNode":{"id":2825,"name":"ILockingPool.SequencerData","nameLocations":["8433:12:11","8446:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":3634,"src":"8433:26:11"},"referencedDeclaration":3634,"src":"8433:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2828,"name":"sequencerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8473:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_SequencerData_$3634_memory_ptr_$","typeString":"function () view returns (struct ILockingPool.SequencerData memory)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8473:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"nodeType":"VariableDeclarationStatement","src":"8433:55:11"},{"assignments":[2832,2834],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"reward","nameLocation":"8511:6:11","nodeType":"VariableDeclaration","scope":2933,"src":"8503:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8503:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"locked","nameLocation":"8527:6:11","nodeType":"VariableDeclaration","scope":2933,"src":"8519:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"8519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2840,"initialValue":{"components":[{"expression":{"id":2835,"name":"seq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"8538:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"id":2836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8542:6:11","memberName":"reward","nodeType":"MemberAccess","referencedDeclaration":3617,"src":"8538:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2837,"name":"seq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"8550:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"id":2838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8554:6:11","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3615,"src":"8550:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8537:24:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8502:59:11"},{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"8575:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2842,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"8591:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8575:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"8575:22:11"},{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"lockQuota","nameLocation":"8753:9:11","nodeType":"VariableDeclaration","scope":2933,"src":"8745:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"8745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2855,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8765:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2848,"name":"maxLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8765:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8803:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8765:39:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"maxLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8784:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2851,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8794:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8784:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8745:59:11"},{"assignments":[2857],"declarations":[{"constant":false,"id":2857,"mutability":"mutable","name":"lockAmount","nameLocation":"8951:10:11","nodeType":"VariableDeclaration","scope":2933,"src":"8943:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8943:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2863,"initialValue":{"arguments":[{"id":2860,"name":"lockQuota","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"8973:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2861,"name":"undistributedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"8984:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2858,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8964:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2396_$","typeString":"type(library Math)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8969:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":1547,"src":"8964:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8964:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8943:61:11"},{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2864,"name":"undistributedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"9130:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2865,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"9153:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9130:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"9130:33:11"},{"assignments":[2869],"declarations":[{"constant":false,"id":2869,"mutability":"mutable","name":"toBeProcessed","nameLocation":"9288:13:11","nodeType":"VariableDeclaration","scope":2933,"src":"9280:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2873,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"9304:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2871,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"9317:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9304:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9280:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"toBeProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"9341:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9358:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9341:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"nodeType":"IfStatement","src":"9337:65:11","trueBody":{"id":2878,"nodeType":"Block","src":"9361:41:11","statements":[{"id":2877,"nodeType":"Continue","src":"9379:8:11"}]}},{"expression":{"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2880,"name":"totalProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"9416:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2881,"name":"toBeProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"9434:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2883,"nodeType":"ExpressionStatement","src":"9416:31:11"},{"assignments":[2885],"declarations":[{"constant":false,"id":2885,"mutability":"mutable","name":"_withdrawRewards","nameLocation":"9595:16:11","nodeType":"VariableDeclaration","scope":2933,"src":"9590:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2884,"name":"bool","nodeType":"ElementaryTypeName","src":"9590:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2891,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"9614:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2887,"name":"toBeProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"9623:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9614:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2889,"name":"maxLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"9639:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9614:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9590:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"_withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9664:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"9684:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9693:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9684:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9664:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"9660:176:11","trueBody":{"id":2909,"nodeType":"Block","src":"9696:140:11","statements":[{"expression":{"arguments":[{"id":2900,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9742:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2901,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9755:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2897,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"9714:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9726:15:11","memberName":"withdrawRewards","nodeType":"MemberAccess","referencedDeclaration":3670,"src":"9714:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint32_$returns$__$","typeString":"function (uint256,uint32) external"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9714:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"ExpressionStatement","src":"9714:47:11"},{"eventCall":{"arguments":[{"id":2905,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9801:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2906,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"9814:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2904,"name":"RewardsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"9784:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9784:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"EmitStatement","src":"9779:42:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9990:17:11","subExpression":{"id":2911,"name":"_withdrawRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9991:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"10011:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10024:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10011:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9990:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2932,"nodeType":"IfStatement","src":"9986:186:11","trueBody":{"id":2931,"nodeType":"Block","src":"10027:145:11","statements":[{"expression":{"arguments":[{"id":2920,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"10064:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2921,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"10077:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10089:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2917,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10045:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10057:6:11","memberName":"relock","nodeType":"MemberAccess","referencedDeclaration":3663,"src":"10045:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bool) external"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10045:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"ExpressionStatement","src":"10045:49:11"},{"eventCall":{"arguments":[{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10135:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2927,"name":"lockAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"10138:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2928,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"10150:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"name":"SequencerRelocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"10117:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint32,uint256,uint256)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10117:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"EmitStatement","src":"10112:45:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8407:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8411:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8407:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2934,"initializationExpression":{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"i","nameLocation":"8400:1:11","nodeType":"VariableDeclaration","scope":2934,"src":"8393:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2813,"name":"uint32","nodeType":"ElementaryTypeName","src":"8393:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2816,"initialValue":{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8404:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8393:12:11"},"loopExpression":{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8414:3:11","subExpression":{"id":2820,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8414:1:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2822,"nodeType":"ExpressionStatement","src":"8414:3:11"},"nodeType":"ForStatement","src":"8388:1794:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10374:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10374:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"10370:114:11","trueBody":{"id":2946,"nodeType":"Block","src":"10392:92:11","statements":[{"expression":{"arguments":[{"id":2939,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10420:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2938,"name":"_mintL2EMetis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10406:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10406:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2941,"nodeType":"ExpressionStatement","src":"10406:27:11"},{"expression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2942,"name":"sumRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"10447:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2943,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10461:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10447:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2945,"nodeType":"ExpressionStatement","src":"10447:26:11"}]}},{"eventCall":{"arguments":[{"hexValue":"74727565","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10519:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2948,"name":"IsSequencerRelocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"10499:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10499:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2951,"nodeType":"EmitStatement","src":"10494:30:11"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"7672:412:11","text":"@notice Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\n @dev The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\n @return totalProcessed The total amount of Metis tokens and rewards that have been relocked."},"functionSelector":"c53b573d","id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"relock","nameLocation":"8098:6:11","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"8104:2:11"},"returnParameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"totalProcessed","nameLocation":"8141:14:11","nodeType":"VariableDeclaration","scope":2953,"src":"8133:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"8133:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8132:24:11"},"scope":3121,"src":"8089:2442:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2974,"nodeType":"Block","src":"10749:97:11","statements":[{"assignments":[2962],"declarations":[{"constant":false,"id":2962,"mutability":"mutable","name":"_old","nameLocation":"10766:4:11","nodeType":"VariableDeclaration","scope":2974,"src":"10759:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2961,"name":"uint32","nodeType":"ElementaryTypeName","src":"10759:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2964,"initialValue":{"id":2963,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"10773:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"10759:19:11"},{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"10788:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2966,"name":"_l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10796:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10788:14:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2968,"nodeType":"ExpressionStatement","src":"10788:14:11"},{"eventCall":{"arguments":[{"id":2970,"name":"_old","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"10826:4:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2971,"name":"_l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10832:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2969,"name":"L2GasSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10817:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10817:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"EmitStatement","src":"10812:27:11"}]},"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"10537:155:11","text":"@notice Sets the L2 gas limit.\n @param _l2Gas The new L2 gas limit.\n @dev The L2 gas limit is used when minting eMetis tokens on Layer 2."},"functionSelector":"33bec7e7","id":2975,"implemented":true,"kind":"function","modifiers":[{"id":2959,"kind":"modifierInvocation","modifierName":{"id":2958,"name":"onlyOwner","nameLocations":["10739:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"10739:9:11"},"nodeType":"ModifierInvocation","src":"10739:9:11"}],"name":"setL2Gas","nameLocation":"10706:8:11","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"_l2Gas","nameLocation":"10722:6:11","nodeType":"VariableDeclaration","scope":2975,"src":"10715:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2955,"name":"uint32","nodeType":"ElementaryTypeName","src":"10715:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"10714:15:11"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[],"src":"10749:0:11"},"scope":3121,"src":"10697:149:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2985,"nodeType":"Block","src":"11006:46:11","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2981,"name":"sequencerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"11023:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_SequencerData_$3634_memory_ptr_$","typeString":"function () view returns (struct ILockingPool.SequencerData memory)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11023:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData memory"}},"id":2983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11039:6:11","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3615,"src":"11023:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2980,"id":2984,"nodeType":"Return","src":"11016:29:11"}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"10852:94:11","text":"@notice Returns the total amount of Metis tokens that have been locked for all sequencers."},"functionSelector":"56891412","id":2986,"implemented":true,"kind":"function","modifiers":[],"name":"totalLocked","nameLocation":"10960:11:11","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"10971:2:11"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2986,"src":"10997:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"10997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10996:9:11"},"scope":3121,"src":"10951:101:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3018,"nodeType":"Block","src":"11181:237:11","statements":[{"assignments":[2993],"declarations":[{"constant":false,"id":2993,"mutability":"mutable","name":"message","nameLocation":"11204:7:11","nodeType":"VariableDeclaration","scope":3018,"src":"11191:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2992,"name":"bytes","nodeType":"ElementaryTypeName","src":"11191:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3001,"initialValue":{"arguments":[{"expression":{"expression":{"id":2996,"name":"IVeMetisMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"11237:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVeMetisMinter_$3839_$","typeString":"type(contract IVeMetisMinter)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11252:10:11","memberName":"mintFromL1","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"11237:25:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_uint256_$returns$__$","typeString":"function IVeMetisMinter.mintFromL1(uint256)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11263:8:11","memberName":"selector","nodeType":"MemberAccess","src":"11237:34:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"11273:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2994,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"11214:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11218:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"11214:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11191:89:11"},{"expression":{"arguments":[{"id":3008,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"11339:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3009,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11350:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3010,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"11360:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3011,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"11369:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3002,"name":"messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"11290:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_ICrossDomainMessenger_$3199","typeString":"contract ICrossDomainMessenger"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11300:21:11","memberName":"sendMessageViaChainId","nodeType":"MemberAccess","referencedDeclaration":3181,"src":"11290:31:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$","typeString":"function (uint256,address,bytes memory,uint32) payable external"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"11328:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11332:5:11","memberName":"value","nodeType":"MemberAccess","src":"11328:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11290:48:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$value","typeString":"function (uint256,address,bytes memory,uint32) payable external"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11290:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3013,"nodeType":"ExpressionStatement","src":"11290:85:11"},{"eventCall":{"arguments":[{"id":3015,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"11404:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"name":"L2MetisMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"11390:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11390:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3017,"nodeType":"EmitStatement","src":"11385:26:11"}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"11058:70:11","text":"@notice mint veMetis on Layer 2\n @param amount Metis amount"},"id":3019,"implemented":true,"kind":"function","modifiers":[],"name":"_mintL2EMetis","nameLocation":"11142:13:11","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"amount","nameLocation":"11164:6:11","nodeType":"VariableDeclaration","scope":3019,"src":"11156:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"11156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11155:16:11"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[],"src":"11181:0:11"},"scope":3121,"src":"11133:285:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"11647:453:11","statements":[{"expression":{"arguments":[{"id":3030,"name":"sequencerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"11678:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3031,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11691:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3027,"name":"lockingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"11657:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingPool_$3737","typeString":"contract ILockingPool"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11669:8:11","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3736,"src":"11657:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11657:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"ExpressionStatement","src":"11657:41:11"},{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"bridge","nameLocation":"11717:6:11","nodeType":"VariableDeclaration","scope":3083,"src":"11709:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3034,"name":"address","nodeType":"ElementaryTypeName","src":"11709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3041,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3037,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"11739:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}],"id":3036,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11726:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingInfo_$3387_$","typeString":"type(contract ILockingInfo)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11726:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11752:6:11","memberName":"bridge","nodeType":"MemberAccess","referencedDeclaration":3366,"src":"11726:32:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11726:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11709:51:11"},{"expression":{"arguments":[{"id":3050,"name":"bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"11822:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11830:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3044,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"11790:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}],"id":3043,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11777:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingInfo_$3387_$","typeString":"type(contract ILockingInfo)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11777:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11803:7:11","memberName":"l1Token","nodeType":"MemberAccess","referencedDeclaration":3371,"src":"11777:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11777:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3042,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"11770:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$979_$","typeString":"type(contract IERC20)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11770:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$979","typeString":"contract IERC20"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11814:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":966,"src":"11770:51:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11770:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"ExpressionStatement","src":"11770:67:11"},{"expression":{"arguments":[{"id":3061,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"11912:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3063,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"11936:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}],"id":3062,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11923:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingInfo_$3387_$","typeString":"type(contract ILockingInfo)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11923:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11949:7:11","memberName":"l1Token","nodeType":"MemberAccess","referencedDeclaration":3371,"src":"11923:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11923:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3068,"name":"lockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"11973:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}],"id":3067,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11960:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILockingInfo_$3387_$","typeString":"type(contract ILockingInfo)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11960:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11986:7:11","memberName":"l2Token","nodeType":"MemberAccess","referencedDeclaration":3376,"src":"11960:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11960:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3072,"name":"redemptionQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11997:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3073,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"12014:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3074,"name":"l2Gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"12022:5:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12029:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3055,"name":"bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"11862:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3054,"name":"IL1ERC20Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"11847:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IL1ERC20Bridge_$3353_$","typeString":"type(contract IL1ERC20Bridge)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IL1ERC20Bridge_$3353","typeString":"contract IL1ERC20Bridge"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11870:23:11","memberName":"depositERC20ToByChainId","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"11847:46:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,address,uint256,uint32,bytes memory) payable external"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3058,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"11901:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11905:5:11","memberName":"value","nodeType":"MemberAccess","src":"11901:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11847:64:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint256,address,address,address,uint256,uint32,bytes memory) payable external"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:185:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3077,"nodeType":"ExpressionStatement","src":"11847:185:11"},{"eventCall":{"arguments":[{"id":3079,"name":"redemptionQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12070:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3080,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"12086:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"StakingAmountWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"12047:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12047:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3082,"nodeType":"EmitStatement","src":"12042:51:11"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"11424:146:11","text":"@notice withdraw locked Metis tokens and deposits them into the redemptionQueue.\n @param amount The amount of Metis tokens to withdraw."},"functionSelector":"0182a6da","id":3084,"implemented":true,"kind":"function","modifiers":[{"id":3025,"kind":"modifierInvocation","modifierName":{"id":3024,"name":"onlyOwner","nameLocations":["11637:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11637:9:11"},"nodeType":"ModifierInvocation","src":"11637:9:11"}],"name":"withdrawStakingAmount","nameLocation":"11584:21:11","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"amount","nameLocation":"11614:6:11","nodeType":"VariableDeclaration","scope":3084,"src":"11606:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11606:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11605:16:11"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"11647:0:11"},"scope":3121,"src":"11575:525:11","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3095,"nodeType":"Block","src":"12184:44:11","statements":[{"expression":{"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3091,"name":"l2Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"12194:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3092,"name":"_l2MinterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12205:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12194:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3094,"nodeType":"ExpressionStatement","src":"12194:27:11"}]},"functionSelector":"f87b7a3e","id":3096,"implemented":true,"kind":"function","modifiers":[{"id":3089,"kind":"modifierInvocation","modifierName":{"id":3088,"name":"onlyOwner","nameLocations":["12175:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"12175:9:11"},"nodeType":"ModifierInvocation","src":"12175:9:11"}],"name":"setL2Minter","nameLocation":"12130:11:11","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"_l2MinterAddress","nameLocation":"12150:16:11","nodeType":"VariableDeclaration","scope":3096,"src":"12142:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"12142:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12141:26:11"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"12184:0:11"},"scope":3121,"src":"12121:107:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3107,"nodeType":"Block","src":"12305:51:11","statements":[{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3103,"name":"redemptionQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12315:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3104,"name":"_redemptionQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"12333:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12315:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3106,"nodeType":"ExpressionStatement","src":"12315:34:11"}]},"functionSelector":"3b4c46d0","id":3108,"implemented":true,"kind":"function","modifiers":[{"id":3101,"kind":"modifierInvocation","modifierName":{"id":3100,"name":"onlyOwner","nameLocations":["12295:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"12295:9:11"},"nodeType":"ModifierInvocation","src":"12295:9:11"}],"name":"setRedemptionQueue","nameLocation":"12243:18:11","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"_redemptionQueue","nameLocation":"12270:16:11","nodeType":"VariableDeclaration","scope":3108,"src":"12262:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"12262:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12261:26:11"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[],"src":"12305:0:11"},"scope":3121,"src":"12234:122:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3119,"nodeType":"Block","src":"12439:57:11","statements":[{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3115,"name":"l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"12449:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3116,"name":"_l2RewardDispatcher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"12470:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12449:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3118,"nodeType":"ExpressionStatement","src":"12449:40:11"}]},"functionSelector":"43c82cf7","id":3120,"implemented":true,"kind":"function","modifiers":[{"id":3113,"kind":"modifierInvocation","modifierName":{"id":3112,"name":"onlyOwner","nameLocations":["12429:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"12429:9:11"},"nodeType":"ModifierInvocation","src":"12429:9:11"}],"name":"setL2RewardDispatcher","nameLocation":"12371:21:11","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"_l2RewardDispatcher","nameLocation":"12401:19:11","nodeType":"VariableDeclaration","scope":3120,"src":"12393:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"12393:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12392:29:11"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[],"src":"12439:0:11"},"scope":3121,"src":"12362:134:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3122,"src":"702:11801:11","usedErrors":[30,35,211,214],"usedEvents":[41,219,2417,2426,2431,2438,2445,2452,2516,2525,2530,2537,2542]}],"src":"32:12471:11"},"id":11},"interface/ICrossDomainEnabled.sol":{"ast":{"absolutePath":"interface/ICrossDomainEnabled.sol","exportedSymbols":{"ICrossDomainEnabled":[3129]},"id":3130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3123,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"ICrossDomainEnabled","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3129,"linearizedBaseContracts":[3129],"name":"ICrossDomainEnabled","nameLocation":"67:19:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3cb747bf","id":3128,"implemented":false,"kind":"function","modifiers":[],"name":"messenger","nameLocation":"102:9:12","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[],"src":"111:2:12"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3128,"src":"137:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"136:9:12"},"scope":3129,"src":"93:53:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3130,"src":"57:91:12","usedErrors":[],"usedEvents":[]}],"src":"32:116:12"},"id":12},"interface/ICrossDomainMessenger.sol":{"ast":{"absolutePath":"interface/ICrossDomainMessenger.sol","exportedSymbols":{"ICrossDomainMessenger":[3199]},"id":3200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3131,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ICrossDomainMessenger","contractDependencies":[],"contractKind":"interface","documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"57:39:13","text":" @title ICrossDomainMessenger"},"fullyImplemented":false,"id":3199,"linearizedBaseContracts":[3199],"name":"ICrossDomainMessenger","nameLocation":"107:21:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"678d1db16886696652bddc90d68217be474de2ce959bf7383cb63eaa8c6f1afa","id":3146,"name":"SentMessage","nameLocation":"191:11:13","nodeType":"EventDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"228:6:13","nodeType":"VariableDeclaration","scope":3146,"src":"212:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3133,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3136,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"252:6:13","nodeType":"VariableDeclaration","scope":3146,"src":"244:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"244:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3138,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"274:7:13","nodeType":"VariableDeclaration","scope":3146,"src":"268:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"268:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3140,"indexed":false,"mutability":"mutable","name":"messageNonce","nameLocation":"299:12:13","nodeType":"VariableDeclaration","scope":3146,"src":"291:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3142,"indexed":false,"mutability":"mutable","name":"gasLimit","nameLocation":"329:8:13","nodeType":"VariableDeclaration","scope":3146,"src":"321:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3144,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"355:7:13","nodeType":"VariableDeclaration","scope":3146,"src":"347:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"202:166:13"},"src":"185:184:13"},{"anonymous":false,"eventSelector":"4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c","id":3150,"name":"RelayedMessage","nameLocation":"380:14:13","nodeType":"EventDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"411:7:13","nodeType":"VariableDeclaration","scope":3150,"src":"395:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"395:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"394:25:13"},"src":"374:46:13"},{"anonymous":false,"eventSelector":"99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f","id":3154,"name":"FailedRelayedMessage","nameLocation":"431:20:13","nodeType":"EventDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"468:7:13","nodeType":"VariableDeclaration","scope":3154,"src":"452:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"452:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"451:25:13"},"src":"425:52:13"},{"functionSelector":"6e296e45","id":3159,"implemented":false,"kind":"function","modifiers":[],"name":"xDomainMessageSender","nameLocation":"551:20:13","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[],"src":"571:2:13"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"597:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"596:9:13"},"scope":3199,"src":"542:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"696:233:13","text":" Sends a cross domain message to the target messenger.\n @param _target Target contract address.\n @param _message Message to send to the target.\n @param _gasLimit Gas limit for the provided message."},"functionSelector":"3dbb202b","id":3169,"implemented":false,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"943:11:13","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"_target","nameLocation":"972:7:13","nodeType":"VariableDeclaration","scope":3169,"src":"964:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3161,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"_message","nameLocation":"1004:8:13","nodeType":"VariableDeclaration","scope":3169,"src":"989:23:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"989:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"_gasLimit","nameLocation":"1029:9:13","nodeType":"VariableDeclaration","scope":3169,"src":"1022:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3165,"name":"uint32","nodeType":"ElementaryTypeName","src":"1022:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"954:90:13"},"returnParameters":{"id":3168,"nodeType":"ParameterList","parameters":[],"src":"1061:0:13"},"scope":3199,"src":"934:128:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3170,"nodeType":"StructuredDocumentation","src":"1069:269:13","text":" Sends a cross domain message to the target messenger.\n @param _chainId L2 chain id.\n @param _target Target contract address.\n @param _message Message to send to the target.\n @param _gasLimit Gas limit for the provided message."},"functionSelector":"44dd5ed6","id":3181,"implemented":false,"kind":"function","modifiers":[],"name":"sendMessageViaChainId","nameLocation":"1352:21:13","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"_chainId","nameLocation":"1391:8:13","nodeType":"VariableDeclaration","scope":3181,"src":"1383:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"_target","nameLocation":"1417:7:13","nodeType":"VariableDeclaration","scope":3181,"src":"1409:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"_message","nameLocation":"1449:8:13","nodeType":"VariableDeclaration","scope":3181,"src":"1434:23:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3175,"name":"bytes","nodeType":"ElementaryTypeName","src":"1434:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"_gasLimit","nameLocation":"1474:9:13","nodeType":"VariableDeclaration","scope":3181,"src":"1467:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3177,"name":"uint32","nodeType":"ElementaryTypeName","src":"1467:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1373:116:13"},"returnParameters":{"id":3180,"nodeType":"ParameterList","parameters":[],"src":"1506:0:13"},"scope":3199,"src":"1343:164:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"91744b9f","id":3198,"implemented":false,"kind":"function","modifiers":[],"name":"replayMessageViaChainId","nameLocation":"1522:23:13","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"_chainId","nameLocation":"1563:8:13","nodeType":"VariableDeclaration","scope":3198,"src":"1555:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"_target","nameLocation":"1589:7:13","nodeType":"VariableDeclaration","scope":3198,"src":"1581:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"_sender","nameLocation":"1614:7:13","nodeType":"VariableDeclaration","scope":3198,"src":"1606:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"_message","nameLocation":"1644:8:13","nodeType":"VariableDeclaration","scope":3198,"src":"1631:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3188,"name":"bytes","nodeType":"ElementaryTypeName","src":"1631:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"_queueIndex","nameLocation":"1670:11:13","nodeType":"VariableDeclaration","scope":3198,"src":"1662:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"_oldGasLimit","nameLocation":"1698:12:13","nodeType":"VariableDeclaration","scope":3198,"src":"1691:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3192,"name":"uint32","nodeType":"ElementaryTypeName","src":"1691:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"_newGasLimit","nameLocation":"1727:12:13","nodeType":"VariableDeclaration","scope":3198,"src":"1720:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3194,"name":"uint32","nodeType":"ElementaryTypeName","src":"1720:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1545:200:13"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"1753:0:13"},"scope":3199,"src":"1513:241:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3200,"src":"97:1659:13","usedErrors":[],"usedEvents":[3146,3150,3154]}],"src":"32:1724:13"},"id":13},"interface/IL1ERC20Bridge.sol":{"ast":{"absolutePath":"interface/IL1ERC20Bridge.sol","exportedSymbols":{"IL1ERC20Bridge":[3353]},"id":3354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3201,"literals":["solidity",">","0.5",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:30:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IL1ERC20Bridge","contractDependencies":[],"contractKind":"interface","documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"64:32:14","text":" @title IL1ERC20Bridge"},"fullyImplemented":false,"id":3353,"linearizedBaseContracts":[3353],"name":"IL1ERC20Bridge","nameLocation":"107:14:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d0396","id":3216,"name":"ERC20DepositInitiated","nameLocation":"184:21:14","nodeType":"EventDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"indexed":true,"mutability":"mutable","name":"_l1Token","nameLocation":"231:8:14","nodeType":"VariableDeclaration","scope":3216,"src":"215:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"indexed":true,"mutability":"mutable","name":"_l2Token","nameLocation":"265:8:14","nodeType":"VariableDeclaration","scope":3216,"src":"249:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"249:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3208,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"299:5:14","nodeType":"VariableDeclaration","scope":3216,"src":"283:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"283:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3210,"indexed":false,"mutability":"mutable","name":"_to","nameLocation":"322:3:14","nodeType":"VariableDeclaration","scope":3216,"src":"314:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3209,"name":"address","nodeType":"ElementaryTypeName","src":"314:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3212,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"343:7:14","nodeType":"VariableDeclaration","scope":3216,"src":"335:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"indexed":false,"mutability":"mutable","name":"_data","nameLocation":"366:5:14","nodeType":"VariableDeclaration","scope":3216,"src":"360:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3213,"name":"bytes","nodeType":"ElementaryTypeName","src":"360:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"205:172:14"},"src":"178:200:14"},{"anonymous":false,"eventSelector":"3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b3","id":3230,"name":"ERC20WithdrawalFinalized","nameLocation":"390:24:14","nodeType":"EventDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"indexed":true,"mutability":"mutable","name":"_l1Token","nameLocation":"440:8:14","nodeType":"VariableDeclaration","scope":3230,"src":"424:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3220,"indexed":true,"mutability":"mutable","name":"_l2Token","nameLocation":"474:8:14","nodeType":"VariableDeclaration","scope":3230,"src":"458:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3219,"name":"address","nodeType":"ElementaryTypeName","src":"458:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3222,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"508:5:14","nodeType":"VariableDeclaration","scope":3230,"src":"492:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"492:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3224,"indexed":false,"mutability":"mutable","name":"_to","nameLocation":"531:3:14","nodeType":"VariableDeclaration","scope":3230,"src":"523:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3226,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"552:7:14","nodeType":"VariableDeclaration","scope":3230,"src":"544:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3228,"indexed":false,"mutability":"mutable","name":"_data","nameLocation":"575:5:14","nodeType":"VariableDeclaration","scope":3230,"src":"569:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3227,"name":"bytes","nodeType":"ElementaryTypeName","src":"569:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"414:172:14"},"src":"384:203:14"},{"anonymous":false,"eventSelector":"c333b5c3e71358b85edbb94334230ac00644c26af29851f9034a7105eb84b077","id":3234,"name":"ERC20ChainID","nameLocation":"599:12:14","nodeType":"EventDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"indexed":false,"mutability":"mutable","name":"_chainid","nameLocation":"620:8:14","nodeType":"VariableDeclaration","scope":3234,"src":"612:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:18:14"},"src":"593:37:14"},{"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"720:144:14","text":" @dev get the address of the corresponding L2 bridge contract.\n @return Address of the corresponding L2 bridge contract."},"functionSelector":"91c49bf8","id":3240,"implemented":false,"kind":"function","modifiers":[],"name":"l2TokenBridge","nameLocation":"878:13:14","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[],"src":"891:2:14"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3240,"src":"912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:9:14"},"scope":3353,"src":"869:52:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"927:581:14","text":" @dev deposit an amount of the ERC20 to the caller's balance on L2.\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _amount Amount of the ERC20 to deposit\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"58a997f6","id":3254,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20","nameLocation":"1522:12:14","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"_l1Token","nameLocation":"1552:8:14","nodeType":"VariableDeclaration","scope":3254,"src":"1544:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"_l2Token","nameLocation":"1578:8:14","nodeType":"VariableDeclaration","scope":3254,"src":"1570:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"_amount","nameLocation":"1604:7:14","nodeType":"VariableDeclaration","scope":3254,"src":"1596:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"_l2Gas","nameLocation":"1628:6:14","nodeType":"VariableDeclaration","scope":3254,"src":"1621:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3248,"name":"uint32","nodeType":"ElementaryTypeName","src":"1621:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"_data","nameLocation":"1659:5:14","nodeType":"VariableDeclaration","scope":3254,"src":"1644:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3250,"name":"bytes","nodeType":"ElementaryTypeName","src":"1644:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1534:136:14"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[],"src":"1679:0:14"},"scope":3353,"src":"1513:167:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"1686:637:14","text":" @dev deposit an amount of ERC20 to a recipient's balance on L2.\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _to L2 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"838b2520","id":3270,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20To","nameLocation":"2337:14:14","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"_l1Token","nameLocation":"2369:8:14","nodeType":"VariableDeclaration","scope":3270,"src":"2361:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3259,"mutability":"mutable","name":"_l2Token","nameLocation":"2395:8:14","nodeType":"VariableDeclaration","scope":3270,"src":"2387:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"_to","nameLocation":"2421:3:14","nodeType":"VariableDeclaration","scope":3270,"src":"2413:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"2413:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"_amount","nameLocation":"2442:7:14","nodeType":"VariableDeclaration","scope":3270,"src":"2434:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2434:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"_l2Gas","nameLocation":"2466:6:14","nodeType":"VariableDeclaration","scope":3270,"src":"2459:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3264,"name":"uint32","nodeType":"ElementaryTypeName","src":"2459:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"_data","nameLocation":"2497:5:14","nodeType":"VariableDeclaration","scope":3270,"src":"2482:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3266,"name":"bytes","nodeType":"ElementaryTypeName","src":"2482:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2351:157:14"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[],"src":"2517:0:14"},"scope":3353,"src":"2328:190:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"2528:612:14","text":" @dev deposit an amount of the ERC20 to the caller's balance on L2.\n @param _chainid chainid\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _amount Amount of the ERC20 to deposit\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"a396a59c","id":3286,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20ByChainId","nameLocation":"3154:21:14","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"_chainid","nameLocation":"3194:8:14","nodeType":"VariableDeclaration","scope":3286,"src":"3186:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"_l1Token","nameLocation":"3220:8:14","nodeType":"VariableDeclaration","scope":3286,"src":"3212:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"_l2Token","nameLocation":"3246:8:14","nodeType":"VariableDeclaration","scope":3286,"src":"3238:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"_amount","nameLocation":"3269:7:14","nodeType":"VariableDeclaration","scope":3286,"src":"3264:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint","nodeType":"ElementaryTypeName","src":"3264:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"_l2Gas","nameLocation":"3293:6:14","nodeType":"VariableDeclaration","scope":3286,"src":"3286:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3280,"name":"uint32","nodeType":"ElementaryTypeName","src":"3286:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"_data","nameLocation":"3324:5:14","nodeType":"VariableDeclaration","scope":3286,"src":"3309:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3282,"name":"bytes","nodeType":"ElementaryTypeName","src":"3309:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3176:159:14"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[],"src":"3360:0:14"},"scope":3353,"src":"3145:216:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"3367:668:14","text":" @dev deposit an amount of ERC20 to a recipient's balance on L2.\n @param _chainid chainid\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _to L2 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"ef808be2","id":3304,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20ToByChainId","nameLocation":"4049:23:14","nodeType":"FunctionDefinition","parameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"_chainid","nameLocation":"4091:8:14","nodeType":"VariableDeclaration","scope":3304,"src":"4083:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"_l1Token","nameLocation":"4117:8:14","nodeType":"VariableDeclaration","scope":3304,"src":"4109:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3290,"name":"address","nodeType":"ElementaryTypeName","src":"4109:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"_l2Token","nameLocation":"4143:8:14","nodeType":"VariableDeclaration","scope":3304,"src":"4135:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"4135:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"_to","nameLocation":"4169:3:14","nodeType":"VariableDeclaration","scope":3304,"src":"4161:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"4161:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"_amount","nameLocation":"4187:7:14","nodeType":"VariableDeclaration","scope":3304,"src":"4182:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint","nodeType":"ElementaryTypeName","src":"4182:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"_l2Gas","nameLocation":"4211:6:14","nodeType":"VariableDeclaration","scope":3304,"src":"4204:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3298,"name":"uint32","nodeType":"ElementaryTypeName","src":"4204:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"_data","nameLocation":"4242:5:14","nodeType":"VariableDeclaration","scope":3304,"src":"4227:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3300,"name":"bytes","nodeType":"ElementaryTypeName","src":"4227:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4073:180:14"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[],"src":"4278:0:14"},"scope":3353,"src":"4040:239:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"4379:782:14","text":" @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n L1 ERC20 token.\n This call will fail if the initialized withdrawal from L2 has not been finalized.\n @param _l1Token Address of L1 token to finalizeWithdrawal for.\n @param _l2Token Address of L2 token where withdrawal was initiated.\n @param _from L2 address initiating the transfer.\n @param _to L1 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _data Data provided by the sender on L2. This data is provided\n   solely as a convenience for external contracts. Aside from enforcing a maximum\n   length, these contracts provide no guarantees about its content."},"functionSelector":"a9f9e675","id":3320,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeERC20Withdrawal","nameLocation":"5175:23:14","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"_l1Token","nameLocation":"5216:8:14","nodeType":"VariableDeclaration","scope":3320,"src":"5208:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"5208:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"_l2Token","nameLocation":"5242:8:14","nodeType":"VariableDeclaration","scope":3320,"src":"5234:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"5234:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"_from","nameLocation":"5268:5:14","nodeType":"VariableDeclaration","scope":3320,"src":"5260:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3310,"name":"address","nodeType":"ElementaryTypeName","src":"5260:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"_to","nameLocation":"5291:3:14","nodeType":"VariableDeclaration","scope":3320,"src":"5283:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3312,"name":"address","nodeType":"ElementaryTypeName","src":"5283:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"_amount","nameLocation":"5312:7:14","nodeType":"VariableDeclaration","scope":3320,"src":"5304:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"5304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"_data","nameLocation":"5344:5:14","nodeType":"VariableDeclaration","scope":3320,"src":"5329:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3316,"name":"bytes","nodeType":"ElementaryTypeName","src":"5329:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5198:157:14"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"5364:0:14"},"scope":3353,"src":"5166:199:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"5375:813:14","text":" @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n L1 ERC20 token.\n This call will fail if the initialized withdrawal from L2 has not been finalized.\n @param _chainid chainid\n @param _l1Token Address of L1 token to finalizeWithdrawal for.\n @param _l2Token Address of L2 token where withdrawal was initiated.\n @param _from L2 address initiating the transfer.\n @param _to L1 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _data Data provided by the sender on L2. This data is provided\n   solely as a convenience for external contracts. Aside from enforcing a maximum\n   length, these contracts provide no guarantees about its content."},"functionSelector":"6cebdc45","id":3338,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeERC20WithdrawalByChainId","nameLocation":"6207:32:14","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"_chainid","nameLocation":"6258:8:14","nodeType":"VariableDeclaration","scope":3338,"src":"6250:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"6250:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"_l1Token","nameLocation":"6284:8:14","nodeType":"VariableDeclaration","scope":3338,"src":"6276:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"6276:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"_l2Token","nameLocation":"6310:8:14","nodeType":"VariableDeclaration","scope":3338,"src":"6302:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"_from","nameLocation":"6336:5:14","nodeType":"VariableDeclaration","scope":3338,"src":"6328:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"_to","nameLocation":"6359:3:14","nodeType":"VariableDeclaration","scope":3338,"src":"6351:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"6351:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"_amount","nameLocation":"6377:7:14","nodeType":"VariableDeclaration","scope":3338,"src":"6372:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint","nodeType":"ElementaryTypeName","src":"6372:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"_data","nameLocation":"6409:5:14","nodeType":"VariableDeclaration","scope":3338,"src":"6394:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3334,"name":"bytes","nodeType":"ElementaryTypeName","src":"6394:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6240:180:14"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"6437:0:14"},"scope":3353,"src":"6198:240:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"6443:668:14","text":" @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n L1 ERC20 token.\n This call will fail if the initialized withdrawal from L2 has not been finalized.\n @param _chainid chainid\n @param _from L2 address initiating the transfer.\n @param _to L1 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _data Data provided by the sender on L2. This data is provided\n   solely as a convenience for external contracts. Aside from enforcing a maximum\n   length, these contracts provide no guarantees about its content."},"functionSelector":"90a40a76","id":3352,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeMetisWithdrawalByChainId","nameLocation":"7129:32:14","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"_chainid","nameLocation":"7180:8:14","nodeType":"VariableDeclaration","scope":3352,"src":"7172:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"7172:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"_from","nameLocation":"7206:5:14","nodeType":"VariableDeclaration","scope":3352,"src":"7198:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3342,"name":"address","nodeType":"ElementaryTypeName","src":"7198:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"_to","nameLocation":"7229:3:14","nodeType":"VariableDeclaration","scope":3352,"src":"7221:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3344,"name":"address","nodeType":"ElementaryTypeName","src":"7221:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"_amount","nameLocation":"7247:7:14","nodeType":"VariableDeclaration","scope":3352,"src":"7242:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint","nodeType":"ElementaryTypeName","src":"7242:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"_data","nameLocation":"7279:5:14","nodeType":"VariableDeclaration","scope":3352,"src":"7264:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3348,"name":"bytes","nodeType":"ElementaryTypeName","src":"7264:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7162:128:14"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"7307:0:14"},"scope":3353,"src":"7120:188:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3354,"src":"97:7213:14","usedErrors":[],"usedEvents":[3216,3230,3234]}],"src":"32:7278:14"},"id":14},"interface/ILockingInfo.sol":{"ast":{"absolutePath":"interface/ILockingInfo.sol","exportedSymbols":{"ILockingInfo":[3387],"ILockingInfoRaw":[3607],"ISequencerInfo":[3819]},"id":3388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3355,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":3357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3388,"sourceUnit":3820,"src":"57:52:15","symbolAliases":[{"foreign":{"id":3356,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"65:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"interface/ILockingInfoRaw.sol","file":"./ILockingInfoRaw.sol","id":3359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3388,"sourceUnit":3608,"src":"110:70:15","symbolAliases":[{"foreign":{"id":3358,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"118:12:15","typeDescriptions":{}},"local":"ILockingInfoRaw","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3360,"name":"ILockingInfoRaw","nameLocations":["208:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":3607,"src":"208:15:15"},"id":3361,"nodeType":"InheritanceSpecifier","src":"208:15:15"}],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3387,"linearizedBaseContracts":[3387,3607],"name":"ILockingInfo","nameLocation":"192:12:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e78cea92","id":3366,"implemented":false,"kind":"function","modifiers":[],"name":"bridge","nameLocation":"239:6:15","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[],"src":"245:2:15"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3366,"src":"270:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3363,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"269:9:15"},"scope":3387,"src":"230:49:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c01e1bd6","id":3371,"implemented":false,"kind":"function","modifiers":[],"name":"l1Token","nameLocation":"293:7:15","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[],"src":"300:2:15"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"325:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3368,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"324:9:15"},"scope":3387,"src":"284:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"56eff267","id":3376,"implemented":false,"kind":"function","modifiers":[],"name":"l2Token","nameLocation":"348:7:15","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[],"src":"355:2:15"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"380:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:9:15"},"scope":3387,"src":"339:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f037c630","id":3381,"implemented":false,"kind":"function","modifiers":[],"name":"minLock","nameLocation":"403:7:15","nodeType":"FunctionDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[],"src":"410:2:15"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3381,"src":"435:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:9:15"},"scope":3387,"src":"394:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c0b3e46","id":3386,"implemented":false,"kind":"function","modifiers":[],"name":"maxLock","nameLocation":"458:7:15","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[],"src":"465:2:15"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"490:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:9:15"},"scope":3387,"src":"449:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3388,"src":"182:319:15","usedErrors":[],"usedEvents":[3396,3401,3406,3423,3432,3439,3448,3459,3476,3487,3492,3505]}],"src":"32:469:15"},"id":15},"interface/ILockingInfoRaw.sol":{"ast":{"absolutePath":"interface/ILockingInfoRaw.sol","exportedSymbols":{"ILockingInfo":[3607],"ISequencerInfo":[3819]},"id":3608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3389,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:16"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":3391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3608,"sourceUnit":3820,"src":"57:52:16","symbolAliases":[{"foreign":{"id":3390,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"65:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3607,"linearizedBaseContracts":[3607],"name":"ILockingInfo","nameLocation":"121:12:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"140:121:16","text":" @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n @param _newMinLock new min lock."},"eventSelector":"abb05374bb45ebfef33afb21ec5aa52333708d8217fd8e5c0616efd2530b2145","id":3396,"name":"SetMinLock","nameLocation":"272:10:16","nodeType":"EventDefinition","parameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"indexed":false,"mutability":"mutable","name":"_newMinLock","nameLocation":"291:11:16","nodeType":"VariableDeclaration","scope":3396,"src":"283:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:21:16"},"src":"266:38:16"},{"anonymous":false,"documentation":{"id":3397,"nodeType":"StructuredDocumentation","src":"310:121:16","text":" @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n @param _newMaxLock new max lock."},"eventSelector":"be23e9641c545443c3c625039b327c0eee88e9024040be7b03c5d73862d425e0","id":3401,"name":"SetMaxLock","nameLocation":"442:10:16","nodeType":"EventDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"indexed":false,"mutability":"mutable","name":"_newMaxLock","nameLocation":"461:11:16","nodeType":"VariableDeclaration","scope":3401,"src":"453:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:21:16"},"src":"436:38:16"},{"anonymous":false,"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"480:102:16","text":" @dev Emitted when the reward payer is changed\n @param _payer new reward payer"},"eventSelector":"30b92f5a89d7473895c4e9ce260fa7d0eefef2d59d5e68192e2e8cca4b9473a0","id":3406,"name":"SetRewardPayer","nameLocation":"593:14:16","nodeType":"EventDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"indexed":false,"mutability":"mutable","name":"_payer","nameLocation":"616:6:16","nodeType":"VariableDeclaration","scope":3406,"src":"608:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"607:16:16"},"src":"587:37:16"},{"anonymous":false,"documentation":{"id":3407,"nodeType":"StructuredDocumentation","src":"630:448:16","text":" @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n @param signer sequencer address.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param activationBatch sequencer's first epoch as proposer.\n @param amount locking amount.\n @param total total locking amount.\n @param signerPubkey public key of the sequencer"},"eventSelector":"e6f1eb1f1d0ca344d03cf47b9e6ece8a7d3b196e38dd7dd2307cca75e26682a8","id":3423,"name":"Locked","nameLocation":"1089:6:16","nodeType":"EventDefinition","parameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"1121:6:16","nodeType":"VariableDeclaration","scope":3423,"src":"1105:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3408,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3411,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1153:11:16","nodeType":"VariableDeclaration","scope":3423,"src":"1137:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3413,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1182:5:16","nodeType":"VariableDeclaration","scope":3423,"src":"1174:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"indexed":true,"mutability":"mutable","name":"activationBatch","nameLocation":"1213:15:16","nodeType":"VariableDeclaration","scope":3423,"src":"1197:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3417,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1246:6:16","nodeType":"VariableDeclaration","scope":3423,"src":"1238:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1238:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3419,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1270:5:16","nodeType":"VariableDeclaration","scope":3423,"src":"1262:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3421,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"1291:12:16","nodeType":"VariableDeclaration","scope":3423,"src":"1285:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3420,"name":"bytes","nodeType":"ElementaryTypeName","src":"1285:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1095:214:16"},"src":"1083:227:16"},{"anonymous":false,"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"1316:237:16","text":" @dev Emitted when the sequencer increase lock amount in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking new amount\n @param total the total locking amount"},"eventSelector":"33a87ba488658b3d1319098cd49c6d65b72a79c0f3530fec611e7afffed04395","id":3432,"name":"Relocked","nameLocation":"1564:8:16","nodeType":"EventDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1589:11:16","nodeType":"VariableDeclaration","scope":3432,"src":"1573:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3428,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1610:6:16","nodeType":"VariableDeclaration","scope":3432,"src":"1602:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1626:5:16","nodeType":"VariableDeclaration","scope":3432,"src":"1618:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:60:16"},"src":"1558:75:16"},{"anonymous":false,"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"1639:193:16","text":" @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount withdraw new amount"},"eventSelector":"56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8","id":3439,"name":"Withdraw","nameLocation":"1843:8:16","nodeType":"EventDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1868:11:16","nodeType":"VariableDeclaration","scope":3439,"src":"1852:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3437,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1889:6:16","nodeType":"VariableDeclaration","scope":3439,"src":"1881:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1851:45:16"},"src":"1837:60:16"},{"anonymous":false,"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"1903:243:16","text":" @dev Emitted when sequencer relocking in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param newAmount the updated lock amount."},"eventSelector":"d716c027b3dd610e4534df756848128bbb159a757724c17d89fcc4d0151b1f30","id":3448,"name":"LockUpdate","nameLocation":"2157:10:16","nodeType":"EventDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2193:11:16","nodeType":"VariableDeclaration","scope":3448,"src":"2177:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3444,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"2230:5:16","nodeType":"VariableDeclaration","scope":3448,"src":"2214:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3446,"indexed":true,"mutability":"mutable","name":"newAmount","nameLocation":"2261:9:16","nodeType":"VariableDeclaration","scope":3448,"src":"2245:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2167:109:16"},"src":"2151:126:16"},{"anonymous":false,"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"2283:320:16","text":" @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n @param sequencerId unique integer to identify a sequencer.\n @param recipient the address receive reward tokens\n @param amount the reward amount.\n @param totalAmount total rewards has liquidated"},"eventSelector":"18c7dc2a1800c409227dc12c0c05ada9c995ebfe0e42ae6d65f1b3ae3e6111de","id":3459,"name":"ClaimRewards","nameLocation":"2614:12:16","nodeType":"EventDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2652:11:16","nodeType":"VariableDeclaration","scope":3459,"src":"2636:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2636:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3453,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"2681:9:16","nodeType":"VariableDeclaration","scope":3459,"src":"2673:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3452,"name":"address","nodeType":"ElementaryTypeName","src":"2673:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3455,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2716:6:16","nodeType":"VariableDeclaration","scope":3459,"src":"2700:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3457,"indexed":true,"mutability":"mutable","name":"totalAmount","nameLocation":"2748:11:16","nodeType":"VariableDeclaration","scope":3459,"src":"2732:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2626:139:16"},"src":"2608:158:16"},{"anonymous":false,"documentation":{"id":3460,"nodeType":"StructuredDocumentation","src":"2772:452:16","text":" @dev Emitted when sequencer unlocks in '_unlock()'.\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param deactivationBatch  last batch for sequencer.\n @param deactivationTime unlock block timestamp.\n @param unlockClaimTime when user can claim locked token.\n @param amount locking amount"},"eventSelector":"06d9e13438f0daf13a71d63f3f8579db8bdeb299e4b651942313c73224d7af69","id":3476,"name":"UnlockInit","nameLocation":"3235:10:16","nodeType":"EventDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3271:4:16","nodeType":"VariableDeclaration","scope":3476,"src":"3255:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3464,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3301:11:16","nodeType":"VariableDeclaration","scope":3476,"src":"3285:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"3285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3330:5:16","nodeType":"VariableDeclaration","scope":3476,"src":"3322:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3322:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3468,"indexed":false,"mutability":"mutable","name":"deactivationBatch","nameLocation":"3353:17:16","nodeType":"VariableDeclaration","scope":3476,"src":"3345:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"indexed":false,"mutability":"mutable","name":"deactivationTime","nameLocation":"3388:16:16","nodeType":"VariableDeclaration","scope":3476,"src":"3380:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3472,"indexed":false,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"3422:15:16","nodeType":"VariableDeclaration","scope":3476,"src":"3414:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3474,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"3463:6:16","nodeType":"VariableDeclaration","scope":3476,"src":"3447:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"3447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3245:230:16"},"src":"3229:247:16"},{"anonymous":false,"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"3482:263:16","text":" @dev Emitted when sequencer unlocks in 'unlockClaim()'\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking amount.\n @param total total locking amount."},"eventSelector":"5245d528087a96a64f4589a764f00061e4671eab90cb1e019b1a5b24b2e4c2a8","id":3487,"name":"Unlocked","nameLocation":"3756:8:16","nodeType":"EventDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3790:4:16","nodeType":"VariableDeclaration","scope":3487,"src":"3774:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"3774:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3481,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3820:11:16","nodeType":"VariableDeclaration","scope":3487,"src":"3804:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3483,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3849:6:16","nodeType":"VariableDeclaration","scope":3487,"src":"3841:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3485,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"3873:5:16","nodeType":"VariableDeclaration","scope":3487,"src":"3865:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3865:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3764:120:16"},"src":"3750:135:16"},{"anonymous":false,"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"3891:207:16","text":" @dev Emitted when batch update in  'batchSubmitRewards'\n @param _newBatchId new batchId.\n      Note from maintainer:\n      for compatibility, the event is retained"},"eventSelector":"9e5aedd489785d05ba086064386f2e75b3e497d3dc00a54ed1c78bfc50a3953f","id":3492,"name":"BatchSubmitReward","nameLocation":"4109:17:16","nodeType":"EventDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"indexed":false,"mutability":"mutable","name":"_newBatchId","nameLocation":"4135:11:16","nodeType":"VariableDeclaration","scope":3492,"src":"4127:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4126:21:16"},"src":"4103:45:16"},{"anonymous":false,"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"4154:413:16","text":" @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param oldSigner oldSigner old address of the sequencer.\n @param newSigner newSigner new address of the sequencer.\n @param signerPubkey signerPubkey public key of the sequencer."},"eventSelector":"086044c0612a8c965d4cccd907f0d588e40ad68438bd4c1274cac60f4c3a9d1f","id":3505,"name":"SignerChange","nameLocation":"4578:12:16","nodeType":"EventDefinition","parameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"4616:11:16","nodeType":"VariableDeclaration","scope":3505,"src":"4600:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"4600:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"4645:5:16","nodeType":"VariableDeclaration","scope":3505,"src":"4637:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4637:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3499,"indexed":true,"mutability":"mutable","name":"oldSigner","nameLocation":"4676:9:16","nodeType":"VariableDeclaration","scope":3505,"src":"4660:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3498,"name":"address","nodeType":"ElementaryTypeName","src":"4660:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3501,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"4711:9:16","nodeType":"VariableDeclaration","scope":3505,"src":"4695:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3503,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"4736:12:16","nodeType":"VariableDeclaration","scope":3505,"src":"4730:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3502,"name":"bytes","nodeType":"ElementaryTypeName","src":"4730:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4590:164:16"},"src":"4572:183:16"},{"functionSelector":"1badded5","id":3520,"implemented":false,"kind":"function","modifiers":[],"name":"newSequencer","nameLocation":"4770:12:16","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"_id","nameLocation":"4800:3:16","nodeType":"VariableDeclaration","scope":3520,"src":"4792:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4792:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"_owner","nameLocation":"4821:6:16","nodeType":"VariableDeclaration","scope":3520,"src":"4813:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3508,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"_signer","nameLocation":"4845:7:16","nodeType":"VariableDeclaration","scope":3520,"src":"4837:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3510,"name":"address","nodeType":"ElementaryTypeName","src":"4837:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"_amount","nameLocation":"4870:7:16","nodeType":"VariableDeclaration","scope":3520,"src":"4862:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4862:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"_batchId","nameLocation":"4895:8:16","nodeType":"VariableDeclaration","scope":3520,"src":"4887:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"_signerPubkey","nameLocation":"4928:13:16","nodeType":"VariableDeclaration","scope":3520,"src":"4913:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3516,"name":"bytes","nodeType":"ElementaryTypeName","src":"4913:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4782:165:16"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[],"src":"4956:0:16"},"scope":3607,"src":"4761:196:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2684b8ec","id":3535,"implemented":false,"kind":"function","modifiers":[],"name":"increaseLocked","nameLocation":"4972:14:16","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"_seqId","nameLocation":"5004:6:16","nodeType":"VariableDeclaration","scope":3535,"src":"4996:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"_nonce","nameLocation":"5028:6:16","nodeType":"VariableDeclaration","scope":3535,"src":"5020:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5020:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"_owner","nameLocation":"5052:6:16","nodeType":"VariableDeclaration","scope":3535,"src":"5044:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3525,"name":"address","nodeType":"ElementaryTypeName","src":"5044:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"_locked","nameLocation":"5076:7:16","nodeType":"VariableDeclaration","scope":3535,"src":"5068:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"_incoming","nameLocation":"5101:9:16","nodeType":"VariableDeclaration","scope":3535,"src":"5093:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"_fromReward","nameLocation":"5128:11:16","nodeType":"VariableDeclaration","scope":3535,"src":"5120:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4986:159:16"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[],"src":"5154:0:16"},"scope":3607,"src":"4963:192:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"234898b3","id":3548,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawLocking","nameLocation":"5170:15:16","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"_seqId","nameLocation":"5203:6:16","nodeType":"VariableDeclaration","scope":3548,"src":"5195:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5195:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"_owner","nameLocation":"5227:6:16","nodeType":"VariableDeclaration","scope":3548,"src":"5219:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"_nonce","nameLocation":"5251:6:16","nodeType":"VariableDeclaration","scope":3548,"src":"5243:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"_amount","nameLocation":"5275:7:16","nodeType":"VariableDeclaration","scope":3548,"src":"5267:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"_locked","nameLocation":"5300:7:16","nodeType":"VariableDeclaration","scope":3548,"src":"5292:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"5292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5185:128:16"},"returnParameters":{"id":3547,"nodeType":"ParameterList","parameters":[],"src":"5322:0:16"},"scope":3607,"src":"5161:162:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2243069c","id":3560,"implemented":false,"kind":"function","modifiers":[],"name":"initializeUnlock","nameLocation":"5338:16:16","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"_seqId","nameLocation":"5372:6:16","nodeType":"VariableDeclaration","scope":3560,"src":"5364:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5364:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"_reward","nameLocation":"5396:7:16","nodeType":"VariableDeclaration","scope":3560,"src":"5388:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3554,"mutability":"mutable","name":"_l2gas","nameLocation":"5420:6:16","nodeType":"VariableDeclaration","scope":3560,"src":"5413:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3553,"name":"uint32","nodeType":"ElementaryTypeName","src":"5413:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"_seq","nameLocation":"5470:4:16","nodeType":"VariableDeclaration","scope":3560,"src":"5436:38:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$3790_calldata_ptr","typeString":"struct ISequencerInfo.Sequencer"},"typeName":{"id":3556,"nodeType":"UserDefinedTypeName","pathNode":{"id":3555,"name":"ISequencerInfo.Sequencer","nameLocations":["5436:14:16","5451:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3790,"src":"5436:24:16"},"referencedDeclaration":3790,"src":"5436:24:16","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$3790_storage_ptr","typeString":"struct ISequencerInfo.Sequencer"}},"visibility":"internal"}],"src":"5354:126:16"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"5497:0:16"},"scope":3607,"src":"5329:169:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"528ed12a","id":3575,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeUnlock","nameLocation":"5513:14:16","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"_owner","nameLocation":"5545:6:16","nodeType":"VariableDeclaration","scope":3575,"src":"5537:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3561,"name":"address","nodeType":"ElementaryTypeName","src":"5537:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3564,"mutability":"mutable","name":"_seqId","nameLocation":"5569:6:16","nodeType":"VariableDeclaration","scope":3575,"src":"5561:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5561:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"_amount","nameLocation":"5593:7:16","nodeType":"VariableDeclaration","scope":3575,"src":"5585:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5585:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"_reward","nameLocation":"5618:7:16","nodeType":"VariableDeclaration","scope":3575,"src":"5610:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"5610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"_recipient","nameLocation":"5643:10:16","nodeType":"VariableDeclaration","scope":3575,"src":"5635:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"5635:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"_l2gas","nameLocation":"5670:6:16","nodeType":"VariableDeclaration","scope":3575,"src":"5663:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3571,"name":"uint32","nodeType":"ElementaryTypeName","src":"5663:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5527:155:16"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[],"src":"5699:0:16"},"scope":3607,"src":"5504:196:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5d7878a8","id":3586,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateReward","nameLocation":"5715:15:16","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"_seqId","nameLocation":"5748:6:16","nodeType":"VariableDeclaration","scope":3586,"src":"5740:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"5740:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"_amount","nameLocation":"5772:7:16","nodeType":"VariableDeclaration","scope":3586,"src":"5764:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"_recipient","nameLocation":"5797:10:16","nodeType":"VariableDeclaration","scope":3586,"src":"5789:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"5789:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"_l2gas","nameLocation":"5824:6:16","nodeType":"VariableDeclaration","scope":3586,"src":"5817:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3582,"name":"uint32","nodeType":"ElementaryTypeName","src":"5817:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5730:106:16"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[],"src":"5853:0:16"},"scope":3607,"src":"5706:148:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e3bcd27c","id":3593,"implemented":false,"kind":"function","modifiers":[],"name":"distributeReward","nameLocation":"5869:16:16","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"_batchId","nameLocation":"5894:8:16","nodeType":"VariableDeclaration","scope":3593,"src":"5886:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"_totalReward","nameLocation":"5912:12:16","nodeType":"VariableDeclaration","scope":3593,"src":"5904:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5885:40:16"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"5934:0:16"},"scope":3607,"src":"5860:75:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3285702","id":3606,"implemented":false,"kind":"function","modifiers":[],"name":"logSignerChange","nameLocation":"5950:15:16","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"sequencerId","nameLocation":"5983:11:16","nodeType":"VariableDeclaration","scope":3606,"src":"5975:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"oldSigner","nameLocation":"6012:9:16","nodeType":"VariableDeclaration","scope":3606,"src":"6004:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3596,"name":"address","nodeType":"ElementaryTypeName","src":"6004:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"newSigner","nameLocation":"6039:9:16","nodeType":"VariableDeclaration","scope":3606,"src":"6031:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3598,"name":"address","nodeType":"ElementaryTypeName","src":"6031:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"nonce","nameLocation":"6066:5:16","nodeType":"VariableDeclaration","scope":3606,"src":"6058:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"signerPubkey","nameLocation":"6096:12:16","nodeType":"VariableDeclaration","scope":3606,"src":"6081:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3602,"name":"bytes","nodeType":"ElementaryTypeName","src":"6081:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5965:149:16"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[],"src":"6123:0:16"},"scope":3607,"src":"5941:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3608,"src":"111:6015:16","usedErrors":[],"usedEvents":[3396,3401,3406,3423,3432,3439,3448,3459,3476,3487,3492,3505]}],"src":"32:6094:16"},"id":16},"interface/ILockingPool.sol":{"ast":{"absolutePath":"interface/ILockingPool.sol","exportedSymbols":{"ILockingInfo":[3387],"ILockingInfoRaw":[3607],"ILockingPool":[3737],"ISequencerInfo":[3819]},"id":3738,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3609,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"45:23:17"},{"absolutePath":"interface/ILockingInfo.sol","file":"./ILockingInfo.sol","id":3610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3738,"sourceUnit":3388,"src":"70:28:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":3611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3738,"sourceUnit":3820,"src":"99:30:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3612,"name":"ISequencerInfo","nameLocations":["157:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":3819,"src":"157:14:17"},"id":3613,"nodeType":"InheritanceSpecifier","src":"157:14:17"}],"canonicalName":"ILockingPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3737,"linearizedBaseContracts":[3737,3819],"name":"ILockingPool","nameLocation":"141:12:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILockingPool.SequencerData","id":3634,"members":[{"constant":false,"id":3615,"mutability":"mutable","name":"amount","nameLocation":"217:6:17","nodeType":"VariableDeclaration","scope":3634,"src":"209:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"reward","nameLocation":"269:6:17","nodeType":"VariableDeclaration","scope":3634,"src":"261:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"activationBatch","nameLocation":"343:15:17","nodeType":"VariableDeclaration","scope":3634,"src":"335:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3618,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"updatedBatch","nameLocation":"409:12:17","nodeType":"VariableDeclaration","scope":3634,"src":"401:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"deactivationBatch","nameLocation":"471:17:17","nodeType":"VariableDeclaration","scope":3634,"src":"463:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"deactivationTime","nameLocation":"541:16:17","nodeType":"VariableDeclaration","scope":3634,"src":"533:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"611:15:17","nodeType":"VariableDeclaration","scope":3634,"src":"603:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"nonce","nameLocation":"748:5:17","nodeType":"VariableDeclaration","scope":3634,"src":"740:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"owner","nameLocation":"868:5:17","nodeType":"VariableDeclaration","scope":3634,"src":"860:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"signer","nameLocation":"989:6:17","nodeType":"VariableDeclaration","scope":3634,"src":"981:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3632,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SequencerData","nameLocation":"185:13:17","nodeType":"StructDefinition","scope":3737,"src":"178:943:17","visibility":"public"},{"functionSelector":"af70cba5","id":3643,"implemented":false,"kind":"function","modifiers":[],"name":"lockFor","nameLocation":"1136:7:17","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"_signer","nameLocation":"1152:7:17","nodeType":"VariableDeclaration","scope":3643,"src":"1144:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3635,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"_amount","nameLocation":"1169:7:17","nodeType":"VariableDeclaration","scope":3643,"src":"1161:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1193:13:17","nodeType":"VariableDeclaration","scope":3643,"src":"1178:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3639,"name":"bytes","nodeType":"ElementaryTypeName","src":"1178:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1143:64:17"},"returnParameters":{"id":3642,"nodeType":"ParameterList","parameters":[],"src":"1216:0:17"},"scope":3737,"src":"1127:90:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9ad42030","id":3654,"implemented":false,"kind":"function","modifiers":[],"name":"lockWithRewardRecipient","nameLocation":"1231:23:17","nodeType":"FunctionDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"_signer","nameLocation":"1263:7:17","nodeType":"VariableDeclaration","scope":3654,"src":"1255:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"_rewardRecipient","nameLocation":"1280:16:17","nodeType":"VariableDeclaration","scope":3654,"src":"1272:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"1272:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"_amount","nameLocation":"1306:7:17","nodeType":"VariableDeclaration","scope":3654,"src":"1298:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1330:13:17","nodeType":"VariableDeclaration","scope":3654,"src":"1315:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1315:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1254:90:17"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[],"src":"1353:0:17"},"scope":3737,"src":"1222:132:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"015bb180","id":3663,"implemented":false,"kind":"function","modifiers":[],"name":"relock","nameLocation":"1368:6:17","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"_seqId","nameLocation":"1383:6:17","nodeType":"VariableDeclaration","scope":3663,"src":"1375:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"_amount","nameLocation":"1399:7:17","nodeType":"VariableDeclaration","scope":3663,"src":"1391:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"_lockReward","nameLocation":"1413:11:17","nodeType":"VariableDeclaration","scope":3663,"src":"1408:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3659,"name":"bool","nodeType":"ElementaryTypeName","src":"1408:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1374:51:17"},"returnParameters":{"id":3662,"nodeType":"ParameterList","parameters":[],"src":"1434:0:17"},"scope":3737,"src":"1359:76:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"17396687","id":3670,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawRewards","nameLocation":"1449:15:17","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"_seqId","nameLocation":"1473:6:17","nodeType":"VariableDeclaration","scope":3670,"src":"1465:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"_l2Gas","nameLocation":"1488:6:17","nodeType":"VariableDeclaration","scope":3670,"src":"1481:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3666,"name":"uint32","nodeType":"ElementaryTypeName","src":"1481:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1464:31:17"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[],"src":"1504:0:17"},"scope":3737,"src":"1440:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"262c0e66","id":3677,"implemented":false,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"1519:6:17","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"_seqId","nameLocation":"1535:6:17","nodeType":"VariableDeclaration","scope":3677,"src":"1527:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"_l2Gas","nameLocation":"1550:6:17","nodeType":"VariableDeclaration","scope":3677,"src":"1543:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3673,"name":"uint32","nodeType":"ElementaryTypeName","src":"1543:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1525:32:17"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[],"src":"1574:0:17"},"scope":3737,"src":"1510:65:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"8ddc74de","id":3684,"implemented":false,"kind":"function","modifiers":[],"name":"unlockClaim","nameLocation":"1589:11:17","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"_seqId","nameLocation":"1609:6:17","nodeType":"VariableDeclaration","scope":3684,"src":"1601:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"_l2Gas","nameLocation":"1624:6:17","nodeType":"VariableDeclaration","scope":3684,"src":"1617:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3680,"name":"uint32","nodeType":"ElementaryTypeName","src":"1617:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1600:31:17"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[],"src":"1648:0:17"},"scope":3737,"src":"1580:69:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e2fdcc17","id":3690,"implemented":false,"kind":"function","modifiers":[],"name":"escrow","nameLocation":"1663:6:17","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[],"src":"1669:2:17"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3690,"src":"1695:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"},"typeName":{"id":3687,"nodeType":"UserDefinedTypeName","pathNode":{"id":3686,"name":"ILockingInfo","nameLocations":["1695:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3387,"src":"1695:12:17"},"referencedDeclaration":3387,"src":"1695:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$3387","typeString":"contract ILockingInfo"}},"visibility":"internal"}],"src":"1694:14:17"},"scope":3737,"src":"1654:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6ba7ccff","id":3698,"implemented":false,"kind":"function","modifiers":[],"name":"sequencers","nameLocation":"1723:10:17","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"seqId","nameLocation":"1742:5:17","nodeType":"VariableDeclaration","scope":3698,"src":"1734:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1733:15:17"},"returnParameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3698,"src":"1772:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":3695,"nodeType":"UserDefinedTypeName","pathNode":{"id":3694,"name":"SequencerData","nameLocations":["1772:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3634,"src":"1772:13:17"},"referencedDeclaration":3634,"src":"1772:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$3634_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"src":"1771:22:17"},"scope":3737,"src":"1714:80:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"beb26755","id":3705,"implemented":false,"kind":"function","modifiers":[],"name":"seqSigners","nameLocation":"1808:10:17","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"signer","nameLocation":"1827:6:17","nodeType":"VariableDeclaration","scope":3705,"src":"1819:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1818:16:17"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"seqId","nameLocation":"1866:5:17","nodeType":"VariableDeclaration","scope":3705,"src":"1858:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1857:15:17"},"scope":3737,"src":"1799:74:17","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3706,"nodeType":"StructuredDocumentation","src":"1879:162:17","text":" @dev Emitted when WITHDRAWAL_DELAY is updated.\n @param _cur current withdraw delay time\n @param _prev previours withdraw delay time"},"eventSelector":"08cb0bf599c925a6240976039d9d4d3201d88d2ba83703b890049356cdbb67e6","id":3712,"name":"WithrawDelayTimeChange","nameLocation":"2052:22:17","nodeType":"EventDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"indexed":false,"mutability":"mutable","name":"_cur","nameLocation":"2083:4:17","nodeType":"VariableDeclaration","scope":3712,"src":"2075:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3710,"indexed":false,"mutability":"mutable","name":"_prev","nameLocation":"2097:5:17","nodeType":"VariableDeclaration","scope":3712,"src":"2089:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:29:17"},"src":"2046:58:17"},{"anonymous":false,"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"2110:172:17","text":" @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n @param newReward new block reward\n @param oldReward  old block reward"},"eventSelector":"f67f33e8589d3ea0356303c0f9a8e764873692159f777ff79e4fc523d389dfcd","id":3719,"name":"RewardUpdate","nameLocation":"2293:12:17","nodeType":"EventDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"indexed":false,"mutability":"mutable","name":"newReward","nameLocation":"2314:9:17","nodeType":"VariableDeclaration","scope":3719,"src":"2306:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"indexed":false,"mutability":"mutable","name":"oldReward","nameLocation":"2333:9:17","nodeType":"VariableDeclaration","scope":3719,"src":"2325:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2305:38:17"},"src":"2287:57:17"},{"anonymous":false,"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"2350:106:17","text":" @dev Emitted when mpc address update in 'UpdateMpc'\n @param _newMpc new min lock."},"eventSelector":"c6759872346bc2093e270f2fa00d99d7bcdde60a410a3e9956b34196d42fee76","id":3724,"name":"UpdateMpc","nameLocation":"2467:9:17","nodeType":"EventDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"indexed":false,"mutability":"mutable","name":"_newMpc","nameLocation":"2485:7:17","nodeType":"VariableDeclaration","scope":3724,"src":"2477:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3721,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2476:17:17"},"src":"2461:33:17"},{"anonymous":false,"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"2500:99:17","text":" @dev Emitted when SignerUpdateThrottle is updated\n @param _n new min value"},"eventSelector":"e58685f6b78e6d567d2ed9d7c5efb779c4cd91c63c76763a0e3204a5671f4705","id":3729,"name":"SetSignerUpdateThrottle","nameLocation":"2610:23:17","nodeType":"EventDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"indexed":false,"mutability":"mutable","name":"_n","nameLocation":"2642:2:17","nodeType":"VariableDeclaration","scope":3729,"src":"2634:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2634:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2633:12:17"},"src":"2604:42:17"},{"functionSelector":"441a3e70","id":3736,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2660:8:17","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"_seqId","nameLocation":"2677:6:17","nodeType":"VariableDeclaration","scope":3736,"src":"2669:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"_amount","nameLocation":"2693:7:17","nodeType":"VariableDeclaration","scope":3736,"src":"2685:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2668:33:17"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[],"src":"2710:0:17"},"scope":3737,"src":"2651:60:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3738,"src":"131:2582:17","usedErrors":[3741,3743,3745,3747,3749,3751,3753,3755,3757],"usedEvents":[3712,3719,3724,3729,3797,3804,3811]}],"src":"45:2668:17"},"id":17},"interface/ISequencerInfo.sol":{"ast":{"absolutePath":"interface/ISequencerInfo.sol","exportedSymbols":{"ISequencerInfo":[3819]},"id":3820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3739,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ISequencerInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3819,"linearizedBaseContracts":[3819],"name":"ISequencerInfo","nameLocation":"67:14:18","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4e1fb3bc","id":3741,"name":"OwnedSequencer","nameLocation":"94:14:18","nodeType":"ErrorDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[],"src":"108:2:18"},"src":"88:23:18"},{"errorSelector":"b5013d2b","id":3743,"name":"SignerExisted","nameLocation":"122:13:18","nodeType":"ErrorDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[],"src":"135:2:18"},"src":"116:22:18"},{"errorSelector":"2f0edabe","id":3745,"name":"NoSuchSeq","nameLocation":"149:9:18","nodeType":"ErrorDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"158:2:18"},"src":"143:18:18"},{"errorSelector":"e99d5ac5","id":3747,"name":"NullAddress","nameLocation":"172:11:18","nodeType":"ErrorDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[],"src":"183:2:18"},"src":"166:20:18"},{"errorSelector":"c4946571","id":3749,"name":"SeqNotActive","nameLocation":"197:12:18","nodeType":"ErrorDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[],"src":"209:2:18"},"src":"191:21:18"},{"errorSelector":"a91da8ff","id":3751,"name":"NotSeqOwner","nameLocation":"223:11:18","nodeType":"ErrorDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[],"src":"234:2:18"},"src":"217:20:18"},{"errorSelector":"6b95264b","id":3753,"name":"NotSeqSigner","nameLocation":"248:12:18","nodeType":"ErrorDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"260:2:18"},"src":"242:21:18"},{"errorSelector":"c4fc1dcc","id":3755,"name":"NoRewardRecipient","nameLocation":"274:17:18","nodeType":"ErrorDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"291:2:18"},"src":"268:26:18"},{"errorSelector":"584a7938","id":3757,"name":"NotWhitelisted","nameLocation":"305:14:18","nodeType":"ErrorDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[],"src":"319:2:18"},"src":"299:23:18"},{"canonicalName":"ISequencerInfo.Status","id":3762,"members":[{"id":3758,"name":"Unavailabe","nameLocation":"378:10:18","nodeType":"EnumValue","src":"378:10:18"},{"id":3759,"name":"Inactive","nameLocation":"431:8:18","nodeType":"EnumValue","src":"431:8:18"},{"id":3760,"name":"Active","nameLocation":"510:6:18","nodeType":"EnumValue","src":"510:6:18"},{"id":3761,"name":"Unlocked","nameLocation":"590:8:18","nodeType":"EnumValue","src":"590:8:18"}],"name":"Status","nameLocation":"361:6:18","nodeType":"EnumDefinition","src":"356:335:18"},{"canonicalName":"ISequencerInfo.Sequencer","id":3790,"members":[{"constant":false,"id":3764,"mutability":"mutable","name":"amount","nameLocation":"732:6:18","nodeType":"VariableDeclaration","scope":3790,"src":"724:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"reward","nameLocation":"784:6:18","nodeType":"VariableDeclaration","scope":3790,"src":"776:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"activationBatch","nameLocation":"858:15:18","nodeType":"VariableDeclaration","scope":3790,"src":"850:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"updatedBatch","nameLocation":"924:12:18","nodeType":"VariableDeclaration","scope":3790,"src":"916:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"deactivationBatch","nameLocation":"986:17:18","nodeType":"VariableDeclaration","scope":3790,"src":"978:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"deactivationTime","nameLocation":"1056:16:18","nodeType":"VariableDeclaration","scope":3790,"src":"1048:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"1126:15:18","nodeType":"VariableDeclaration","scope":3790,"src":"1118:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"nonce","nameLocation":"1263:5:18","nodeType":"VariableDeclaration","scope":3790,"src":"1255:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1255:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"owner","nameLocation":"1383:5:18","nodeType":"VariableDeclaration","scope":3790,"src":"1375:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3779,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"signer","nameLocation":"1504:6:18","nodeType":"VariableDeclaration","scope":3790,"src":"1496:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3781,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"pubkey","nameLocation":"1645:6:18","nodeType":"VariableDeclaration","scope":3790,"src":"1639:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3783,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"rewardRecipient","nameLocation":"1696:15:18","nodeType":"VariableDeclaration","scope":3790,"src":"1688:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"status","nameLocation":"1768:6:18","nodeType":"VariableDeclaration","scope":3790,"src":"1761:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3762","typeString":"enum ISequencerInfo.Status"},"typeName":{"id":3788,"nodeType":"UserDefinedTypeName","pathNode":{"id":3787,"name":"Status","nameLocations":["1761:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1761:6:18"},"referencedDeclaration":3762,"src":"1761:6:18","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$3762","typeString":"enum ISequencerInfo.Status"}},"visibility":"internal"}],"name":"Sequencer","nameLocation":"704:9:18","nodeType":"StructDefinition","scope":3819,"src":"697:1104:18","visibility":"public"},{"anonymous":false,"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"1807:150:18","text":" @dev Emitted if owner call 'setWhitelist'\n @param _user the address who can lock token\n @param _yes white address state"},"eventSelector":"f6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb","id":3797,"name":"SetWhitelist","nameLocation":"1968:12:18","nodeType":"EventDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"indexed":false,"mutability":"mutable","name":"_user","nameLocation":"1989:5:18","nodeType":"VariableDeclaration","scope":3797,"src":"1981:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3792,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3795,"indexed":false,"mutability":"mutable","name":"_yes","nameLocation":"2001:4:18","nodeType":"VariableDeclaration","scope":3797,"src":"1996:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3794,"name":"bool","nodeType":"ElementaryTypeName","src":"1996:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1980:26:18"},"src":"1962:45:18"},{"anonymous":false,"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"2013:196:18","text":" @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n @param _seqId the sequencerId\n @param _recipient the address receive reward token"},"eventSelector":"357bb123cabaf224688e3d8de5feb37d685dc3a27012a7bce1201c49bc369cb6","id":3804,"name":"SequencerRewardRecipientChanged","nameLocation":"2220:31:18","nodeType":"EventDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2260:6:18","nodeType":"VariableDeclaration","scope":3804,"src":"2252:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"indexed":false,"mutability":"mutable","name":"_recipient","nameLocation":"2276:10:18","nodeType":"VariableDeclaration","scope":3804,"src":"2268:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2251:36:18"},"src":"2214:74:18"},{"anonymous":false,"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"2294:141:18","text":" @dev Emitted when sequencer owner is changed\n @param _seqId the sequencerId\n @param _owner the sequencer owner"},"eventSelector":"4078101d3657bf2f1ee46f64d5c94266d244d71bb0daa460336d3d6f11c9a4ac","id":3811,"name":"SequencerOwnerChanged","nameLocation":"2446:21:18","nodeType":"EventDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2476:6:18","nodeType":"VariableDeclaration","scope":3811,"src":"2468:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"indexed":false,"mutability":"mutable","name":"_owner","nameLocation":"2492:6:18","nodeType":"VariableDeclaration","scope":3811,"src":"2484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2467:32:18"},"src":"2440:60:18"},{"functionSelector":"169abefc","id":3818,"implemented":false,"kind":"function","modifiers":[],"name":"seqOwners","nameLocation":"2515:9:18","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"owner","nameLocation":"2533:5:18","nodeType":"VariableDeclaration","scope":3818,"src":"2525:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3812,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2524:15:18"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"seqId","nameLocation":"2566:5:18","nodeType":"VariableDeclaration","scope":3818,"src":"2558:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2557:15:18"},"scope":3819,"src":"2506:67:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3820,"src":"57:2518:18","usedErrors":[3741,3743,3745,3747,3749,3751,3753,3755,3757],"usedEvents":[3797,3804,3811]}],"src":"32:2543:18"},"id":18},"interface/IVeMetisMinter.sol":{"ast":{"absolutePath":"interface/IVeMetisMinter.sol","exportedSymbols":{"IVeMetisMinter":[3839]},"id":3840,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3821,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"31:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IVeMetisMinter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3839,"linearizedBaseContracts":[3839],"name":"IVeMetisMinter","nameLocation":"66:14:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":3828,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"96:4:19","nodeType":"FunctionDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"user","nameLocation":"109:4:19","nodeType":"VariableDeclaration","scope":3828,"src":"101:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3822,"name":"address","nodeType":"ElementaryTypeName","src":"101:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"amount","nameLocation":"123:6:19","nodeType":"VariableDeclaration","scope":3828,"src":"115:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:30:19"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[],"src":"139:0:19"},"scope":3839,"src":"87:53:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eb82afb3","id":3833,"implemented":false,"kind":"function","modifiers":[],"name":"mintFromL1","nameLocation":"155:10:19","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"amount","nameLocation":"174:6:19","nodeType":"VariableDeclaration","scope":3833,"src":"166:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"166:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165:16:19"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[],"src":"190:0:19"},"scope":3839,"src":"146:45:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ce40eb30","id":3838,"implemented":false,"kind":"function","modifiers":[],"name":"depositToL1Dealer","nameLocation":"206:17:19","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"amount","nameLocation":"232:6:19","nodeType":"VariableDeclaration","scope":3838,"src":"224:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"223:16:19"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[],"src":"256:0:19"},"scope":3839,"src":"197:60:19","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3840,"src":"56:203:19","usedErrors":[],"usedEvents":[]}],"src":"31:228:19"},"id":19}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9b8d33a0960eae279bdafd20e3bc0f794ce08bcddbc5af27cb5987198ad1c2a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB8 0xD3 GASPRICE MULMOD PUSH1 0xEA 0xE2 PUSH26 0xBDAFD20E3BC0F794CE08BCDDBC5AF27CB5987198AD1C2A64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"449:6273:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9b8d33a0960eae279bdafd20e3bc0f794ce08bcddbc5af27cb5987198ad1c2a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB8 0xD3 GASPRICE MULMOD PUSH1 0xEA 0xE2 PUSH26 0xBDAFD20E3BC0F794CE08BCDDBC5AF27CB5987198AD1C2A64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"449:6273:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"BeaconProxy":{"abi":[{"inputs":[{"internalType":"address","name":"beacon","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"events":{"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_866":{"entryPoint":null,"id":866,"parameterSlots":2,"returnSlots":0},"@_checkNonPayable_796":{"entryPoint":912,"id":796,"parameterSlots":0,"returnSlots":0},"@_revert_1231":{"entryPoint":1132,"id":1231,"parameterSlots":1,"returnSlots":0},"@_setBeacon_744":{"entryPoint":355,"id":744,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1151":{"entryPoint":774,"id":1151,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1264":{"entryPoint":973,"id":1264,"parameterSlots":1,"returnSlots":1},"@upgradeBeaconToAndCall_782":{"entryPoint":112,"id":782,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1191":{"entryPoint":983,"id":1191,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1556,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1668,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1820,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1438,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1201,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1847,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1858,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1253,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1221,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1514,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1389,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1342,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1315,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1320,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1216,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1211,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1325,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1271,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5498:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"379:81:20","statements":[{"nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:20"},"nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nodeType":"YulBlock","src":"511:51:20","statements":[{"nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:20"},"nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:20"},"nodeType":"YulFunctionCall","src":"670:12:20"},"nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:20"},"nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:20"},"nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:20"},"nodeType":"YulFunctionCall","src":"624:43:20"},"nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nodeType":"YulBlock","src":"759:80:20","statements":[{"nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:20"},"nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:20"},"nodeType":"YulFunctionCall","src":"800:33:20"},"nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nodeType":"YulBlock","src":"934:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:20"},"nodeType":"YulFunctionCall","src":"944:12:20"},"nodeType":"YulExpressionStatement","src":"944:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:20"},{"body":{"nodeType":"YulBlock","src":"1057:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:20"},"nodeType":"YulFunctionCall","src":"1067:12:20"},"nodeType":"YulExpressionStatement","src":"1067:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:20"},{"body":{"nodeType":"YulBlock","src":"1139:54:20","statements":[{"nodeType":"YulAssignment","src":"1149:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:20"},"nodeType":"YulFunctionCall","src":"1163:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:20"},"nodeType":"YulFunctionCall","src":"1179:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:20"},"nodeType":"YulFunctionCall","src":"1159:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:20","type":""}],"src":"1091:102:20"},{"body":{"nodeType":"YulBlock","src":"1227:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:20"},"nodeType":"YulFunctionCall","src":"1237:88:20"},"nodeType":"YulExpressionStatement","src":"1237:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:20"},"nodeType":"YulFunctionCall","src":"1334:15:20"},"nodeType":"YulExpressionStatement","src":"1334:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:20"},"nodeType":"YulFunctionCall","src":"1358:15:20"},"nodeType":"YulExpressionStatement","src":"1358:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:20"},{"body":{"nodeType":"YulBlock","src":"1428:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:20"},"nodeType":"YulFunctionCall","src":"1468:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:20"},"nodeType":"YulFunctionCall","src":"1456:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:20"},"nodeType":"YulFunctionCall","src":"1609:18:20"},"nodeType":"YulExpressionStatement","src":"1609:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:20"},"nodeType":"YulFunctionCall","src":"1547:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:20"},"nodeType":"YulFunctionCall","src":"1583:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:20"},"nodeType":"YulFunctionCall","src":"1544:62:20"},"nodeType":"YulIf","src":"1541:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:20"},"nodeType":"YulFunctionCall","src":"1638:22:20"},"nodeType":"YulExpressionStatement","src":"1638:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:20","type":""}],"src":"1385:281:20"},{"body":{"nodeType":"YulBlock","src":"1713:88:20","statements":[{"nodeType":"YulAssignment","src":"1723:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:20"},"nodeType":"YulFunctionCall","src":"1733:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:20"},"nodeType":"YulFunctionCall","src":"1762:33:20"},"nodeType":"YulExpressionStatement","src":"1762:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:20","type":""}],"src":"1672:129:20"},{"body":{"nodeType":"YulBlock","src":"1873:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"1978:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1980:16:20"},"nodeType":"YulFunctionCall","src":"1980:18:20"},"nodeType":"YulExpressionStatement","src":"1980:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1958:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1947:2:20"},"nodeType":"YulFunctionCall","src":"1947:30:20"},"nodeType":"YulIf","src":"1944:56:20"},{"nodeType":"YulAssignment","src":"2010:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2040:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2018:21:20"},"nodeType":"YulFunctionCall","src":"2018:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2010:4:20"}]},{"nodeType":"YulAssignment","src":"2084:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2096:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:20"},"nodeType":"YulFunctionCall","src":"2092:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2084:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1857:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1868:4:20","type":""}],"src":"1807:307:20"},{"body":{"nodeType":"YulBlock","src":"2182:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2192:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2201:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2196:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2261:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2286:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2291:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:20"},"nodeType":"YulFunctionCall","src":"2282:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2305:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2310:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2301:3:20"},"nodeType":"YulFunctionCall","src":"2301:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2295:5:20"},"nodeType":"YulFunctionCall","src":"2295:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2275:6:20"},"nodeType":"YulFunctionCall","src":"2275:39:20"},"nodeType":"YulExpressionStatement","src":"2275:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2222:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2225:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2219:2:20"},"nodeType":"YulFunctionCall","src":"2219:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2233:19:20","statements":[{"nodeType":"YulAssignment","src":"2235:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2244:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"2247:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2240:3:20"},"nodeType":"YulFunctionCall","src":"2240:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2235:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"2215:3:20","statements":[]},"src":"2211:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2344:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2349:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2340:3:20"},"nodeType":"YulFunctionCall","src":"2340:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2358:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2333:6:20"},"nodeType":"YulFunctionCall","src":"2333:27:20"},"nodeType":"YulExpressionStatement","src":"2333:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2164:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2169:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2174:6:20","type":""}],"src":"2120:246:20"},{"body":{"nodeType":"YulBlock","src":"2466:338:20","statements":[{"nodeType":"YulAssignment","src":"2476:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2542:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2501:40:20"},"nodeType":"YulFunctionCall","src":"2501:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2485:15:20"},"nodeType":"YulFunctionCall","src":"2485:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2476:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"2573:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2559:6:20"},"nodeType":"YulFunctionCall","src":"2559:21:20"},"nodeType":"YulExpressionStatement","src":"2559:21:20"},{"nodeType":"YulVariableDeclaration","src":"2589:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2604:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2611:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2600:3:20"},"nodeType":"YulFunctionCall","src":"2600:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2593:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2654:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2656:77:20"},"nodeType":"YulFunctionCall","src":"2656:79:20"},"nodeType":"YulExpressionStatement","src":"2656:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2635:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2640:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2631:3:20"},"nodeType":"YulFunctionCall","src":"2631:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"2649:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2628:2:20"},"nodeType":"YulFunctionCall","src":"2628:25:20"},"nodeType":"YulIf","src":"2625:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2781:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"2786:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2791:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2746:34:20"},"nodeType":"YulFunctionCall","src":"2746:52:20"},"nodeType":"YulExpressionStatement","src":"2746:52:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2439:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2444:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2452:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2460:5:20","type":""}],"src":"2372:432:20"},{"body":{"nodeType":"YulBlock","src":"2895:281:20","statements":[{"body":{"nodeType":"YulBlock","src":"2944:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2946:77:20"},"nodeType":"YulFunctionCall","src":"2946:79:20"},"nodeType":"YulExpressionStatement","src":"2946:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2923:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2931:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2919:3:20"},"nodeType":"YulFunctionCall","src":"2919:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"2938:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2915:3:20"},"nodeType":"YulFunctionCall","src":"2915:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2908:6:20"},"nodeType":"YulFunctionCall","src":"2908:35:20"},"nodeType":"YulIf","src":"2905:122:20"},{"nodeType":"YulVariableDeclaration","src":"3036:27:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3056:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3050:5:20"},"nodeType":"YulFunctionCall","src":"3050:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3040:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3072:98:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3143:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3151:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3139:3:20"},"nodeType":"YulFunctionCall","src":"3139:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"3158:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"3166:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3081:57:20"},"nodeType":"YulFunctionCall","src":"3081:89:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3072:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2873:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2881:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2889:5:20","type":""}],"src":"2823:353:20"},{"body":{"nodeType":"YulBlock","src":"3285:575:20","statements":[{"body":{"nodeType":"YulBlock","src":"3331:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3333:77:20"},"nodeType":"YulFunctionCall","src":"3333:79:20"},"nodeType":"YulExpressionStatement","src":"3333:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3306:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3315:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3302:3:20"},"nodeType":"YulFunctionCall","src":"3302:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3327:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3298:3:20"},"nodeType":"YulFunctionCall","src":"3298:32:20"},"nodeType":"YulIf","src":"3295:119:20"},{"nodeType":"YulBlock","src":"3424:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3439:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3453:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3443:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3468:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3514:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3525:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:20"},"nodeType":"YulFunctionCall","src":"3510:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3534:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3478:31:20"},"nodeType":"YulFunctionCall","src":"3478:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3468:6:20"}]}]},{"nodeType":"YulBlock","src":"3562:291:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3577:39:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3601:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3612:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3597:3:20"},"nodeType":"YulFunctionCall","src":"3597:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3591:5:20"},"nodeType":"YulFunctionCall","src":"3591:25:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3581:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3663:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3665:77:20"},"nodeType":"YulFunctionCall","src":"3665:79:20"},"nodeType":"YulExpressionStatement","src":"3665:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3635:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3643:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3632:2:20"},"nodeType":"YulFunctionCall","src":"3632:30:20"},"nodeType":"YulIf","src":"3629:117:20"},{"nodeType":"YulAssignment","src":"3760:83:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3815:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3826:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3811:3:20"},"nodeType":"YulFunctionCall","src":"3811:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3835:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3770:40:20"},"nodeType":"YulFunctionCall","src":"3770:73:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3760:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3247:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3258:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3270:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3278:6:20","type":""}],"src":"3182:678:20"},{"body":{"nodeType":"YulBlock","src":"3943:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"3989:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3991:77:20"},"nodeType":"YulFunctionCall","src":"3991:79:20"},"nodeType":"YulExpressionStatement","src":"3991:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3964:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3973:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3960:3:20"},"nodeType":"YulFunctionCall","src":"3960:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3985:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3956:3:20"},"nodeType":"YulFunctionCall","src":"3956:32:20"},"nodeType":"YulIf","src":"3953:119:20"},{"nodeType":"YulBlock","src":"4082:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4097:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4111:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4101:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4126:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4172:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4183:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4168:3:20"},"nodeType":"YulFunctionCall","src":"4168:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4192:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4136:31:20"},"nodeType":"YulFunctionCall","src":"4136:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4126:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3913:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3924:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3936:6:20","type":""}],"src":"3866:351:20"},{"body":{"nodeType":"YulBlock","src":"4288:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4305:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4328:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4310:17:20"},"nodeType":"YulFunctionCall","src":"4310:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4298:6:20"},"nodeType":"YulFunctionCall","src":"4298:37:20"},"nodeType":"YulExpressionStatement","src":"4298:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4276:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4283:3:20","type":""}],"src":"4223:118:20"},{"body":{"nodeType":"YulBlock","src":"4445:124:20","statements":[{"nodeType":"YulAssignment","src":"4455:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4467:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4478:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4463:3:20"},"nodeType":"YulFunctionCall","src":"4463:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4455:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4535:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4548:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4559:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4544:3:20"},"nodeType":"YulFunctionCall","src":"4544:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4491:43:20"},"nodeType":"YulFunctionCall","src":"4491:71:20"},"nodeType":"YulExpressionStatement","src":"4491:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4417:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4429:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4440:4:20","type":""}],"src":"4347:222:20"},{"body":{"nodeType":"YulBlock","src":"4633:40:20","statements":[{"nodeType":"YulAssignment","src":"4644:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4660:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4654:5:20"},"nodeType":"YulFunctionCall","src":"4654:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4644:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4616:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4626:6:20","type":""}],"src":"4575:98:20"},{"body":{"nodeType":"YulBlock","src":"4792:34:20","statements":[{"nodeType":"YulAssignment","src":"4802:18:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"4817:3:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4802:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4764:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"4769:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4780:11:20","type":""}],"src":"4679:147:20"},{"body":{"nodeType":"YulBlock","src":"4940:278:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4950:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4996:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4964:31:20"},"nodeType":"YulFunctionCall","src":"4964:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4954:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5011:95:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5094:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5099:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5018:75:20"},"nodeType":"YulFunctionCall","src":"5018:88:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5011:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5154:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5161:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5150:3:20"},"nodeType":"YulFunctionCall","src":"5150:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5168:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5173:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5115:34:20"},"nodeType":"YulFunctionCall","src":"5115:65:20"},"nodeType":"YulExpressionStatement","src":"5115:65:20"},{"nodeType":"YulAssignment","src":"5189:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5200:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"5205:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5196:3:20"},"nodeType":"YulFunctionCall","src":"5196:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5189:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4921:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4928:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4936:3:20","type":""}],"src":"4832:386:20"},{"body":{"nodeType":"YulBlock","src":"5358:137:20","statements":[{"nodeType":"YulAssignment","src":"5369:100:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5456:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"5465:3:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5376:79:20"},"nodeType":"YulFunctionCall","src":"5376:93:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:20"}]},{"nodeType":"YulAssignment","src":"5479:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"5486:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5479:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5337:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5343:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5354:3:20","type":""}],"src":"5224:271:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405260405161096038038061096083398181016040528101906100259190610684565b610035828261007060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610795565b61007f8261016360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a26000815111156101505761014a8273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906106e0565b8261030660201b60201c565b5061015f565b61015e61039060201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036101bf57806040517f64ced0ec0000000000000000000000000000000000000000000000000000000081526004016101b6919061071c565b60405180910390fd5b806101f27fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6103cd60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906106e0565b905060008173ffffffffffffffffffffffffffffffffffffffff163b0361030257806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102f9919061071c565b60405180910390fd5b5050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051610330919061077e565b600060405180830381855af49150503d806000811461036b576040519150601f19603f3d011682016040523d82523d6000602084013e610370565b606091505b50915091506103868583836103d760201b60201c565b9250505092915050565b60003411156103cb576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826103f2576103ed8261046c60201b60201c565b610464565b6000825114801561041a575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561045c57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610453919061071c565b60405180910390fd5b819050610465565b5b9392505050565b60008151111561047f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104c5565b9050919050565b610500816104e5565b811461050b57600080fd5b50565b60008151905061051d816104f7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105768261052d565b810181811067ffffffffffffffff821117156105955761059461053e565b5b80604052505050565b60006105a86104b1565b90506105b4828261056d565b919050565b600067ffffffffffffffff8211156105d4576105d361053e565b5b6105dd8261052d565b9050602081019050919050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000610627610622846105b9565b61059e565b90508281526020810184848401111561064357610642610528565b5b61064e8482856105ea565b509392505050565b600082601f83011261066b5761066a610523565b5b815161067b848260208601610614565b91505092915050565b6000806040838503121561069b5761069a6104bb565b5b60006106a98582860161050e565b925050602083015167ffffffffffffffff8111156106ca576106c96104c0565b5b6106d685828601610656565b9150509250929050565b6000602082840312156106f6576106f56104bb565b5b60006107048482850161050e565b91505092915050565b610716816104e5565b82525050565b6000602082019050610731600083018461070d565b92915050565b600081519050919050565b600081905092915050565b600061075882610737565b6107628185610742565b93506107728185602086016105ea565b80840191505092915050565b600061078a828461074d565b915081905092915050565b6080516101b16107af600039600060c701526101b16000f3fe608060405261000c61000e565b005b61001e610019610020565b61009d565b565b600061002a6100c3565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610098919061014e565b905090565b3660008037600080366000845af43d6000803e80600081146100be573d6000f35b3d6000fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b600060208284031215610164576101636100eb565b5b600061017284828501610139565b9150509291505056fea2646970667358221220318efb3add371acc6afd6545498a71373c16dc1386e578ed8c02b6ac326dd4ca64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x960 CODESIZE SUB DUP1 PUSH2 0x960 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x70 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x795 JUMP JUMPDEST PUSH2 0x7F DUP3 PUSH2 0x163 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x150 JUMPI PUSH2 0x14A DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST DUP3 PUSH2 0x306 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x64CED0EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1F2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH1 0x0 SHL PUSH2 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x302 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x370 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x386 DUP6 DUP4 DUP4 PUSH2 0x3D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3F2 JUMPI PUSH2 0x3ED DUP3 PUSH2 0x46C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x41A JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x45C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x465 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x47F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x51D DUP2 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x576 DUP3 PUSH2 0x52D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x595 JUMPI PUSH2 0x594 PUSH2 0x53E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A8 PUSH2 0x4B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5B4 DUP3 DUP3 PUSH2 0x56D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x53E JUMP JUMPDEST JUMPDEST PUSH2 0x5DD DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x608 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 PUSH2 0x622 DUP5 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x643 JUMPI PUSH2 0x642 PUSH2 0x528 JUMP JUMPDEST JUMPDEST PUSH2 0x64E DUP5 DUP3 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x523 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x67B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x614 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A9 DUP6 DUP3 DUP7 ADD PUSH2 0x50E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x4C0 JUMP JUMPDEST JUMPDEST PUSH2 0x6D6 DUP6 DUP3 DUP7 ADD PUSH2 0x656 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x4BB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP5 DUP3 DUP6 ADD PUSH2 0x50E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x731 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 DUP3 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x762 DUP2 DUP6 PUSH2 0x742 JUMP JUMPDEST SWAP4 POP PUSH2 0x772 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5EA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP3 DUP5 PUSH2 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1B1 PUSH2 0x7AF PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xC7 ADD MSTORE PUSH2 0x1B1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A PUSH2 0xC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP15 0xFB GASPRICE 0xDD CALLDATACOPY BYTE 0xCC PUSH11 0xFD6545498A71373C16DC13 DUP7 0xE5 PUSH25 0xED8C02B6AC326DD4CA64736F6C634300081400330000000000 ","sourceMap":"1115:1194:5:-:0;;;1772:147;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1837:49;1873:6;1881:4;1837:35;;;:49;;:::i;:::-;1906:6;1896:16;;;;;;;;;;1772:147;;1115:1194;;6076:333:3;6165:21;6176:9;6165:10;;;:21;;:::i;:::-;6216:9;6201:25;;;;;;;;;;;;6255:1;6241:4;:11;:15;6237:166;;;6272:71;6309:9;6301:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6338:4;6272:28;;;:71;;:::i;:::-;;6237:166;;;6374:18;:16;;;:18;;:::i;:::-;6237:166;6076:333;;:::o;5114:437::-;5200:1;5175:9;:21;;;:26;5171:95;;5245:9;5224:31;;;;;;;;;;;:::i;:::-;;;;;;;;5171:95;5324:9;5276:39;4781:66;5303:11;;5276:26;;;:39;;:::i;:::-;:45;;;:57;;;;;;;;;;;;;;;;;;5344:28;5383:9;5375:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5344:66;;5460:1;5424:20;:32;;;:37;5420:125;;5513:20;5484:50;;;;;;;;;;;:::i;:::-;;;;;;;;5420:125;5161:390;5114:437;:::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;;;:55;;:::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:3:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;1684:190:9:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;4625:582:8:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;;;:19;;:::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:20;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:246::-;2201:1;2211:113;2225:6;2222:1;2219:13;2211:113;;;2310:1;2305:3;2301:11;2295:18;2291:1;2286:3;2282:11;2275:39;2247:2;2244:1;2240:10;2235:15;;2211:113;;;2358:1;2349:6;2344:3;2340:16;2333:27;2182:184;2120:246;;;:::o;2372:432::-;2460:5;2485:65;2501:48;2542:6;2501:48;:::i;:::-;2485:65;:::i;:::-;2476:74;;2573:6;2566:5;2559:21;2611:4;2604:5;2600:16;2649:3;2640:6;2635:3;2631:16;2628:25;2625:112;;;2656:79;;:::i;:::-;2625:112;2746:52;2791:6;2786:3;2781;2746:52;:::i;:::-;2466:338;2372:432;;;;;:::o;2823:353::-;2889:5;2938:3;2931:4;2923:6;2919:17;2915:27;2905:122;;2946:79;;:::i;:::-;2905:122;3056:6;3050:13;3081:89;3166:3;3158:6;3151:4;3143:6;3139:17;3081:89;:::i;:::-;3072:98;;2895:281;2823:353;;;;:::o;3182:678::-;3270:6;3278;3327:2;3315:9;3306:7;3302:23;3298:32;3295:119;;;3333:79;;:::i;:::-;3295:119;3453:1;3478:64;3534:7;3525:6;3514:9;3510:22;3478:64;:::i;:::-;3468:74;;3424:128;3612:2;3601:9;3597:18;3591:25;3643:18;3635:6;3632:30;3629:117;;;3665:79;;:::i;:::-;3629:117;3770:73;3835:7;3826:6;3815:9;3811:22;3770:73;:::i;:::-;3760:83;;3562:291;3182:678;;;;;:::o;3866:351::-;3936:6;3985:2;3973:9;3964:7;3960:23;3956:32;3953:119;;;3991:79;;:::i;:::-;3953:119;4111:1;4136:64;4192:7;4183:6;4172:9;4168:22;4136:64;:::i;:::-;4126:74;;4082:128;3866:351;;;;:::o;4223:118::-;4310:24;4328:5;4310:24;:::i;:::-;4305:3;4298:37;4223:118;;:::o;4347:222::-;4440:4;4478:2;4467:9;4463:18;4455:26;;4491:71;4559:1;4548:9;4544:17;4535:6;4491:71;:::i;:::-;4347:222;;;;:::o;4575:98::-;4626:6;4660:5;4654:12;4644:22;;4575:98;;;:::o;4679:147::-;4780:11;4817:3;4802:18;;4679:147;;;;:::o;4832:386::-;4936:3;4964:38;4996:5;4964:38;:::i;:::-;5018:88;5099:6;5094:3;5018:88;:::i;:::-;5011:95;;5115:65;5173:6;5168:3;5161:4;5154:5;5150:16;5115:65;:::i;:::-;5205:6;5200:3;5196:16;5189:23;;4940:278;4832:386;;;;:::o;5224:271::-;5354:3;5376:93;5465:3;5456:6;5376:93;:::i;:::-;5369:100;;5486:3;5479:10;;5224:271;;;;:::o;1115:1194:5:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_832":{"entryPoint":null,"id":832,"parameterSlots":0,"returnSlots":0},"@_delegate_808":{"entryPoint":157,"id":808,"parameterSlots":1,"returnSlots":0},"@_fallback_824":{"entryPoint":14,"id":824,"parameterSlots":0,"returnSlots":0},"@_getBeacon_890":{"entryPoint":195,"id":890,"parameterSlots":0,"returnSlots":1},"@_implementation_881":{"entryPoint":32,"id":881,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":334,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":272,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":240,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":235,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":290,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"379:81:20","statements":[{"nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:20"},"nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nodeType":"YulBlock","src":"511:51:20","statements":[{"nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:20"},"nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:20"},"nodeType":"YulFunctionCall","src":"670:12:20"},"nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:20"},"nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:20"},"nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:20"},"nodeType":"YulFunctionCall","src":"624:43:20"},"nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nodeType":"YulBlock","src":"759:80:20","statements":[{"nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:20"},"nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:20"},"nodeType":"YulFunctionCall","src":"800:33:20"},"nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nodeType":"YulBlock","src":"922:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:20"},"nodeType":"YulFunctionCall","src":"970:79:20"},"nodeType":"YulExpressionStatement","src":"970:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:20"},"nodeType":"YulFunctionCall","src":"939:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:20"},"nodeType":"YulFunctionCall","src":"935:32:20"},"nodeType":"YulIf","src":"932:119:20"},{"nodeType":"YulBlock","src":"1061:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:20","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:20"},"nodeType":"YulFunctionCall","src":"1147:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:20"},"nodeType":"YulFunctionCall","src":"1115:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:20","type":""}],"src":"845:351:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"846":[{"length":32,"start":199}]},"linkReferences":{},"object":"608060405261000c61000e565b005b61001e610019610020565b61009d565b565b600061002a6100c3565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610098919061014e565b905090565b3660008037600080366000845af43d6000803e80600081146100be573d6000f35b3d6000fd5b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b600060208284031215610164576101636100eb565b5b600061017284828501610139565b9150509291505056fea2646970667358221220318efb3add371acc6afd6545498a71373c16dc1386e578ed8c02b6ac326dd4ca64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A PUSH2 0xC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE DUP15 0xFB GASPRICE 0xDD CALLDATACOPY BYTE 0xCC PUSH11 0xFD6545498A71373C16DC13 DUP7 0xE5 PUSH25 0xED8C02B6AC326DD4CA64736F6C634300081400330000000000 ","sourceMap":"1115:1194:5:-:0;;;2649:11:4;:9;:11::i;:::-;1115:1194:5;2323:83:4;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;2022:138:5:-;2089:7;2123:12;:10;:12::i;:::-;2115:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2108:45;;2022:138;:::o;949:895:4:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;2214:93:5;2267:7;2293;2286:14;;2214:93;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"86600","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_getBeacon()":"infinite","_implementation()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"../ERC1967/ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\\n *\\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\\n * the beacon to not upgrade the implementation maliciously.\\n *\\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\\n * an inconsistent state where the beacon storage slot does not match the beacon address.\\n */\\ncontract BeaconProxy is Proxy {\\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\\n    address private immutable _beacon;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\\n        _beacon = beacon;\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the beacon.\\n     */\\n    function _getBeacon() internal view virtual returns (address) {\\n        return _beacon;\\n    }\\n}\\n\",\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029b12d6db01e6fe8f85382116c8b039b32476054896d2cacb6dd3355d1499aa364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xB1 0x2D PUSH14 0xB01E6FE8F85382116C8B039B3247 PUSH1 0x54 DUP10 PUSH14 0x2CACB6DD3355D1499AA364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029b12d6db01e6fe8f85382116c8b039b32476054896d2cacb6dd3355d1499aa364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xB1 0x2D PUSH14 0xB01E6FE8F85382116C8B039B3247 PUSH1 0x54 DUP10 PUSH14 0x2CACB6DD3355D1499AA364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"195:6066:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca1595973fd439c5bf54ecb399e3bbb86bff8a362f2c39af80e988822322fa2b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA ISZERO SWAP6 SWAP8 EXTCODEHASH 0xD4 CODECOPY 0xC5 0xBF SLOAD 0xEC 0xB3 SWAP10 0xE3 0xBB 0xB8 PUSH12 0xFF8A362F2C39AF80E9888223 0x22 STATICCALL 0x2B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca1595973fd439c5bf54ecb399e3bbb86bff8a362f2c39af80e988822322fa2b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA ISZERO SWAP6 SWAP8 EXTCODEHASH 0xD4 CODECOPY 0xC5 0xBF SLOAD 0xEC 0xB3 SWAP10 0xE3 0xBB 0xB8 PUSH12 0xFF8A362F2C39AF80E9888223 0x22 STATICCALL 0x2B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9332d4b0da81becbc8931c24d2cd33cbff57a93f4d2e609e7f243f8b0d2b8dc64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CALLER 0x2D 0x4B 0xD 0xA8 SHL 0xEC 0xBC DUP10 BALANCE 0xC2 0x4D 0x2C 0xD3 EXTCODECOPY 0xBF CREATE2 PUSH27 0x93F4D2E609E7F243F8B0D2B8DC64736F6C63430008140033000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9332d4b0da81becbc8931c24d2cd33cbff57a93f4d2e609e7f243f8b0d2b8dc64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CALLER 0x2D 0x4B 0xD 0xA8 SHL 0xEC 0xBC DUP10 BALANCE 0xC2 0x4D 0x2C 0xD3 EXTCODECOPY 0xBF CREATE2 PUSH27 0x93F4D2E609E7F243F8B0D2B8DC64736F6C63430008140033000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Dealer.sol":{"Dealer":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isRelocked","type":"bool"}],"name":"IsSequencerRelocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"oldValue","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"newValue","type":"uint32"}],"name":"L2GasSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"L2MetisMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"index","type":"uint32"},{"indexed":false,"internalType":"address","name":"agent","type":"address"}],"name":"SequencerAgentAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldValue","type":"address"},{"indexed":true,"internalType":"address","name":"newValue","type":"address"}],"name":"SequencerAgentTemplateSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sequencerSigner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"SequencerInitialBalanceLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"index","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"SequencerRelocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sequencerSigner","type":"address"}],"name":"SequencerTerminated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakingAmountWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"oldValue","type":"bool"},{"indexed":false,"internalType":"bool","name":"newValue","type":"bool"}],"name":"WithdrawRewardsSet","type":"event"},{"inputs":[],"name":"active","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"activeSequencerIds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_metis","type":"address"},{"internalType":"address","name":"_lockingPool","type":"address"},{"internalType":"address","name":"_l1Bridge","type":"address"},{"internalType":"uint256","name":"_l2ChainId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"address","name":"_l2Minter","type":"address"},{"internalType":"address","name":"_l2RewardDispatcher","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"l2ChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Gas","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Minter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2RewardDispatcher","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sequencerSigner","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubKey","type":"bytes"}],"name":"lockFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockingInfo","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockingPool","outputs":[{"internalType":"contract ILockingPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"contract ICrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metis","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"redemptionQueue","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relock","outputs":[{"internalType":"uint256","name":"totalProcessed","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sequencerAgentCount","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerAgentTemplate","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"sequencerAgents","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerData","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"internalType":"struct ILockingPool.SequencerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sequencerSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"setL2Gas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_l2MinterAddress","type":"address"}],"name":"setL2Minter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_l2RewardDispatcher","type":"address"}],"name":"setL2RewardDispatcher","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_redemptionQueue","type":"address"}],"name":"setRedemptionQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sumRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdrawRewards","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawStakingAmount","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"IsSequencerRelocked(bool)":{"params":{"isRelocked":"The status of the sequencer."}},"L2GasSet(uint32,uint32)":{"params":{"oldValue":"The old L2 gas limit.        "}},"L2MetisMinted(uint256)":{"params":{"amount":"The amount of Metis tokens that have been minted."}},"RewardsWithdrawn(uint256,uint256)":{"params":{"reward":"The amount of rewards that have been withdrawn.","sequencerId":"The ID of the sequencer."}},"SequencerAgentAdded(uint32,address)":{"params":{"agent":"address of the agent","index":"index of the agent"}},"SequencerAgentTemplateSet(address,address)":{"params":{"newValue":"The address of the new sequencer agent template.","oldValue":"The address of the old sequencer agent template."}},"SequencerInitialBalanceLocked(address,uint256,bool)":{"params":{"active":"The status of the sequencer.","amount":"The amount of Metis tokens that have been locked.","sequencerSigner":"The address of the sequencer signer."}},"SequencerRelocked(uint32,uint256,uint256)":{"params":{"amount":"The amount of Metis tokens that have been added to the lock.","index":"The index of the sequencer agent in the sequencer list.","reward":"The amount of additional rewards that have been locked."}},"SequencerTerminated(address)":{"params":{"sequencerSigner":"The address of the sequencer signer."}},"StakingAmountWithdrawn(address,uint256)":{"params":{"amount":"The amount of Metis tokens that have been deposited.","recipient":"The recipient of the  Metis token on  L2 (redemptionQueue)."}},"WithdrawRewardsSet(bool,bool)":{"params":{"newValue":"The new withdrawRewards.","oldValue":"The old withdrawRewards."}}},"kind":"dev","methods":{"lockFor(address,uint256,bytes)":{"params":{"_amount":"The amount of Metis tokens to lock.","_sequencerSigner":"The address of the sequencer signer.","_signerPubKey":"The public key of the sequencer signer."}},"owner()":{"details":"Returns the address of the current owner."},"relock()":{"details":"The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.","returns":{"totalProcessed":"The total amount of Metis tokens and rewards that have been relocked."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setL2Gas(uint32)":{"details":"The L2 gas limit is used when minting eMetis tokens on Layer 2.","params":{"_l2Gas":"The new L2 gas limit."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawStakingAmount(uint256)":{"params":{"amount":"The amount of Metis tokens to withdraw."}}},"title":"Dealer","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506135c5806100206000396000f3fe6080604052600436106101ee5760003560e01c80638da5cb5b1161010d578063c53b573d116100a0578063e92d61e51161006f578063e92d61e514610670578063f2fde38b1461069b578063f7cee36a146106c4578063f87b7a3e146106ef578063feafaa6b14610718576101ee565b8063c53b573d146105d1578063c7b8981c146105ef578063d6ae3cd51461061a578063e597455414610645576101ee565b8063a69df4b5116100dc578063a69df4b51461054a578063af70cba514610554578063b699ce5f1461057d578063c3b550c8146105a6576101ee565b80638da5cb5b1461049e5780638db8ad88146104c957806397ec19be146104f45780639e9357041461051f576101ee565b80633cbb697911610185578063715018a611610154578063715018a61461040657806376d9f95c1461041d5780637ca4f8b01461044857806385d1e2b814610473576101ee565b80633cbb69791461034a57806343c82cf714610375578063457cb5861461039e57806356891412146103db576101ee565b80631abdaf6a116101c15780631abdaf6a1461029057806333bec7e7146102cd5780633b4c46d0146102f65780633cb747bf1461031f576101ee565b80630182a6da146101f357806302fb0c5e1461020f57806304a78fca1461023a578063080e1e4e14610265575b600080fd5b61020d6004803603810190610208919061265d565b610722565b005b34801561021b57600080fd5b50610224610b9f565b60405161023191906126a5565b60405180910390f35b34801561024657600080fd5b5061024f610bb2565b60405161025c91906126cf565b60405180910390f35b34801561027157600080fd5b5061027a610bb8565b604051610287919061272b565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b2919061265d565b610bde565b6040516102c49190612765565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef91906127ac565b610c18565b005b34801561030257600080fd5b5061031d60048036038101906103189190612805565b610c95565b005b34801561032b57600080fd5b50610334610ce1565b6040516103419190612891565b60405180910390f35b34801561035657600080fd5b5061035f610d07565b60405161036c9190612765565b60405180910390f35b34801561038157600080fd5b5061039c60048036038101906103979190612805565b610d1d565b005b3480156103aa57600080fd5b506103c560048036038101906103c091906127ac565b610d69565b6040516103d2919061272b565b60405180910390f35b3480156103e757600080fd5b506103f0610d9c565b6040516103fd91906126cf565b60405180910390f35b34801561041257600080fd5b5061041b610daf565b005b34801561042957600080fd5b50610432610dc3565b60405161043f9190612996565b60405180910390f35b34801561045457600080fd5b5061045d610e6f565b60405161046a91906126cf565b60405180910390f35b34801561047f57600080fd5b50610488610e75565b60405161049591906129d3565b60405180910390f35b3480156104aa57600080fd5b506104b3610e9b565b6040516104c0919061272b565b60405180910390f35b3480156104d557600080fd5b506104de610ed3565b6040516104eb919061272b565b60405180910390f35b34801561050057600080fd5b50610509610ef7565b604051610516919061272b565b60405180910390f35b34801561052b57600080fd5b50610534610f1d565b6040516105419190612765565b60405180910390f35b610552610f33565b005b34801561056057600080fd5b5061057b60048036038101906105769190612b34565b611061565b005b34801561058957600080fd5b506105a4600480360381019061059f9190612ba3565b6114eb565b005b3480156105b257600080fd5b506105bb611a80565b6040516105c8919061272b565b60405180910390f35b6105d9611aa6565b6040516105e691906126cf565b60405180910390f35b3480156105fb57600080fd5b50610604611f41565b60405161061191906126a5565b60405180910390f35b34801561062657600080fd5b5061062f611f54565b60405161063c91906126cf565b60405180910390f35b34801561065157600080fd5b5061065a611f5a565b6040516106679190612c66565b60405180910390f35b34801561067c57600080fd5b50610685611f80565b604051610692919061272b565b60405180910390f35b3480156106a757600080fd5b506106c260048036038101906106bd9190612805565b611fa6565b005b3480156106d057600080fd5b506106d961202c565b6040516106e69190612ca2565b60405180910390f35b3480156106fb57600080fd5b5061071660048036038101906107119190612805565b612052565b005b61072061209e565b005b61072a61214c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663441a3e70600d54836040518363ffffffff1660e01b8152600401610789929190612cbd565b600060405180830381600087803b1580156107a357600080fd5b505af11580156107b7573d6000803e3d6000fd5b505050506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e78cea926040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612cfb565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190612cfb565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b382846040518363ffffffff1660e01b815260040161091b929190612d28565b6020604051808303816000875af115801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190612d7d565b508073ffffffffffffffffffffffffffffffffffffffff1663ef808be234600554600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190612cfb565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356eff2676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190612cfb565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688600c60009054906101000a900463ffffffff166040518863ffffffff1660e01b8152600401610af996959493929190612de1565b6000604051808303818588803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b5050505050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6ef7a26d50cec3f1a210bed887413d426c9c13575a17872c54e00c4287ac5dce83604051610b9391906126cf565b60405180910390a25050565b600e60149054906101000a900460ff1681565b600d5481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a8181548110610bee57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b610c2061214c565b6000600c60009054906101000a900463ffffffff16905081600c60006101000a81548163ffffffff021916908363ffffffff1602179055507f4042b09a75e5a67c8cc2a57e00de6d29fb5202b7207afba895eb8b5cc3e2179e8183604051610c89929190612e55565b60405180910390a15050565b610c9d61214c565b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900463ffffffff1681565b610d2561214c565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610da6610dc3565b60000151905090565b610db761214c565b610dc160006121d3565b565b610dcb612594565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636ba7ccff600d546040518263ffffffff1660e01b8152600401610e2891906126cf565b61014060405180830381865afa158015610e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6a9190612f8e565b905090565b600b5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610ea66122aa565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900463ffffffff1681565b610f3b61214c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663262c0e6634600d54600c60009054906101000a900463ffffffff166040518463ffffffff1660e01b8152600401610fad929190612fbc565b6000604051808303818588803b158015610fc657600080fd5b505af1158015610fda573d6000803e3d6000fd5b50505050506000600e60146101000a81548160ff021916908315150217905550600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fbac99876b6a1c26412460d61d913235a30f0ea99585ffcfd53c0faae6ed3313460405160405180910390a2565b61106961214c565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110c6919061272b565b602060405180830381865afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190612fe5565b90508281101561114c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114390613095565b60405180910390fd5b83600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161122c929190612d28565b6020604051808303816000875af115801561124b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126f9190612d7d565b6112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590613127565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ad42030600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040518563ffffffff1660e01b815260040161135394939291906131b5565b600060405180830381600087803b15801561136d57600080fd5b505af1158015611381573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663beb26755600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401611402919061272b565b602060405180830381865afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114439190612fe5565b600d819055506001600e60146101000a81548160ff021916908315150217905550600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb1e87a33084279cb2bff2d1271034cf695f539ee73bbd934d1625703d585d84a84600e60149054906101000a900460ff166040516114dd929190613201565b60405180910390a250505050565b60006114f56122d2565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156115435750825b9050600060018367ffffffffffffffff16148015611578575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611586575080155b156115bd576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561160d5760018560000160086101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16141580156116775750600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614155b80156116b05750600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614155b80156116e95750600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b80156117225750600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b611761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175890613276565b60405180910390fd5b61176a336122fa565b8b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2fdcc176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187d91906132d4565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508973ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192c9190612cfb565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860058190555087600c60006101000a81548163ffffffff021916908363ffffffff16021790555086600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315611a725760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611a699190613350565b60405180910390a15b505050505050505050505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600e60149054906101000a900460ff16611af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aee906133b7565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c0b3e466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8a9190612fe5565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611be9919061272b565b602060405180830381865afa158015611c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2a9190612fe5565b90506000805b60018163ffffffff161015611ed6576000611c49610dc3565b905060008082602001518360000151915091508185611c689190613406565b94506000878210611c7a576000611c87565b8188611c86919061343a565b5b90506000611c95828961230e565b90508088611ca3919061343a565b975060008482611cb39190613406565b905060008103611cc857505050505050611ec3565b808b611cd49190613406565b9a5060008a8286611ce59190613406565b119050808015611cf55750600086115b15611dd857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317396687600d54600c60009054906101000a900463ffffffff166040518363ffffffff1660e01b8152600401611d6b929190612fbc565b600060405180830381600087803b158015611d8557600080fd5b505af1158015611d99573d6000803e3d6000fd5b50505050600d547f630af8b49bb398089a74eacdb08106c528436090bdb35d7302152dc5117df9bd87604051611dcf91906126cf565b60405180910390a25b801580611de55750600083115b15611ebb57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663015bb180600d548560016040518463ffffffff1660e01b8152600401611e4c9392919061346e565b600060405180830381600087803b158015611e6657600080fd5b505af1158015611e7a573d6000803e3d6000fd5b505050507fb8aafdec9bacdc76bfea3c330063c391a2904d4f91e71f97a91534f3c8ce4ab560008488604051611eb2939291906134e0565b60405180910390a15b505050505050505b8080611ece90613517565b915050611c30565b506000811115611f0357611ee981612327565b80600b6000828254611efb9190613406565b925050819055505b7f1e2aed425906c5ed1ac5aff65e04a30adda54675483414997c879ca7f92a2a576001604051611f3391906126a5565b60405180910390a150505090565b600c60049054906101000a900460ff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fae61214c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120205760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612017919061272b565b60405180910390fd5b612029816121d3565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61205a61214c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6120a661214c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ddc74de34600d54600c60009054906101000a900463ffffffff166040518463ffffffff1660e01b8152600401612118929190612fbc565b6000604051808303818588803b15801561213157600080fd5b505af1158015612145573d6000803e3d6000fd5b5050505050565b6121546124a6565b73ffffffffffffffffffffffffffffffffffffffff16612172610e9b565b73ffffffffffffffffffffffffffffffffffffffff16146121d1576121956124a6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016121c8919061272b565b60405180910390fd5b565b60006121dd6122aa565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6123026124ae565b61230b816124ee565b50565b600081831061231d578161231f565b825b905092915050565b600063eb82afb360e01b8260405160240161234291906126cf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344dd5ed634600554600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600c60009054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016124399493929190613543565b6000604051808303818588803b15801561245257600080fd5b505af1158015612466573d6000803e3d6000fd5b50505050507fd644e527c1896057ce642adfbc00f04d6b23d4c2fb30529522184d151dc087dc8260405161249a91906126cf565b60405180910390a15050565b600033905090565b6124b6612574565b6124ec576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6124f66124ae565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125685760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161255f919061272b565b60405180910390fd5b612571816121d3565b50565b600061257e6122d2565b60000160089054906101000a900460ff16905090565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61263a81612627565b811461264557600080fd5b50565b60008135905061265781612631565b92915050565b6000602082840312156126735761267261261d565b5b600061268184828501612648565b91505092915050565b60008115159050919050565b61269f8161268a565b82525050565b60006020820190506126ba6000830184612696565b92915050565b6126c981612627565b82525050565b60006020820190506126e460008301846126c0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612715826126ea565b9050919050565b6127258161270a565b82525050565b6000602082019050612740600083018461271c565b92915050565b600063ffffffff82169050919050565b61275f81612746565b82525050565b600060208201905061277a6000830184612756565b92915050565b61278981612746565b811461279457600080fd5b50565b6000813590506127a681612780565b92915050565b6000602082840312156127c2576127c161261d565b5b60006127d084828501612797565b91505092915050565b6127e28161270a565b81146127ed57600080fd5b50565b6000813590506127ff816127d9565b92915050565b60006020828403121561281b5761281a61261d565b5b6000612829848285016127f0565b91505092915050565b6000819050919050565b600061285761285261284d846126ea565b612832565b6126ea565b9050919050565b60006128698261283c565b9050919050565b600061287b8261285e565b9050919050565b61288b81612870565b82525050565b60006020820190506128a66000830184612882565b92915050565b6128b581612627565b82525050565b6128c48161270a565b82525050565b610140820160008201516128e160008501826128ac565b5060208201516128f460208501826128ac565b50604082015161290760408501826128ac565b50606082015161291a60608501826128ac565b50608082015161292d60808501826128ac565b5060a082015161294060a08501826128ac565b5060c082015161295360c08501826128ac565b5060e082015161296660e08501826128ac565b5061010082015161297b6101008501826128bb565b506101208201516129906101208501826128bb565b50505050565b6000610140820190506129ac60008301846128ca565b92915050565b60006129bd8261285e565b9050919050565b6129cd816129b2565b82525050565b60006020820190506129e860008301846129c4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a41826129f8565b810181811067ffffffffffffffff82111715612a6057612a5f612a09565b5b80604052505050565b6000612a73612613565b9050612a7f8282612a38565b919050565b600067ffffffffffffffff821115612a9f57612a9e612a09565b5b612aa8826129f8565b9050602081019050919050565b82818337600083830152505050565b6000612ad7612ad284612a84565b612a69565b905082815260208101848484011115612af357612af26129f3565b5b612afe848285612ab5565b509392505050565b600082601f830112612b1b57612b1a6129ee565b5b8135612b2b848260208601612ac4565b91505092915050565b600080600060608486031215612b4d57612b4c61261d565b5b6000612b5b868287016127f0565b9350506020612b6c86828701612648565b925050604084013567ffffffffffffffff811115612b8d57612b8c612622565b5b612b9986828701612b06565b9150509250925092565b600080600080600080600060e0888a031215612bc257612bc161261d565b5b6000612bd08a828b016127f0565b9750506020612be18a828b016127f0565b9650506040612bf28a828b016127f0565b9550506060612c038a828b01612648565b9450506080612c148a828b01612797565b93505060a0612c258a828b016127f0565b92505060c0612c368a828b016127f0565b91505092959891949750929550565b6000612c508261285e565b9050919050565b612c6081612c45565b82525050565b6000602082019050612c7b6000830184612c57565b92915050565b6000612c8c8261285e565b9050919050565b612c9c81612c81565b82525050565b6000602082019050612cb76000830184612c93565b92915050565b6000604082019050612cd260008301856126c0565b612cdf60208301846126c0565b9392505050565b600081519050612cf5816127d9565b92915050565b600060208284031215612d1157612d1061261d565b5b6000612d1f84828501612ce6565b91505092915050565b6000604082019050612d3d600083018561271c565b612d4a60208301846126c0565b9392505050565b612d5a8161268a565b8114612d6557600080fd5b50565b600081519050612d7781612d51565b92915050565b600060208284031215612d9357612d9261261d565b5b6000612da184828501612d68565b91505092915050565b600082825260208201905092915050565b50565b6000612dcb600083612daa565b9150612dd682612dbb565b600082019050919050565b600060e082019050612df660008301896126c0565b612e03602083018861271c565b612e10604083018761271c565b612e1d606083018661271c565b612e2a60808301856126c0565b612e3760a0830184612756565b81810360c0830152612e4881612dbe565b9050979650505050505050565b6000604082019050612e6a6000830185612756565b612e776020830184612756565b9392505050565b600080fd5b600081519050612e9281612631565b92915050565b60006101408284031215612eaf57612eae612e7e565b5b612eba610140612a69565b90506000612eca84828501612e83565b6000830152506020612ede84828501612e83565b6020830152506040612ef284828501612e83565b6040830152506060612f0684828501612e83565b6060830152506080612f1a84828501612e83565b60808301525060a0612f2e84828501612e83565b60a08301525060c0612f4284828501612e83565b60c08301525060e0612f5684828501612e83565b60e083015250610100612f6b84828501612ce6565b61010083015250610120612f8184828501612ce6565b6101208301525092915050565b60006101408284031215612fa557612fa461261d565b5b6000612fb384828501612e98565b91505092915050565b6000604082019050612fd160008301856126c0565b612fde6020830184612756565b9392505050565b600060208284031215612ffb57612ffa61261d565b5b600061300984828501612e83565b91505092915050565b600082825260208201905092915050565b7f4465616c65723a20496e73756666696369656e74204d657469732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061307f602283613012565b915061308a82613023565b604082019050919050565b600060208201905081810360008301526130ae81613072565b9050919050565b7f4465616c65723a20417070726f76616c20746f204c6f636b696e67496e666f2060008201527f6661696c65640000000000000000000000000000000000000000000000000000602082015250565b6000613111602683613012565b915061311c826130b5565b604082019050919050565b6000602082019050818103600083015261314081613104565b9050919050565b600081519050919050565b60005b83811015613170578082015181840152602081019050613155565b60008484015250505050565b600061318782613147565b6131918185612daa565b93506131a1818560208601613152565b6131aa816129f8565b840191505092915050565b60006080820190506131ca600083018761271c565b6131d7602083018661271c565b6131e460408301856126c0565b81810360608301526131f6818461317c565b905095945050505050565b600060408201905061321660008301856126c0565b6132236020830184612696565b9392505050565b7f4465616c65723a207a65726f2061646472657373000000000000000000000000600082015250565b6000613260601483613012565b915061326b8261322a565b602082019050919050565b6000602082019050818103600083015261328f81613253565b9050919050565b60006132a18261270a565b9050919050565b6132b181613296565b81146132bc57600080fd5b50565b6000815190506132ce816132a8565b92915050565b6000602082840312156132ea576132e961261d565b5b60006132f8848285016132bf565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061333a61333561333084613301565b612832565b61330b565b9050919050565b61334a8161331f565b82525050565b60006020820190506133656000830184613341565b92915050565b7f4465616c65723a206e6f206163746976652073657175656e6365720000000000600082015250565b60006133a1601b83613012565b91506133ac8261336b565b602082019050919050565b600060208201905081810360008301526133d081613394565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061341182612627565b915061341c83612627565b9250828201905080821115613434576134336133d7565b5b92915050565b600061344582612627565b915061345083612627565b9250828203905081811115613468576134676133d7565b5b92915050565b600060608201905061348360008301866126c0565b61349060208301856126c0565b61349d6040830184612696565b949350505050565b6000819050919050565b60006134ca6134c56134c0846134a5565b612832565b612746565b9050919050565b6134da816134af565b82525050565b60006060820190506134f560008301866134d1565b61350260208301856126c0565b61350f60408301846126c0565b949350505050565b600061352282612746565b915063ffffffff8203613538576135376133d7565b5b600182019050919050565b600060808201905061355860008301876126c0565b613565602083018661271c565b8181036040830152613577818561317c565b90506135866060830184612756565b9594505050505056fea26469706673582212207dd67cea66b2d951eda917dca952200ef2b9d302f461ac1e89fff75044c5c1df64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC53B573D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE92D61E5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE92D61E5 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xF7CEE36A EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xF87B7A3E EQ PUSH2 0x6EF JUMPI DUP1 PUSH4 0xFEAFAA6B EQ PUSH2 0x718 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xC53B573D EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xD6AE3CD5 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xE5974554 EQ PUSH2 0x645 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA69DF4B5 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xAF70CBA5 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xB699CE5F EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xC3B550C8 EQ PUSH2 0x5A6 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8DB8AD88 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x97EC19BE EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x9E935704 EQ PUSH2 0x51F JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x76D9F95C EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x7CA4F8B0 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x85D1E2B8 EQ PUSH2 0x473 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x43C82CF7 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x457CB586 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x56891412 EQ PUSH2 0x3DB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x1ABDAF6A GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x1ABDAF6A EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x33BEC7E7 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x3B4C46D0 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0x31F JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x182A6DA EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x4A78FCA EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x80E1E4E EQ PUSH2 0x265 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x265D JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x265D JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x27AC JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x27AC JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0xDAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DE PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH2 0xF33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH2 0x14EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BB PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D9 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62F PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65A PUSH2 0x1F5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2C66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x685 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0x1FA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D9 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x716 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0x2052 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x720 PUSH2 0x209E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72A PUSH2 0x214C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x441A3E70 PUSH1 0xD SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP3 SWAP2 SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE78CEA92 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC01E1BD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP3 SWAP2 SWAP1 PUSH2 0x2D28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEF808BE2 CALLVALUE PUSH1 0x5 SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC01E1BD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x56EFF267 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6EF7A26D50CEC3F1A210BED887413D426C9C13575A17872C54E00C4287AC5DCE DUP4 PUSH1 0x40 MLOAD PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4042B09A75E5A67C8CC2A57E00DE6D29FB5202B7207AFBA895EB8B5CC3E2179E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC89 SWAP3 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xC9D PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD25 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB7 PUSH2 0x214C JUMP JUMPDEST PUSH2 0xDC1 PUSH1 0x0 PUSH2 0x21D3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDCB PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BA7CCFF PUSH1 0xD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x2F8E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEA6 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xF3B PUSH2 0x214C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x262C0E66 CALLVALUE PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAD SWAP3 SWAP2 SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xE PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBAC99876B6A1C26412460D61D913235A30F0EA99585FFCFD53C0FAAE6ED33134 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1143 SWAP1 PUSH2 0x3095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122C SWAP3 SWAP2 SWAP1 PUSH2 0x2D28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x124B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP1 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD42030 PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1353 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1381 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBEB26755 PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB1E87A33084279CB2BFF2D1271034CF695F539EE73BBD934D1625703D585D84A DUP5 PUSH1 0xE PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x14DD SWAP3 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F5 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1543 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1578 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1586 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x160D JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1677 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16B0 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16E9 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1722 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1758 SWAP1 PUSH2 0x3276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176A CALLER PUSH2 0x22FA JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2FDCC17 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187D SWAP2 SWAP1 PUSH2 0x32D4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CB747BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1908 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192C SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1A69 SWAP2 SWAP1 PUSH2 0x3350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEE SWAP1 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6C0B3E46 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B8A SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C2A SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1ED6 JUMPI PUSH1 0x0 PUSH2 0x1C49 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD SWAP2 POP SWAP2 POP DUP2 DUP6 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP8 DUP3 LT PUSH2 0x1C7A JUMPI PUSH1 0x0 PUSH2 0x1C87 JUMP JUMPDEST DUP2 DUP9 PUSH2 0x1C86 SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C95 DUP3 DUP10 PUSH2 0x230E JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH2 0x1CA3 SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST SWAP8 POP PUSH1 0x0 DUP5 DUP3 PUSH2 0x1CB3 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1CC8 JUMPI POP POP POP POP POP POP PUSH2 0x1EC3 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP11 POP PUSH1 0x0 DUP11 DUP3 DUP7 PUSH2 0x1CE5 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST GT SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1CF5 JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST ISZERO PUSH2 0x1DD8 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17396687 PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6B SWAP3 SWAP2 SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xD SLOAD PUSH32 0x630AF8B49BB398089A74EACDB08106C528436090BDB35D7302152DC5117DF9BD DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DCF SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1DE5 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x15BB180 PUSH1 0xD SLOAD DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x346E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB8AAFDEC9BACDC76BFEA3C330063C391A2904D4F91E71F97A91534F3C8CE4AB5 PUSH1 0x0 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1EB2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1ECE SWAP1 PUSH2 0x3517 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C30 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1F03 JUMPI PUSH2 0x1EE9 DUP2 PUSH2 0x2327 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EFB SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x1E2AED425906C5ED1AC5AFF65E04A30ADDA54675483414997C879CA7F92A2A57 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1F33 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FAE PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2020 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2017 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2029 DUP2 PUSH2 0x21D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x205A PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x20A6 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DDC74DE CALLVALUE PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2118 SWAP3 SWAP2 SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2154 PUSH2 0x24A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2172 PUSH2 0xE9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21D1 JUMPI PUSH2 0x2195 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C8 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DD PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2302 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x230B DUP2 PUSH2 0x24EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x231D JUMPI DUP2 PUSH2 0x231F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEB82AFB3 PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2342 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44DD5ED6 CALLVALUE PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2439 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2466 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0xD644E527C1896057CE642ADFBC00F04D6B23D4C2FB30529522184D151DC087DC DUP3 PUSH1 0x40 MLOAD PUSH2 0x249A SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24B6 PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x24EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2568 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255F SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x21D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257E PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x263A DUP2 PUSH2 0x2627 JUMP JUMPDEST DUP2 EQ PUSH2 0x2645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2657 DUP2 PUSH2 0x2631 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2673 JUMPI PUSH2 0x2672 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2681 DUP5 DUP3 DUP6 ADD PUSH2 0x2648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269F DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26C9 DUP2 PUSH2 0x2627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2715 DUP3 PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2725 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2740 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x271C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x275F DUP2 PUSH2 0x2746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x277A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2789 DUP2 PUSH2 0x2746 JUMP JUMPDEST DUP2 EQ PUSH2 0x2794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27A6 DUP2 PUSH2 0x2780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C2 JUMPI PUSH2 0x27C1 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E2 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP2 EQ PUSH2 0x27ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27FF DUP2 PUSH2 0x27D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281B JUMPI PUSH2 0x281A PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2829 DUP5 DUP3 DUP6 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2857 PUSH2 0x2852 PUSH2 0x284D DUP5 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2869 DUP3 PUSH2 0x283C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287B DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288B DUP2 PUSH2 0x2870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28B5 DUP2 PUSH2 0x2627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28C4 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x28E1 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x28F4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2907 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x291A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x292D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2940 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2953 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2966 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x297B PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x28BB JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2990 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x28BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x29AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BD DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29CD DUP2 PUSH2 0x29B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A41 DUP3 PUSH2 0x29F8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A5F PUSH2 0x2A09 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A73 PUSH2 0x2613 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A7F DUP3 DUP3 PUSH2 0x2A38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A9F JUMPI PUSH2 0x2A9E PUSH2 0x2A09 JUMP JUMPDEST JUMPDEST PUSH2 0x2AA8 DUP3 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 PUSH2 0x2AD2 DUP5 PUSH2 0x2A84 JUMP JUMPDEST PUSH2 0x2A69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AF3 JUMPI PUSH2 0x2AF2 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST PUSH2 0x2AFE DUP5 DUP3 DUP6 PUSH2 0x2AB5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B1B JUMPI PUSH2 0x2B1A PUSH2 0x29EE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP7 DUP3 DUP8 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B6C DUP7 DUP3 DUP8 ADD PUSH2 0x2648 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B8D JUMPI PUSH2 0x2B8C PUSH2 0x2622 JUMP JUMPDEST JUMPDEST PUSH2 0x2B99 DUP7 DUP3 DUP8 ADD PUSH2 0x2B06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BC2 JUMPI PUSH2 0x2BC1 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD0 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2BE1 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2BF2 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2C03 DUP11 DUP3 DUP12 ADD PUSH2 0x2648 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2C14 DUP11 DUP3 DUP12 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2C25 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2C36 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C50 DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C60 DUP2 PUSH2 0x2C45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9C DUP2 PUSH2 0x2C81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CD2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2CDF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CF5 DUP2 PUSH2 0x27D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D11 JUMPI PUSH2 0x2D10 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1F DUP5 DUP3 DUP6 ADD PUSH2 0x2CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D3D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2D4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D5A DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x2D65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D77 DUP2 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D93 JUMPI PUSH2 0x2D92 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DA1 DUP5 DUP3 DUP6 ADD PUSH2 0x2D68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DCB PUSH1 0x0 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD6 DUP3 PUSH2 0x2DBB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2DF6 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2E03 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2E10 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2E1D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2E2A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2E37 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E48 DUP2 PUSH2 0x2DBE JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E6A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2756 JUMP JUMPDEST PUSH2 0x2E77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E92 DUP2 PUSH2 0x2631 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x2E7E JUMP JUMPDEST JUMPDEST PUSH2 0x2EBA PUSH2 0x140 PUSH2 0x2A69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2ECA DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2EDE DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x2EF2 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2F06 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x2F1A DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x2F2E DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x2F42 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x2F56 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x2F6B DUP5 DUP3 DUP6 ADD PUSH2 0x2CE6 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x2F81 DUP5 DUP3 DUP6 ADD PUSH2 0x2CE6 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA5 JUMPI PUSH2 0x2FA4 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FB3 DUP5 DUP3 DUP6 ADD PUSH2 0x2E98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FD1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2FDE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FFB JUMPI PUSH2 0x2FFA PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3009 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A20496E73756666696369656E74204D657469732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x307F PUSH1 0x22 DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x308A DUP3 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30AE DUP2 PUSH2 0x3072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465616C65723A20417070726F76616C20746F204C6F636B696E67496E666F20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6661696C65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3111 PUSH1 0x26 DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x311C DUP3 PUSH2 0x30B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3140 DUP2 PUSH2 0x3104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3170 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3155 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3187 DUP3 PUSH2 0x3147 JUMP JUMPDEST PUSH2 0x3191 DUP2 DUP6 PUSH2 0x2DAA JUMP JUMPDEST SWAP4 POP PUSH2 0x31A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3152 JUMP JUMPDEST PUSH2 0x31AA DUP2 PUSH2 0x29F8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x31CA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x31D7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x31E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x31F6 DUP2 DUP5 PUSH2 0x317C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3216 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x3223 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2696 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3260 PUSH1 0x14 DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x326B DUP3 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328F DUP2 PUSH2 0x3253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A1 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32B1 DUP2 PUSH2 0x3296 JUMP JUMPDEST DUP2 EQ PUSH2 0x32BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32CE DUP2 PUSH2 0x32A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32EA JUMPI PUSH2 0x32E9 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32F8 DUP5 DUP3 DUP6 ADD PUSH2 0x32BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333A PUSH2 0x3335 PUSH2 0x3330 DUP5 PUSH2 0x3301 JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x330B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x334A DUP2 PUSH2 0x331F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3365 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A206E6F206163746976652073657175656E6365720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A1 PUSH1 0x1B DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x33AC DUP3 PUSH2 0x336B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33D0 DUP2 PUSH2 0x3394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3411 DUP3 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x341C DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3434 JUMPI PUSH2 0x3433 PUSH2 0x33D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3445 DUP3 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x3450 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3468 JUMPI PUSH2 0x3467 PUSH2 0x33D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3483 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x3490 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x349D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2696 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CA PUSH2 0x34C5 PUSH2 0x34C0 DUP5 PUSH2 0x34A5 JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x2746 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34DA DUP2 PUSH2 0x34AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x34F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x34D1 JUMP JUMPDEST PUSH2 0x3502 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x350F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3522 DUP3 PUSH2 0x2746 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x3538 JUMPI PUSH2 0x3537 PUSH2 0x33D7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3558 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x3565 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x271C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3577 DUP2 DUP6 PUSH2 0x317C JUMP JUMPDEST SWAP1 POP PUSH2 0x3586 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xD67CEA66B2D951EDA917DCA952200EF2B9D302F461AC1E89FFF75044C5C1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"702:11801:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_54":{"entryPoint":8954,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":9454,"id":81,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":9390,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":8524,"id":122,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":8914,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":8874,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":9588,"id":438,"parameterSlots":0,"returnSlots":1},"@_mintL2EMetis_3019":{"entryPoint":8999,"id":3019,"parameterSlots":1,"returnSlots":0},"@_msgSender_476":{"entryPoint":9382,"id":476,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_193":{"entryPoint":8659,"id":193,"parameterSlots":1,"returnSlots":0},"@activeSequencerIds_2492":{"entryPoint":3038,"id":2492,"parameterSlots":0,"returnSlots":0},"@active_2507":{"entryPoint":2975,"id":2507,"parameterSlots":0,"returnSlots":0},"@initialize_2650":{"entryPoint":5355,"id":2650,"parameterSlots":7,"returnSlots":0},"@l2ChainId_2474":{"entryPoint":8020,"id":2474,"parameterSlots":0,"returnSlots":0},"@l2Gas_2498":{"entryPoint":3335,"id":2498,"parameterSlots":0,"returnSlots":0},"@l2Minter_2477":{"entryPoint":3000,"id":2477,"parameterSlots":0,"returnSlots":0},"@l2RewardDispatcher_2480":{"entryPoint":8064,"id":2480,"parameterSlots":0,"returnSlots":0},"@lockFor_2726":{"entryPoint":4193,"id":2726,"parameterSlots":3,"returnSlots":0},"@lockingInfo_2467":{"entryPoint":8236,"id":2467,"parameterSlots":0,"returnSlots":0},"@lockingPool_2463":{"entryPoint":3701,"id":2463,"parameterSlots":0,"returnSlots":0},"@messenger_2471":{"entryPoint":3297,"id":2471,"parameterSlots":0,"returnSlots":0},"@metis_2459":{"entryPoint":8026,"id":2459,"parameterSlots":0,"returnSlots":0},"@min_1547":{"entryPoint":8974,"id":1547,"parameterSlots":2,"returnSlots":1},"@owner_105":{"entryPoint":3739,"id":105,"parameterSlots":0,"returnSlots":1},"@redemptionQueue_2509":{"entryPoint":3831,"id":2509,"parameterSlots":0,"returnSlots":0},"@relock_2953":{"entryPoint":6822,"id":2953,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":3503,"id":136,"parameterSlots":0,"returnSlots":0},"@sequencerAgentCount_2488":{"entryPoint":3869,"id":2488,"parameterSlots":0,"returnSlots":0},"@sequencerAgentTemplate_2455":{"entryPoint":3795,"id":2455,"parameterSlots":0,"returnSlots":0},"@sequencerAgents_2485":{"entryPoint":3433,"id":2485,"parameterSlots":0,"returnSlots":0},"@sequencerData_2780":{"entryPoint":3523,"id":2780,"parameterSlots":0,"returnSlots":1},"@sequencerId_2503":{"entryPoint":2994,"id":2503,"parameterSlots":0,"returnSlots":0},"@sequencerSigner_2505":{"entryPoint":6784,"id":2505,"parameterSlots":0,"returnSlots":0},"@setL2Gas_2975":{"entryPoint":3096,"id":2975,"parameterSlots":1,"returnSlots":0},"@setL2Minter_3096":{"entryPoint":8274,"id":3096,"parameterSlots":1,"returnSlots":0},"@setL2RewardDispatcher_3120":{"entryPoint":3357,"id":3120,"parameterSlots":1,"returnSlots":0},"@setRedemptionQueue_3108":{"entryPoint":3221,"id":3108,"parameterSlots":1,"returnSlots":0},"@sumRewards_2495":{"entryPoint":3695,"id":2495,"parameterSlots":0,"returnSlots":0},"@totalLocked_2986":{"entryPoint":3484,"id":2986,"parameterSlots":0,"returnSlots":1},"@transferOwnership_164":{"entryPoint":8102,"id":164,"parameterSlots":1,"returnSlots":0},"@unlockClaim_2768":{"entryPoint":8350,"id":2768,"parameterSlots":0,"returnSlots":0},"@unlock_2751":{"entryPoint":3891,"id":2751,"parameterSlots":0,"returnSlots":0},"@withdrawRewards_2501":{"entryPoint":8001,"id":2501,"parameterSlots":0,"returnSlots":0},"@withdrawStakingAmount_3084":{"entryPoint":1826,"id":3084,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":10948,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":11494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":11624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_ILockingInfo_$3387_fromMemory":{"entryPoint":12991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_SequencerData_$3634_memory_ptr_fromMemory":{"entryPoint":11928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9800,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":10135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":11515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_addresst_address":{"entryPoint":11171,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11060,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":11645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ILockingInfo_$3387_fromMemory":{"entryPoint":13012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_SequencerData_$3634_memory_ptr_fromMemory":{"entryPoint":12174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":10156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":10427,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10012,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9878,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ICrossDomainMessenger_$3199_to_t_address_fromStack":{"entryPoint":10370,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack":{"entryPoint":11351,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ILockingInfo_$3387_to_t_address_fromStack":{"entryPoint":11411,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ILockingPool_$3737_to_t_address_fromStack":{"entryPoint":10692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint32_fromStack":{"entryPoint":13521,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":13121,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack":{"entryPoint":12883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack":{"entryPoint":13204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa_to_t_string_memory_ptr_fromStack":{"entryPoint":12548,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3_to_t_string_memory_ptr_fromStack":{"entryPoint":12402,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_SequencerData_$3634_memory_ptr_to_t_struct$_SequencerData_$3634_memory_ptr_fromStack":{"entryPoint":10442,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10412,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9920,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":10070,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12725,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11560,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ICrossDomainMessenger_$3199__to_t_address__fromStack_reversed":{"entryPoint":10385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed":{"entryPoint":11366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILockingInfo_$3387__to_t_address__fromStack_reversed":{"entryPoint":11426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILockingPool_$3737__to_t_address__fromStack_reversed":{"entryPoint":10707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_uint256__to_t_uint32_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13536,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":13136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12437,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_SequencerData_$3634_memory_ptr__to_t_struct$_SequencerData_$3634_memory_ptr__fromStack_reversed":{"entryPoint":10646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_address_t_uint256_t_uint32_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_address_t_address_t_address_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11745,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__to_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":13635,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":12801,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11453,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":13422,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed":{"entryPoint":12220,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":10085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":11861,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":10857,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9747,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10884,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12615,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11690,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12306,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13318,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13370,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9994,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9866,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ILockingInfo_$3387":{"entryPoint":12950,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":13477,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":13057,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9962,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9767,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":10054,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":13067,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ICrossDomainMessenger_$3199_to_t_address":{"entryPoint":10352,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$979_to_t_address":{"entryPoint":11333,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ILockingInfo_$3387_to_t_address":{"entryPoint":11393,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ILockingPool_$3737_to_t_address":{"entryPoint":10674,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint32":{"entryPoint":13487,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":13087,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":10334,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":10300,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10933,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12626,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":10808,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10290,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint32":{"entryPoint":13591,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13271,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10761,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10734,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":11902,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10739,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9762,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9757,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10744,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313":{"entryPoint":12842,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582":{"entryPoint":13163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa":{"entryPoint":12469,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3":{"entryPoint":12323,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":11707,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10201,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11601,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_ILockingInfo_$3387":{"entryPoint":12968,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9777,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":10112,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:31400:20","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:20","statements":[{"nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:20"},"nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:20"},"nodeType":"YulFunctionCall","src":"187:12:20"},"nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:20"},"nodeType":"YulFunctionCall","src":"310:12:20"},"nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nodeType":"YulBlock","src":"379:32:20","statements":[{"nodeType":"YulAssignment","src":"389:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:77:20"},{"body":{"nodeType":"YulBlock","src":"460:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:20"},"nodeType":"YulFunctionCall","src":"519:12:20"},"nodeType":"YulExpressionStatement","src":"519:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:20"},"nodeType":"YulFunctionCall","src":"490:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:20"},"nodeType":"YulFunctionCall","src":"480:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:20"},"nodeType":"YulFunctionCall","src":"473:43:20"},"nodeType":"YulIf","src":"470:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:20","type":""}],"src":"417:122:20"},{"body":{"nodeType":"YulBlock","src":"597:87:20","statements":[{"nodeType":"YulAssignment","src":"607:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:20"},"nodeType":"YulFunctionCall","src":"616:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:20"},"nodeType":"YulFunctionCall","src":"645:33:20"},"nodeType":"YulExpressionStatement","src":"645:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:20","type":""}],"src":"545:139:20"},{"body":{"nodeType":"YulBlock","src":"756:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:20"},"nodeType":"YulFunctionCall","src":"804:79:20"},"nodeType":"YulExpressionStatement","src":"804:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:20"},"nodeType":"YulFunctionCall","src":"773:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:20"},"nodeType":"YulFunctionCall","src":"769:32:20"},"nodeType":"YulIf","src":"766:119:20"},{"nodeType":"YulBlock","src":"895:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:20","type":""}]},{"nodeType":"YulAssignment","src":"939:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:20"},"nodeType":"YulFunctionCall","src":"970:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:20"},"nodeType":"YulFunctionCall","src":"949:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:20","type":""}],"src":"690:329:20"},{"body":{"nodeType":"YulBlock","src":"1067:48:20","statements":[{"nodeType":"YulAssignment","src":"1077:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1095:6:20"},"nodeType":"YulFunctionCall","src":"1095:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1088:6:20"},"nodeType":"YulFunctionCall","src":"1088:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1077:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1049:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1059:7:20","type":""}],"src":"1025:90:20"},{"body":{"nodeType":"YulBlock","src":"1180:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1197:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1217:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1202:14:20"},"nodeType":"YulFunctionCall","src":"1202:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1190:6:20"},"nodeType":"YulFunctionCall","src":"1190:34:20"},"nodeType":"YulExpressionStatement","src":"1190:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1168:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1175:3:20","type":""}],"src":"1121:109:20"},{"body":{"nodeType":"YulBlock","src":"1328:118:20","statements":[{"nodeType":"YulAssignment","src":"1338:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1350:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1361:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:20"},"nodeType":"YulFunctionCall","src":"1346:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1338:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1412:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1425:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1436:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1421:3:20"},"nodeType":"YulFunctionCall","src":"1421:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1374:37:20"},"nodeType":"YulFunctionCall","src":"1374:65:20"},"nodeType":"YulExpressionStatement","src":"1374:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1300:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1312:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1323:4:20","type":""}],"src":"1236:210:20"},{"body":{"nodeType":"YulBlock","src":"1517:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1534:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1557:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1539:17:20"},"nodeType":"YulFunctionCall","src":"1539:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1527:6:20"},"nodeType":"YulFunctionCall","src":"1527:37:20"},"nodeType":"YulExpressionStatement","src":"1527:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1505:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1512:3:20","type":""}],"src":"1452:118:20"},{"body":{"nodeType":"YulBlock","src":"1674:124:20","statements":[{"nodeType":"YulAssignment","src":"1684:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1696:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1707:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1692:3:20"},"nodeType":"YulFunctionCall","src":"1692:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1684:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1764:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1777:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1788:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1773:3:20"},"nodeType":"YulFunctionCall","src":"1773:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1720:43:20"},"nodeType":"YulFunctionCall","src":"1720:71:20"},"nodeType":"YulExpressionStatement","src":"1720:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1646:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1658:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1669:4:20","type":""}],"src":"1576:222:20"},{"body":{"nodeType":"YulBlock","src":"1849:81:20","statements":[{"nodeType":"YulAssignment","src":"1859:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1874:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1881:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1870:3:20"},"nodeType":"YulFunctionCall","src":"1870:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1859:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1831:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1841:7:20","type":""}],"src":"1804:126:20"},{"body":{"nodeType":"YulBlock","src":"1981:51:20","statements":[{"nodeType":"YulAssignment","src":"1991:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2020:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2002:17:20"},"nodeType":"YulFunctionCall","src":"2002:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1991:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1963:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1973:7:20","type":""}],"src":"1936:96:20"},{"body":{"nodeType":"YulBlock","src":"2103:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2120:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2143:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2125:17:20"},"nodeType":"YulFunctionCall","src":"2125:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2113:6:20"},"nodeType":"YulFunctionCall","src":"2113:37:20"},"nodeType":"YulExpressionStatement","src":"2113:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2091:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2098:3:20","type":""}],"src":"2038:118:20"},{"body":{"nodeType":"YulBlock","src":"2260:124:20","statements":[{"nodeType":"YulAssignment","src":"2270:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2293:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:20"},"nodeType":"YulFunctionCall","src":"2278:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2270:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2350:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2363:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2374:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2359:3:20"},"nodeType":"YulFunctionCall","src":"2359:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2306:43:20"},"nodeType":"YulFunctionCall","src":"2306:71:20"},"nodeType":"YulExpressionStatement","src":"2306:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2244:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2255:4:20","type":""}],"src":"2162:222:20"},{"body":{"nodeType":"YulBlock","src":"2434:49:20","statements":[{"nodeType":"YulAssignment","src":"2444:33:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2459:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2466:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2455:3:20"},"nodeType":"YulFunctionCall","src":"2455:22:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2444:7:20"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2416:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2426:7:20","type":""}],"src":"2390:93:20"},{"body":{"nodeType":"YulBlock","src":"2552:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2569:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2591:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2574:16:20"},"nodeType":"YulFunctionCall","src":"2574:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2562:6:20"},"nodeType":"YulFunctionCall","src":"2562:36:20"},"nodeType":"YulExpressionStatement","src":"2562:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2540:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2547:3:20","type":""}],"src":"2489:115:20"},{"body":{"nodeType":"YulBlock","src":"2706:122:20","statements":[{"nodeType":"YulAssignment","src":"2716:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2739:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:20"},"nodeType":"YulFunctionCall","src":"2724:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2716:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2794:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2807:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2818:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:20"},"nodeType":"YulFunctionCall","src":"2803:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"2752:41:20"},"nodeType":"YulFunctionCall","src":"2752:69:20"},"nodeType":"YulExpressionStatement","src":"2752:69:20"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2678:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2690:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2701:4:20","type":""}],"src":"2610:218:20"},{"body":{"nodeType":"YulBlock","src":"2876:78:20","statements":[{"body":{"nodeType":"YulBlock","src":"2932:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2941:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2944:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2934:6:20"},"nodeType":"YulFunctionCall","src":"2934:12:20"},"nodeType":"YulExpressionStatement","src":"2934:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2899:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2923:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2906:16:20"},"nodeType":"YulFunctionCall","src":"2906:23:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2896:2:20"},"nodeType":"YulFunctionCall","src":"2896:34:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2889:6:20"},"nodeType":"YulFunctionCall","src":"2889:42:20"},"nodeType":"YulIf","src":"2886:62:20"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2869:5:20","type":""}],"src":"2834:120:20"},{"body":{"nodeType":"YulBlock","src":"3011:86:20","statements":[{"nodeType":"YulAssignment","src":"3021:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3043:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3030:12:20"},"nodeType":"YulFunctionCall","src":"3030:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3021:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3085:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"3059:25:20"},"nodeType":"YulFunctionCall","src":"3059:32:20"},"nodeType":"YulExpressionStatement","src":"3059:32:20"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2989:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2997:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3005:5:20","type":""}],"src":"2960:137:20"},{"body":{"nodeType":"YulBlock","src":"3168:262:20","statements":[{"body":{"nodeType":"YulBlock","src":"3214:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3216:77:20"},"nodeType":"YulFunctionCall","src":"3216:79:20"},"nodeType":"YulExpressionStatement","src":"3216:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3189:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3198:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3185:3:20"},"nodeType":"YulFunctionCall","src":"3185:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3181:3:20"},"nodeType":"YulFunctionCall","src":"3181:32:20"},"nodeType":"YulIf","src":"3178:119:20"},{"nodeType":"YulBlock","src":"3307:116:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3322:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3336:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3326:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3351:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3385:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3396:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3381:3:20"},"nodeType":"YulFunctionCall","src":"3381:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3405:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3361:19:20"},"nodeType":"YulFunctionCall","src":"3361:52:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3351:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3138:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3149:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3161:6:20","type":""}],"src":"3103:327:20"},{"body":{"nodeType":"YulBlock","src":"3479:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"3536:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3545:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3548:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3538:6:20"},"nodeType":"YulFunctionCall","src":"3538:12:20"},"nodeType":"YulExpressionStatement","src":"3538:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3502:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3527:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3509:17:20"},"nodeType":"YulFunctionCall","src":"3509:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3499:2:20"},"nodeType":"YulFunctionCall","src":"3499:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3492:6:20"},"nodeType":"YulFunctionCall","src":"3492:43:20"},"nodeType":"YulIf","src":"3489:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3472:5:20","type":""}],"src":"3436:122:20"},{"body":{"nodeType":"YulBlock","src":"3616:87:20","statements":[{"nodeType":"YulAssignment","src":"3626:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3648:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3635:12:20"},"nodeType":"YulFunctionCall","src":"3635:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3626:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3691:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3664:26:20"},"nodeType":"YulFunctionCall","src":"3664:33:20"},"nodeType":"YulExpressionStatement","src":"3664:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3594:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"3602:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3610:5:20","type":""}],"src":"3564:139:20"},{"body":{"nodeType":"YulBlock","src":"3775:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"3821:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3823:77:20"},"nodeType":"YulFunctionCall","src":"3823:79:20"},"nodeType":"YulExpressionStatement","src":"3823:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3796:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3792:3:20"},"nodeType":"YulFunctionCall","src":"3792:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3817:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3788:3:20"},"nodeType":"YulFunctionCall","src":"3788:32:20"},"nodeType":"YulIf","src":"3785:119:20"},{"nodeType":"YulBlock","src":"3914:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3929:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3943:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3933:6:20","type":""}]},{"nodeType":"YulAssignment","src":"3958:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3993:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4004:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3989:3:20"},"nodeType":"YulFunctionCall","src":"3989:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4013:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3968:20:20"},"nodeType":"YulFunctionCall","src":"3968:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3958:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3745:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3756:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3768:6:20","type":""}],"src":"3709:329:20"},{"body":{"nodeType":"YulBlock","src":"4076:28:20","statements":[{"nodeType":"YulAssignment","src":"4086:12:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4093:5:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4086:3:20"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4062:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4072:3:20","type":""}],"src":"4044:60:20"},{"body":{"nodeType":"YulBlock","src":"4170:82:20","statements":[{"nodeType":"YulAssignment","src":"4180:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4238:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4220:17:20"},"nodeType":"YulFunctionCall","src":"4220:24:20"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4211:8:20"},"nodeType":"YulFunctionCall","src":"4211:34:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4193:17:20"},"nodeType":"YulFunctionCall","src":"4193:53:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4180:9:20"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4150:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4160:9:20","type":""}],"src":"4110:142:20"},{"body":{"nodeType":"YulBlock","src":"4318:66:20","statements":[{"nodeType":"YulAssignment","src":"4328:50:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4341:30:20"},"nodeType":"YulFunctionCall","src":"4341:37:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4328:9:20"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4298:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4308:9:20","type":""}],"src":"4258:126:20"},{"body":{"nodeType":"YulBlock","src":"4480:66:20","statements":[{"nodeType":"YulAssignment","src":"4490:50:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4534:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4503:30:20"},"nodeType":"YulFunctionCall","src":"4503:37:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4490:9:20"}]}]},"name":"convert_t_contract$_ICrossDomainMessenger_$3199_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4460:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4470:9:20","type":""}],"src":"4390:156:20"},{"body":{"nodeType":"YulBlock","src":"4647:96:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4664:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4730:5:20"}],"functionName":{"name":"convert_t_contract$_ICrossDomainMessenger_$3199_to_t_address","nodeType":"YulIdentifier","src":"4669:60:20"},"nodeType":"YulFunctionCall","src":"4669:67:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4657:6:20"},"nodeType":"YulFunctionCall","src":"4657:80:20"},"nodeType":"YulExpressionStatement","src":"4657:80:20"}]},"name":"abi_encode_t_contract$_ICrossDomainMessenger_$3199_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4635:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4642:3:20","type":""}],"src":"4552:191:20"},{"body":{"nodeType":"YulBlock","src":"4877:154:20","statements":[{"nodeType":"YulAssignment","src":"4887:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4899:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4910:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4895:3:20"},"nodeType":"YulFunctionCall","src":"4895:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4887:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4997:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5010:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5021:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:20"},"nodeType":"YulFunctionCall","src":"5006:17:20"}],"functionName":{"name":"abi_encode_t_contract$_ICrossDomainMessenger_$3199_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4923:73:20"},"nodeType":"YulFunctionCall","src":"4923:101:20"},"nodeType":"YulExpressionStatement","src":"4923:101:20"}]},"name":"abi_encode_tuple_t_contract$_ICrossDomainMessenger_$3199__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4849:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4861:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4872:4:20","type":""}],"src":"4749:282:20"},{"body":{"nodeType":"YulBlock","src":"5092:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5109:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5132:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5114:17:20"},"nodeType":"YulFunctionCall","src":"5114:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5102:6:20"},"nodeType":"YulFunctionCall","src":"5102:37:20"},"nodeType":"YulExpressionStatement","src":"5102:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5080:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5087:3:20","type":""}],"src":"5037:108:20"},{"body":{"nodeType":"YulBlock","src":"5206:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5223:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5246:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5228:17:20"},"nodeType":"YulFunctionCall","src":"5228:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5216:6:20"},"nodeType":"YulFunctionCall","src":"5216:37:20"},"nodeType":"YulExpressionStatement","src":"5216:37:20"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5194:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5201:3:20","type":""}],"src":"5151:108:20"},{"body":{"nodeType":"YulBlock","src":"5471:1856:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5481:28:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5497:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5502:6:20","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5493:3:20"},"nodeType":"YulFunctionCall","src":"5493:16:20"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5485:4:20","type":""}]},{"nodeType":"YulBlock","src":"5519:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5556:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5586:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5593:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5582:3:20"},"nodeType":"YulFunctionCall","src":"5582:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5576:5:20"},"nodeType":"YulFunctionCall","src":"5576:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5560:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5646:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5664:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5669:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5660:3:20"},"nodeType":"YulFunctionCall","src":"5660:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5612:33:20"},"nodeType":"YulFunctionCall","src":"5612:63:20"},"nodeType":"YulExpressionStatement","src":"5612:63:20"}]},{"nodeType":"YulBlock","src":"5695:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5732:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5762:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5769:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5758:3:20"},"nodeType":"YulFunctionCall","src":"5758:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5752:5:20"},"nodeType":"YulFunctionCall","src":"5752:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5736:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5822:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5840:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5845:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5836:3:20"},"nodeType":"YulFunctionCall","src":"5836:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5788:33:20"},"nodeType":"YulFunctionCall","src":"5788:63:20"},"nodeType":"YulExpressionStatement","src":"5788:63:20"}]},{"nodeType":"YulBlock","src":"5871:175:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5917:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5947:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"5954:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5943:3:20"},"nodeType":"YulFunctionCall","src":"5943:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5937:5:20"},"nodeType":"YulFunctionCall","src":"5937:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5921:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6007:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6025:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6030:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6021:3:20"},"nodeType":"YulFunctionCall","src":"6021:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5973:33:20"},"nodeType":"YulFunctionCall","src":"5973:63:20"},"nodeType":"YulExpressionStatement","src":"5973:63:20"}]},{"nodeType":"YulBlock","src":"6056:172:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6099:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6129:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6136:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6125:3:20"},"nodeType":"YulFunctionCall","src":"6125:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6119:5:20"},"nodeType":"YulFunctionCall","src":"6119:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6103:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6189:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6207:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6212:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:20"},"nodeType":"YulFunctionCall","src":"6203:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6155:33:20"},"nodeType":"YulFunctionCall","src":"6155:63:20"},"nodeType":"YulExpressionStatement","src":"6155:63:20"}]},{"nodeType":"YulBlock","src":"6238:177:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6286:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6316:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6323:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6312:3:20"},"nodeType":"YulFunctionCall","src":"6312:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6306:5:20"},"nodeType":"YulFunctionCall","src":"6306:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6290:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6376:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6394:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6399:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6390:3:20"},"nodeType":"YulFunctionCall","src":"6390:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6342:33:20"},"nodeType":"YulFunctionCall","src":"6342:63:20"},"nodeType":"YulExpressionStatement","src":"6342:63:20"}]},{"nodeType":"YulBlock","src":"6425:176:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6472:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6502:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6509:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6498:3:20"},"nodeType":"YulFunctionCall","src":"6498:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6492:5:20"},"nodeType":"YulFunctionCall","src":"6492:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6476:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6562:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6580:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6585:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:20"},"nodeType":"YulFunctionCall","src":"6576:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6528:33:20"},"nodeType":"YulFunctionCall","src":"6528:63:20"},"nodeType":"YulExpressionStatement","src":"6528:63:20"}]},{"nodeType":"YulBlock","src":"6611:175:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6657:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6687:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6694:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6683:3:20"},"nodeType":"YulFunctionCall","src":"6683:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6677:5:20"},"nodeType":"YulFunctionCall","src":"6677:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6661:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6747:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6765:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6770:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6761:3:20"},"nodeType":"YulFunctionCall","src":"6761:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6713:33:20"},"nodeType":"YulFunctionCall","src":"6713:63:20"},"nodeType":"YulExpressionStatement","src":"6713:63:20"}]},{"nodeType":"YulBlock","src":"6796:165:20","statements":[{"nodeType":"YulVariableDeclaration","src":"6832:43:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6862:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6869:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6858:3:20"},"nodeType":"YulFunctionCall","src":"6858:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6852:5:20"},"nodeType":"YulFunctionCall","src":"6852:23:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6836:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6922:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6940:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6945:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6936:3:20"},"nodeType":"YulFunctionCall","src":"6936:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6888:33:20"},"nodeType":"YulFunctionCall","src":"6888:63:20"},"nodeType":"YulExpressionStatement","src":"6888:63:20"}]},{"nodeType":"YulBlock","src":"6971:169:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7007:45:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7037:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7044:6:20","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:20"},"nodeType":"YulFunctionCall","src":"7033:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7027:5:20"},"nodeType":"YulFunctionCall","src":"7027:25:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7011:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7099:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7117:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7122:6:20","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:20"},"nodeType":"YulFunctionCall","src":"7113:16:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"7065:33:20"},"nodeType":"YulFunctionCall","src":"7065:65:20"},"nodeType":"YulExpressionStatement","src":"7065:65:20"}]},{"nodeType":"YulBlock","src":"7150:170:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7187:45:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7217:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7224:6:20","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:20"},"nodeType":"YulFunctionCall","src":"7213:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7207:5:20"},"nodeType":"YulFunctionCall","src":"7207:25:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7191:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7279:12:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7297:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7302:6:20","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7293:3:20"},"nodeType":"YulFunctionCall","src":"7293:16:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"7245:33:20"},"nodeType":"YulFunctionCall","src":"7245:65:20"},"nodeType":"YulExpressionStatement","src":"7245:65:20"}]}]},"name":"abi_encode_t_struct$_SequencerData_$3634_memory_ptr_to_t_struct$_SequencerData_$3634_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5458:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5465:3:20","type":""}],"src":"5343:1984:20"},{"body":{"nodeType":"YulBlock","src":"7493:187:20","statements":[{"nodeType":"YulAssignment","src":"7503:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7515:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7526:3:20","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7511:3:20"},"nodeType":"YulFunctionCall","src":"7511:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7503:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7646:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7659:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7670:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7655:3:20"},"nodeType":"YulFunctionCall","src":"7655:17:20"}],"functionName":{"name":"abi_encode_t_struct$_SequencerData_$3634_memory_ptr_to_t_struct$_SequencerData_$3634_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7540:105:20"},"nodeType":"YulFunctionCall","src":"7540:133:20"},"nodeType":"YulExpressionStatement","src":"7540:133:20"}]},"name":"abi_encode_tuple_t_struct$_SequencerData_$3634_memory_ptr__to_t_struct$_SequencerData_$3634_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7465:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7477:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7488:4:20","type":""}],"src":"7333:347:20"},{"body":{"nodeType":"YulBlock","src":"7767:66:20","statements":[{"nodeType":"YulAssignment","src":"7777:50:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7821:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"7790:30:20"},"nodeType":"YulFunctionCall","src":"7790:37:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7777:9:20"}]}]},"name":"convert_t_contract$_ILockingPool_$3737_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7747:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7757:9:20","type":""}],"src":"7686:147:20"},{"body":{"nodeType":"YulBlock","src":"7925:87:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7942:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7999:5:20"}],"functionName":{"name":"convert_t_contract$_ILockingPool_$3737_to_t_address","nodeType":"YulIdentifier","src":"7947:51:20"},"nodeType":"YulFunctionCall","src":"7947:58:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7935:6:20"},"nodeType":"YulFunctionCall","src":"7935:71:20"},"nodeType":"YulExpressionStatement","src":"7935:71:20"}]},"name":"abi_encode_t_contract$_ILockingPool_$3737_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7913:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7920:3:20","type":""}],"src":"7839:173:20"},{"body":{"nodeType":"YulBlock","src":"8137:145:20","statements":[{"nodeType":"YulAssignment","src":"8147:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8159:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8170:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8155:3:20"},"nodeType":"YulFunctionCall","src":"8155:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8147:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8248:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8261:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8272:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8257:3:20"},"nodeType":"YulFunctionCall","src":"8257:17:20"}],"functionName":{"name":"abi_encode_t_contract$_ILockingPool_$3737_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8183:64:20"},"nodeType":"YulFunctionCall","src":"8183:92:20"},"nodeType":"YulExpressionStatement","src":"8183:92:20"}]},"name":"abi_encode_tuple_t_contract$_ILockingPool_$3737__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8109:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8121:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8132:4:20","type":""}],"src":"8018:264:20"},{"body":{"nodeType":"YulBlock","src":"8377:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8394:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8397:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8387:6:20"},"nodeType":"YulFunctionCall","src":"8387:12:20"},"nodeType":"YulExpressionStatement","src":"8387:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8288:117:20"},{"body":{"nodeType":"YulBlock","src":"8500:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8517:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8520:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8510:6:20"},"nodeType":"YulFunctionCall","src":"8510:12:20"},"nodeType":"YulExpressionStatement","src":"8510:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8411:117:20"},{"body":{"nodeType":"YulBlock","src":"8582:54:20","statements":[{"nodeType":"YulAssignment","src":"8592:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8610:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"8617:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8606:3:20"},"nodeType":"YulFunctionCall","src":"8606:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8626:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8622:3:20"},"nodeType":"YulFunctionCall","src":"8622:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8602:3:20"},"nodeType":"YulFunctionCall","src":"8602:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8592:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8565:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8575:6:20","type":""}],"src":"8534:102:20"},{"body":{"nodeType":"YulBlock","src":"8670:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8687:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8690:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8680:6:20"},"nodeType":"YulFunctionCall","src":"8680:88:20"},"nodeType":"YulExpressionStatement","src":"8680:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8784:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8787:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8777:6:20"},"nodeType":"YulFunctionCall","src":"8777:15:20"},"nodeType":"YulExpressionStatement","src":"8777:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8808:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8811:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8801:6:20"},"nodeType":"YulFunctionCall","src":"8801:15:20"},"nodeType":"YulExpressionStatement","src":"8801:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8642:180:20"},{"body":{"nodeType":"YulBlock","src":"8871:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8881:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8903:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8933:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8911:21:20"},"nodeType":"YulFunctionCall","src":"8911:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8899:3:20"},"nodeType":"YulFunctionCall","src":"8899:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8885:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9050:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9052:16:20"},"nodeType":"YulFunctionCall","src":"9052:18:20"},"nodeType":"YulExpressionStatement","src":"9052:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8993:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"9005:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8990:2:20"},"nodeType":"YulFunctionCall","src":"8990:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9029:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9041:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9026:2:20"},"nodeType":"YulFunctionCall","src":"9026:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8987:2:20"},"nodeType":"YulFunctionCall","src":"8987:62:20"},"nodeType":"YulIf","src":"8984:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9088:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9092:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9081:6:20"},"nodeType":"YulFunctionCall","src":"9081:22:20"},"nodeType":"YulExpressionStatement","src":"9081:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8857:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"8865:4:20","type":""}],"src":"8828:281:20"},{"body":{"nodeType":"YulBlock","src":"9156:88:20","statements":[{"nodeType":"YulAssignment","src":"9166:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"9176:18:20"},"nodeType":"YulFunctionCall","src":"9176:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9166:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9225:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"9233:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"9205:19:20"},"nodeType":"YulFunctionCall","src":"9205:33:20"},"nodeType":"YulExpressionStatement","src":"9205:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"9140:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9149:6:20","type":""}],"src":"9115:129:20"},{"body":{"nodeType":"YulBlock","src":"9316:241:20","statements":[{"body":{"nodeType":"YulBlock","src":"9421:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9423:16:20"},"nodeType":"YulFunctionCall","src":"9423:18:20"},"nodeType":"YulExpressionStatement","src":"9423:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9393:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9401:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9390:2:20"},"nodeType":"YulFunctionCall","src":"9390:30:20"},"nodeType":"YulIf","src":"9387:56:20"},{"nodeType":"YulAssignment","src":"9453:37:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9483:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9461:21:20"},"nodeType":"YulFunctionCall","src":"9461:29:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9453:4:20"}]},{"nodeType":"YulAssignment","src":"9527:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9539:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"9545:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9535:3:20"},"nodeType":"YulFunctionCall","src":"9535:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9527:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9300:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9311:4:20","type":""}],"src":"9250:307:20"},{"body":{"nodeType":"YulBlock","src":"9627:82:20","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9650:3:20"},{"name":"src","nodeType":"YulIdentifier","src":"9655:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9660:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9637:12:20"},"nodeType":"YulFunctionCall","src":"9637:30:20"},"nodeType":"YulExpressionStatement","src":"9637:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9687:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9692:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9683:3:20"},"nodeType":"YulFunctionCall","src":"9683:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"9701:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9676:6:20"},"nodeType":"YulFunctionCall","src":"9676:27:20"},"nodeType":"YulExpressionStatement","src":"9676:27:20"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9609:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9614:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"9619:6:20","type":""}],"src":"9563:146:20"},{"body":{"nodeType":"YulBlock","src":"9798:340:20","statements":[{"nodeType":"YulAssignment","src":"9808:74:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9874:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9833:40:20"},"nodeType":"YulFunctionCall","src":"9833:48:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9817:15:20"},"nodeType":"YulFunctionCall","src":"9817:65:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9808:5:20"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9898:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"9905:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9891:6:20"},"nodeType":"YulFunctionCall","src":"9891:21:20"},"nodeType":"YulExpressionStatement","src":"9891:21:20"},{"nodeType":"YulVariableDeclaration","src":"9921:27:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9936:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"9943:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:20"},"nodeType":"YulFunctionCall","src":"9932:16:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9925:3:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9986:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9988:77:20"},"nodeType":"YulFunctionCall","src":"9988:79:20"},"nodeType":"YulExpressionStatement","src":"9988:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9967:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9972:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9963:3:20"},"nodeType":"YulFunctionCall","src":"9963:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"9981:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9960:2:20"},"nodeType":"YulFunctionCall","src":"9960:25:20"},"nodeType":"YulIf","src":"9957:112:20"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10115:3:20"},{"name":"dst","nodeType":"YulIdentifier","src":"10120:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10125:6:20"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10078:36:20"},"nodeType":"YulFunctionCall","src":"10078:54:20"},"nodeType":"YulExpressionStatement","src":"10078:54:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9771:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"9776:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"9784:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9792:5:20","type":""}],"src":"9715:423:20"},{"body":{"nodeType":"YulBlock","src":"10218:277:20","statements":[{"body":{"nodeType":"YulBlock","src":"10267:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10269:77:20"},"nodeType":"YulFunctionCall","src":"10269:79:20"},"nodeType":"YulExpressionStatement","src":"10269:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10246:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10254:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10242:3:20"},"nodeType":"YulFunctionCall","src":"10242:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"10261:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10238:3:20"},"nodeType":"YulFunctionCall","src":"10238:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10231:6:20"},"nodeType":"YulFunctionCall","src":"10231:35:20"},"nodeType":"YulIf","src":"10228:122:20"},{"nodeType":"YulVariableDeclaration","src":"10359:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10386:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10373:12:20"},"nodeType":"YulFunctionCall","src":"10373:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10363:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10402:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10462:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10470:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10458:3:20"},"nodeType":"YulFunctionCall","src":"10458:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"10477:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"10485:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10411:46:20"},"nodeType":"YulFunctionCall","src":"10411:78:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10402:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10196:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"10204:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10212:5:20","type":""}],"src":"10157:338:20"},{"body":{"nodeType":"YulBlock","src":"10610:688:20","statements":[{"body":{"nodeType":"YulBlock","src":"10656:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10658:77:20"},"nodeType":"YulFunctionCall","src":"10658:79:20"},"nodeType":"YulExpressionStatement","src":"10658:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10631:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10640:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10627:3:20"},"nodeType":"YulFunctionCall","src":"10627:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"10652:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10623:3:20"},"nodeType":"YulFunctionCall","src":"10623:32:20"},"nodeType":"YulIf","src":"10620:119:20"},{"nodeType":"YulBlock","src":"10749:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10764:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10778:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10768:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10793:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10828:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10839:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10824:3:20"},"nodeType":"YulFunctionCall","src":"10824:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10848:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10803:20:20"},"nodeType":"YulFunctionCall","src":"10803:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10793:6:20"}]}]},{"nodeType":"YulBlock","src":"10876:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10891:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"10905:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10895:6:20","type":""}]},{"nodeType":"YulAssignment","src":"10921:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10967:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10952:3:20"},"nodeType":"YulFunctionCall","src":"10952:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10976:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10931:20:20"},"nodeType":"YulFunctionCall","src":"10931:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10921:6:20"}]}]},{"nodeType":"YulBlock","src":"11004:287:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11019:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11050:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11061:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11046:3:20"},"nodeType":"YulFunctionCall","src":"11046:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11033:12:20"},"nodeType":"YulFunctionCall","src":"11033:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11023:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11112:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11114:77:20"},"nodeType":"YulFunctionCall","src":"11114:79:20"},"nodeType":"YulExpressionStatement","src":"11114:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11084:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11092:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11081:2:20"},"nodeType":"YulFunctionCall","src":"11081:30:20"},"nodeType":"YulIf","src":"11078:117:20"},{"nodeType":"YulAssignment","src":"11209:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11253:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11264:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11249:3:20"},"nodeType":"YulFunctionCall","src":"11249:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11273:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11219:29:20"},"nodeType":"YulFunctionCall","src":"11219:62:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11209:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10564:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10575:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10587:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10595:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10603:6:20","type":""}],"src":"10501:797:20"},{"body":{"nodeType":"YulBlock","src":"11471:1034:20","statements":[{"body":{"nodeType":"YulBlock","src":"11518:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11520:77:20"},"nodeType":"YulFunctionCall","src":"11520:79:20"},"nodeType":"YulExpressionStatement","src":"11520:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11492:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11501:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11488:3:20"},"nodeType":"YulFunctionCall","src":"11488:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"11513:3:20","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11484:3:20"},"nodeType":"YulFunctionCall","src":"11484:33:20"},"nodeType":"YulIf","src":"11481:120:20"},{"nodeType":"YulBlock","src":"11611:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11626:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11640:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11630:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11655:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11690:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11701:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11686:3:20"},"nodeType":"YulFunctionCall","src":"11686:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11710:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11665:20:20"},"nodeType":"YulFunctionCall","src":"11665:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:20"}]}]},{"nodeType":"YulBlock","src":"11738:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11753:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11767:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11757:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11783:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11818:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11829:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11814:3:20"},"nodeType":"YulFunctionCall","src":"11814:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11838:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11793:20:20"},"nodeType":"YulFunctionCall","src":"11793:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11783:6:20"}]}]},{"nodeType":"YulBlock","src":"11866:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11881:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11895:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11885:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11911:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11946:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11957:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11942:3:20"},"nodeType":"YulFunctionCall","src":"11942:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11966:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11921:20:20"},"nodeType":"YulFunctionCall","src":"11921:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11911:6:20"}]}]},{"nodeType":"YulBlock","src":"11994:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12009:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"12023:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12013:6:20","type":""}]},{"nodeType":"YulAssignment","src":"12039:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12074:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"12085:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12070:3:20"},"nodeType":"YulFunctionCall","src":"12070:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12094:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12049:20:20"},"nodeType":"YulFunctionCall","src":"12049:53:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12039:6:20"}]}]},{"nodeType":"YulBlock","src":"12122:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12137:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"12151:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12141:6:20","type":""}]},{"nodeType":"YulAssignment","src":"12168:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12202:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"12213:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:20"},"nodeType":"YulFunctionCall","src":"12198:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12222:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"12178:19:20"},"nodeType":"YulFunctionCall","src":"12178:52:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12168:6:20"}]}]},{"nodeType":"YulBlock","src":"12250:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12265:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"12279:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12269:6:20","type":""}]},{"nodeType":"YulAssignment","src":"12296:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12331:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"12342:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12327:3:20"},"nodeType":"YulFunctionCall","src":"12327:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12351:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12306:20:20"},"nodeType":"YulFunctionCall","src":"12306:53:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12296:6:20"}]}]},{"nodeType":"YulBlock","src":"12379:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12394:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"12408:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12398:6:20","type":""}]},{"nodeType":"YulAssignment","src":"12425:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12460:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"12471:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12456:3:20"},"nodeType":"YulFunctionCall","src":"12456:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12480:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12435:20:20"},"nodeType":"YulFunctionCall","src":"12435:53:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12425:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11393:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11404:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11416:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11424:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11432:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11440:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11448:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11456:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11464:6:20","type":""}],"src":"11304:1201:20"},{"body":{"nodeType":"YulBlock","src":"12585:66:20","statements":[{"nodeType":"YulAssignment","src":"12595:50:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12639:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12608:30:20"},"nodeType":"YulFunctionCall","src":"12608:37:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12595:9:20"}]}]},"name":"convert_t_contract$_IERC20_$979_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12565:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12575:9:20","type":""}],"src":"12511:140:20"},{"body":{"nodeType":"YulBlock","src":"12736:80:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12753:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12803:5:20"}],"functionName":{"name":"convert_t_contract$_IERC20_$979_to_t_address","nodeType":"YulIdentifier","src":"12758:44:20"},"nodeType":"YulFunctionCall","src":"12758:51:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12746:6:20"},"nodeType":"YulFunctionCall","src":"12746:64:20"},"nodeType":"YulExpressionStatement","src":"12746:64:20"}]},"name":"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12724:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12731:3:20","type":""}],"src":"12657:159:20"},{"body":{"nodeType":"YulBlock","src":"12934:138:20","statements":[{"nodeType":"YulAssignment","src":"12944:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12956:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12967:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12952:3:20"},"nodeType":"YulFunctionCall","src":"12952:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12944:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13038:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13051:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13062:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13047:3:20"},"nodeType":"YulFunctionCall","src":"13047:17:20"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12980:57:20"},"nodeType":"YulFunctionCall","src":"12980:85:20"},"nodeType":"YulExpressionStatement","src":"12980:85:20"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12906:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12918:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12929:4:20","type":""}],"src":"12822:250:20"},{"body":{"nodeType":"YulBlock","src":"13159:66:20","statements":[{"nodeType":"YulAssignment","src":"13169:50:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13213:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"13182:30:20"},"nodeType":"YulFunctionCall","src":"13182:37:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13169:9:20"}]}]},"name":"convert_t_contract$_ILockingInfo_$3387_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13139:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13149:9:20","type":""}],"src":"13078:147:20"},{"body":{"nodeType":"YulBlock","src":"13317:87:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13334:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13391:5:20"}],"functionName":{"name":"convert_t_contract$_ILockingInfo_$3387_to_t_address","nodeType":"YulIdentifier","src":"13339:51:20"},"nodeType":"YulFunctionCall","src":"13339:58:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13327:6:20"},"nodeType":"YulFunctionCall","src":"13327:71:20"},"nodeType":"YulExpressionStatement","src":"13327:71:20"}]},"name":"abi_encode_t_contract$_ILockingInfo_$3387_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13305:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13312:3:20","type":""}],"src":"13231:173:20"},{"body":{"nodeType":"YulBlock","src":"13529:145:20","statements":[{"nodeType":"YulAssignment","src":"13539:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13551:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13562:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13547:3:20"},"nodeType":"YulFunctionCall","src":"13547:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13539:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13640:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13653:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13664:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13649:3:20"},"nodeType":"YulFunctionCall","src":"13649:17:20"}],"functionName":{"name":"abi_encode_t_contract$_ILockingInfo_$3387_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13575:64:20"},"nodeType":"YulFunctionCall","src":"13575:92:20"},"nodeType":"YulExpressionStatement","src":"13575:92:20"}]},"name":"abi_encode_tuple_t_contract$_ILockingInfo_$3387__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13501:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13513:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13524:4:20","type":""}],"src":"13410:264:20"},{"body":{"nodeType":"YulBlock","src":"13806:206:20","statements":[{"nodeType":"YulAssignment","src":"13816:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13828:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13839:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13824:3:20"},"nodeType":"YulFunctionCall","src":"13824:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13816:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13896:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13909:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13920:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13905:3:20"},"nodeType":"YulFunctionCall","src":"13905:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13852:43:20"},"nodeType":"YulFunctionCall","src":"13852:71:20"},"nodeType":"YulExpressionStatement","src":"13852:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13977:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13990:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14001:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13986:3:20"},"nodeType":"YulFunctionCall","src":"13986:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13933:43:20"},"nodeType":"YulFunctionCall","src":"13933:72:20"},"nodeType":"YulExpressionStatement","src":"13933:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13770:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13782:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13790:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13801:4:20","type":""}],"src":"13680:332:20"},{"body":{"nodeType":"YulBlock","src":"14081:80:20","statements":[{"nodeType":"YulAssignment","src":"14091:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14106:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14100:5:20"},"nodeType":"YulFunctionCall","src":"14100:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14091:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14149:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"14122:26:20"},"nodeType":"YulFunctionCall","src":"14122:33:20"},"nodeType":"YulExpressionStatement","src":"14122:33:20"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14059:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"14067:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14075:5:20","type":""}],"src":"14018:143:20"},{"body":{"nodeType":"YulBlock","src":"14244:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"14290:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14292:77:20"},"nodeType":"YulFunctionCall","src":"14292:79:20"},"nodeType":"YulExpressionStatement","src":"14292:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14265:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14274:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14261:3:20"},"nodeType":"YulFunctionCall","src":"14261:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"14286:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14257:3:20"},"nodeType":"YulFunctionCall","src":"14257:32:20"},"nodeType":"YulIf","src":"14254:119:20"},{"nodeType":"YulBlock","src":"14383:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14398:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14412:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14402:6:20","type":""}]},{"nodeType":"YulAssignment","src":"14427:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14473:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"14484:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14469:3:20"},"nodeType":"YulFunctionCall","src":"14469:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14493:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"14437:31:20"},"nodeType":"YulFunctionCall","src":"14437:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14427:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14214:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14225:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14237:6:20","type":""}],"src":"14167:351:20"},{"body":{"nodeType":"YulBlock","src":"14650:206:20","statements":[{"nodeType":"YulAssignment","src":"14660:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14672:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14683:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14668:3:20"},"nodeType":"YulFunctionCall","src":"14668:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14660:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14740:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14753:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14764:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14749:3:20"},"nodeType":"YulFunctionCall","src":"14749:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14696:43:20"},"nodeType":"YulFunctionCall","src":"14696:71:20"},"nodeType":"YulExpressionStatement","src":"14696:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14821:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14834:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14845:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14830:3:20"},"nodeType":"YulFunctionCall","src":"14830:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14777:43:20"},"nodeType":"YulFunctionCall","src":"14777:72:20"},"nodeType":"YulExpressionStatement","src":"14777:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14614:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14626:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14634:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14645:4:20","type":""}],"src":"14524:332:20"},{"body":{"nodeType":"YulBlock","src":"14902:76:20","statements":[{"body":{"nodeType":"YulBlock","src":"14956:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14965:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14968:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14958:6:20"},"nodeType":"YulFunctionCall","src":"14958:12:20"},"nodeType":"YulExpressionStatement","src":"14958:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14925:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14947:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14932:14:20"},"nodeType":"YulFunctionCall","src":"14932:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14922:2:20"},"nodeType":"YulFunctionCall","src":"14922:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14915:6:20"},"nodeType":"YulFunctionCall","src":"14915:40:20"},"nodeType":"YulIf","src":"14912:60:20"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14895:5:20","type":""}],"src":"14862:116:20"},{"body":{"nodeType":"YulBlock","src":"15044:77:20","statements":[{"nodeType":"YulAssignment","src":"15054:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15069:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15063:5:20"},"nodeType":"YulFunctionCall","src":"15063:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15054:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15109:5:20"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15085:23:20"},"nodeType":"YulFunctionCall","src":"15085:30:20"},"nodeType":"YulExpressionStatement","src":"15085:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15022:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"15030:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15038:5:20","type":""}],"src":"14984:137:20"},{"body":{"nodeType":"YulBlock","src":"15201:271:20","statements":[{"body":{"nodeType":"YulBlock","src":"15247:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15249:77:20"},"nodeType":"YulFunctionCall","src":"15249:79:20"},"nodeType":"YulExpressionStatement","src":"15249:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15222:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15231:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15218:3:20"},"nodeType":"YulFunctionCall","src":"15218:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"15243:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15214:3:20"},"nodeType":"YulFunctionCall","src":"15214:32:20"},"nodeType":"YulIf","src":"15211:119:20"},{"nodeType":"YulBlock","src":"15340:125:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15355:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15369:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15359:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15384:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15427:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15438:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15423:3:20"},"nodeType":"YulFunctionCall","src":"15423:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15447:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"15394:28:20"},"nodeType":"YulFunctionCall","src":"15394:61:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15384:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15171:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15182:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15194:6:20","type":""}],"src":"15127:345:20"},{"body":{"nodeType":"YulBlock","src":"15573:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15590:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"15595:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15583:6:20"},"nodeType":"YulFunctionCall","src":"15583:19:20"},"nodeType":"YulExpressionStatement","src":"15583:19:20"},{"nodeType":"YulAssignment","src":"15611:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15630:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15635:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15626:3:20"},"nodeType":"YulFunctionCall","src":"15626:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15611:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15545:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"15550:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15561:11:20","type":""}],"src":"15478:168:20"},{"body":{"nodeType":"YulBlock","src":"15758:8:20","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15750:6:20","type":""}],"src":"15652:114:20"},{"body":{"nodeType":"YulBlock","src":"15917:217:20","statements":[{"nodeType":"YulAssignment","src":"15927:72:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15992:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15997:1:20","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15934:57:20"},"nodeType":"YulFunctionCall","src":"15934:65:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15927:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16097:3:20"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"16008:88:20"},"nodeType":"YulFunctionCall","src":"16008:93:20"},"nodeType":"YulExpressionStatement","src":"16008:93:20"},{"nodeType":"YulAssignment","src":"16110:18:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16121:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16126:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16117:3:20"},"nodeType":"YulFunctionCall","src":"16117:11:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16110:3:20"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15905:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15913:3:20","type":""}],"src":"15772:362:20"},{"body":{"nodeType":"YulBlock","src":"16476:741:20","statements":[{"nodeType":"YulAssignment","src":"16486:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16498:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16509:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16494:3:20"},"nodeType":"YulFunctionCall","src":"16494:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16486:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16567:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16580:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16591:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16576:3:20"},"nodeType":"YulFunctionCall","src":"16576:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16523:43:20"},"nodeType":"YulFunctionCall","src":"16523:71:20"},"nodeType":"YulExpressionStatement","src":"16523:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16648:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16661:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16672:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16657:3:20"},"nodeType":"YulFunctionCall","src":"16657:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16604:43:20"},"nodeType":"YulFunctionCall","src":"16604:72:20"},"nodeType":"YulExpressionStatement","src":"16604:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16730:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16743:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16754:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16739:3:20"},"nodeType":"YulFunctionCall","src":"16739:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16686:43:20"},"nodeType":"YulFunctionCall","src":"16686:72:20"},"nodeType":"YulExpressionStatement","src":"16686:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16812:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16825:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16836:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16821:3:20"},"nodeType":"YulFunctionCall","src":"16821:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16768:43:20"},"nodeType":"YulFunctionCall","src":"16768:72:20"},"nodeType":"YulExpressionStatement","src":"16768:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16894:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16907:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16918:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16903:3:20"},"nodeType":"YulFunctionCall","src":"16903:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16850:43:20"},"nodeType":"YulFunctionCall","src":"16850:73:20"},"nodeType":"YulExpressionStatement","src":"16850:73:20"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"16975:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16988:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"16999:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16984:3:20"},"nodeType":"YulFunctionCall","src":"16984:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"16933:41:20"},"nodeType":"YulFunctionCall","src":"16933:71:20"},"nodeType":"YulExpressionStatement","src":"16933:71:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17025:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17036:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17021:3:20"},"nodeType":"YulFunctionCall","src":"17021:19:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17046:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"17052:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17042:3:20"},"nodeType":"YulFunctionCall","src":"17042:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17014:6:20"},"nodeType":"YulFunctionCall","src":"17014:49:20"},"nodeType":"YulExpressionStatement","src":"17014:49:20"},{"nodeType":"YulAssignment","src":"17072:138:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17205:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17080:123:20"},"nodeType":"YulFunctionCall","src":"17080:130:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17072:4:20"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_address_t_uint256_t_uint32_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_address_t_address_t_address_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16408:9:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16420:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16428:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16436:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16444:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16452:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16460:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16471:4:20","type":""}],"src":"16140:1077:20"},{"body":{"nodeType":"YulBlock","src":"17345:202:20","statements":[{"nodeType":"YulAssignment","src":"17355:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17367:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17378:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17363:3:20"},"nodeType":"YulFunctionCall","src":"17363:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17355:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17433:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17446:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17457:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17442:3:20"},"nodeType":"YulFunctionCall","src":"17442:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17391:41:20"},"nodeType":"YulFunctionCall","src":"17391:69:20"},"nodeType":"YulExpressionStatement","src":"17391:69:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17512:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17525:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17536:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17521:3:20"},"nodeType":"YulFunctionCall","src":"17521:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17470:41:20"},"nodeType":"YulFunctionCall","src":"17470:70:20"},"nodeType":"YulExpressionStatement","src":"17470:70:20"}]},"name":"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17309:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17321:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17329:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17340:4:20","type":""}],"src":"17223:324:20"},{"body":{"nodeType":"YulBlock","src":"17642:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17659:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17662:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17652:6:20"},"nodeType":"YulFunctionCall","src":"17652:12:20"},"nodeType":"YulExpressionStatement","src":"17652:12:20"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"17553:117:20"},{"body":{"nodeType":"YulBlock","src":"17765:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17782:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17785:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17775:6:20"},"nodeType":"YulFunctionCall","src":"17775:12:20"},"nodeType":"YulExpressionStatement","src":"17775:12:20"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"17676:117:20"},{"body":{"nodeType":"YulBlock","src":"17862:80:20","statements":[{"nodeType":"YulAssignment","src":"17872:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17887:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17881:5:20"},"nodeType":"YulFunctionCall","src":"17881:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17872:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17930:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"17903:26:20"},"nodeType":"YulFunctionCall","src":"17903:33:20"},"nodeType":"YulExpressionStatement","src":"17903:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17840:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"17848:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17856:5:20","type":""}],"src":"17799:143:20"},{"body":{"nodeType":"YulBlock","src":"18086:1969:20","statements":[{"body":{"nodeType":"YulBlock","src":"18132:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"18134:77:20"},"nodeType":"YulFunctionCall","src":"18134:79:20"},"nodeType":"YulExpressionStatement","src":"18134:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"18107:3:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"18112:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18103:3:20"},"nodeType":"YulFunctionCall","src":"18103:19:20"},{"kind":"number","nodeType":"YulLiteral","src":"18124:6:20","type":"","value":"0x0140"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18099:3:20"},"nodeType":"YulFunctionCall","src":"18099:32:20"},"nodeType":"YulIf","src":"18096:119:20"},{"nodeType":"YulAssignment","src":"18224:32:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18249:6:20","type":"","value":"0x0140"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18233:15:20"},"nodeType":"YulFunctionCall","src":"18233:23:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18224:5:20"}]},{"nodeType":"YulBlock","src":"18266:163:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18303:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18317:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18307:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18343:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18350:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18339:3:20"},"nodeType":"YulFunctionCall","src":"18339:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18393:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"18404:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18389:3:20"},"nodeType":"YulFunctionCall","src":"18389:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"18413:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18357:31:20"},"nodeType":"YulFunctionCall","src":"18357:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18332:6:20"},"nodeType":"YulFunctionCall","src":"18332:86:20"},"nodeType":"YulExpressionStatement","src":"18332:86:20"}]},{"nodeType":"YulBlock","src":"18439:164:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18476:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18490:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18480:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18517:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18524:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18513:3:20"},"nodeType":"YulFunctionCall","src":"18513:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18567:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"18578:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18563:3:20"},"nodeType":"YulFunctionCall","src":"18563:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"18587:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18531:31:20"},"nodeType":"YulFunctionCall","src":"18531:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18506:6:20"},"nodeType":"YulFunctionCall","src":"18506:86:20"},"nodeType":"YulExpressionStatement","src":"18506:86:20"}]},{"nodeType":"YulBlock","src":"18613:173:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18659:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18673:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18663:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18700:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18707:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:20"},"nodeType":"YulFunctionCall","src":"18696:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18750:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"18761:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18746:3:20"},"nodeType":"YulFunctionCall","src":"18746:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"18770:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18714:31:20"},"nodeType":"YulFunctionCall","src":"18714:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18689:6:20"},"nodeType":"YulFunctionCall","src":"18689:86:20"},"nodeType":"YulExpressionStatement","src":"18689:86:20"}]},{"nodeType":"YulBlock","src":"18796:170:20","statements":[{"nodeType":"YulVariableDeclaration","src":"18839:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"18853:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18843:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18880:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18887:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18876:3:20"},"nodeType":"YulFunctionCall","src":"18876:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18930:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"18941:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18926:3:20"},"nodeType":"YulFunctionCall","src":"18926:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"18950:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"18894:31:20"},"nodeType":"YulFunctionCall","src":"18894:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18869:6:20"},"nodeType":"YulFunctionCall","src":"18869:86:20"},"nodeType":"YulExpressionStatement","src":"18869:86:20"}]},{"nodeType":"YulBlock","src":"18976:176:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19024:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19038:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19028:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19066:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19073:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19062:3:20"},"nodeType":"YulFunctionCall","src":"19062:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19116:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"19127:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19112:3:20"},"nodeType":"YulFunctionCall","src":"19112:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"19136:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19080:31:20"},"nodeType":"YulFunctionCall","src":"19080:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19055:6:20"},"nodeType":"YulFunctionCall","src":"19055:86:20"},"nodeType":"YulExpressionStatement","src":"19055:86:20"}]},{"nodeType":"YulBlock","src":"19162:175:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19209:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19223:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19213:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19251:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19258:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19247:3:20"},"nodeType":"YulFunctionCall","src":"19247:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19301:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"19312:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19297:3:20"},"nodeType":"YulFunctionCall","src":"19297:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"19321:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19265:31:20"},"nodeType":"YulFunctionCall","src":"19265:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19240:6:20"},"nodeType":"YulFunctionCall","src":"19240:86:20"},"nodeType":"YulExpressionStatement","src":"19240:86:20"}]},{"nodeType":"YulBlock","src":"19347:174:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19393:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19407:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19397:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19435:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19442:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19431:3:20"},"nodeType":"YulFunctionCall","src":"19431:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19485:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"19496:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19481:3:20"},"nodeType":"YulFunctionCall","src":"19481:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"19505:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19449:31:20"},"nodeType":"YulFunctionCall","src":"19449:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19424:6:20"},"nodeType":"YulFunctionCall","src":"19424:86:20"},"nodeType":"YulExpressionStatement","src":"19424:86:20"}]},{"nodeType":"YulBlock","src":"19531:164:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19567:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19581:3:20","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19571:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19609:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19616:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19605:3:20"},"nodeType":"YulFunctionCall","src":"19605:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19659:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"19670:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19655:3:20"},"nodeType":"YulFunctionCall","src":"19655:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"19679:3:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19623:31:20"},"nodeType":"YulFunctionCall","src":"19623:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19598:6:20"},"nodeType":"YulFunctionCall","src":"19598:86:20"},"nodeType":"YulExpressionStatement","src":"19598:86:20"}]},{"nodeType":"YulBlock","src":"19705:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19741:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19755:3:20","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19745:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19783:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19790:6:20","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19779:3:20"},"nodeType":"YulFunctionCall","src":"19779:18:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19835:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"19846:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19831:3:20"},"nodeType":"YulFunctionCall","src":"19831:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"19855:3:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"19799:31:20"},"nodeType":"YulFunctionCall","src":"19799:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19772:6:20"},"nodeType":"YulFunctionCall","src":"19772:88:20"},"nodeType":"YulExpressionStatement","src":"19772:88:20"}]},{"nodeType":"YulBlock","src":"19881:167:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19918:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"19932:3:20","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19922:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19960:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19967:6:20","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19956:3:20"},"nodeType":"YulFunctionCall","src":"19956:18:20"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20012:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"20023:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20008:3:20"},"nodeType":"YulFunctionCall","src":"20008:22:20"},{"name":"end","nodeType":"YulIdentifier","src":"20032:3:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"19976:31:20"},"nodeType":"YulFunctionCall","src":"19976:60:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19949:6:20"},"nodeType":"YulFunctionCall","src":"19949:88:20"},"nodeType":"YulExpressionStatement","src":"19949:88:20"}]}]},"name":"abi_decode_t_struct$_SequencerData_$3634_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18061:9:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"18072:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18080:5:20","type":""}],"src":"17989:2066:20"},{"body":{"nodeType":"YulBlock","src":"20169:306:20","statements":[{"body":{"nodeType":"YulBlock","src":"20216:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20218:77:20"},"nodeType":"YulFunctionCall","src":"20218:79:20"},"nodeType":"YulExpressionStatement","src":"20218:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20190:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"20199:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20186:3:20"},"nodeType":"YulFunctionCall","src":"20186:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"20211:3:20","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20182:3:20"},"nodeType":"YulFunctionCall","src":"20182:33:20"},"nodeType":"YulIf","src":"20179:120:20"},{"nodeType":"YulBlock","src":"20309:159:20","statements":[{"nodeType":"YulVariableDeclaration","src":"20324:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"20338:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20328:6:20","type":""}]},{"nodeType":"YulAssignment","src":"20353:105:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20430:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"20441:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20426:3:20"},"nodeType":"YulFunctionCall","src":"20426:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20450:7:20"}],"functionName":{"name":"abi_decode_t_struct$_SequencerData_$3634_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"20363:62:20"},"nodeType":"YulFunctionCall","src":"20363:95:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20353:6:20"}]}]}]},"name":"abi_decode_tuple_t_struct$_SequencerData_$3634_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20139:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20150:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20162:6:20","type":""}],"src":"20061:414:20"},{"body":{"nodeType":"YulBlock","src":"20605:204:20","statements":[{"nodeType":"YulAssignment","src":"20615:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20627:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20638:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20623:3:20"},"nodeType":"YulFunctionCall","src":"20623:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20615:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20695:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20708:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20719:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20704:3:20"},"nodeType":"YulFunctionCall","src":"20704:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20651:43:20"},"nodeType":"YulFunctionCall","src":"20651:71:20"},"nodeType":"YulExpressionStatement","src":"20651:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20774:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20787:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20798:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20783:3:20"},"nodeType":"YulFunctionCall","src":"20783:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"20732:41:20"},"nodeType":"YulFunctionCall","src":"20732:70:20"},"nodeType":"YulExpressionStatement","src":"20732:70:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20569:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20581:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20589:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20600:4:20","type":""}],"src":"20481:328:20"},{"body":{"nodeType":"YulBlock","src":"20892:274:20","statements":[{"body":{"nodeType":"YulBlock","src":"20938:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20940:77:20"},"nodeType":"YulFunctionCall","src":"20940:79:20"},"nodeType":"YulExpressionStatement","src":"20940:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20913:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"20922:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20909:3:20"},"nodeType":"YulFunctionCall","src":"20909:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"20934:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20905:3:20"},"nodeType":"YulFunctionCall","src":"20905:32:20"},"nodeType":"YulIf","src":"20902:119:20"},{"nodeType":"YulBlock","src":"21031:128:20","statements":[{"nodeType":"YulVariableDeclaration","src":"21046:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"21060:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21050:6:20","type":""}]},{"nodeType":"YulAssignment","src":"21075:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21121:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"21132:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21117:3:20"},"nodeType":"YulFunctionCall","src":"21117:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21141:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"21085:31:20"},"nodeType":"YulFunctionCall","src":"21085:64:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21075:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20862:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20873:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20885:6:20","type":""}],"src":"20815:351:20"},{"body":{"nodeType":"YulBlock","src":"21268:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21285:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"21290:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21278:6:20"},"nodeType":"YulFunctionCall","src":"21278:19:20"},"nodeType":"YulExpressionStatement","src":"21278:19:20"},{"nodeType":"YulAssignment","src":"21306:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21325:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21330:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21321:3:20"},"nodeType":"YulFunctionCall","src":"21321:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21306:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21240:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"21245:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21256:11:20","type":""}],"src":"21172:169:20"},{"body":{"nodeType":"YulBlock","src":"21453:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21475:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21483:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21471:3:20"},"nodeType":"YulFunctionCall","src":"21471:14:20"},{"hexValue":"4465616c65723a20496e73756666696369656e74204d657469732062616c616e","kind":"string","nodeType":"YulLiteral","src":"21487:34:20","type":"","value":"Dealer: Insufficient Metis balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21464:6:20"},"nodeType":"YulFunctionCall","src":"21464:58:20"},"nodeType":"YulExpressionStatement","src":"21464:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21543:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21551:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21539:3:20"},"nodeType":"YulFunctionCall","src":"21539:15:20"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"21556:4:20","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21532:6:20"},"nodeType":"YulFunctionCall","src":"21532:29:20"},"nodeType":"YulExpressionStatement","src":"21532:29:20"}]},"name":"store_literal_in_memory_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21445:6:20","type":""}],"src":"21347:221:20"},{"body":{"nodeType":"YulBlock","src":"21720:220:20","statements":[{"nodeType":"YulAssignment","src":"21730:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21796:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21801:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21737:58:20"},"nodeType":"YulFunctionCall","src":"21737:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21730:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21902:3:20"}],"functionName":{"name":"store_literal_in_memory_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3","nodeType":"YulIdentifier","src":"21813:88:20"},"nodeType":"YulFunctionCall","src":"21813:93:20"},"nodeType":"YulExpressionStatement","src":"21813:93:20"},{"nodeType":"YulAssignment","src":"21915:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21926:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21931:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21922:3:20"},"nodeType":"YulFunctionCall","src":"21922:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21915:3:20"}]}]},"name":"abi_encode_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21708:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21716:3:20","type":""}],"src":"21574:366:20"},{"body":{"nodeType":"YulBlock","src":"22117:248:20","statements":[{"nodeType":"YulAssignment","src":"22127:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22139:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22150:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22135:3:20"},"nodeType":"YulFunctionCall","src":"22135:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22127:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22174:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22185:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22170:3:20"},"nodeType":"YulFunctionCall","src":"22170:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22193:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"22199:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22189:3:20"},"nodeType":"YulFunctionCall","src":"22189:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22163:6:20"},"nodeType":"YulFunctionCall","src":"22163:47:20"},"nodeType":"YulExpressionStatement","src":"22163:47:20"},{"nodeType":"YulAssignment","src":"22219:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22353:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22227:124:20"},"nodeType":"YulFunctionCall","src":"22227:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22219:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22097:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22112:4:20","type":""}],"src":"21946:419:20"},{"body":{"nodeType":"YulBlock","src":"22477:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22499:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22507:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22495:3:20"},"nodeType":"YulFunctionCall","src":"22495:14:20"},{"hexValue":"4465616c65723a20417070726f76616c20746f204c6f636b696e67496e666f20","kind":"string","nodeType":"YulLiteral","src":"22511:34:20","type":"","value":"Dealer: Approval to LockingInfo "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22488:6:20"},"nodeType":"YulFunctionCall","src":"22488:58:20"},"nodeType":"YulExpressionStatement","src":"22488:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22567:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22575:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22563:3:20"},"nodeType":"YulFunctionCall","src":"22563:15:20"},{"hexValue":"6661696c6564","kind":"string","nodeType":"YulLiteral","src":"22580:8:20","type":"","value":"failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22556:6:20"},"nodeType":"YulFunctionCall","src":"22556:33:20"},"nodeType":"YulExpressionStatement","src":"22556:33:20"}]},"name":"store_literal_in_memory_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22469:6:20","type":""}],"src":"22371:225:20"},{"body":{"nodeType":"YulBlock","src":"22748:220:20","statements":[{"nodeType":"YulAssignment","src":"22758:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22824:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"22829:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22765:58:20"},"nodeType":"YulFunctionCall","src":"22765:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22758:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22930:3:20"}],"functionName":{"name":"store_literal_in_memory_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa","nodeType":"YulIdentifier","src":"22841:88:20"},"nodeType":"YulFunctionCall","src":"22841:93:20"},"nodeType":"YulExpressionStatement","src":"22841:93:20"},{"nodeType":"YulAssignment","src":"22943:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22954:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"22959:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22950:3:20"},"nodeType":"YulFunctionCall","src":"22950:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22943:3:20"}]}]},"name":"abi_encode_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22736:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22744:3:20","type":""}],"src":"22602:366:20"},{"body":{"nodeType":"YulBlock","src":"23145:248:20","statements":[{"nodeType":"YulAssignment","src":"23155:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23167:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23178:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23163:3:20"},"nodeType":"YulFunctionCall","src":"23163:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23155:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23202:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23213:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23198:3:20"},"nodeType":"YulFunctionCall","src":"23198:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23221:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"23227:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23217:3:20"},"nodeType":"YulFunctionCall","src":"23217:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23191:6:20"},"nodeType":"YulFunctionCall","src":"23191:47:20"},"nodeType":"YulExpressionStatement","src":"23191:47:20"},{"nodeType":"YulAssignment","src":"23247:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23381:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23255:124:20"},"nodeType":"YulFunctionCall","src":"23255:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23247:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23125:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23140:4:20","type":""}],"src":"22974:419:20"},{"body":{"nodeType":"YulBlock","src":"23457:40:20","statements":[{"nodeType":"YulAssignment","src":"23468:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23484:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23478:5:20"},"nodeType":"YulFunctionCall","src":"23478:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23468:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23440:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23450:6:20","type":""}],"src":"23399:98:20"},{"body":{"nodeType":"YulBlock","src":"23565:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"23575:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"23584:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23579:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"23644:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23669:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"23674:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23665:3:20"},"nodeType":"YulFunctionCall","src":"23665:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23688:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"23693:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23684:3:20"},"nodeType":"YulFunctionCall","src":"23684:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23678:5:20"},"nodeType":"YulFunctionCall","src":"23678:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23658:6:20"},"nodeType":"YulFunctionCall","src":"23658:39:20"},"nodeType":"YulExpressionStatement","src":"23658:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23605:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"23608:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23602:2:20"},"nodeType":"YulFunctionCall","src":"23602:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23616:19:20","statements":[{"nodeType":"YulAssignment","src":"23618:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23627:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"23630:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23623:3:20"},"nodeType":"YulFunctionCall","src":"23623:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23618:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"23598:3:20","statements":[]},"src":"23594:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23727:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"23732:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23723:3:20"},"nodeType":"YulFunctionCall","src":"23723:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"23741:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23716:6:20"},"nodeType":"YulFunctionCall","src":"23716:27:20"},"nodeType":"YulExpressionStatement","src":"23716:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"23547:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"23552:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"23557:6:20","type":""}],"src":"23503:246:20"},{"body":{"nodeType":"YulBlock","src":"23845:283:20","statements":[{"nodeType":"YulVariableDeclaration","src":"23855:52:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23901:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23869:31:20"},"nodeType":"YulFunctionCall","src":"23869:38:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23859:6:20","type":""}]},{"nodeType":"YulAssignment","src":"23916:77:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23981:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"23986:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23923:57:20"},"nodeType":"YulFunctionCall","src":"23923:70:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23916:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24041:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"24048:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24037:3:20"},"nodeType":"YulFunctionCall","src":"24037:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"24055:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"24060:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24002:34:20"},"nodeType":"YulFunctionCall","src":"24002:65:20"},"nodeType":"YulExpressionStatement","src":"24002:65:20"},{"nodeType":"YulAssignment","src":"24076:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24087:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24114:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"24092:21:20"},"nodeType":"YulFunctionCall","src":"24092:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24083:3:20"},"nodeType":"YulFunctionCall","src":"24083:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24076:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23826:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23833:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23841:3:20","type":""}],"src":"23755:373:20"},{"body":{"nodeType":"YulBlock","src":"24334:440:20","statements":[{"nodeType":"YulAssignment","src":"24344:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24356:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24367:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24352:3:20"},"nodeType":"YulFunctionCall","src":"24352:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24344:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24425:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24438:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24449:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24434:3:20"},"nodeType":"YulFunctionCall","src":"24434:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24381:43:20"},"nodeType":"YulFunctionCall","src":"24381:71:20"},"nodeType":"YulExpressionStatement","src":"24381:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24506:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24519:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24530:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24515:3:20"},"nodeType":"YulFunctionCall","src":"24515:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24462:43:20"},"nodeType":"YulFunctionCall","src":"24462:72:20"},"nodeType":"YulExpressionStatement","src":"24462:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24588:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24601:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24612:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24597:3:20"},"nodeType":"YulFunctionCall","src":"24597:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24544:43:20"},"nodeType":"YulFunctionCall","src":"24544:72:20"},"nodeType":"YulExpressionStatement","src":"24544:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24637:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24648:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24633:3:20"},"nodeType":"YulFunctionCall","src":"24633:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24657:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"24663:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24653:3:20"},"nodeType":"YulFunctionCall","src":"24653:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24626:6:20"},"nodeType":"YulFunctionCall","src":"24626:48:20"},"nodeType":"YulExpressionStatement","src":"24626:48:20"},{"nodeType":"YulAssignment","src":"24683:84:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24753:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"24762:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24691:61:20"},"nodeType":"YulFunctionCall","src":"24691:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24683:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24282:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24294:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24302:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24310:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24318:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24329:4:20","type":""}],"src":"24134:640:20"},{"body":{"nodeType":"YulBlock","src":"24900:200:20","statements":[{"nodeType":"YulAssignment","src":"24910:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24922:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24933:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24918:3:20"},"nodeType":"YulFunctionCall","src":"24918:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24910:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24990:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25003:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25014:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24999:3:20"},"nodeType":"YulFunctionCall","src":"24999:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24946:43:20"},"nodeType":"YulFunctionCall","src":"24946:71:20"},"nodeType":"YulExpressionStatement","src":"24946:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25065:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25078:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25089:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25074:3:20"},"nodeType":"YulFunctionCall","src":"25074:18:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25027:37:20"},"nodeType":"YulFunctionCall","src":"25027:66:20"},"nodeType":"YulExpressionStatement","src":"25027:66:20"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24864:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24876:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24884:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24895:4:20","type":""}],"src":"24780:320:20"},{"body":{"nodeType":"YulBlock","src":"25212:64:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25234:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25242:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25230:3:20"},"nodeType":"YulFunctionCall","src":"25230:14:20"},{"hexValue":"4465616c65723a207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"25246:22:20","type":"","value":"Dealer: zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25223:6:20"},"nodeType":"YulFunctionCall","src":"25223:46:20"},"nodeType":"YulExpressionStatement","src":"25223:46:20"}]},"name":"store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25204:6:20","type":""}],"src":"25106:170:20"},{"body":{"nodeType":"YulBlock","src":"25428:220:20","statements":[{"nodeType":"YulAssignment","src":"25438:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25504:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25509:2:20","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25445:58:20"},"nodeType":"YulFunctionCall","src":"25445:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25438:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25610:3:20"}],"functionName":{"name":"store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313","nodeType":"YulIdentifier","src":"25521:88:20"},"nodeType":"YulFunctionCall","src":"25521:93:20"},"nodeType":"YulExpressionStatement","src":"25521:93:20"},{"nodeType":"YulAssignment","src":"25623:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25634:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25639:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25630:3:20"},"nodeType":"YulFunctionCall","src":"25630:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25623:3:20"}]}]},"name":"abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25416:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25424:3:20","type":""}],"src":"25282:366:20"},{"body":{"nodeType":"YulBlock","src":"25825:248:20","statements":[{"nodeType":"YulAssignment","src":"25835:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25847:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25858:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25843:3:20"},"nodeType":"YulFunctionCall","src":"25843:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25835:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25882:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25893:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25878:3:20"},"nodeType":"YulFunctionCall","src":"25878:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25901:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"25907:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25897:3:20"},"nodeType":"YulFunctionCall","src":"25897:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25871:6:20"},"nodeType":"YulFunctionCall","src":"25871:47:20"},"nodeType":"YulExpressionStatement","src":"25871:47:20"},{"nodeType":"YulAssignment","src":"25927:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26061:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25935:124:20"},"nodeType":"YulFunctionCall","src":"25935:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25927:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25805:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25820:4:20","type":""}],"src":"25654:419:20"},{"body":{"nodeType":"YulBlock","src":"26145:51:20","statements":[{"nodeType":"YulAssignment","src":"26155:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26184:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"26166:17:20"},"nodeType":"YulFunctionCall","src":"26166:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26155:7:20"}]}]},"name":"cleanup_t_contract$_ILockingInfo_$3387","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26127:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26137:7:20","type":""}],"src":"26079:117:20"},{"body":{"nodeType":"YulBlock","src":"26266:100:20","statements":[{"body":{"nodeType":"YulBlock","src":"26344:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26353:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26356:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26346:6:20"},"nodeType":"YulFunctionCall","src":"26346:12:20"},"nodeType":"YulExpressionStatement","src":"26346:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26289:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26335:5:20"}],"functionName":{"name":"cleanup_t_contract$_ILockingInfo_$3387","nodeType":"YulIdentifier","src":"26296:38:20"},"nodeType":"YulFunctionCall","src":"26296:45:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26286:2:20"},"nodeType":"YulFunctionCall","src":"26286:56:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26279:6:20"},"nodeType":"YulFunctionCall","src":"26279:64:20"},"nodeType":"YulIf","src":"26276:84:20"}]},"name":"validator_revert_t_contract$_ILockingInfo_$3387","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26259:5:20","type":""}],"src":"26202:164:20"},{"body":{"nodeType":"YulBlock","src":"26456:101:20","statements":[{"nodeType":"YulAssignment","src":"26466:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26481:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26475:5:20"},"nodeType":"YulFunctionCall","src":"26475:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26466:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26545:5:20"}],"functionName":{"name":"validator_revert_t_contract$_ILockingInfo_$3387","nodeType":"YulIdentifier","src":"26497:47:20"},"nodeType":"YulFunctionCall","src":"26497:54:20"},"nodeType":"YulExpressionStatement","src":"26497:54:20"}]},"name":"abi_decode_t_contract$_ILockingInfo_$3387_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26434:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"26442:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"26450:5:20","type":""}],"src":"26372:185:20"},{"body":{"nodeType":"YulBlock","src":"26661:295:20","statements":[{"body":{"nodeType":"YulBlock","src":"26707:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26709:77:20"},"nodeType":"YulFunctionCall","src":"26709:79:20"},"nodeType":"YulExpressionStatement","src":"26709:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26682:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"26691:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26678:3:20"},"nodeType":"YulFunctionCall","src":"26678:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"26703:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26674:3:20"},"nodeType":"YulFunctionCall","src":"26674:32:20"},"nodeType":"YulIf","src":"26671:119:20"},{"nodeType":"YulBlock","src":"26800:149:20","statements":[{"nodeType":"YulVariableDeclaration","src":"26815:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"26829:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26819:6:20","type":""}]},{"nodeType":"YulAssignment","src":"26844:95:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26911:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"26922:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26907:3:20"},"nodeType":"YulFunctionCall","src":"26907:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26931:7:20"}],"functionName":{"name":"abi_decode_t_contract$_ILockingInfo_$3387_fromMemory","nodeType":"YulIdentifier","src":"26854:52:20"},"nodeType":"YulFunctionCall","src":"26854:85:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26844:6:20"}]}]}]},"name":"abi_decode_tuple_t_contract$_ILockingInfo_$3387_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26631:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26642:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26654:6:20","type":""}],"src":"26563:393:20"},{"body":{"nodeType":"YulBlock","src":"27015:32:20","statements":[{"nodeType":"YulAssignment","src":"27025:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"27036:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27025:7:20"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26997:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27007:7:20","type":""}],"src":"26962:85:20"},{"body":{"nodeType":"YulBlock","src":"27097:57:20","statements":[{"nodeType":"YulAssignment","src":"27107:41:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27122:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"27129:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27118:3:20"},"nodeType":"YulFunctionCall","src":"27118:30:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27107:7:20"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27079:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27089:7:20","type":""}],"src":"27053:101:20"},{"body":{"nodeType":"YulBlock","src":"27227:89:20","statements":[{"nodeType":"YulAssignment","src":"27237:73:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27302:5:20"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"27276:25:20"},"nodeType":"YulFunctionCall","src":"27276:32:20"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27267:8:20"},"nodeType":"YulFunctionCall","src":"27267:42:20"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"27250:16:20"},"nodeType":"YulFunctionCall","src":"27250:60:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27237:9:20"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27207:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27217:9:20","type":""}],"src":"27160:156:20"},{"body":{"nodeType":"YulBlock","src":"27394:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27411:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27454:5:20"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"27416:37:20"},"nodeType":"YulFunctionCall","src":"27416:44:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27404:6:20"},"nodeType":"YulFunctionCall","src":"27404:57:20"},"nodeType":"YulExpressionStatement","src":"27404:57:20"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27382:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27389:3:20","type":""}],"src":"27322:145:20"},{"body":{"nodeType":"YulBlock","src":"27578:131:20","statements":[{"nodeType":"YulAssignment","src":"27588:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27600:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27611:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27596:3:20"},"nodeType":"YulFunctionCall","src":"27596:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27588:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27675:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27688:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27699:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27684:3:20"},"nodeType":"YulFunctionCall","src":"27684:17:20"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"27624:50:20"},"nodeType":"YulFunctionCall","src":"27624:78:20"},"nodeType":"YulExpressionStatement","src":"27624:78:20"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27550:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27562:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27573:4:20","type":""}],"src":"27473:236:20"},{"body":{"nodeType":"YulBlock","src":"27821:71:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27843:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"27851:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27839:3:20"},"nodeType":"YulFunctionCall","src":"27839:14:20"},{"hexValue":"4465616c65723a206e6f206163746976652073657175656e636572","kind":"string","nodeType":"YulLiteral","src":"27855:29:20","type":"","value":"Dealer: no active sequencer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27832:6:20"},"nodeType":"YulFunctionCall","src":"27832:53:20"},"nodeType":"YulExpressionStatement","src":"27832:53:20"}]},"name":"store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27813:6:20","type":""}],"src":"27715:177:20"},{"body":{"nodeType":"YulBlock","src":"28044:220:20","statements":[{"nodeType":"YulAssignment","src":"28054:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28120:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28125:2:20","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28061:58:20"},"nodeType":"YulFunctionCall","src":"28061:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28054:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28226:3:20"}],"functionName":{"name":"store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582","nodeType":"YulIdentifier","src":"28137:88:20"},"nodeType":"YulFunctionCall","src":"28137:93:20"},"nodeType":"YulExpressionStatement","src":"28137:93:20"},{"nodeType":"YulAssignment","src":"28239:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28250:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28255:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28246:3:20"},"nodeType":"YulFunctionCall","src":"28246:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28239:3:20"}]}]},"name":"abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28032:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28040:3:20","type":""}],"src":"27898:366:20"},{"body":{"nodeType":"YulBlock","src":"28441:248:20","statements":[{"nodeType":"YulAssignment","src":"28451:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28463:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28474:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28459:3:20"},"nodeType":"YulFunctionCall","src":"28459:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28451:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28498:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28509:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28494:3:20"},"nodeType":"YulFunctionCall","src":"28494:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28517:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"28523:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28513:3:20"},"nodeType":"YulFunctionCall","src":"28513:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28487:6:20"},"nodeType":"YulFunctionCall","src":"28487:47:20"},"nodeType":"YulExpressionStatement","src":"28487:47:20"},{"nodeType":"YulAssignment","src":"28543:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28677:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28551:124:20"},"nodeType":"YulFunctionCall","src":"28551:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28543:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28421:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28436:4:20","type":""}],"src":"28270:419:20"},{"body":{"nodeType":"YulBlock","src":"28723:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28740:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28743:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28733:6:20"},"nodeType":"YulFunctionCall","src":"28733:88:20"},"nodeType":"YulExpressionStatement","src":"28733:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28837:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28840:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28830:6:20"},"nodeType":"YulFunctionCall","src":"28830:15:20"},"nodeType":"YulExpressionStatement","src":"28830:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28861:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28864:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28854:6:20"},"nodeType":"YulFunctionCall","src":"28854:15:20"},"nodeType":"YulExpressionStatement","src":"28854:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"28695:180:20"},{"body":{"nodeType":"YulBlock","src":"28925:147:20","statements":[{"nodeType":"YulAssignment","src":"28935:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28958:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28940:17:20"},"nodeType":"YulFunctionCall","src":"28940:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28935:1:20"}]},{"nodeType":"YulAssignment","src":"28969:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28992:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28974:17:20"},"nodeType":"YulFunctionCall","src":"28974:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28969:1:20"}]},{"nodeType":"YulAssignment","src":"29003:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29014:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"29017:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29010:3:20"},"nodeType":"YulFunctionCall","src":"29010:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29003:3:20"}]},{"body":{"nodeType":"YulBlock","src":"29043:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29045:16:20"},"nodeType":"YulFunctionCall","src":"29045:18:20"},"nodeType":"YulExpressionStatement","src":"29045:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29035:1:20"},{"name":"sum","nodeType":"YulIdentifier","src":"29038:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29032:2:20"},"nodeType":"YulFunctionCall","src":"29032:10:20"},"nodeType":"YulIf","src":"29029:36:20"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28912:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"28915:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28921:3:20","type":""}],"src":"28881:191:20"},{"body":{"nodeType":"YulBlock","src":"29123:149:20","statements":[{"nodeType":"YulAssignment","src":"29133:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29156:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29138:17:20"},"nodeType":"YulFunctionCall","src":"29138:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29133:1:20"}]},{"nodeType":"YulAssignment","src":"29167:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29190:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29172:17:20"},"nodeType":"YulFunctionCall","src":"29172:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29167:1:20"}]},{"nodeType":"YulAssignment","src":"29201:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29213:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"29216:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29209:3:20"},"nodeType":"YulFunctionCall","src":"29209:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"29201:4:20"}]},{"body":{"nodeType":"YulBlock","src":"29243:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29245:16:20"},"nodeType":"YulFunctionCall","src":"29245:18:20"},"nodeType":"YulExpressionStatement","src":"29245:18:20"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"29234:4:20"},{"name":"x","nodeType":"YulIdentifier","src":"29240:1:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29231:2:20"},"nodeType":"YulFunctionCall","src":"29231:11:20"},"nodeType":"YulIf","src":"29228:37:20"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29109:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"29112:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"29118:4:20","type":""}],"src":"29078:194:20"},{"body":{"nodeType":"YulBlock","src":"29426:282:20","statements":[{"nodeType":"YulAssignment","src":"29436:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29448:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29459:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29444:3:20"},"nodeType":"YulFunctionCall","src":"29444:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29436:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29516:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29529:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29540:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29525:3:20"},"nodeType":"YulFunctionCall","src":"29525:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29472:43:20"},"nodeType":"YulFunctionCall","src":"29472:71:20"},"nodeType":"YulExpressionStatement","src":"29472:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29597:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29610:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29621:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29606:3:20"},"nodeType":"YulFunctionCall","src":"29606:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29553:43:20"},"nodeType":"YulFunctionCall","src":"29553:72:20"},"nodeType":"YulExpressionStatement","src":"29553:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29673:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29686:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29697:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29682:3:20"},"nodeType":"YulFunctionCall","src":"29682:18:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"29635:37:20"},"nodeType":"YulFunctionCall","src":"29635:66:20"},"nodeType":"YulExpressionStatement","src":"29635:66:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29382:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29394:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29402:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29410:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29421:4:20","type":""}],"src":"29278:430:20"},{"body":{"nodeType":"YulBlock","src":"29767:32:20","statements":[{"nodeType":"YulAssignment","src":"29777:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"29788:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29777:7:20"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29749:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29759:7:20","type":""}],"src":"29714:85:20"},{"body":{"nodeType":"YulBlock","src":"29872:89:20","statements":[{"nodeType":"YulAssignment","src":"29882:73:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29947:5:20"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"29921:25:20"},"nodeType":"YulFunctionCall","src":"29921:32:20"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29912:8:20"},"nodeType":"YulFunctionCall","src":"29912:42:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"29895:16:20"},"nodeType":"YulFunctionCall","src":"29895:60:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29882:9:20"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29852:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29862:9:20","type":""}],"src":"29805:156:20"},{"body":{"nodeType":"YulBlock","src":"30039:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30056:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30099:5:20"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint32","nodeType":"YulIdentifier","src":"30061:37:20"},"nodeType":"YulFunctionCall","src":"30061:44:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30049:6:20"},"nodeType":"YulFunctionCall","src":"30049:57:20"},"nodeType":"YulExpressionStatement","src":"30049:57:20"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30027:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30034:3:20","type":""}],"src":"29967:145:20"},{"body":{"nodeType":"YulBlock","src":"30279:295:20","statements":[{"nodeType":"YulAssignment","src":"30289:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30301:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30312:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30297:3:20"},"nodeType":"YulFunctionCall","src":"30297:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30289:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30376:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30389:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30400:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30385:3:20"},"nodeType":"YulFunctionCall","src":"30385:17:20"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"30325:50:20"},"nodeType":"YulFunctionCall","src":"30325:78:20"},"nodeType":"YulExpressionStatement","src":"30325:78:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30457:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30470:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30481:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30466:3:20"},"nodeType":"YulFunctionCall","src":"30466:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30413:43:20"},"nodeType":"YulFunctionCall","src":"30413:72:20"},"nodeType":"YulExpressionStatement","src":"30413:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"30539:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30552:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30563:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30548:3:20"},"nodeType":"YulFunctionCall","src":"30548:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30495:43:20"},"nodeType":"YulFunctionCall","src":"30495:72:20"},"nodeType":"YulExpressionStatement","src":"30495:72:20"}]},"name":"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_uint256__to_t_uint32_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30235:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30247:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30255:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30263:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30274:4:20","type":""}],"src":"30118:456:20"},{"body":{"nodeType":"YulBlock","src":"30622:133:20","statements":[{"nodeType":"YulAssignment","src":"30632:32:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30658:5:20"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"30641:16:20"},"nodeType":"YulFunctionCall","src":"30641:23:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30632:5:20"}]},{"body":{"nodeType":"YulBlock","src":"30698:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30700:16:20"},"nodeType":"YulFunctionCall","src":"30700:18:20"},"nodeType":"YulExpressionStatement","src":"30700:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30679:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"30686:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30676:2:20"},"nodeType":"YulFunctionCall","src":"30676:21:20"},"nodeType":"YulIf","src":"30673:47:20"},{"nodeType":"YulAssignment","src":"30729:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30740:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"30747:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30736:3:20"},"nodeType":"YulFunctionCall","src":"30736:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30729:3:20"}]}]},"name":"increment_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30608:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30618:3:20","type":""}],"src":"30580:175:20"},{"body":{"nodeType":"YulBlock","src":"30959:438:20","statements":[{"nodeType":"YulAssignment","src":"30969:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30981:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30992:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30977:3:20"},"nodeType":"YulFunctionCall","src":"30977:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30969:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31050:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31063:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31074:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31059:3:20"},"nodeType":"YulFunctionCall","src":"31059:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31006:43:20"},"nodeType":"YulFunctionCall","src":"31006:71:20"},"nodeType":"YulExpressionStatement","src":"31006:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31131:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31144:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31155:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31140:3:20"},"nodeType":"YulFunctionCall","src":"31140:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31087:43:20"},"nodeType":"YulFunctionCall","src":"31087:72:20"},"nodeType":"YulExpressionStatement","src":"31087:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31180:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31191:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31176:3:20"},"nodeType":"YulFunctionCall","src":"31176:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31200:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31206:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31196:3:20"},"nodeType":"YulFunctionCall","src":"31196:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31169:6:20"},"nodeType":"YulFunctionCall","src":"31169:48:20"},"nodeType":"YulExpressionStatement","src":"31169:48:20"},{"nodeType":"YulAssignment","src":"31226:84:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31296:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"31305:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31234:61:20"},"nodeType":"YulFunctionCall","src":"31234:76:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31226:4:20"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31362:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31375:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31386:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31371:3:20"},"nodeType":"YulFunctionCall","src":"31371:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"31320:41:20"},"nodeType":"YulFunctionCall","src":"31320:70:20"},"nodeType":"YulExpressionStatement","src":"31320:70:20"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__to_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30907:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30919:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30927:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30935:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30943:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30954:4:20","type":""}],"src":"30761:636:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ICrossDomainMessenger_$3199_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ICrossDomainMessenger_$3199_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ICrossDomainMessenger_$3199_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ICrossDomainMessenger_$3199__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ICrossDomainMessenger_$3199_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct ILockingPool.SequencerData -> struct ILockingPool.SequencerData\n    function abi_encode_t_struct$_SequencerData_$3634_memory_ptr_to_t_struct$_SequencerData_$3634_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // reward\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // activationBatch\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // updatedBatch\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deactivationBatch\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // deactivationTime\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // unlockClaimTime\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // nonce\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // signer\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_SequencerData_$3634_memory_ptr__to_t_struct$_SequencerData_$3634_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_SequencerData_$3634_memory_ptr_to_t_struct$_SequencerData_$3634_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILockingPool_$3737_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILockingPool_$3737_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILockingPool_$3737_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILockingPool_$3737__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILockingPool_$3737_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$979_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$979_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$979__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$979_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ILockingInfo_$3387_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILockingInfo_$3387_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILockingInfo_$3387_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILockingInfo_$3387__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILockingInfo_$3387_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_address_t_uint256_t_uint32_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_address_t_address_t_address_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct ILockingPool.SequencerData\n    function abi_decode_t_struct$_SequencerData_$3634_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0140) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // amount\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // reward\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // activationBatch\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // updatedBatch\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // deactivationBatch\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // deactivationTime\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // unlockClaimTime\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // nonce\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // owner\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // signer\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_SequencerData_$3634_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_SequencerData_$3634_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint32__to_t_uint256_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: Insufficient Metis balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9890fa4870a9c8304b049203726c861c34cf846fa4fb3a5b4b828a63e2ef7df3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: Approval to LockingInfo \")\n\n        mstore(add(memPtr, 32), \"failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cf41bbccb24819e502f54b6fe76d8c8f87ecc6ce7bc5213060429c97212caaa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00643c43000493072c64173643abeda6798820e4873847e9009dc84047e05313_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_contract$_ILockingInfo_$3387(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ILockingInfo_$3387(value) {\n        if iszero(eq(value, cleanup_t_contract$_ILockingInfo_$3387(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ILockingInfo_$3387_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ILockingInfo_$3387(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ILockingInfo_$3387_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ILockingInfo_$3387_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dealer: no active sequencer\")\n\n    }\n\n    function abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_028923a3678b6c5f1908182dd532a380ed5b1ad102cd3ee9ba9fc54ae4aa2582_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint32(value) -> converted {\n        converted := cleanup_t_uint32(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256_t_uint256__to_t_uint32_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_rational_0_by_1_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__to_t_uint256_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101ee5760003560e01c80638da5cb5b1161010d578063c53b573d116100a0578063e92d61e51161006f578063e92d61e514610670578063f2fde38b1461069b578063f7cee36a146106c4578063f87b7a3e146106ef578063feafaa6b14610718576101ee565b8063c53b573d146105d1578063c7b8981c146105ef578063d6ae3cd51461061a578063e597455414610645576101ee565b8063a69df4b5116100dc578063a69df4b51461054a578063af70cba514610554578063b699ce5f1461057d578063c3b550c8146105a6576101ee565b80638da5cb5b1461049e5780638db8ad88146104c957806397ec19be146104f45780639e9357041461051f576101ee565b80633cbb697911610185578063715018a611610154578063715018a61461040657806376d9f95c1461041d5780637ca4f8b01461044857806385d1e2b814610473576101ee565b80633cbb69791461034a57806343c82cf714610375578063457cb5861461039e57806356891412146103db576101ee565b80631abdaf6a116101c15780631abdaf6a1461029057806333bec7e7146102cd5780633b4c46d0146102f65780633cb747bf1461031f576101ee565b80630182a6da146101f357806302fb0c5e1461020f57806304a78fca1461023a578063080e1e4e14610265575b600080fd5b61020d6004803603810190610208919061265d565b610722565b005b34801561021b57600080fd5b50610224610b9f565b60405161023191906126a5565b60405180910390f35b34801561024657600080fd5b5061024f610bb2565b60405161025c91906126cf565b60405180910390f35b34801561027157600080fd5b5061027a610bb8565b604051610287919061272b565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b2919061265d565b610bde565b6040516102c49190612765565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef91906127ac565b610c18565b005b34801561030257600080fd5b5061031d60048036038101906103189190612805565b610c95565b005b34801561032b57600080fd5b50610334610ce1565b6040516103419190612891565b60405180910390f35b34801561035657600080fd5b5061035f610d07565b60405161036c9190612765565b60405180910390f35b34801561038157600080fd5b5061039c60048036038101906103979190612805565b610d1d565b005b3480156103aa57600080fd5b506103c560048036038101906103c091906127ac565b610d69565b6040516103d2919061272b565b60405180910390f35b3480156103e757600080fd5b506103f0610d9c565b6040516103fd91906126cf565b60405180910390f35b34801561041257600080fd5b5061041b610daf565b005b34801561042957600080fd5b50610432610dc3565b60405161043f9190612996565b60405180910390f35b34801561045457600080fd5b5061045d610e6f565b60405161046a91906126cf565b60405180910390f35b34801561047f57600080fd5b50610488610e75565b60405161049591906129d3565b60405180910390f35b3480156104aa57600080fd5b506104b3610e9b565b6040516104c0919061272b565b60405180910390f35b3480156104d557600080fd5b506104de610ed3565b6040516104eb919061272b565b60405180910390f35b34801561050057600080fd5b50610509610ef7565b604051610516919061272b565b60405180910390f35b34801561052b57600080fd5b50610534610f1d565b6040516105419190612765565b60405180910390f35b610552610f33565b005b34801561056057600080fd5b5061057b60048036038101906105769190612b34565b611061565b005b34801561058957600080fd5b506105a4600480360381019061059f9190612ba3565b6114eb565b005b3480156105b257600080fd5b506105bb611a80565b6040516105c8919061272b565b60405180910390f35b6105d9611aa6565b6040516105e691906126cf565b60405180910390f35b3480156105fb57600080fd5b50610604611f41565b60405161061191906126a5565b60405180910390f35b34801561062657600080fd5b5061062f611f54565b60405161063c91906126cf565b60405180910390f35b34801561065157600080fd5b5061065a611f5a565b6040516106679190612c66565b60405180910390f35b34801561067c57600080fd5b50610685611f80565b604051610692919061272b565b60405180910390f35b3480156106a757600080fd5b506106c260048036038101906106bd9190612805565b611fa6565b005b3480156106d057600080fd5b506106d961202c565b6040516106e69190612ca2565b60405180910390f35b3480156106fb57600080fd5b5061071660048036038101906107119190612805565b612052565b005b61072061209e565b005b61072a61214c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663441a3e70600d54836040518363ffffffff1660e01b8152600401610789929190612cbd565b600060405180830381600087803b1580156107a357600080fd5b505af11580156107b7573d6000803e3d6000fd5b505050506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e78cea926040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612cfb565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190612cfb565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b382846040518363ffffffff1660e01b815260040161091b929190612d28565b6020604051808303816000875af115801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190612d7d565b508073ffffffffffffffffffffffffffffffffffffffff1663ef808be234600554600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190612cfb565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166356eff2676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190612cfb565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688600c60009054906101000a900463ffffffff166040518863ffffffff1660e01b8152600401610af996959493929190612de1565b6000604051808303818588803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b5050505050600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6ef7a26d50cec3f1a210bed887413d426c9c13575a17872c54e00c4287ac5dce83604051610b9391906126cf565b60405180910390a25050565b600e60149054906101000a900460ff1681565b600d5481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a8181548110610bee57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b610c2061214c565b6000600c60009054906101000a900463ffffffff16905081600c60006101000a81548163ffffffff021916908363ffffffff1602179055507f4042b09a75e5a67c8cc2a57e00de6d29fb5202b7207afba895eb8b5cc3e2179e8183604051610c89929190612e55565b60405180910390a15050565b610c9d61214c565b80600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900463ffffffff1681565b610d2561214c565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610da6610dc3565b60000151905090565b610db761214c565b610dc160006121d3565b565b610dcb612594565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636ba7ccff600d546040518263ffffffff1660e01b8152600401610e2891906126cf565b61014060405180830381865afa158015610e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6a9190612f8e565b905090565b600b5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610ea66122aa565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900463ffffffff1681565b610f3b61214c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663262c0e6634600d54600c60009054906101000a900463ffffffff166040518463ffffffff1660e01b8152600401610fad929190612fbc565b6000604051808303818588803b158015610fc657600080fd5b505af1158015610fda573d6000803e3d6000fd5b50505050506000600e60146101000a81548160ff021916908315150217905550600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fbac99876b6a1c26412460d61d913235a30f0ea99585ffcfd53c0faae6ed3313460405160405180910390a2565b61106961214c565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110c6919061272b565b602060405180830381865afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190612fe5565b90508281101561114c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114390613095565b60405180910390fd5b83600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161122c929190612d28565b6020604051808303816000875af115801561124b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126f9190612d7d565b6112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a590613127565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ad42030600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040518563ffffffff1660e01b815260040161135394939291906131b5565b600060405180830381600087803b15801561136d57600080fd5b505af1158015611381573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663beb26755600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401611402919061272b565b602060405180830381865afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114439190612fe5565b600d819055506001600e60146101000a81548160ff021916908315150217905550600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb1e87a33084279cb2bff2d1271034cf695f539ee73bbd934d1625703d585d84a84600e60149054906101000a900460ff166040516114dd929190613201565b60405180910390a250505050565b60006114f56122d2565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156115435750825b9050600060018367ffffffffffffffff16148015611578575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611586575080155b156115bd576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561160d5760018560000160086101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16141580156116775750600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614155b80156116b05750600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614155b80156116e95750600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614155b80156117225750600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b611761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175890613276565b60405180910390fd5b61176a336122fa565b8b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e2fdcc176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187d91906132d4565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508973ffffffffffffffffffffffffffffffffffffffff16633cb747bf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192c9190612cfb565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860058190555087600c60006101000a81548163ffffffff021916908363ffffffff16021790555086600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315611a725760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611a699190613350565b60405180910390a15b505050505050505050505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600e60149054906101000a900460ff16611af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aee906133b7565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c0b3e466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8a9190612fe5565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611be9919061272b565b602060405180830381865afa158015611c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2a9190612fe5565b90506000805b60018163ffffffff161015611ed6576000611c49610dc3565b905060008082602001518360000151915091508185611c689190613406565b94506000878210611c7a576000611c87565b8188611c86919061343a565b5b90506000611c95828961230e565b90508088611ca3919061343a565b975060008482611cb39190613406565b905060008103611cc857505050505050611ec3565b808b611cd49190613406565b9a5060008a8286611ce59190613406565b119050808015611cf55750600086115b15611dd857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317396687600d54600c60009054906101000a900463ffffffff166040518363ffffffff1660e01b8152600401611d6b929190612fbc565b600060405180830381600087803b158015611d8557600080fd5b505af1158015611d99573d6000803e3d6000fd5b50505050600d547f630af8b49bb398089a74eacdb08106c528436090bdb35d7302152dc5117df9bd87604051611dcf91906126cf565b60405180910390a25b801580611de55750600083115b15611ebb57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663015bb180600d548560016040518463ffffffff1660e01b8152600401611e4c9392919061346e565b600060405180830381600087803b158015611e6657600080fd5b505af1158015611e7a573d6000803e3d6000fd5b505050507fb8aafdec9bacdc76bfea3c330063c391a2904d4f91e71f97a91534f3c8ce4ab560008488604051611eb2939291906134e0565b60405180910390a15b505050505050505b8080611ece90613517565b915050611c30565b506000811115611f0357611ee981612327565b80600b6000828254611efb9190613406565b925050819055505b7f1e2aed425906c5ed1ac5aff65e04a30adda54675483414997c879ca7f92a2a576001604051611f3391906126a5565b60405180910390a150505090565b600c60049054906101000a900460ff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fae61214c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120205760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612017919061272b565b60405180910390fd5b612029816121d3565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61205a61214c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6120a661214c565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ddc74de34600d54600c60009054906101000a900463ffffffff166040518463ffffffff1660e01b8152600401612118929190612fbc565b6000604051808303818588803b15801561213157600080fd5b505af1158015612145573d6000803e3d6000fd5b5050505050565b6121546124a6565b73ffffffffffffffffffffffffffffffffffffffff16612172610e9b565b73ffffffffffffffffffffffffffffffffffffffff16146121d1576121956124a6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016121c8919061272b565b60405180910390fd5b565b60006121dd6122aa565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6123026124ae565b61230b816124ee565b50565b600081831061231d578161231f565b825b905092915050565b600063eb82afb360e01b8260405160240161234291906126cf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344dd5ed634600554600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600c60009054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016124399493929190613543565b6000604051808303818588803b15801561245257600080fd5b505af1158015612466573d6000803e3d6000fd5b50505050507fd644e527c1896057ce642adfbc00f04d6b23d4c2fb30529522184d151dc087dc8260405161249a91906126cf565b60405180910390a15050565b600033905090565b6124b6612574565b6124ec576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6124f66124ae565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125685760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161255f919061272b565b60405180910390fd5b612571816121d3565b50565b600061257e6122d2565b60000160089054906101000a900460ff16905090565b6040518061014001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61263a81612627565b811461264557600080fd5b50565b60008135905061265781612631565b92915050565b6000602082840312156126735761267261261d565b5b600061268184828501612648565b91505092915050565b60008115159050919050565b61269f8161268a565b82525050565b60006020820190506126ba6000830184612696565b92915050565b6126c981612627565b82525050565b60006020820190506126e460008301846126c0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612715826126ea565b9050919050565b6127258161270a565b82525050565b6000602082019050612740600083018461271c565b92915050565b600063ffffffff82169050919050565b61275f81612746565b82525050565b600060208201905061277a6000830184612756565b92915050565b61278981612746565b811461279457600080fd5b50565b6000813590506127a681612780565b92915050565b6000602082840312156127c2576127c161261d565b5b60006127d084828501612797565b91505092915050565b6127e28161270a565b81146127ed57600080fd5b50565b6000813590506127ff816127d9565b92915050565b60006020828403121561281b5761281a61261d565b5b6000612829848285016127f0565b91505092915050565b6000819050919050565b600061285761285261284d846126ea565b612832565b6126ea565b9050919050565b60006128698261283c565b9050919050565b600061287b8261285e565b9050919050565b61288b81612870565b82525050565b60006020820190506128a66000830184612882565b92915050565b6128b581612627565b82525050565b6128c48161270a565b82525050565b610140820160008201516128e160008501826128ac565b5060208201516128f460208501826128ac565b50604082015161290760408501826128ac565b50606082015161291a60608501826128ac565b50608082015161292d60808501826128ac565b5060a082015161294060a08501826128ac565b5060c082015161295360c08501826128ac565b5060e082015161296660e08501826128ac565b5061010082015161297b6101008501826128bb565b506101208201516129906101208501826128bb565b50505050565b6000610140820190506129ac60008301846128ca565b92915050565b60006129bd8261285e565b9050919050565b6129cd816129b2565b82525050565b60006020820190506129e860008301846129c4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a41826129f8565b810181811067ffffffffffffffff82111715612a6057612a5f612a09565b5b80604052505050565b6000612a73612613565b9050612a7f8282612a38565b919050565b600067ffffffffffffffff821115612a9f57612a9e612a09565b5b612aa8826129f8565b9050602081019050919050565b82818337600083830152505050565b6000612ad7612ad284612a84565b612a69565b905082815260208101848484011115612af357612af26129f3565b5b612afe848285612ab5565b509392505050565b600082601f830112612b1b57612b1a6129ee565b5b8135612b2b848260208601612ac4565b91505092915050565b600080600060608486031215612b4d57612b4c61261d565b5b6000612b5b868287016127f0565b9350506020612b6c86828701612648565b925050604084013567ffffffffffffffff811115612b8d57612b8c612622565b5b612b9986828701612b06565b9150509250925092565b600080600080600080600060e0888a031215612bc257612bc161261d565b5b6000612bd08a828b016127f0565b9750506020612be18a828b016127f0565b9650506040612bf28a828b016127f0565b9550506060612c038a828b01612648565b9450506080612c148a828b01612797565b93505060a0612c258a828b016127f0565b92505060c0612c368a828b016127f0565b91505092959891949750929550565b6000612c508261285e565b9050919050565b612c6081612c45565b82525050565b6000602082019050612c7b6000830184612c57565b92915050565b6000612c8c8261285e565b9050919050565b612c9c81612c81565b82525050565b6000602082019050612cb76000830184612c93565b92915050565b6000604082019050612cd260008301856126c0565b612cdf60208301846126c0565b9392505050565b600081519050612cf5816127d9565b92915050565b600060208284031215612d1157612d1061261d565b5b6000612d1f84828501612ce6565b91505092915050565b6000604082019050612d3d600083018561271c565b612d4a60208301846126c0565b9392505050565b612d5a8161268a565b8114612d6557600080fd5b50565b600081519050612d7781612d51565b92915050565b600060208284031215612d9357612d9261261d565b5b6000612da184828501612d68565b91505092915050565b600082825260208201905092915050565b50565b6000612dcb600083612daa565b9150612dd682612dbb565b600082019050919050565b600060e082019050612df660008301896126c0565b612e03602083018861271c565b612e10604083018761271c565b612e1d606083018661271c565b612e2a60808301856126c0565b612e3760a0830184612756565b81810360c0830152612e4881612dbe565b9050979650505050505050565b6000604082019050612e6a6000830185612756565b612e776020830184612756565b9392505050565b600080fd5b600081519050612e9281612631565b92915050565b60006101408284031215612eaf57612eae612e7e565b5b612eba610140612a69565b90506000612eca84828501612e83565b6000830152506020612ede84828501612e83565b6020830152506040612ef284828501612e83565b6040830152506060612f0684828501612e83565b6060830152506080612f1a84828501612e83565b60808301525060a0612f2e84828501612e83565b60a08301525060c0612f4284828501612e83565b60c08301525060e0612f5684828501612e83565b60e083015250610100612f6b84828501612ce6565b61010083015250610120612f8184828501612ce6565b6101208301525092915050565b60006101408284031215612fa557612fa461261d565b5b6000612fb384828501612e98565b91505092915050565b6000604082019050612fd160008301856126c0565b612fde6020830184612756565b9392505050565b600060208284031215612ffb57612ffa61261d565b5b600061300984828501612e83565b91505092915050565b600082825260208201905092915050565b7f4465616c65723a20496e73756666696369656e74204d657469732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061307f602283613012565b915061308a82613023565b604082019050919050565b600060208201905081810360008301526130ae81613072565b9050919050565b7f4465616c65723a20417070726f76616c20746f204c6f636b696e67496e666f2060008201527f6661696c65640000000000000000000000000000000000000000000000000000602082015250565b6000613111602683613012565b915061311c826130b5565b604082019050919050565b6000602082019050818103600083015261314081613104565b9050919050565b600081519050919050565b60005b83811015613170578082015181840152602081019050613155565b60008484015250505050565b600061318782613147565b6131918185612daa565b93506131a1818560208601613152565b6131aa816129f8565b840191505092915050565b60006080820190506131ca600083018761271c565b6131d7602083018661271c565b6131e460408301856126c0565b81810360608301526131f6818461317c565b905095945050505050565b600060408201905061321660008301856126c0565b6132236020830184612696565b9392505050565b7f4465616c65723a207a65726f2061646472657373000000000000000000000000600082015250565b6000613260601483613012565b915061326b8261322a565b602082019050919050565b6000602082019050818103600083015261328f81613253565b9050919050565b60006132a18261270a565b9050919050565b6132b181613296565b81146132bc57600080fd5b50565b6000815190506132ce816132a8565b92915050565b6000602082840312156132ea576132e961261d565b5b60006132f8848285016132bf565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061333a61333561333084613301565b612832565b61330b565b9050919050565b61334a8161331f565b82525050565b60006020820190506133656000830184613341565b92915050565b7f4465616c65723a206e6f206163746976652073657175656e6365720000000000600082015250565b60006133a1601b83613012565b91506133ac8261336b565b602082019050919050565b600060208201905081810360008301526133d081613394565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061341182612627565b915061341c83612627565b9250828201905080821115613434576134336133d7565b5b92915050565b600061344582612627565b915061345083612627565b9250828203905081811115613468576134676133d7565b5b92915050565b600060608201905061348360008301866126c0565b61349060208301856126c0565b61349d6040830184612696565b949350505050565b6000819050919050565b60006134ca6134c56134c0846134a5565b612832565b612746565b9050919050565b6134da816134af565b82525050565b60006060820190506134f560008301866134d1565b61350260208301856126c0565b61350f60408301846126c0565b949350505050565b600061352282612746565b915063ffffffff8203613538576135376133d7565b5b600182019050919050565b600060808201905061355860008301876126c0565b613565602083018661271c565b8181036040830152613577818561317c565b90506135866060830184612756565b9594505050505056fea26469706673582212207dd67cea66b2d951eda917dca952200ef2b9d302f461ac1e89fff75044c5c1df64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC53B573D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE92D61E5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE92D61E5 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0xF7CEE36A EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xF87B7A3E EQ PUSH2 0x6EF JUMPI DUP1 PUSH4 0xFEAFAA6B EQ PUSH2 0x718 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xC53B573D EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xD6AE3CD5 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xE5974554 EQ PUSH2 0x645 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA69DF4B5 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xAF70CBA5 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xB699CE5F EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xC3B550C8 EQ PUSH2 0x5A6 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8DB8AD88 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x97EC19BE EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x9E935704 EQ PUSH2 0x51F JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x76D9F95C EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x7CA4F8B0 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x85D1E2B8 EQ PUSH2 0x473 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3CBB6979 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x43C82CF7 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x457CB586 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x56891412 EQ PUSH2 0x3DB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x1ABDAF6A GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x1ABDAF6A EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x33BEC7E7 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x3B4C46D0 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0x31F JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x182A6DA EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x4A78FCA EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x80E1E4E EQ PUSH2 0x265 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x265D JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x265D JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x27AC JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x27AC JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0xDAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DE PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x509 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x552 PUSH2 0xF33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH2 0x14EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BB PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D9 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62F PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65A PUSH2 0x1F5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2C66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x685 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0x1FA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D9 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x716 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH2 0x2052 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x720 PUSH2 0x209E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72A PUSH2 0x214C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x441A3E70 PUSH1 0xD SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP3 SWAP2 SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE78CEA92 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC01E1BD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP3 SWAP2 SWAP1 PUSH2 0x2D28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95E SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEF808BE2 CALLVALUE PUSH1 0x5 SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC01E1BD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x56EFF267 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6EF7A26D50CEC3F1A210BED887413D426C9C13575A17872C54E00C4287AC5DCE DUP4 PUSH1 0x40 MLOAD PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x4042B09A75E5A67C8CC2A57E00DE6D29FB5202B7207AFBA895EB8B5CC3E2179E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC89 SWAP3 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xC9D PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD25 PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA6 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB7 PUSH2 0x214C JUMP JUMPDEST PUSH2 0xDC1 PUSH1 0x0 PUSH2 0x21D3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDCB PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BA7CCFF PUSH1 0xD SLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH2 0x140 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x2F8E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEA6 PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xF3B PUSH2 0x214C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x262C0E66 CALLVALUE PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAD SWAP3 SWAP2 SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xE PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBAC99876B6A1C26412460D61D913235A30F0EA99585FFCFD53C0FAAE6ED33134 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1107 SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1143 SWAP1 PUSH2 0x3095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122C SWAP3 SWAP2 SWAP1 PUSH2 0x2D28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x124B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP1 PUSH2 0x3127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9AD42030 PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1353 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x136D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1381 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBEB26755 PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB1E87A33084279CB2BFF2D1271034CF695F539EE73BBD934D1625703D585D84A DUP5 PUSH1 0xE PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x14DD SWAP3 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F5 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1543 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1578 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1586 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x160D JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1677 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16B0 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x16E9 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1722 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1758 SWAP1 PUSH2 0x3276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176A CALLER PUSH2 0x22FA JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2FDCC17 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187D SWAP2 SWAP1 PUSH2 0x32D4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CB747BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1908 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192C SWAP2 SWAP1 PUSH2 0x2CFB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1A69 SWAP2 SWAP1 PUSH2 0x3350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEE SWAP1 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6C0B3E46 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B8A SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C2A SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1ED6 JUMPI PUSH1 0x0 PUSH2 0x1C49 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD SWAP2 POP SWAP2 POP DUP2 DUP6 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP8 DUP3 LT PUSH2 0x1C7A JUMPI PUSH1 0x0 PUSH2 0x1C87 JUMP JUMPDEST DUP2 DUP9 PUSH2 0x1C86 SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C95 DUP3 DUP10 PUSH2 0x230E JUMP JUMPDEST SWAP1 POP DUP1 DUP9 PUSH2 0x1CA3 SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST SWAP8 POP PUSH1 0x0 DUP5 DUP3 PUSH2 0x1CB3 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1CC8 JUMPI POP POP POP POP POP POP PUSH2 0x1EC3 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP11 POP PUSH1 0x0 DUP11 DUP3 DUP7 PUSH2 0x1CE5 SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST GT SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1CF5 JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST ISZERO PUSH2 0x1DD8 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17396687 PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6B SWAP3 SWAP2 SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xD SLOAD PUSH32 0x630AF8B49BB398089A74EACDB08106C528436090BDB35D7302152DC5117DF9BD DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DCF SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1DE5 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH2 0x1EBB JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x15BB180 PUSH1 0xD SLOAD DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x346E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB8AAFDEC9BACDC76BFEA3C330063C391A2904D4F91E71F97A91534F3C8CE4AB5 PUSH1 0x0 DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1EB2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1ECE SWAP1 PUSH2 0x3517 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C30 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1F03 JUMPI PUSH2 0x1EE9 DUP2 PUSH2 0x2327 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EFB SWAP2 SWAP1 PUSH2 0x3406 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x1E2AED425906C5ED1AC5AFF65E04A30ADDA54675483414997C879CA7F92A2A57 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1F33 SWAP2 SWAP1 PUSH2 0x26A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FAE PUSH2 0x214C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2020 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2017 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2029 DUP2 PUSH2 0x21D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x205A PUSH2 0x214C JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x20A6 PUSH2 0x214C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DDC74DE CALLVALUE PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2118 SWAP3 SWAP2 SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2154 PUSH2 0x24A6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2172 PUSH2 0xE9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21D1 JUMPI PUSH2 0x2195 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C8 SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DD PUSH2 0x22AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2302 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x230B DUP2 PUSH2 0x24EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x231D JUMPI DUP2 PUSH2 0x231F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEB82AFB3 PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2342 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x44DD5ED6 CALLVALUE PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2439 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3543 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2466 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0xD644E527C1896057CE642ADFBC00F04D6B23D4C2FB30529522184D151DC087DC DUP3 PUSH1 0x40 MLOAD PUSH2 0x249A SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24B6 PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x24EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2568 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255F SWAP2 SWAP1 PUSH2 0x272B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x21D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257E PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x263A DUP2 PUSH2 0x2627 JUMP JUMPDEST DUP2 EQ PUSH2 0x2645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2657 DUP2 PUSH2 0x2631 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2673 JUMPI PUSH2 0x2672 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2681 DUP5 DUP3 DUP6 ADD PUSH2 0x2648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269F DUP2 PUSH2 0x268A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26C9 DUP2 PUSH2 0x2627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2715 DUP3 PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2725 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2740 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x271C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x275F DUP2 PUSH2 0x2746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x277A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2789 DUP2 PUSH2 0x2746 JUMP JUMPDEST DUP2 EQ PUSH2 0x2794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27A6 DUP2 PUSH2 0x2780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C2 JUMPI PUSH2 0x27C1 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E2 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP2 EQ PUSH2 0x27ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27FF DUP2 PUSH2 0x27D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x281B JUMPI PUSH2 0x281A PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2829 DUP5 DUP3 DUP6 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2857 PUSH2 0x2852 PUSH2 0x284D DUP5 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2869 DUP3 PUSH2 0x283C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287B DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288B DUP2 PUSH2 0x2870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28B5 DUP2 PUSH2 0x2627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28C4 DUP2 PUSH2 0x270A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x28E1 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x28F4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2907 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x291A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x292D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2940 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2953 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2966 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x28AC JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x297B PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x28BB JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2990 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x28BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x29AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BD DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29CD DUP2 PUSH2 0x29B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A41 DUP3 PUSH2 0x29F8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A5F PUSH2 0x2A09 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A73 PUSH2 0x2613 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A7F DUP3 DUP3 PUSH2 0x2A38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A9F JUMPI PUSH2 0x2A9E PUSH2 0x2A09 JUMP JUMPDEST JUMPDEST PUSH2 0x2AA8 DUP3 PUSH2 0x29F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 PUSH2 0x2AD2 DUP5 PUSH2 0x2A84 JUMP JUMPDEST PUSH2 0x2A69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AF3 JUMPI PUSH2 0x2AF2 PUSH2 0x29F3 JUMP JUMPDEST JUMPDEST PUSH2 0x2AFE DUP5 DUP3 DUP6 PUSH2 0x2AB5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B1B JUMPI PUSH2 0x2B1A PUSH2 0x29EE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP7 DUP3 DUP8 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B6C DUP7 DUP3 DUP8 ADD PUSH2 0x2648 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B8D JUMPI PUSH2 0x2B8C PUSH2 0x2622 JUMP JUMPDEST JUMPDEST PUSH2 0x2B99 DUP7 DUP3 DUP8 ADD PUSH2 0x2B06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BC2 JUMPI PUSH2 0x2BC1 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD0 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2BE1 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2BF2 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2C03 DUP11 DUP3 DUP12 ADD PUSH2 0x2648 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2C14 DUP11 DUP3 DUP12 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2C25 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2C36 DUP11 DUP3 DUP12 ADD PUSH2 0x27F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C50 DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C60 DUP2 PUSH2 0x2C45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C DUP3 PUSH2 0x285E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9C DUP2 PUSH2 0x2C81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CD2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2CDF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CF5 DUP2 PUSH2 0x27D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D11 JUMPI PUSH2 0x2D10 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1F DUP5 DUP3 DUP6 ADD PUSH2 0x2CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D3D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2D4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D5A DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x2D65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D77 DUP2 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D93 JUMPI PUSH2 0x2D92 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DA1 DUP5 DUP3 DUP6 ADD PUSH2 0x2D68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DCB PUSH1 0x0 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD6 DUP3 PUSH2 0x2DBB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2DF6 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2E03 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2E10 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2E1D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x2E2A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2E37 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E48 DUP2 PUSH2 0x2DBE JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E6A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2756 JUMP JUMPDEST PUSH2 0x2E77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E92 DUP2 PUSH2 0x2631 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x2E7E JUMP JUMPDEST JUMPDEST PUSH2 0x2EBA PUSH2 0x140 PUSH2 0x2A69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2ECA DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2EDE DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x2EF2 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2F06 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x2F1A DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x2F2E DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x2F42 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x2F56 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x2F6B DUP5 DUP3 DUP6 ADD PUSH2 0x2CE6 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x2F81 DUP5 DUP3 DUP6 ADD PUSH2 0x2CE6 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA5 JUMPI PUSH2 0x2FA4 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FB3 DUP5 DUP3 DUP6 ADD PUSH2 0x2E98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FD1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x2FDE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FFB JUMPI PUSH2 0x2FFA PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3009 DUP5 DUP3 DUP6 ADD PUSH2 0x2E83 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A20496E73756666696369656E74204D657469732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x307F PUSH1 0x22 DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x308A DUP3 PUSH2 0x3023 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30AE DUP2 PUSH2 0x3072 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465616C65723A20417070726F76616C20746F204C6F636B696E67496E666F20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6661696C65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3111 PUSH1 0x26 DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x311C DUP3 PUSH2 0x30B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3140 DUP2 PUSH2 0x3104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3170 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3155 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3187 DUP3 PUSH2 0x3147 JUMP JUMPDEST PUSH2 0x3191 DUP2 DUP6 PUSH2 0x2DAA JUMP JUMPDEST SWAP4 POP PUSH2 0x31A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3152 JUMP JUMPDEST PUSH2 0x31AA DUP2 PUSH2 0x29F8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x31CA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x31D7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x271C JUMP JUMPDEST PUSH2 0x31E4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x31F6 DUP2 DUP5 PUSH2 0x317C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3216 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x3223 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2696 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A207A65726F2061646472657373000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3260 PUSH1 0x14 DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x326B DUP3 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328F DUP2 PUSH2 0x3253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A1 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32B1 DUP2 PUSH2 0x3296 JUMP JUMPDEST DUP2 EQ PUSH2 0x32BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32CE DUP2 PUSH2 0x32A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32EA JUMPI PUSH2 0x32E9 PUSH2 0x261D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32F8 DUP5 DUP3 DUP6 ADD PUSH2 0x32BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333A PUSH2 0x3335 PUSH2 0x3330 DUP5 PUSH2 0x3301 JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x330B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x334A DUP2 PUSH2 0x331F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3365 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465616C65723A206E6F206163746976652073657175656E6365720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A1 PUSH1 0x1B DUP4 PUSH2 0x3012 JUMP JUMPDEST SWAP2 POP PUSH2 0x33AC DUP3 PUSH2 0x336B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33D0 DUP2 PUSH2 0x3394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3411 DUP3 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x341C DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3434 JUMPI PUSH2 0x3433 PUSH2 0x33D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3445 DUP3 PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP PUSH2 0x3450 DUP4 PUSH2 0x2627 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3468 JUMPI PUSH2 0x3467 PUSH2 0x33D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3483 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x3490 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x349D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2696 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CA PUSH2 0x34C5 PUSH2 0x34C0 DUP5 PUSH2 0x34A5 JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x2746 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34DA DUP2 PUSH2 0x34AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x34F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x34D1 JUMP JUMPDEST PUSH2 0x3502 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x350F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x26C0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3522 DUP3 PUSH2 0x2746 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x3538 JUMPI PUSH2 0x3537 PUSH2 0x33D7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3558 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26C0 JUMP JUMPDEST PUSH2 0x3565 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x271C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3577 DUP2 DUP6 PUSH2 0x317C JUMP JUMPDEST SWAP1 POP PUSH2 0x3586 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2756 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xD67CEA66B2D951EDA917DCA952200EF2B9D302F461AC1E89FFF75044C5C1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"702:11801:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11575:525;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3458:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3390:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2759:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3140:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10697:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12234:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2583:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3297:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12362:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2940:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10951:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155::0;;;;;;;;;;;;;:::i;:::-;;7526:140:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3235:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2261:37:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3482:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7055:193;;;:::i;:::-;;5936:1047;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4847:830;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3422:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8089:2442;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3356:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2668:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2338:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2502:31:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12121:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7392:128;;;:::i;:::-;;11575:525;2334:13:0;:11;:13::i;:::-;11657:11:11::1;;;;;;;;;;;:20;;;11678:11;;11691:6;11657:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11709:14;11739:11;;;;;;;;;;;11726:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11709:51;;11790:11;;;;;;;;;;;11777:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11770:51;;;11822:6;11830;11770:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11862:6;11847:46;;;11901:9;11912;;11936:11;;;;;;;;;;;11923:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11973:11;;;;;;;;;;;11960:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11997:15;;;;;;;;;;;12014:6;12022:5;;;;;;;;;;;11847:185;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;12070:15;;;;;;;;;;;12047:46;;;12086:6;12047:46;;;;;;:::i;:::-;;;;;;;;11647:453;11575:525:::0;:::o;3458:18::-;;;;;;;;;;;;;:::o;3390:26::-;;;;:::o;2759:23::-;;;;;;;;;;;;;:::o;3140:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10697:149::-;2334:13:0;:11;:13::i;:::-;10759:11:11::1;10773:5;;;;;;;;;;;10759:19;;10796:6;10788:5;;:14;;;;;;;;;;;;;;;;;;10817:22;10826:4;10832:6;10817:22;;;;;;;:::i;:::-;;;;;;;;10749:97;10697:149:::0;:::o;12234:122::-;2334:13:0;:11;:13::i;:::-;12333:16:11::1;12315:15;;:34;;;;;;;;;;;;;;;;;;12234:122:::0;:::o;2583:38::-;;;;;;;;;;;;;:::o;3297:19::-;;;;;;;;;;;;;:::o;12362:134::-;2334:13:0;:11;:13::i;:::-;12470:19:11::1;12449:18;;:40;;;;;;;;;;;;;;;;;;12362:134:::0;:::o;2940:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;10951:101::-;10997:7;11023:15;:13;:15::i;:::-;:22;;;11016:29;;10951:101;:::o;3155::0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;7526:140:11:-;7572:33;;:::i;:::-;7624:11;;;;;;;;;;;:22;;;7647:11;;7624:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7617:42;;7526:140;:::o;3235:25::-;;;;:::o;2414:31::-;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2261:37:11:-;;;;;;;;;;;;:::o;3482:30::-;;;;;;;;;;;;;:::o;3044:33::-;;;;;;;;;;;;;:::o;7055:193::-;2334:13:0;:11;:13::i;:::-;7110:11:11::1;;;;;;;;;;;:18;;;7136:9;7147:11;;7160:5;;;;;;;;;;;7110:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;7185:5;7176:6;;:14;;;;;;;;;;;;;;;;;;7225:15;;;;;;;;;;;7205:36;;;;;;;;;;;;7055:193::o:0;5936:1047::-;2334:13:0;:11;:13::i;:::-;6152:21:11::1;6176:5;;;;;;;;;;;:15;;;6200:4;6176:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6152:54;;6241:7;6224:13;:24;;6216:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6316:16;6298:15;;:34;;;;;;;;;;;;;;;;;;6448:5;;;;;;;;;;;:13;;;6470:11;;;;;;;;;;;6484:17;6448:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6427:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;6657:11;;;;;;;;;;;:35;;;6693:15;;;;;;;;;;;6709:8;;;;;;;;;;;6719:7;6728:13;6657:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6836:11;;;;;;;;;;;:22;;;6859:15;;;;;;;;;;;6836:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6822:11;:53;;;;6894:4;6885:6;;:13;;;;;;;;;;;;;;;;;;6943:15;;;;;;;;;;;6913:63;;;6960:7;6969:6;;;;;;;;;;;6913:63;;;;;;;:::i;:::-;;;;;;;;6073:910;5936:1047:::0;;;:::o;4847:830::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;5136:1:11::1;5118:20;;:6;:20;;;;:50;;;;;5166:1;5142:26;;:12;:26;;;;5118:50;:77;;;;;5193:1;5172:23;;:9;:23;;;;5118:77;:104;;;;;5220:1;5199:23;;:9;:23;;;;5118:104;:141;;;;;5257:1;5226:33;;:19;:33;;;;5118:141;5109:175;;;;;;;;;;;;:::i;:::-;;;;;;;;;5294:26;5309:10;5294:14;:26::i;:::-;5345:6;5330:5;;:22;;;;;;;;;;;;;;;;;;5389:12;5362:11;;:40;;;;;;;;;;;;;;;;;;5426:11;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5412:11;;:34;;;;;;;;;;;;;;;;;;5510:9;5490:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5456:9;;:77;;;;;;;;;;;;;;;;;;5555:10;5543:9;:22;;;;5583:6;5575:5;;:14;;;;;;;;;;;;;;;;;;5610:9;5599:8;;:20;;;;;;;;;;;;;;;;;;5650:19;5629:18;;:40;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;4847:830:11;;;;;;;:::o;3422:30::-;;;;;;;;;;;;;:::o;8089:2442::-;8133:22;8175:6;;;;;;;;;;;8167:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;8224:12;8252:11;;;;;;;;;;;8239:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8224:50;;8284:27;8314:5;;;;;;;;;;;:15;;;8338:4;8314:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8284:60;;8354:20;8393:8;8388:1794;8411:1;8407;:5;;;8388:1794;;;8433:37;8473:15;:13;:15::i;:::-;8433:55;;8503:14;8519;8538:3;:10;;;8550:3;:10;;;8502:59;;;;8591:6;8575:22;;;;;:::i;:::-;;;8745:17;8774:7;8765:6;:16;:39;;8803:1;8765:39;;;8794:6;8784:7;:16;;;;:::i;:::-;8765:39;8745:59;;8943:18;8964:40;8973:9;8984:19;8964:8;:40::i;:::-;8943:61;;9153:10;9130:33;;;;;:::i;:::-;;;9280:21;9317:6;9304:10;:19;;;;:::i;:::-;9280:43;;9358:1;9341:13;:18;9337:65;;9379:8;;;;;;;;9337:65;9434:13;9416:31;;;;;:::i;:::-;;;9590:21;9639:7;9623:13;9614:6;:22;;;;:::i;:::-;:32;9590:56;;9664:16;:30;;;;;9693:1;9684:6;:10;9664:30;9660:176;;;9714:11;;;;;;;;;;;:27;;;9742:11;;9755:5;;;;;;;;;;;9714:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9801:11;;9784:37;9814:6;9784:37;;;;;;:::i;:::-;;;;;;;;9660:176;9991:16;9990:17;:35;;;;10024:1;10011:10;:14;9990:35;9986:186;;;10045:11;;;;;;;;;;;:18;;;10064:11;;10077:10;10089:4;10045:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10117:40;10135:1;10138:10;10150:6;10117:40;;;;;;;;:::i;:::-;;;;;;;;9986:186;8419:1763;;;;;;;8388:1794;8414:3;;;;;:::i;:::-;;;;8388:1794;;;;10389:1;10374:12;:16;10370:114;;;10406:27;10420:12;10406:13;:27::i;:::-;10461:12;10447:10;;:26;;;;;;;:::i;:::-;;;;;;;;10370:114;10499:25;10519:4;10499:25;;;;;;:::i;:::-;;;;;;;;8157:2374;;;8089:2442;:::o;3356:27::-;;;;;;;;;;;;;:::o;2668:24::-;;;;:::o;2338:19::-;;;;;;;;;;;;;:::o;2854:33::-;;;;;;;;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2502:31:11:-;;;;;;;;;;;;;:::o;12121:107::-;2334:13:0;:11;:13::i;:::-;12205:16:11::1;12194:8;;:27;;;;;;;;;;;;;;;;;;12121:107:::0;:::o;7392:128::-;2334:13:0;:11;:13::i;:::-;7452:11:11::1;;;;;;;;;;;:23;;;7483:9;7494:11;;7507:5;;;;;;;;;;;7452:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;7392:128::o:0;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2557:104:10:-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;2649:1;2641:13;2634:20;;2557:104;;;;:::o;11133:285:11:-;11191:20;11237:34;;;11273:6;11214:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11191:89;;11290:9;;;;;;;;;;;:31;;;11328:9;11339;;11350:8;;;;;;;;;;;11360:7;11369:5;;;;;;;;;;;11290:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11390:21;11404:6;11390:21;;;;;;:::i;:::-;;;;;;;;11181:237;11133:285;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:20:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:118::-;1539:24;1557:5;1539:24;:::i;:::-;1534:3;1527:37;1452:118;;:::o;1576:222::-;1669:4;1707:2;1696:9;1692:18;1684:26;;1720:71;1788:1;1777:9;1773:17;1764:6;1720:71;:::i;:::-;1576:222;;;;:::o;1804:126::-;1841:7;1881:42;1874:5;1870:54;1859:65;;1804:126;;;:::o;1936:96::-;1973:7;2002:24;2020:5;2002:24;:::i;:::-;1991:35;;1936:96;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:93::-;2426:7;2466:10;2459:5;2455:22;2444:33;;2390:93;;;:::o;2489:115::-;2574:23;2591:5;2574:23;:::i;:::-;2569:3;2562:36;2489:115;;:::o;2610:218::-;2701:4;2739:2;2728:9;2724:18;2716:26;;2752:69;2818:1;2807:9;2803:17;2794:6;2752:69;:::i;:::-;2610:218;;;;:::o;2834:120::-;2906:23;2923:5;2906:23;:::i;:::-;2899:5;2896:34;2886:62;;2944:1;2941;2934:12;2886:62;2834:120;:::o;2960:137::-;3005:5;3043:6;3030:20;3021:29;;3059:32;3085:5;3059:32;:::i;:::-;2960:137;;;;:::o;3103:327::-;3161:6;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3336:1;3361:52;3405:7;3396:6;3385:9;3381:22;3361:52;:::i;:::-;3351:62;;3307:116;3103:327;;;;:::o;3436:122::-;3509:24;3527:5;3509:24;:::i;:::-;3502:5;3499:35;3489:63;;3548:1;3545;3538:12;3489:63;3436:122;:::o;3564:139::-;3610:5;3648:6;3635:20;3626:29;;3664:33;3691:5;3664:33;:::i;:::-;3564:139;;;;:::o;3709:329::-;3768:6;3817:2;3805:9;3796:7;3792:23;3788:32;3785:119;;;3823:79;;:::i;:::-;3785:119;3943:1;3968:53;4013:7;4004:6;3993:9;3989:22;3968:53;:::i;:::-;3958:63;;3914:117;3709:329;;;;:::o;4044:60::-;4072:3;4093:5;4086:12;;4044:60;;;:::o;4110:142::-;4160:9;4193:53;4211:34;4220:24;4238:5;4220:24;:::i;:::-;4211:34;:::i;:::-;4193:53;:::i;:::-;4180:66;;4110:142;;;:::o;4258:126::-;4308:9;4341:37;4372:5;4341:37;:::i;:::-;4328:50;;4258:126;;;:::o;4390:156::-;4470:9;4503:37;4534:5;4503:37;:::i;:::-;4490:50;;4390:156;;;:::o;4552:191::-;4669:67;4730:5;4669:67;:::i;:::-;4664:3;4657:80;4552:191;;:::o;4749:282::-;4872:4;4910:2;4899:9;4895:18;4887:26;;4923:101;5021:1;5010:9;5006:17;4997:6;4923:101;:::i;:::-;4749:282;;;;:::o;5037:108::-;5114:24;5132:5;5114:24;:::i;:::-;5109:3;5102:37;5037:108;;:::o;5151:::-;5228:24;5246:5;5228:24;:::i;:::-;5223:3;5216:37;5151:108;;:::o;5343:1984::-;5502:6;5497:3;5493:16;5593:4;5586:5;5582:16;5576:23;5612:63;5669:4;5664:3;5660:14;5646:12;5612:63;:::i;:::-;5519:166;5769:4;5762:5;5758:16;5752:23;5788:63;5845:4;5840:3;5836:14;5822:12;5788:63;:::i;:::-;5695:166;5954:4;5947:5;5943:16;5937:23;5973:63;6030:4;6025:3;6021:14;6007:12;5973:63;:::i;:::-;5871:175;6136:4;6129:5;6125:16;6119:23;6155:63;6212:4;6207:3;6203:14;6189:12;6155:63;:::i;:::-;6056:172;6323:4;6316:5;6312:16;6306:23;6342:63;6399:4;6394:3;6390:14;6376:12;6342:63;:::i;:::-;6238:177;6509:4;6502:5;6498:16;6492:23;6528:63;6585:4;6580:3;6576:14;6562:12;6528:63;:::i;:::-;6425:176;6694:4;6687:5;6683:16;6677:23;6713:63;6770:4;6765:3;6761:14;6747:12;6713:63;:::i;:::-;6611:175;6869:4;6862:5;6858:16;6852:23;6888:63;6945:4;6940:3;6936:14;6922:12;6888:63;:::i;:::-;6796:165;7044:6;7037:5;7033:18;7027:25;7065:65;7122:6;7117:3;7113:16;7099:12;7065:65;:::i;:::-;6971:169;7224:6;7217:5;7213:18;7207:25;7245:65;7302:6;7297:3;7293:16;7279:12;7245:65;:::i;:::-;7150:170;5471:1856;5343:1984;;:::o;7333:347::-;7488:4;7526:3;7515:9;7511:19;7503:27;;7540:133;7670:1;7659:9;7655:17;7646:6;7540:133;:::i;:::-;7333:347;;;;:::o;7686:147::-;7757:9;7790:37;7821:5;7790:37;:::i;:::-;7777:50;;7686:147;;;:::o;7839:173::-;7947:58;7999:5;7947:58;:::i;:::-;7942:3;7935:71;7839:173;;:::o;8018:264::-;8132:4;8170:2;8159:9;8155:18;8147:26;;8183:92;8272:1;8261:9;8257:17;8248:6;8183:92;:::i;:::-;8018:264;;;;:::o;8288:117::-;8397:1;8394;8387:12;8411:117;8520:1;8517;8510:12;8534:102;8575:6;8626:2;8622:7;8617:2;8610:5;8606:14;8602:28;8592:38;;8534:102;;;:::o;8642:180::-;8690:77;8687:1;8680:88;8787:4;8784:1;8777:15;8811:4;8808:1;8801:15;8828:281;8911:27;8933:4;8911:27;:::i;:::-;8903:6;8899:40;9041:6;9029:10;9026:22;9005:18;8993:10;8990:34;8987:62;8984:88;;;9052:18;;:::i;:::-;8984:88;9092:10;9088:2;9081:22;8871:238;8828:281;;:::o;9115:129::-;9149:6;9176:20;;:::i;:::-;9166:30;;9205:33;9233:4;9225:6;9205:33;:::i;:::-;9115:129;;;:::o;9250:307::-;9311:4;9401:18;9393:6;9390:30;9387:56;;;9423:18;;:::i;:::-;9387:56;9461:29;9483:6;9461:29;:::i;:::-;9453:37;;9545:4;9539;9535:15;9527:23;;9250:307;;;:::o;9563:146::-;9660:6;9655:3;9650;9637:30;9701:1;9692:6;9687:3;9683:16;9676:27;9563:146;;;:::o;9715:423::-;9792:5;9817:65;9833:48;9874:6;9833:48;:::i;:::-;9817:65;:::i;:::-;9808:74;;9905:6;9898:5;9891:21;9943:4;9936:5;9932:16;9981:3;9972:6;9967:3;9963:16;9960:25;9957:112;;;9988:79;;:::i;:::-;9957:112;10078:54;10125:6;10120:3;10115;10078:54;:::i;:::-;9798:340;9715:423;;;;;:::o;10157:338::-;10212:5;10261:3;10254:4;10246:6;10242:17;10238:27;10228:122;;10269:79;;:::i;:::-;10228:122;10386:6;10373:20;10411:78;10485:3;10477:6;10470:4;10462:6;10458:17;10411:78;:::i;:::-;10402:87;;10218:277;10157:338;;;;:::o;10501:797::-;10587:6;10595;10603;10652:2;10640:9;10631:7;10627:23;10623:32;10620:119;;;10658:79;;:::i;:::-;10620:119;10778:1;10803:53;10848:7;10839:6;10828:9;10824:22;10803:53;:::i;:::-;10793:63;;10749:117;10905:2;10931:53;10976:7;10967:6;10956:9;10952:22;10931:53;:::i;:::-;10921:63;;10876:118;11061:2;11050:9;11046:18;11033:32;11092:18;11084:6;11081:30;11078:117;;;11114:79;;:::i;:::-;11078:117;11219:62;11273:7;11264:6;11253:9;11249:22;11219:62;:::i;:::-;11209:72;;11004:287;10501:797;;;;;:::o;11304:1201::-;11416:6;11424;11432;11440;11448;11456;11464;11513:3;11501:9;11492:7;11488:23;11484:33;11481:120;;;11520:79;;:::i;:::-;11481:120;11640:1;11665:53;11710:7;11701:6;11690:9;11686:22;11665:53;:::i;:::-;11655:63;;11611:117;11767:2;11793:53;11838:7;11829:6;11818:9;11814:22;11793:53;:::i;:::-;11783:63;;11738:118;11895:2;11921:53;11966:7;11957:6;11946:9;11942:22;11921:53;:::i;:::-;11911:63;;11866:118;12023:2;12049:53;12094:7;12085:6;12074:9;12070:22;12049:53;:::i;:::-;12039:63;;11994:118;12151:3;12178:52;12222:7;12213:6;12202:9;12198:22;12178:52;:::i;:::-;12168:62;;12122:118;12279:3;12306:53;12351:7;12342:6;12331:9;12327:22;12306:53;:::i;:::-;12296:63;;12250:119;12408:3;12435:53;12480:7;12471:6;12460:9;12456:22;12435:53;:::i;:::-;12425:63;;12379:119;11304:1201;;;;;;;;;;:::o;12511:140::-;12575:9;12608:37;12639:5;12608:37;:::i;:::-;12595:50;;12511:140;;;:::o;12657:159::-;12758:51;12803:5;12758:51;:::i;:::-;12753:3;12746:64;12657:159;;:::o;12822:250::-;12929:4;12967:2;12956:9;12952:18;12944:26;;12980:85;13062:1;13051:9;13047:17;13038:6;12980:85;:::i;:::-;12822:250;;;;:::o;13078:147::-;13149:9;13182:37;13213:5;13182:37;:::i;:::-;13169:50;;13078:147;;;:::o;13231:173::-;13339:58;13391:5;13339:58;:::i;:::-;13334:3;13327:71;13231:173;;:::o;13410:264::-;13524:4;13562:2;13551:9;13547:18;13539:26;;13575:92;13664:1;13653:9;13649:17;13640:6;13575:92;:::i;:::-;13410:264;;;;:::o;13680:332::-;13801:4;13839:2;13828:9;13824:18;13816:26;;13852:71;13920:1;13909:9;13905:17;13896:6;13852:71;:::i;:::-;13933:72;14001:2;13990:9;13986:18;13977:6;13933:72;:::i;:::-;13680:332;;;;;:::o;14018:143::-;14075:5;14106:6;14100:13;14091:22;;14122:33;14149:5;14122:33;:::i;:::-;14018:143;;;;:::o;14167:351::-;14237:6;14286:2;14274:9;14265:7;14261:23;14257:32;14254:119;;;14292:79;;:::i;:::-;14254:119;14412:1;14437:64;14493:7;14484:6;14473:9;14469:22;14437:64;:::i;:::-;14427:74;;14383:128;14167:351;;;;:::o;14524:332::-;14645:4;14683:2;14672:9;14668:18;14660:26;;14696:71;14764:1;14753:9;14749:17;14740:6;14696:71;:::i;:::-;14777:72;14845:2;14834:9;14830:18;14821:6;14777:72;:::i;:::-;14524:332;;;;;:::o;14862:116::-;14932:21;14947:5;14932:21;:::i;:::-;14925:5;14922:32;14912:60;;14968:1;14965;14958:12;14912:60;14862:116;:::o;14984:137::-;15038:5;15069:6;15063:13;15054:22;;15085:30;15109:5;15085:30;:::i;:::-;14984:137;;;;:::o;15127:345::-;15194:6;15243:2;15231:9;15222:7;15218:23;15214:32;15211:119;;;15249:79;;:::i;:::-;15211:119;15369:1;15394:61;15447:7;15438:6;15427:9;15423:22;15394:61;:::i;:::-;15384:71;;15340:125;15127:345;;;;:::o;15478:168::-;15561:11;15595:6;15590:3;15583:19;15635:4;15630:3;15626:14;15611:29;;15478:168;;;;:::o;15652:114::-;;:::o;15772:362::-;15913:3;15934:65;15997:1;15992:3;15934:65;:::i;:::-;15927:72;;16008:93;16097:3;16008:93;:::i;:::-;16126:1;16121:3;16117:11;16110:18;;15772:362;;;:::o;16140:1077::-;16471:4;16509:3;16498:9;16494:19;16486:27;;16523:71;16591:1;16580:9;16576:17;16567:6;16523:71;:::i;:::-;16604:72;16672:2;16661:9;16657:18;16648:6;16604:72;:::i;:::-;16686;16754:2;16743:9;16739:18;16730:6;16686:72;:::i;:::-;16768;16836:2;16825:9;16821:18;16812:6;16768:72;:::i;:::-;16850:73;16918:3;16907:9;16903:19;16894:6;16850:73;:::i;:::-;16933:71;16999:3;16988:9;16984:19;16975:6;16933:71;:::i;:::-;17052:9;17046:4;17042:20;17036:3;17025:9;17021:19;17014:49;17080:130;17205:4;17080:130;:::i;:::-;17072:138;;16140:1077;;;;;;;;;:::o;17223:324::-;17340:4;17378:2;17367:9;17363:18;17355:26;;17391:69;17457:1;17446:9;17442:17;17433:6;17391:69;:::i;:::-;17470:70;17536:2;17525:9;17521:18;17512:6;17470:70;:::i;:::-;17223:324;;;;;:::o;17553:117::-;17662:1;17659;17652:12;17799:143;17856:5;17887:6;17881:13;17872:22;;17903:33;17930:5;17903:33;:::i;:::-;17799:143;;;;:::o;17989:2066::-;18080:5;18124:6;18112:9;18107:3;18103:19;18099:32;18096:119;;;18134:79;;:::i;:::-;18096:119;18233:23;18249:6;18233:23;:::i;:::-;18224:32;;18317:1;18357:60;18413:3;18404:6;18393:9;18389:22;18357:60;:::i;:::-;18350:4;18343:5;18339:16;18332:86;18266:163;18490:2;18531:60;18587:3;18578:6;18567:9;18563:22;18531:60;:::i;:::-;18524:4;18517:5;18513:16;18506:86;18439:164;18673:2;18714:60;18770:3;18761:6;18750:9;18746:22;18714:60;:::i;:::-;18707:4;18700:5;18696:16;18689:86;18613:173;18853:2;18894:60;18950:3;18941:6;18930:9;18926:22;18894:60;:::i;:::-;18887:4;18880:5;18876:16;18869:86;18796:170;19038:3;19080:60;19136:3;19127:6;19116:9;19112:22;19080:60;:::i;:::-;19073:4;19066:5;19062:16;19055:86;18976:176;19223:3;19265:60;19321:3;19312:6;19301:9;19297:22;19265:60;:::i;:::-;19258:4;19251:5;19247:16;19240:86;19162:175;19407:3;19449:60;19505:3;19496:6;19485:9;19481:22;19449:60;:::i;:::-;19442:4;19435:5;19431:16;19424:86;19347:174;19581:3;19623:60;19679:3;19670:6;19659:9;19655:22;19623:60;:::i;:::-;19616:4;19609:5;19605:16;19598:86;19531:164;19755:3;19799:60;19855:3;19846:6;19835:9;19831:22;19799:60;:::i;:::-;19790:6;19783:5;19779:18;19772:88;19705:166;19932:3;19976:60;20032:3;20023:6;20012:9;20008:22;19976:60;:::i;:::-;19967:6;19960:5;19956:18;19949:88;19881:167;17989:2066;;;;:::o;20061:414::-;20162:6;20211:3;20199:9;20190:7;20186:23;20182:33;20179:120;;;20218:79;;:::i;:::-;20179:120;20338:1;20363:95;20450:7;20441:6;20430:9;20426:22;20363:95;:::i;:::-;20353:105;;20309:159;20061:414;;;;:::o;20481:328::-;20600:4;20638:2;20627:9;20623:18;20615:26;;20651:71;20719:1;20708:9;20704:17;20695:6;20651:71;:::i;:::-;20732:70;20798:2;20787:9;20783:18;20774:6;20732:70;:::i;:::-;20481:328;;;;;:::o;20815:351::-;20885:6;20934:2;20922:9;20913:7;20909:23;20905:32;20902:119;;;20940:79;;:::i;:::-;20902:119;21060:1;21085:64;21141:7;21132:6;21121:9;21117:22;21085:64;:::i;:::-;21075:74;;21031:128;20815:351;;;;:::o;21172:169::-;21256:11;21290:6;21285:3;21278:19;21330:4;21325:3;21321:14;21306:29;;21172:169;;;;:::o;21347:221::-;21487:34;21483:1;21475:6;21471:14;21464:58;21556:4;21551:2;21543:6;21539:15;21532:29;21347:221;:::o;21574:366::-;21716:3;21737:67;21801:2;21796:3;21737:67;:::i;:::-;21730:74;;21813:93;21902:3;21813:93;:::i;:::-;21931:2;21926:3;21922:12;21915:19;;21574:366;;;:::o;21946:419::-;22112:4;22150:2;22139:9;22135:18;22127:26;;22199:9;22193:4;22189:20;22185:1;22174:9;22170:17;22163:47;22227:131;22353:4;22227:131;:::i;:::-;22219:139;;21946:419;;;:::o;22371:225::-;22511:34;22507:1;22499:6;22495:14;22488:58;22580:8;22575:2;22567:6;22563:15;22556:33;22371:225;:::o;22602:366::-;22744:3;22765:67;22829:2;22824:3;22765:67;:::i;:::-;22758:74;;22841:93;22930:3;22841:93;:::i;:::-;22959:2;22954:3;22950:12;22943:19;;22602:366;;;:::o;22974:419::-;23140:4;23178:2;23167:9;23163:18;23155:26;;23227:9;23221:4;23217:20;23213:1;23202:9;23198:17;23191:47;23255:131;23381:4;23255:131;:::i;:::-;23247:139;;22974:419;;;:::o;23399:98::-;23450:6;23484:5;23478:12;23468:22;;23399:98;;;:::o;23503:246::-;23584:1;23594:113;23608:6;23605:1;23602:13;23594:113;;;23693:1;23688:3;23684:11;23678:18;23674:1;23669:3;23665:11;23658:39;23630:2;23627:1;23623:10;23618:15;;23594:113;;;23741:1;23732:6;23727:3;23723:16;23716:27;23565:184;23503:246;;;:::o;23755:373::-;23841:3;23869:38;23901:5;23869:38;:::i;:::-;23923:70;23986:6;23981:3;23923:70;:::i;:::-;23916:77;;24002:65;24060:6;24055:3;24048:4;24041:5;24037:16;24002:65;:::i;:::-;24092:29;24114:6;24092:29;:::i;:::-;24087:3;24083:39;24076:46;;23845:283;23755:373;;;;:::o;24134:640::-;24329:4;24367:3;24356:9;24352:19;24344:27;;24381:71;24449:1;24438:9;24434:17;24425:6;24381:71;:::i;:::-;24462:72;24530:2;24519:9;24515:18;24506:6;24462:72;:::i;:::-;24544;24612:2;24601:9;24597:18;24588:6;24544:72;:::i;:::-;24663:9;24657:4;24653:20;24648:2;24637:9;24633:18;24626:48;24691:76;24762:4;24753:6;24691:76;:::i;:::-;24683:84;;24134:640;;;;;;;:::o;24780:320::-;24895:4;24933:2;24922:9;24918:18;24910:26;;24946:71;25014:1;25003:9;24999:17;24990:6;24946:71;:::i;:::-;25027:66;25089:2;25078:9;25074:18;25065:6;25027:66;:::i;:::-;24780:320;;;;;:::o;25106:170::-;25246:22;25242:1;25234:6;25230:14;25223:46;25106:170;:::o;25282:366::-;25424:3;25445:67;25509:2;25504:3;25445:67;:::i;:::-;25438:74;;25521:93;25610:3;25521:93;:::i;:::-;25639:2;25634:3;25630:12;25623:19;;25282:366;;;:::o;25654:419::-;25820:4;25858:2;25847:9;25843:18;25835:26;;25907:9;25901:4;25897:20;25893:1;25882:9;25878:17;25871:47;25935:131;26061:4;25935:131;:::i;:::-;25927:139;;25654:419;;;:::o;26079:117::-;26137:7;26166:24;26184:5;26166:24;:::i;:::-;26155:35;;26079:117;;;:::o;26202:164::-;26296:45;26335:5;26296:45;:::i;:::-;26289:5;26286:56;26276:84;;26356:1;26353;26346:12;26276:84;26202:164;:::o;26372:185::-;26450:5;26481:6;26475:13;26466:22;;26497:54;26545:5;26497:54;:::i;:::-;26372:185;;;;:::o;26563:393::-;26654:6;26703:2;26691:9;26682:7;26678:23;26674:32;26671:119;;;26709:79;;:::i;:::-;26671:119;26829:1;26854:85;26931:7;26922:6;26911:9;26907:22;26854:85;:::i;:::-;26844:95;;26800:149;26563:393;;;;:::o;26962:85::-;27007:7;27036:5;27025:16;;26962:85;;;:::o;27053:101::-;27089:7;27129:18;27122:5;27118:30;27107:41;;27053:101;;;:::o;27160:156::-;27217:9;27250:60;27267:42;27276:32;27302:5;27276:32;:::i;:::-;27267:42;:::i;:::-;27250:60;:::i;:::-;27237:73;;27160:156;;;:::o;27322:145::-;27416:44;27454:5;27416:44;:::i;:::-;27411:3;27404:57;27322:145;;:::o;27473:236::-;27573:4;27611:2;27600:9;27596:18;27588:26;;27624:78;27699:1;27688:9;27684:17;27675:6;27624:78;:::i;:::-;27473:236;;;;:::o;27715:177::-;27855:29;27851:1;27843:6;27839:14;27832:53;27715:177;:::o;27898:366::-;28040:3;28061:67;28125:2;28120:3;28061:67;:::i;:::-;28054:74;;28137:93;28226:3;28137:93;:::i;:::-;28255:2;28250:3;28246:12;28239:19;;27898:366;;;:::o;28270:419::-;28436:4;28474:2;28463:9;28459:18;28451:26;;28523:9;28517:4;28513:20;28509:1;28498:9;28494:17;28487:47;28551:131;28677:4;28551:131;:::i;:::-;28543:139;;28270:419;;;:::o;28695:180::-;28743:77;28740:1;28733:88;28840:4;28837:1;28830:15;28864:4;28861:1;28854:15;28881:191;28921:3;28940:20;28958:1;28940:20;:::i;:::-;28935:25;;28974:20;28992:1;28974:20;:::i;:::-;28969:25;;29017:1;29014;29010:9;29003:16;;29038:3;29035:1;29032:10;29029:36;;;29045:18;;:::i;:::-;29029:36;28881:191;;;;:::o;29078:194::-;29118:4;29138:20;29156:1;29138:20;:::i;:::-;29133:25;;29172:20;29190:1;29172:20;:::i;:::-;29167:25;;29216:1;29213;29209:9;29201:17;;29240:1;29234:4;29231:11;29228:37;;;29245:18;;:::i;:::-;29228:37;29078:194;;;;:::o;29278:430::-;29421:4;29459:2;29448:9;29444:18;29436:26;;29472:71;29540:1;29529:9;29525:17;29516:6;29472:71;:::i;:::-;29553:72;29621:2;29610:9;29606:18;29597:6;29553:72;:::i;:::-;29635:66;29697:2;29686:9;29682:18;29673:6;29635:66;:::i;:::-;29278:430;;;;;;:::o;29714:85::-;29759:7;29788:5;29777:16;;29714:85;;;:::o;29805:156::-;29862:9;29895:60;29912:42;29921:32;29947:5;29921:32;:::i;:::-;29912:42;:::i;:::-;29895:60;:::i;:::-;29882:73;;29805:156;;;:::o;29967:145::-;30061:44;30099:5;30061:44;:::i;:::-;30056:3;30049:57;29967:145;;:::o;30118:456::-;30274:4;30312:2;30301:9;30297:18;30289:26;;30325:78;30400:1;30389:9;30385:17;30376:6;30325:78;:::i;:::-;30413:72;30481:2;30470:9;30466:18;30457:6;30413:72;:::i;:::-;30495;30563:2;30552:9;30548:18;30539:6;30495:72;:::i;:::-;30118:456;;;;;;:::o;30580:175::-;30618:3;30641:23;30658:5;30641:23;:::i;:::-;30632:32;;30686:10;30679:5;30676:21;30673:47;;30700:18;;:::i;:::-;30673:47;30747:1;30740:5;30736:13;30729:20;;30580:175;;;:::o;30761:636::-;30954:4;30992:3;30981:9;30977:19;30969:27;;31006:71;31074:1;31063:9;31059:17;31050:6;31006:71;:::i;:::-;31087:72;31155:2;31144:9;31140:18;31131:6;31087:72;:::i;:::-;31206:9;31200:4;31196:20;31191:2;31180:9;31176:18;31169:48;31234:76;31305:4;31296:6;31234:76;:::i;:::-;31226:84;;31320:70;31386:2;31375:9;31371:18;31362:6;31320:70;:::i;:::-;30761:636;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2753000","executionCost":"2999","totalCost":"2755999"},"external":{"active()":"2590","activeSequencerIds(uint256)":"6595","initialize(address,address,address,uint256,uint32,address,address)":"infinite","l2ChainId()":"2518","l2Gas()":"2517","l2Minter()":"2627","l2RewardDispatcher()":"2558","lockFor(address,uint256,bytes)":"infinite","lockingInfo()":"infinite","lockingPool()":"infinite","messenger()":"infinite","metis()":"infinite","owner()":"2622","redemptionQueue()":"2604","relock()":"infinite","renounceOwnership()":"infinite","sequencerAgentCount()":"2583","sequencerAgentTemplate()":"2579","sequencerAgents(uint32)":"2935","sequencerData()":"infinite","sequencerId()":"2520","sequencerSigner()":"2625","setL2Gas(uint32)":"infinite","setL2Minter(address)":"infinite","setL2RewardDispatcher(address)":"infinite","setRedemptionQueue(address)":"infinite","sumRewards()":"2518","totalLocked()":"infinite","transferOwnership(address)":"infinite","unlock()":"infinite","unlockClaim()":"infinite","withdrawRewards()":"2588","withdrawStakingAmount(uint256)":"infinite"},"internal":{"_mintL2EMetis(uint256)":"infinite"}},"methodIdentifiers":{"active()":"02fb0c5e","activeSequencerIds(uint256)":"1abdaf6a","initialize(address,address,address,uint256,uint32,address,address)":"b699ce5f","l2ChainId()":"d6ae3cd5","l2Gas()":"3cbb6979","l2Minter()":"080e1e4e","l2RewardDispatcher()":"e92d61e5","lockFor(address,uint256,bytes)":"af70cba5","lockingInfo()":"f7cee36a","lockingPool()":"85d1e2b8","messenger()":"3cb747bf","metis()":"e5974554","owner()":"8da5cb5b","redemptionQueue()":"97ec19be","relock()":"c53b573d","renounceOwnership()":"715018a6","sequencerAgentCount()":"9e935704","sequencerAgentTemplate()":"8db8ad88","sequencerAgents(uint32)":"457cb586","sequencerData()":"76d9f95c","sequencerId()":"04a78fca","sequencerSigner()":"c3b550c8","setL2Gas(uint32)":"33bec7e7","setL2Minter(address)":"f87b7a3e","setL2RewardDispatcher(address)":"43c82cf7","setRedemptionQueue(address)":"3b4c46d0","sumRewards()":"7ca4f8b0","totalLocked()":"56891412","transferOwnership(address)":"f2fde38b","unlock()":"a69df4b5","unlockClaim()":"feafaa6b","withdrawRewards()":"c7b8981c","withdrawStakingAmount(uint256)":"0182a6da"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRelocked\",\"type\":\"bool\"}],\"name\":\"IsSequencerRelocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldValue\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newValue\",\"type\":\"uint32\"}],\"name\":\"L2GasSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"L2MetisMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"SequencerAgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"SequencerAgentTemplateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sequencerSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"SequencerInitialBalanceLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"SequencerRelocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sequencerSigner\",\"type\":\"address\"}],\"name\":\"SequencerTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakingAmountWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"WithdrawRewardsSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeSequencerIds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_metis\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lockingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1Bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_l2Minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2RewardDispatcher\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2ChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Gas\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2RewardDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sequencerSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubKey\",\"type\":\"bytes\"}],\"name\":\"lockFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingInfo\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockingPool\",\"outputs\":[{\"internalType\":\"contract ILockingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract ICrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metis\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redemptionQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalProcessed\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerAgentCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerAgentTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"sequencerAgents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct ILockingPool.SequencerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"setL2Gas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2MinterAddress\",\"type\":\"address\"}],\"name\":\"setL2Minter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2RewardDispatcher\",\"type\":\"address\"}],\"name\":\"setL2RewardDispatcher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_redemptionQueue\",\"type\":\"address\"}],\"name\":\"setRedemptionQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sumRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStakingAmount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"IsSequencerRelocked(bool)\":{\"params\":{\"isRelocked\":\"The status of the sequencer.\"}},\"L2GasSet(uint32,uint32)\":{\"params\":{\"oldValue\":\"The old L2 gas limit.        \"}},\"L2MetisMinted(uint256)\":{\"params\":{\"amount\":\"The amount of Metis tokens that have been minted.\"}},\"RewardsWithdrawn(uint256,uint256)\":{\"params\":{\"reward\":\"The amount of rewards that have been withdrawn.\",\"sequencerId\":\"The ID of the sequencer.\"}},\"SequencerAgentAdded(uint32,address)\":{\"params\":{\"agent\":\"address of the agent\",\"index\":\"index of the agent\"}},\"SequencerAgentTemplateSet(address,address)\":{\"params\":{\"newValue\":\"The address of the new sequencer agent template.\",\"oldValue\":\"The address of the old sequencer agent template.\"}},\"SequencerInitialBalanceLocked(address,uint256,bool)\":{\"params\":{\"active\":\"The status of the sequencer.\",\"amount\":\"The amount of Metis tokens that have been locked.\",\"sequencerSigner\":\"The address of the sequencer signer.\"}},\"SequencerRelocked(uint32,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of Metis tokens that have been added to the lock.\",\"index\":\"The index of the sequencer agent in the sequencer list.\",\"reward\":\"The amount of additional rewards that have been locked.\"}},\"SequencerTerminated(address)\":{\"params\":{\"sequencerSigner\":\"The address of the sequencer signer.\"}},\"StakingAmountWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of Metis tokens that have been deposited.\",\"recipient\":\"The recipient of the  Metis token on  L2 (redemptionQueue).\"}},\"WithdrawRewardsSet(bool,bool)\":{\"params\":{\"newValue\":\"The new withdrawRewards.\",\"oldValue\":\"The old withdrawRewards.\"}}},\"kind\":\"dev\",\"methods\":{\"lockFor(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of Metis tokens to lock.\",\"_sequencerSigner\":\"The address of the sequencer signer.\",\"_signerPubKey\":\"The public key of the sequencer signer.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"relock()\":{\"details\":\"The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\",\"returns\":{\"totalProcessed\":\"The total amount of Metis tokens and rewards that have been relocked.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setL2Gas(uint32)\":{\"details\":\"The L2 gas limit is used when minting eMetis tokens on Layer 2.\",\"params\":{\"_l2Gas\":\"The new L2 gas limit.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawStakingAmount(uint256)\":{\"params\":{\"amount\":\"The amount of Metis tokens to withdraw.\"}}},\"title\":\"Dealer\",\"version\":1},\"userdoc\":{\"events\":{\"IsSequencerRelocked(bool)\":{\"notice\":\"Emits when the sequencer is relocked.\"},\"L2GasSet(uint32,uint32)\":{\"notice\":\"Emits when the L2 gas limit is set.\"},\"L2MetisMinted(uint256)\":{\"notice\":\"Emits when Metis tokens are minted on Layer 2.\"},\"RewardsWithdrawn(uint256,uint256)\":{\"notice\":\"Emits when the rewards are withdrawn.\"},\"SequencerAgentAdded(uint32,address)\":{\"notice\":\"Emits when a new sequencer agent is added\"},\"SequencerAgentTemplateSet(address,address)\":{\"notice\":\"Emits when the sequencer agent template is set.\"},\"SequencerInitialBalanceLocked(address,uint256,bool)\":{\"notice\":\"Emits when the sequencer initial balance is locked.\"},\"SequencerRelocked(uint32,uint256,uint256)\":{\"notice\":\"Emits when additional Metis tokens and rewards are locked for a sequencer.\"},\"SequencerTerminated(address)\":{\"notice\":\"Emits when the sequencer is terminated.\"},\"StakingAmountWithdrawn(address,uint256)\":{\"notice\":\"Withdaws Metis token and deposits Metis tokens into the redemption queue.\"},\"WithdrawRewardsSet(bool,bool)\":{\"notice\":\"Emits when withdrawRewards is set.\"}},\"kind\":\"user\",\"methods\":{\"activeSequencerIds(uint256)\":{\"notice\":\"The list of active sequencer agent IDs.\"},\"initialize(address,address,address,uint256,uint32,address,address)\":{\"notice\":\"Initializes the contract.\"},\"l2ChainId()\":{\"notice\":\"The ID of the L2 chain.\"},\"l2Gas()\":{\"notice\":\"L2 gas limit.\"},\"l2Minter()\":{\"notice\":\"The address of the L2 MetisMinter contract.\"},\"l2RewardDispatcher()\":{\"notice\":\"The address of the L2 RewardDispatcher contract.\"},\"lockFor(address,uint256,bytes)\":{\"notice\":\"Locks Metis tokens for a new sequencer.\"},\"lockingInfo()\":{\"notice\":\"The LockingInfo contract address.\"},\"lockingPool()\":{\"notice\":\"The LockingPool contract address.\"},\"messenger()\":{\"notice\":\"The L2 messenger contract.\"},\"metis()\":{\"notice\":\"The Metis token.\"},\"relock()\":{\"notice\":\"Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\"},\"sequencerAgentCount()\":{\"notice\":\"The number of sequencer agents.\"},\"sequencerAgentTemplate()\":{\"notice\":\"The template contract for sequencer agents.\"},\"sequencerAgents(uint32)\":{\"notice\":\"The list of sequencer agents.\"},\"setL2Gas(uint32)\":{\"notice\":\"Sets the L2 gas limit.\"},\"sumRewards()\":{\"notice\":\"The sum of rewards of all sequencers.\"},\"totalLocked()\":{\"notice\":\"Returns the total amount of Metis tokens that have been locked for all sequencers.\"},\"unlock()\":{\"notice\":\"Unlock Metis tokens and terminate the sequencer.\"},\"unlockClaim()\":{\"notice\":\"The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\"},\"withdrawRewards()\":{\"notice\":\"withdraw rewards\"},\"withdrawStakingAmount(uint256)\":{\"notice\":\"withdraw locked Metis tokens and deposits them into the redemptionQueue.\"}},\"notice\":\"The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dealer.sol\":\"Dealer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"../ERC1967/ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\\n *\\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\\n * the beacon to not upgrade the implementation maliciously.\\n *\\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\\n * an inconsistent state where the beacon storage slot does not match the beacon address.\\n */\\ncontract BeaconProxy is Proxy {\\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\\n    address private immutable _beacon;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\\n        _beacon = beacon;\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the beacon.\\n     */\\n    function _getBeacon() internal view virtual returns (address) {\\n        return _beacon;\\n    }\\n}\\n\",\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"contracts/Dealer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"../interface/ICrossDomainEnabled.sol\\\";\\nimport \\\"../interface/ILockingPool.sol\\\";\\nimport \\\"../interface/IVeMetisMinter.sol\\\";\\nimport \\\"../interface/ICrossDomainMessenger.sol\\\";\\nimport \\\"../interface/IL1ERC20Bridge.sol\\\";\\n\\n\\n/// @title Dealer\\n/// @notice The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.\\ncontract Dealer is OwnableUpgradeable {\\n\\n    /// @notice Emits when a new sequencer agent is added\\n    /// @param index index of the agent\\n    /// @param agent address of the agent\\n    event SequencerAgentAdded(uint32 index, address agent);\\n\\n    /// @notice Emits when additional Metis tokens and rewards are locked for a sequencer.\\n    /// @param index The index of the sequencer agent in the sequencer list.\\n    /// @param amount The amount of Metis tokens that have been added to the lock.\\n    /// @param reward The amount of additional rewards that have been locked.\\n    event SequencerRelocked(uint32 index, uint256 amount, uint256 reward);\\n\\n    /// @notice Emits when Metis tokens are minted on Layer 2.\\n    /// @param amount The amount of Metis tokens that have been minted.\\n    event L2MetisMinted(uint256 amount);\\n\\n    /// @notice Emits when the sequencer agent template is set.\\n    /// @param oldValue The address of the old sequencer agent template.\\n    /// @param newValue The address of the new sequencer agent template.\\n    event SequencerAgentTemplateSet(address indexed oldValue, address indexed newValue);\\n\\n    /// @notice Emits when the L2 gas limit is set.\\n    /// @param oldValue The old L2 gas limit.        \\n    event L2GasSet(uint32 oldValue, uint32 newValue);\\n\\n    /// @notice Emits when withdrawRewards is set.\\n    /// @param oldValue The old withdrawRewards.\\n    /// @param newValue The new withdrawRewards.\\n    event WithdrawRewardsSet(bool oldValue, bool newValue);\\n\\n    /// @notice The template contract for sequencer agents.\\n    address public sequencerAgentTemplate;\\n\\n    /// @notice The Metis token.\\n    IERC20 public metis;\\n\\n    /// @notice The LockingPool contract address.\\n    ILockingPool public lockingPool;\\n\\n    /// @notice The LockingInfo contract address.\\n    ILockingInfo public lockingInfo;\\n\\n    /// @notice The L2 messenger contract.\\n    ICrossDomainMessenger public messenger;\\n\\n    /// @notice The ID of the L2 chain.\\n    uint256 public l2ChainId;\\n\\n    /// @notice The address of the L2 MetisMinter contract.\\n    address public l2Minter;\\n\\n    /// @notice The address of the L2 RewardDispatcher contract.\\n    address public l2RewardDispatcher;\\n\\n    /// @notice The list of sequencer agents.\\n    mapping(uint32 => address) public sequencerAgents;\\n\\n    /// @notice The number of sequencer agents.\\n    uint32 public sequencerAgentCount;\\n\\n    /// @notice The list of active sequencer agent IDs.\\n    uint32[] public activeSequencerIds;\\n\\n    /// @notice The sum of rewards of all sequencers.\\n    uint256 public sumRewards;\\n\\n    /// @notice L2 gas limit.\\n    uint32 public l2Gas;\\n\\n    /// @notice withdraw rewards\\n    bool public withdrawRewards;\\n\\n    uint256 public sequencerId;\\n    address public sequencerSigner;\\n    bool public active;\\n    address public redemptionQueue;\\n    /// @notice Withdaws Metis token and deposits Metis tokens into the redemption queue.\\n    /// @param recipient The recipient of the  Metis token on  L2 (redemptionQueue).\\n    /// @param amount The amount of Metis tokens that have been deposited.\\n    event StakingAmountWithdrawn(address indexed recipient, uint256 amount);\\n\\n    /// @notice Emits when the sequencer initial balance is locked.\\n    /// @param sequencerSigner The address of the sequencer signer.\\n    /// @param amount The amount of Metis tokens that have been locked.\\n    /// @param active The status of the sequencer.\\n    event SequencerInitialBalanceLocked(address indexed sequencerSigner, uint256 amount,bool active);\\n\\n    /// @notice Emits when the sequencer is terminated.\\n    /// @param sequencerSigner The address of the sequencer signer.\\n    event SequencerTerminated(address indexed sequencerSigner);\\n\\n    /// @notice Emits when the rewards are withdrawn.\\n    /// @param sequencerId The ID of the sequencer.\\n    /// @param reward The amount of rewards that have been withdrawn.\\n    event RewardsWithdrawn(uint256 indexed sequencerId, uint256 reward);\\n\\n    /// @notice Emits when the sequencer is relocked.\\n    /// @param isRelocked The status of the sequencer.\\n    event IsSequencerRelocked(bool isRelocked);\\n\\n    /// @notice Initializes the contract.\\n    function initialize( \\n        address _metis, \\n        address _lockingPool, \\n        address _l1Bridge, \\n        uint256 _l2ChainId, \\n        uint32 _l2Gas, \\n        address _l2Minter, \\n        address _l2RewardDispatcher\\n        ) public initializer {\\n        require( _metis != address(0) && _lockingPool != address(0) && _l1Bridge != address(0) && _l2Minter != address(0) && _l2RewardDispatcher != address(0), \\\"Dealer: zero address\\\");\\n        __Ownable_init(msg.sender);\\n        metis = IERC20(_metis);\\n        lockingPool = ILockingPool(_lockingPool);\\n        lockingInfo = lockingPool.escrow();\\n        messenger = ICrossDomainMessenger(ICrossDomainEnabled(_l1Bridge).messenger());\\n        l2ChainId = _l2ChainId;\\n        l2Gas = _l2Gas;\\n        l2Minter = _l2Minter;\\n        l2RewardDispatcher = _l2RewardDispatcher;\\n\\n    }\\n\\n    /// @notice Locks Metis tokens for a new sequencer.\\n    /// @param _sequencerSigner The address of the sequencer signer.\\n    /// @param _amount The amount of Metis tokens to lock.\\n    /// @param _signerPubKey The public key of the sequencer signer.\\n    function lockFor(\\n        address _sequencerSigner,\\n        uint256 _amount,\\n        bytes memory _signerPubKey\\n    ) external onlyOwner {\\n        // Check if the Dealer contract has sufficient Metis balance\\n        uint256 dealerBalance = metis.balanceOf(address(this));\\n        require(dealerBalance >= _amount, \\\"Dealer: Insufficient Metis balance\\\");\\n\\n        sequencerSigner = _sequencerSigner;\\n\\n        // Approve the LockingInfo contract to spend the specified amount of tokens\\n        require(\\n            metis.approve(address(lockingInfo), type(uint256).max),\\n            \\\"Dealer: Approval to LockingInfo failed\\\"\\n        );\\n\\n        // Attempt to lock the tokens by calling LockingPool's lockFor function\\n        lockingPool.lockWithRewardRecipient(sequencerSigner,l2Minter, _amount, _signerPubKey);\\n\\n        // Retrieve and store the sequencer ID for tracking purposes\\n        sequencerId = lockingPool.seqSigners(sequencerSigner);\\n        active = true;\\n        emit SequencerInitialBalanceLocked(sequencerSigner, _amount, active);\\n    }\\n\\n\\n    /// @notice Unlock Metis tokens and terminate the sequencer.\\n    function unlock() external payable onlyOwner {\\n        lockingPool.unlock{value: msg.value}(sequencerId, l2Gas);\\n        active = false;\\n        emit SequencerTerminated(sequencerSigner);\\n    }\\n\\n    /// @notice The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed.\\n    function unlockClaim() external payable onlyOwner {\\n        lockingPool.unlockClaim{value: msg.value}(sequencerId, l2Gas);\\n    }\\n\\n    function sequencerData() public view returns (ILockingPool.SequencerData memory) {\\n        return lockingPool.sequencers(sequencerId);\\n    }\\n\\n    /// @notice Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers.\\n    /// @dev The `relock` function will transfer Metis tokens from the Dealer contract to the sequencer agent contract, and then call the `relock` function on the sequencer agent contract.\\n    /// @return totalProcessed The total amount of Metis tokens and rewards that have been relocked.\\n    function relock() external payable returns (uint256 totalProcessed) {\\n        require(active, \\\"Dealer: no active sequencer\\\");\\n\\n        uint maxLock = ILockingInfo(lockingInfo).maxLock();\\n        uint256 undistributedAmount = metis.balanceOf(address(this));\\n        uint256 totalRewards = 0;\\n        for (uint32 i = 0; i < 1; i++) {\\n            ILockingPool.SequencerData memory seq = sequencerData();\\n            (uint256 reward, uint256 locked) = (seq.reward, seq.amount);\\n            totalRewards += reward;\\n\\n            // The lock quota means the amount of Metis tokens that can be locked for the sequencer, due to the maximum lock amount.\\n            uint256 lockQuota = locked < maxLock ? maxLock - locked : 0;\\n\\n            // The amount of Metis tokens that can be locked is the minimum of the lock quota and the undistributed amount.\\n            uint256 lockAmount = Math.min(lockQuota, undistributedAmount);\\n\\n            // The undistributed amount should be reduced by the amount of Metis tokens that have been locked.\\n            undistributedAmount -= lockAmount;\\n            \\n             // If there is not any lock amount or reward, the process should be skipped.\\n            uint256 toBeProcessed = lockAmount + reward;\\n            if (toBeProcessed == 0) {\\n                continue;\\n            }\\n\\n            totalProcessed += toBeProcessed;\\n\\n            // The rewards are withdrawn  if the locked amount plus the amount to be processed exceeds the maximum lock amount.\\n            bool _withdrawRewards = locked + toBeProcessed > maxLock;\\n            if (_withdrawRewards && reward > 0) {\\n                lockingPool.withdrawRewards(sequencerId, l2Gas);\\n                emit RewardsWithdrawn(sequencerId, reward);\\n            }\\n\\n            // If the lock amount is not zero, or if we decided to convert the rewards to lock amount, the `relock` function is called.\\n            if (!_withdrawRewards || lockAmount > 0) {\\n                lockingPool.relock(sequencerId, lockAmount, true);\\n                emit SequencerRelocked(0, lockAmount, reward);\\n            }\\n        }   \\n\\n        // In the event of any rewards, the MetisMinter contract on Layer 2 is invoked to mint eMetis tokens. These tokens are then distributed as rewards to seMetis holders.\\n        if (totalRewards > 0) {\\n            _mintL2EMetis(totalRewards);\\n            sumRewards += totalRewards;\\n        }\\n\\n        emit IsSequencerRelocked(true);\\n    }\\n\\n    /// @notice Sets the L2 gas limit.\\n    /// @param _l2Gas The new L2 gas limit.\\n    /// @dev The L2 gas limit is used when minting eMetis tokens on Layer 2.\\n    function setL2Gas(uint32 _l2Gas) external onlyOwner {\\n        uint32 _old = l2Gas;\\n        l2Gas = _l2Gas;\\n        emit L2GasSet(_old, _l2Gas);\\n    }\\n\\n    /// @notice Returns the total amount of Metis tokens that have been locked for all sequencers.\\n    function totalLocked() external view returns (uint256) {\\n        return sequencerData().amount;\\n    }\\n\\n    /// @notice mint veMetis on Layer 2\\n    /// @param amount Metis amount\\n    function _mintL2EMetis(uint256 amount) internal {\\n        bytes memory message = abi.encodeWithSelector(IVeMetisMinter.mintFromL1.selector, amount);\\n        messenger.sendMessageViaChainId{value:msg.value}(l2ChainId, l2Minter, message, l2Gas);\\n        emit L2MetisMinted(amount);\\n    }\\n\\n    /// @notice withdraw locked Metis tokens and deposits them into the redemptionQueue.\\n    /// @param amount The amount of Metis tokens to withdraw.\\n    function withdrawStakingAmount(uint256 amount) public payable onlyOwner {\\n        lockingPool.withdraw(sequencerId, amount);\\n\\n        address bridge = ILockingInfo(lockingInfo).bridge();\\n        IERC20(ILockingInfo(lockingInfo).l1Token()).approve(bridge, amount);\\n        IL1ERC20Bridge(bridge).depositERC20ToByChainId{value: msg.value}(l2ChainId, ILockingInfo(lockingInfo).l1Token(), ILockingInfo(lockingInfo).l2Token(), redemptionQueue, amount, l2Gas, \\\"\\\");\\n        emit StakingAmountWithdrawn(redemptionQueue,amount);\\n    }\\n\\n    // Setters\\n    function setL2Minter(address _l2MinterAddress) public onlyOwner{\\n        l2Minter = _l2MinterAddress;\\n    }\\n\\n    function setRedemptionQueue(address _redemptionQueue) public onlyOwner {\\n        redemptionQueue = _redemptionQueue;\\n    }\\n\\n    function setL2RewardDispatcher(address _l2RewardDispatcher) public onlyOwner {\\n        l2RewardDispatcher = _l2RewardDispatcher;\\n    }\\n    \\n}\",\"keccak256\":\"0xee6d839d9677e6d596a2e7ec5e6e572554d5189327efc55d8769061af0d95e04\",\"license\":\"MIT\"},\"interface/ICrossDomainEnabled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ICrossDomainEnabled {\\n    function messenger() external view returns (address);\\n}\",\"keccak256\":\"0x2806d6261202f57849c4e98c2f5786882886e45c67751c2b38dd5f9d0456a7fa\",\"license\":\"MIT\"},\"interface/ICrossDomainMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit,\\n        uint256 chainId\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n    \\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _chainId L2 chain id.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n    function replayMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        address _sender,\\n        bytes memory _message,\\n        uint256 _queueIndex,\\n        uint32 _oldGasLimit,\\n        uint32 _newGasLimit\\n    )external;\\n}\",\"keccak256\":\"0xfc7bee4eda45bec59ba5ebf35ab65e4d9dbc0092407a67b33e4e338e6be1336f\",\"license\":\"MIT\"},\"interface/IL1ERC20Bridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.5.0 <0.9.0;\\n\\n/**\\n * @title IL1ERC20Bridge\\n */\\ninterface IL1ERC20Bridge {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event ERC20DepositInitiated(\\n        address indexed _l1Token,\\n        address indexed _l2Token,\\n        address indexed _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    event ERC20WithdrawalFinalized(\\n        address indexed _l1Token,\\n        address indexed _l2Token,\\n        address indexed _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    event ERC20ChainID(uint256 _chainid);\\n    \\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * @dev get the address of the corresponding L2 bridge contract.\\n     * @return Address of the corresponding L2 bridge contract.\\n     */\\n    function l2TokenBridge() external returns (address);\\n\\n    /**\\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _amount Amount of the ERC20 to deposit\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20(\\n        address _l1Token,\\n        address _l2Token,\\n        uint256 _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    ) external;\\n\\n    /**\\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _to L2 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20To(\\n        address _l1Token,\\n        address _l2Token,\\n        address _to,\\n        uint256 _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    ) external;\\n    \\n    /**\\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\\n     * @param _chainid chainid\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _amount Amount of the ERC20 to deposit\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20ByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        uint _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    )\\n        external payable;\\n\\n    /**\\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\\n     * @param _chainid chainid\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _to L2 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20ToByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        address _to,\\n        uint _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    )\\n        external payable;\\n    /*************************\\n     * Cross-chain Functions *\\n     *************************/\\n\\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */\\n    function finalizeERC20Withdrawal(\\n        address _l1Token,\\n        address _l2Token,\\n        address _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external;\\n    \\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _chainid chainid\\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */    \\n     function finalizeERC20WithdrawalByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        address _from,\\n        address _to,\\n        uint _amount,\\n        bytes calldata _data\\n    )\\n        external;\\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _chainid chainid\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */    \\n    function finalizeMetisWithdrawalByChainId (\\n        uint256 _chainid,\\n        address _from,\\n        address _to,\\n        uint _amount,\\n        bytes calldata _data\\n    )\\n        external;\\n}\",\"keccak256\":\"0x2ae07ccba2b6031511c22fbbc0c2a1b26d93a510226ad72edf693cf00be2c81a\",\"license\":\"MIT\"},\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n    function withdraw(uint256 _seqId, uint256 _amount) external;\\n}\",\"keccak256\":\"0xa7c18b713ed86a9a510c322241669b8d9ed6a1806c1d68229c5b440169938133\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"},\"interface/IVeMetisMinter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IVeMetisMinter {\\n    function mint(address user, uint256 amount) external;\\n\\n    function mintFromL1(uint256 amount) external;\\n\\n    function depositToL1Dealer(uint256 amount) external payable;\\n}\",\"keccak256\":\"0x19711cc1c9f794c07bf02cca34f9895ef30b1372ca32b5c7a9d1d46147ac158c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2455,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerAgentTemplate","offset":0,"slot":"0","type":"t_address"},{"astId":2459,"contract":"contracts/Dealer.sol:Dealer","label":"metis","offset":0,"slot":"1","type":"t_contract(IERC20)979"},{"astId":2463,"contract":"contracts/Dealer.sol:Dealer","label":"lockingPool","offset":0,"slot":"2","type":"t_contract(ILockingPool)3737"},{"astId":2467,"contract":"contracts/Dealer.sol:Dealer","label":"lockingInfo","offset":0,"slot":"3","type":"t_contract(ILockingInfo)3387"},{"astId":2471,"contract":"contracts/Dealer.sol:Dealer","label":"messenger","offset":0,"slot":"4","type":"t_contract(ICrossDomainMessenger)3199"},{"astId":2474,"contract":"contracts/Dealer.sol:Dealer","label":"l2ChainId","offset":0,"slot":"5","type":"t_uint256"},{"astId":2477,"contract":"contracts/Dealer.sol:Dealer","label":"l2Minter","offset":0,"slot":"6","type":"t_address"},{"astId":2480,"contract":"contracts/Dealer.sol:Dealer","label":"l2RewardDispatcher","offset":0,"slot":"7","type":"t_address"},{"astId":2485,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerAgents","offset":0,"slot":"8","type":"t_mapping(t_uint32,t_address)"},{"astId":2488,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerAgentCount","offset":0,"slot":"9","type":"t_uint32"},{"astId":2492,"contract":"contracts/Dealer.sol:Dealer","label":"activeSequencerIds","offset":0,"slot":"10","type":"t_array(t_uint32)dyn_storage"},{"astId":2495,"contract":"contracts/Dealer.sol:Dealer","label":"sumRewards","offset":0,"slot":"11","type":"t_uint256"},{"astId":2498,"contract":"contracts/Dealer.sol:Dealer","label":"l2Gas","offset":0,"slot":"12","type":"t_uint32"},{"astId":2501,"contract":"contracts/Dealer.sol:Dealer","label":"withdrawRewards","offset":4,"slot":"12","type":"t_bool"},{"astId":2503,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerId","offset":0,"slot":"13","type":"t_uint256"},{"astId":2505,"contract":"contracts/Dealer.sol:Dealer","label":"sequencerSigner","offset":0,"slot":"14","type":"t_address"},{"astId":2507,"contract":"contracts/Dealer.sol:Dealer","label":"active","offset":20,"slot":"14","type":"t_bool"},{"astId":2509,"contract":"contracts/Dealer.sol:Dealer","label":"redemptionQueue","offset":0,"slot":"15","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint32)dyn_storage":{"base":"t_uint32","encoding":"dynamic_array","label":"uint32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ICrossDomainMessenger)3199":{"encoding":"inplace","label":"contract ICrossDomainMessenger","numberOfBytes":"20"},"t_contract(IERC20)979":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(ILockingInfo)3387":{"encoding":"inplace","label":"contract ILockingInfo","numberOfBytes":"20"},"t_contract(ILockingPool)3737":{"encoding":"inplace","label":"contract ILockingPool","numberOfBytes":"20"},"t_mapping(t_uint32,t_address)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"events":{"IsSequencerRelocked(bool)":{"notice":"Emits when the sequencer is relocked."},"L2GasSet(uint32,uint32)":{"notice":"Emits when the L2 gas limit is set."},"L2MetisMinted(uint256)":{"notice":"Emits when Metis tokens are minted on Layer 2."},"RewardsWithdrawn(uint256,uint256)":{"notice":"Emits when the rewards are withdrawn."},"SequencerAgentAdded(uint32,address)":{"notice":"Emits when a new sequencer agent is added"},"SequencerAgentTemplateSet(address,address)":{"notice":"Emits when the sequencer agent template is set."},"SequencerInitialBalanceLocked(address,uint256,bool)":{"notice":"Emits when the sequencer initial balance is locked."},"SequencerRelocked(uint32,uint256,uint256)":{"notice":"Emits when additional Metis tokens and rewards are locked for a sequencer."},"SequencerTerminated(address)":{"notice":"Emits when the sequencer is terminated."},"StakingAmountWithdrawn(address,uint256)":{"notice":"Withdaws Metis token and deposits Metis tokens into the redemption queue."},"WithdrawRewardsSet(bool,bool)":{"notice":"Emits when withdrawRewards is set."}},"kind":"user","methods":{"activeSequencerIds(uint256)":{"notice":"The list of active sequencer agent IDs."},"initialize(address,address,address,uint256,uint32,address,address)":{"notice":"Initializes the contract."},"l2ChainId()":{"notice":"The ID of the L2 chain."},"l2Gas()":{"notice":"L2 gas limit."},"l2Minter()":{"notice":"The address of the L2 MetisMinter contract."},"l2RewardDispatcher()":{"notice":"The address of the L2 RewardDispatcher contract."},"lockFor(address,uint256,bytes)":{"notice":"Locks Metis tokens for a new sequencer."},"lockingInfo()":{"notice":"The LockingInfo contract address."},"lockingPool()":{"notice":"The LockingPool contract address."},"messenger()":{"notice":"The L2 messenger contract."},"metis()":{"notice":"The Metis token."},"relock()":{"notice":"Facilitates the process of augmenting the locked Metis tokens and rewards for all currently active sequencers."},"sequencerAgentCount()":{"notice":"The number of sequencer agents."},"sequencerAgentTemplate()":{"notice":"The template contract for sequencer agents."},"sequencerAgents(uint32)":{"notice":"The list of sequencer agents."},"setL2Gas(uint32)":{"notice":"Sets the L2 gas limit."},"sumRewards()":{"notice":"The sum of rewards of all sequencers."},"totalLocked()":{"notice":"Returns the total amount of Metis tokens that have been locked for all sequencers."},"unlock()":{"notice":"Unlock Metis tokens and terminate the sequencer."},"unlockClaim()":{"notice":"The `unlockClaim` function allows a sequencer to claim their Metis tokens after the unlocking waiting period has elapsed."},"withdrawRewards()":{"notice":"withdraw rewards"},"withdrawStakingAmount(uint256)":{"notice":"withdraw locked Metis tokens and deposits them into the redemptionQueue."}},"notice":"The Dealer contract is responsible for the allocation of Metis tokens from Layer 2 to the LockingPool for sequencers, through sequencer agents.","version":1}}},"interface/ICrossDomainEnabled.sol":{"ICrossDomainEnabled":{"abi":[{"inputs":[],"name":"messenger","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"messenger()":"3cb747bf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ICrossDomainEnabled.sol\":\"ICrossDomainEnabled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ICrossDomainEnabled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ICrossDomainEnabled {\\n    function messenger() external view returns (address);\\n}\",\"keccak256\":\"0x2806d6261202f57849c4e98c2f5786882886e45c67751c2b38dd5f9d0456a7fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ICrossDomainMessenger.sol":{"ICrossDomainMessenger":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"FailedRelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"RelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"messageNonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"chainId","type":"uint256"}],"name":"SentMessage","type":"event"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint256","name":"_queueIndex","type":"uint256"},{"internalType":"uint32","name":"_oldGasLimit","type":"uint32"},{"internalType":"uint32","name":"_newGasLimit","type":"uint32"}],"name":"replayMessageViaChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"}],"name":"sendMessageViaChainId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"sendMessage(address,bytes,uint32)":{"params":{"_gasLimit":"Gas limit for the provided message.","_message":"Message to send to the target.","_target":"Target contract address."}},"sendMessageViaChainId(uint256,address,bytes,uint32)":{"params":{"_chainId":"L2 chain id.","_gasLimit":"Gas limit for the provided message.","_message":"Message to send to the target.","_target":"Target contract address."}}},"title":"ICrossDomainMessenger","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"replayMessageViaChainId(uint256,address,address,bytes,uint256,uint32,uint32)":"91744b9f","sendMessage(address,bytes,uint32)":"3dbb202b","sendMessageViaChainId(uint256,address,bytes,uint32)":"44dd5ed6","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_queueIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_oldGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_newGasLimit\",\"type\":\"uint32\"}],\"name\":\"replayMessageViaChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessageViaChainId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_gasLimit\":\"Gas limit for the provided message.\",\"_message\":\"Message to send to the target.\",\"_target\":\"Target contract address.\"}},\"sendMessageViaChainId(uint256,address,bytes,uint32)\":{\"params\":{\"_chainId\":\"L2 chain id.\",\"_gasLimit\":\"Gas limit for the provided message.\",\"_message\":\"Message to send to the target.\",\"_target\":\"Target contract address.\"}}},\"title\":\"ICrossDomainMessenger\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a cross domain message to the target messenger.\"},\"sendMessageViaChainId(uint256,address,bytes,uint32)\":{\"notice\":\"Sends a cross domain message to the target messenger.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ICrossDomainMessenger.sol\":\"ICrossDomainMessenger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ICrossDomainMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit,\\n        uint256 chainId\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n    \\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _chainId L2 chain id.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external payable;\\n\\n    function replayMessageViaChainId(\\n        uint256 _chainId,\\n        address _target,\\n        address _sender,\\n        bytes memory _message,\\n        uint256 _queueIndex,\\n        uint32 _oldGasLimit,\\n        uint32 _newGasLimit\\n    )external;\\n}\",\"keccak256\":\"0xfc7bee4eda45bec59ba5ebf35ab65e4d9dbc0092407a67b33e4e338e6be1336f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"sendMessage(address,bytes,uint32)":{"notice":"Sends a cross domain message to the target messenger."},"sendMessageViaChainId(uint256,address,bytes,uint32)":{"notice":"Sends a cross domain message to the target messenger."}},"version":1}}},"interface/IL1ERC20Bridge.sol":{"IL1ERC20Bridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_chainid","type":"uint256"}],"name":"ERC20ChainID","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"_l2Token","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ERC20DepositInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"_l2Token","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ERC20WithdrawalFinalized","type":"event"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20ByChainId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20ToByChainId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeERC20Withdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeERC20WithdrawalByChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeMetisWithdrawalByChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"l2TokenBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"depositERC20(address,address,uint256,uint32,bytes)":{"details":"deposit an amount of the ERC20 to the caller's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20"}},"depositERC20ByChainId(uint256,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of the ERC20 to the caller's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit","_chainid":"chainid","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20"}},"depositERC20To(address,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of ERC20 to a recipient's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20","_to":"L2 address to credit the withdrawal to."}},"depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of ERC20 to a recipient's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit.","_chainid":"chainid","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20","_to":"L2 address to credit the withdrawal to."}},"finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_l1Token":"Address of L1 token to finalizeWithdrawal for.","_l2Token":"Address of L2 token where withdrawal was initiated.","_to":"L1 address to credit the withdrawal to."}},"finalizeERC20WithdrawalByChainId(uint256,address,address,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_chainid":"chainid","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_l1Token":"Address of L1 token to finalizeWithdrawal for.","_l2Token":"Address of L2 token where withdrawal was initiated.","_to":"L1 address to credit the withdrawal to."}},"finalizeMetisWithdrawalByChainId(uint256,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_chainid":"chainid","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_to":"L1 address to credit the withdrawal to."}},"l2TokenBridge()":{"details":"get the address of the corresponding L2 bridge contract.","returns":{"_0":"Address of the corresponding L2 bridge contract."}}},"title":"IL1ERC20Bridge","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"depositERC20(address,address,uint256,uint32,bytes)":"58a997f6","depositERC20ByChainId(uint256,address,address,uint256,uint32,bytes)":"a396a59c","depositERC20To(address,address,address,uint256,uint32,bytes)":"838b2520","depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)":"ef808be2","finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)":"a9f9e675","finalizeERC20WithdrawalByChainId(uint256,address,address,address,address,uint256,bytes)":"6cebdc45","finalizeMetisWithdrawalByChainId(uint256,address,address,uint256,bytes)":"90a40a76","l2TokenBridge()":"91c49bf8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"}],\"name\":\"ERC20ChainID\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ERC20DepositInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ERC20WithdrawalFinalized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20ByChainId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20ToByChainId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"finalizeERC20Withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"finalizeERC20WithdrawalByChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"finalizeMetisWithdrawalByChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2TokenBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositERC20(address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of the ERC20 to the caller's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\"}},\"depositERC20ByChainId(uint256,address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of the ERC20 to the caller's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit\",\"_chainid\":\"chainid\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\"}},\"depositERC20To(address,address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of ERC20 to a recipient's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\",\"_to\":\"L2 address to credit the withdrawal to.\"}},\"depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of ERC20 to a recipient's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_chainid\":\"chainid\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\",\"_to\":\"L2 address to credit the withdrawal to.\"}},\"finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)\":{\"details\":\"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_data\":\"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.\",\"_from\":\"L2 address initiating the transfer.\",\"_l1Token\":\"Address of L1 token to finalizeWithdrawal for.\",\"_l2Token\":\"Address of L2 token where withdrawal was initiated.\",\"_to\":\"L1 address to credit the withdrawal to.\"}},\"finalizeERC20WithdrawalByChainId(uint256,address,address,address,address,uint256,bytes)\":{\"details\":\"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_chainid\":\"chainid\",\"_data\":\"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.\",\"_from\":\"L2 address initiating the transfer.\",\"_l1Token\":\"Address of L1 token to finalizeWithdrawal for.\",\"_l2Token\":\"Address of L2 token where withdrawal was initiated.\",\"_to\":\"L1 address to credit the withdrawal to.\"}},\"finalizeMetisWithdrawalByChainId(uint256,address,address,uint256,bytes)\":{\"details\":\"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_chainid\":\"chainid\",\"_data\":\"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.\",\"_from\":\"L2 address initiating the transfer.\",\"_to\":\"L1 address to credit the withdrawal to.\"}},\"l2TokenBridge()\":{\"details\":\"get the address of the corresponding L2 bridge contract.\",\"returns\":{\"_0\":\"Address of the corresponding L2 bridge contract.\"}}},\"title\":\"IL1ERC20Bridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IL1ERC20Bridge.sol\":\"IL1ERC20Bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IL1ERC20Bridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.5.0 <0.9.0;\\n\\n/**\\n * @title IL1ERC20Bridge\\n */\\ninterface IL1ERC20Bridge {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event ERC20DepositInitiated(\\n        address indexed _l1Token,\\n        address indexed _l2Token,\\n        address indexed _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    event ERC20WithdrawalFinalized(\\n        address indexed _l1Token,\\n        address indexed _l2Token,\\n        address indexed _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    event ERC20ChainID(uint256 _chainid);\\n    \\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * @dev get the address of the corresponding L2 bridge contract.\\n     * @return Address of the corresponding L2 bridge contract.\\n     */\\n    function l2TokenBridge() external returns (address);\\n\\n    /**\\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _amount Amount of the ERC20 to deposit\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20(\\n        address _l1Token,\\n        address _l2Token,\\n        uint256 _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    ) external;\\n\\n    /**\\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _to L2 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20To(\\n        address _l1Token,\\n        address _l2Token,\\n        address _to,\\n        uint256 _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    ) external;\\n    \\n    /**\\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\\n     * @param _chainid chainid\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _amount Amount of the ERC20 to deposit\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20ByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        uint _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    )\\n        external payable;\\n\\n    /**\\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\\n     * @param _chainid chainid\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _to L2 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20ToByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        address _to,\\n        uint _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    )\\n        external payable;\\n    /*************************\\n     * Cross-chain Functions *\\n     *************************/\\n\\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */\\n    function finalizeERC20Withdrawal(\\n        address _l1Token,\\n        address _l2Token,\\n        address _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external;\\n    \\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _chainid chainid\\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */    \\n     function finalizeERC20WithdrawalByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        address _from,\\n        address _to,\\n        uint _amount,\\n        bytes calldata _data\\n    )\\n        external;\\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _chainid chainid\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */    \\n    function finalizeMetisWithdrawalByChainId (\\n        uint256 _chainid,\\n        address _from,\\n        address _to,\\n        uint _amount,\\n        bytes calldata _data\\n    )\\n        external;\\n}\",\"keccak256\":\"0x2ae07ccba2b6031511c22fbbc0c2a1b26d93a510226ad72edf693cf00be2c81a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingInfo.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"bridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"l1Token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_locked","type":"uint256"}],"name":"withdrawLocking","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId.      Note from maintainer:      for compatibility, the event is retained"}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amount in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}},"Withdraw(uint256,uint256)":{"details":"Emitted when the sequencer reduce lock amount in 'withdraw()'.","params":{"amount":"withdraw new amount","sequencerId":"unique integer to identify a sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"bridge()":"e78cea92","distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","l1Token()":"c01e1bd6","l2Token()":"56eff267","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","maxLock()":"6c0b3e46","minLock()":"f037c630","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5","withdrawLocking(uint256,address,uint256,uint256,uint256)":"234898b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"}],\"name\":\"withdrawLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.      Note from maintainer:      for compatibility, the event is retained\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amount in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}},\"Withdraw(uint256,uint256)\":{\"details\":\"Emitted when the sequencer reduce lock amount in 'withdraw()'.\",\"params\":{\"amount\":\"withdraw new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfo.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingInfoRaw.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_locked","type":"uint256"}],"name":"withdrawLocking","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId.      Note from maintainer:      for compatibility, the event is retained"}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amount in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}},"Withdraw(uint256,uint256)":{"details":"Emitted when the sequencer reduce lock amount in 'withdraw()'.","params":{"amount":"withdraw new amount","sequencerId":"unique integer to identify a sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5","withdrawLocking(uint256,address,uint256,uint256,uint256)":"234898b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"}],\"name\":\"withdrawLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.      Note from maintainer:      for compatibility, the event is retained\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amount in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}},\"Withdraw(uint256,uint256)\":{\"details\":\"Emitted when the sequencer reduce lock amount in 'withdraw()'.\",\"params\":{\"amount\":\"withdraw new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfoRaw.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingPool.sol":{"ILockingPool":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldReward","type":"uint256"}],"name":"RewardUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_n","type":"uint256"}],"name":"SetSignerUpdateThrottle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newMpc","type":"address"}],"name":"UpdateMpc","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_cur","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_prev","type":"uint256"}],"name":"WithrawDelayTimeChange","type":"event"},{"inputs":[],"name":"escrow","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"address","name":"_rewardRecipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockWithRewardRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_lockReward","type":"bool"}],"name":"relock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"seqSigners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"name":"sequencers","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"internalType":"struct ILockingPool.SequencerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"withdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RewardUpdate(uint256,uint256)":{"details":"Emitted when the proxy update threshold in 'updateBlockReward()'.","params":{"newReward":"new block reward","oldReward":"old block reward"}},"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetSignerUpdateThrottle(uint256)":{"details":"Emitted when SignerUpdateThrottle is updated","params":{"_n":"new min value"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}},"UpdateMpc(address)":{"details":"Emitted when mpc address update in 'UpdateMpc'","params":{"_newMpc":"new min lock."}},"WithrawDelayTimeChange(uint256,uint256)":{"details":"Emitted when WITHDRAWAL_DELAY is updated.","params":{"_cur":"current withdraw delay time","_prev":"previours withdraw delay time"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"escrow()":"e2fdcc17","lockFor(address,uint256,bytes)":"af70cba5","lockWithRewardRecipient(address,address,uint256,bytes)":"9ad42030","relock(uint256,uint256,bool)":"015bb180","seqOwners(address)":"169abefc","seqSigners(address)":"beb26755","sequencers(uint256)":"6ba7ccff","unlock(uint256,uint32)":"262c0e66","unlockClaim(uint256,uint32)":"8ddc74de","withdraw(uint256,uint256)":"441a3e70","withdrawRewards(uint256,uint32)":"17396687"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReward\",\"type\":\"uint256\"}],\"name\":\"RewardUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"}],\"name\":\"SetSignerUpdateThrottle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newMpc\",\"type\":\"address\"}],\"name\":\"UpdateMpc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cur\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WithrawDelayTimeChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"escrow\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockWithRewardRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_lockReward\",\"type\":\"bool\"}],\"name\":\"relock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"seqSigners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"name\":\"sequencers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct ILockingPool.SequencerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardUpdate(uint256,uint256)\":{\"details\":\"Emitted when the proxy update threshold in 'updateBlockReward()'.\",\"params\":{\"newReward\":\"new block reward\",\"oldReward\":\"old block reward\"}},\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetSignerUpdateThrottle(uint256)\":{\"details\":\"Emitted when SignerUpdateThrottle is updated\",\"params\":{\"_n\":\"new min value\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}},\"UpdateMpc(address)\":{\"details\":\"Emitted when mpc address update in 'UpdateMpc'\",\"params\":{\"_newMpc\":\"new min lock.\"}},\"WithrawDelayTimeChange(uint256,uint256)\":{\"details\":\"Emitted when WITHDRAWAL_DELAY is updated.\",\"params\":{\"_cur\":\"current withdraw delay time\",\"_prev\":\"previours withdraw delay time\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingPool.sol\":\"ILockingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n    function withdraw(uint256 _seqId, uint256 _amount) external;\\n}\",\"keccak256\":\"0xa7c18b713ed86a9a510c322241669b8d9ed6a1806c1d68229c5b440169938133\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ISequencerInfo.sol":{"ISequencerInfo":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"seqOwners(address)":"169abefc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ISequencerInfo.sol\":\"ISequencerInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/IVeMetisMinter.sol":{"IVeMetisMinter":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositToL1Dealer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintFromL1","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"depositToL1Dealer(uint256)":"ce40eb30","mint(address,uint256)":"40c10f19","mintFromL1(uint256)":"eb82afb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToL1Dealer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintFromL1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IVeMetisMinter.sol\":\"IVeMetisMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IVeMetisMinter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IVeMetisMinter {\\n    function mint(address user, uint256 amount) external;\\n\\n    function mintFromL1(uint256 amount) external;\\n\\n    function depositToL1Dealer(uint256 amount) external payable;\\n}\",\"keccak256\":\"0x19711cc1c9f794c07bf02cca34f9895ef30b1372ca32b5c7a9d1d46147ac158c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}