{"id":"fd83519aed23970c27afa11a06d6e6c2","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"interface/IL1ERC20Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >0.5.0 <0.9.0;\n\n/**\n * @title IL1ERC20Bridge\n */\ninterface IL1ERC20Bridge {\n    /**********\n     * Events *\n     **********/\n\n    event ERC20DepositInitiated(\n        address indexed _l1Token,\n        address indexed _l2Token,\n        address indexed _from,\n        address _to,\n        uint256 _amount,\n        bytes _data\n    );\n\n    event ERC20WithdrawalFinalized(\n        address indexed _l1Token,\n        address indexed _l2Token,\n        address indexed _from,\n        address _to,\n        uint256 _amount,\n        bytes _data\n    );\n\n    event ERC20ChainID(uint256 _chainid);\n    \n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * @dev get the address of the corresponding L2 bridge contract.\n     * @return Address of the corresponding L2 bridge contract.\n     */\n    function l2TokenBridge() external returns (address);\n\n    /**\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _amount Amount of the ERC20 to deposit\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20(\n        address _l1Token,\n        address _l2Token,\n        uint256 _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    ) external;\n\n    /**\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _to L2 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20To(\n        address _l1Token,\n        address _l2Token,\n        address _to,\n        uint256 _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    ) external;\n    \n    /**\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\n     * @param _chainid chainid\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _amount Amount of the ERC20 to deposit\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20ByChainId (\n        uint256 _chainid,\n        address _l1Token,\n        address _l2Token,\n        uint _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    )\n        external payable;\n\n    /**\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\n     * @param _chainid chainid\n     * @param _l1Token Address of the L1 ERC20 we are depositing\n     * @param _l2Token Address of the L1 respective L2 ERC20\n     * @param _to L2 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\n     * @param _data Optional data to forward to L2. This data is provided\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\n     *        length, these contracts provide no guarantees about its content.\n     */\n    function depositERC20ToByChainId (\n        uint256 _chainid,\n        address _l1Token,\n        address _l2Token,\n        address _to,\n        uint _amount,\n        uint32 _l2Gas,\n        bytes calldata _data\n    )\n        external payable;\n    /*************************\n     * Cross-chain Functions *\n     *************************/\n\n    /**\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n     * L1 ERC20 token.\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\n     *\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\n     * @param _from L2 address initiating the transfer.\n     * @param _to L1 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _data Data provided by the sender on L2. This data is provided\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\n     *   length, these contracts provide no guarantees about its content.\n     */\n    function finalizeERC20Withdrawal(\n        address _l1Token,\n        address _l2Token,\n        address _from,\n        address _to,\n        uint256 _amount,\n        bytes calldata _data\n    ) external;\n    \n    /**\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n     * L1 ERC20 token.\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\n     *\n     * @param _chainid chainid\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\n     * @param _from L2 address initiating the transfer.\n     * @param _to L1 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _data Data provided by the sender on L2. This data is provided\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\n     *   length, these contracts provide no guarantees about its content.\n     */    \n     function finalizeERC20WithdrawalByChainId (\n        uint256 _chainid,\n        address _l1Token,\n        address _l2Token,\n        address _from,\n        address _to,\n        uint _amount,\n        bytes calldata _data\n    )\n        external;\n    /**\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n     * L1 ERC20 token.\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\n     *\n     * @param _chainid chainid\n     * @param _from L2 address initiating the transfer.\n     * @param _to L1 address to credit the withdrawal to.\n     * @param _amount Amount of the ERC20 to deposit.\n     * @param _data Data provided by the sender on L2. This data is provided\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\n     *   length, these contracts provide no guarantees about its content.\n     */    \n    function finalizeMetisWithdrawalByChainId (\n        uint256 _chainid,\n        address _from,\n        address _to,\n        uint _amount,\n        bytes calldata _data\n    )\n        external;\n}"},"interface/ILockingInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\nimport {ILockingInfo as ILockingInfoRaw} from \"./ILockingInfoRaw.sol\";\n\ninterface ILockingInfo is ILockingInfoRaw {\n    function bridge() external view returns(address);\n    function l1Token() external view returns(address);\n    function l2Token() external view returns(address);\n    function minLock() external view returns(uint256);\n    function maxLock() external view returns(uint256);\n}"},"interface/ILockingInfoRaw.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ISequencerInfo} from \"./ISequencerInfo.sol\";\n\ninterface ILockingInfo {\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n     * @param _newMinLock new min lock.\n     */\n    event SetMinLock(uint256 _newMinLock);\n\n    /**\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n     * @param _newMaxLock new max lock.\n     */\n    event SetMaxLock(uint256 _newMaxLock);\n\n    /**\n     * @dev Emitted when the reward payer is changed\n     * @param _payer new reward payer\n     */\n    event SetRewardPayer(address _payer);\n\n    /**\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n     * @param signer sequencer address.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param activationBatch sequencer's first epoch as proposer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     * @param signerPubkey public key of the sequencer\n     */\n    event Locked(\n        address indexed signer,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 indexed activationBatch,\n        uint256 amount,\n        uint256 total,\n        bytes signerPubkey\n    );\n\n    /**\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking new amount\n     * @param total the total locking amount\n     */\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\n\n    /**\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount withdraw new amount\n     */\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\n\n    /**\n     * @dev Emitted when sequencer relocking in 'relock()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param newAmount the updated lock amount.\n     */\n    event LockUpdate(\n        uint256 indexed sequencerId,\n        uint256 indexed nonce,\n        uint256 indexed newAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param recipient the address receive reward tokens\n     * @param amount the reward amount.\n     * @param totalAmount total rewards has liquidated\n     */\n    event ClaimRewards(\n        uint256 indexed sequencerId,\n        address recipient,\n        uint256 indexed amount,\n        uint256 indexed totalAmount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param deactivationBatch  last batch for sequencer.\n     * @param deactivationTime unlock block timestamp.\n     * @param unlockClaimTime when user can claim locked token.\n     * @param amount locking amount\n     */\n    event UnlockInit(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        uint256 deactivationBatch,\n        uint256 deactivationTime,\n        uint256 unlockClaimTime,\n        uint256 indexed amount\n    );\n\n    /**\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\n     * @param user address of the sequencer.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param amount locking amount.\n     * @param total total locking amount.\n     */\n    event Unlocked(\n        address indexed user,\n        uint256 indexed sequencerId,\n        uint256 amount,\n        uint256 total\n    );\n\n    /**\n     * @dev Emitted when batch update in  'batchSubmitRewards'\n     * @param _newBatchId new batchId.\n     *\n     *      Note from maintainer:\n     *      for compatibility, the event is retained\n     */\n    event BatchSubmitReward(uint256 _newBatchId);\n\n    /**\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n     * @param sequencerId unique integer to identify a sequencer.\n     * @param nonce to synchronize the events in themis.\n     * @param oldSigner oldSigner old address of the sequencer.\n     * @param newSigner newSigner new address of the sequencer.\n     * @param signerPubkey signerPubkey public key of the sequencer.\n     */\n    event SignerChange(\n        uint256 indexed sequencerId,\n        uint256 nonce,\n        address indexed oldSigner,\n        address indexed newSigner,\n        bytes signerPubkey\n    );\n\n    function newSequencer(\n        uint256 _id,\n        address _owner,\n        address _signer,\n        uint256 _amount,\n        uint256 _batchId,\n        bytes calldata _signerPubkey\n    ) external;\n\n    function increaseLocked(\n        uint256 _seqId,\n        uint256 _nonce,\n        address _owner,\n        uint256 _locked,\n        uint256 _incoming,\n        uint256 _fromReward\n    ) external;\n\n    function withdrawLocking(\n        uint256 _seqId,\n        address _owner,\n        uint256 _nonce,\n        uint256 _amount,\n        uint256 _locked\n    ) external;\n\n    function initializeUnlock(\n        uint256 _seqId,\n        uint256 _reward,\n        uint32 _l2gas,\n        ISequencerInfo.Sequencer calldata _seq\n    ) external payable;\n\n    function finalizeUnlock(\n        address _owner,\n        uint256 _seqId,\n        uint256 _amount,\n        uint256 _reward,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function liquidateReward(\n        uint256 _seqId,\n        uint256 _amount,\n        address _recipient,\n        uint32 _l2gas\n    ) external payable;\n\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\n\n    function logSignerChange(\n        uint256 sequencerId,\n        address oldSigner,\n        address newSigner,\n        uint256 nonce,\n        bytes calldata signerPubkey\n    ) external;\n}"},"interface/ILockingPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.9;\n\nimport \"./ILockingInfo.sol\";\nimport \"./ISequencerInfo.sol\";\n\ninterface ILockingPool is ISequencerInfo {\n    struct SequencerData {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n    }\n\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\n    function escrow() external view returns (ILockingInfo);\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\n    function seqSigners(address signer) external view returns (uint256 seqId);\n\n    /**\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\n     * @param _cur current withdraw delay time\n     * @param _prev previours withdraw delay time\n     */\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\n\n    /**\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n     * @param newReward new block reward\n     * @param oldReward  old block reward\n     */\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\n\n    /**\n     * @dev Emitted when mpc address update in 'UpdateMpc'\n     * @param _newMpc new min lock.\n     */\n    event UpdateMpc(address _newMpc);\n\n    /**\n     * @dev Emitted when SignerUpdateThrottle is updated\n     * @param _n new min value\n     */\n    event SetSignerUpdateThrottle(uint256 _n);\n    function withdraw(uint256 _seqId, uint256 _amount) external;\n}"},"interface/ISequencerInfo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface ISequencerInfo {\n    error OwnedSequencer();\n    error SignerExisted();\n    error NoSuchSeq();\n    error NullAddress();\n    error SeqNotActive();\n    error NotSeqOwner();\n    error NotSeqSigner();\n    error NoRewardRecipient();\n    error NotWhitelisted();\n\n    // the sequencer status\n    enum Status {\n        Unavailabe, // placeholder for default value\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\n        Active, // the sequencer is active when it locks tokens on the contract\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\n    }\n\n    struct Sequencer {\n        uint256 amount; // sequencer current locked\n        uint256 reward; // sequencer current reward that have not cleamed\n        uint256 activationBatch; // sequencer activation batch id\n        uint256 updatedBatch; // batch id of the last updated\n        uint256 deactivationBatch; // sequencer deactivation batch id\n        uint256 deactivationTime; // sequencer deactivation timestamp\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\n        bytes pubkey; // sequencer signer pubkey\n        address rewardRecipient; // sequencer rewarder recipient address\n        Status status; // sequencer status\n    }\n\n    /**\n     * @dev Emitted if owner call 'setWhitelist'\n     * @param _user the address who can lock token\n     * @param _yes white address state\n     */\n    event SetWhitelist(address _user, bool _yes);\n\n    /**\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n     * @param _seqId the sequencerId\n     * @param _recipient the address receive reward token\n     */\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\n\n    /**\n     * @dev Emitted when sequencer owner is changed\n     * @param _seqId the sequencerId\n     * @param _owner the sequencer owner\n     */\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\n\n    function seqOwners(address owner) external returns (uint256 seqId);\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"interface/IL1ERC20Bridge.sol":{"ast":{"absolutePath":"interface/IL1ERC20Bridge.sol","exportedSymbols":{"IL1ERC20Bridge":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">","0.5",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:30:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IL1ERC20Bridge","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"64:32:0","text":" @title IL1ERC20Bridge"},"fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"IL1ERC20Bridge","nameLocation":"107:14:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d0396","id":16,"name":"ERC20DepositInitiated","nameLocation":"184:21:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"indexed":true,"mutability":"mutable","name":"_l1Token","nameLocation":"231:8:0","nodeType":"VariableDeclaration","scope":16,"src":"215:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"indexed":true,"mutability":"mutable","name":"_l2Token","nameLocation":"265:8:0","nodeType":"VariableDeclaration","scope":16,"src":"249:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"249:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"299:5:0","nodeType":"VariableDeclaration","scope":16,"src":"283:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"283:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":false,"mutability":"mutable","name":"_to","nameLocation":"322:3:0","nodeType":"VariableDeclaration","scope":16,"src":"314:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"314:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"343:7:0","nodeType":"VariableDeclaration","scope":16,"src":"335:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":false,"mutability":"mutable","name":"_data","nameLocation":"366:5:0","nodeType":"VariableDeclaration","scope":16,"src":"360:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13,"name":"bytes","nodeType":"ElementaryTypeName","src":"360:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"205:172:0"},"src":"178:200:0"},{"anonymous":false,"eventSelector":"3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b3","id":30,"name":"ERC20WithdrawalFinalized","nameLocation":"390:24:0","nodeType":"EventDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"indexed":true,"mutability":"mutable","name":"_l1Token","nameLocation":"440:8:0","nodeType":"VariableDeclaration","scope":30,"src":"424:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"_l2Token","nameLocation":"474:8:0","nodeType":"VariableDeclaration","scope":30,"src":"458:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"458:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"_from","nameLocation":"508:5:0","nodeType":"VariableDeclaration","scope":30,"src":"492:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"492:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"indexed":false,"mutability":"mutable","name":"_to","nameLocation":"531:3:0","nodeType":"VariableDeclaration","scope":30,"src":"523:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"552:7:0","nodeType":"VariableDeclaration","scope":30,"src":"544:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":false,"mutability":"mutable","name":"_data","nameLocation":"575:5:0","nodeType":"VariableDeclaration","scope":30,"src":"569:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"569:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"414:172:0"},"src":"384:203:0"},{"anonymous":false,"eventSelector":"c333b5c3e71358b85edbb94334230ac00644c26af29851f9034a7105eb84b077","id":34,"name":"ERC20ChainID","nameLocation":"599:12:0","nodeType":"EventDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"indexed":false,"mutability":"mutable","name":"_chainid","nameLocation":"620:8:0","nodeType":"VariableDeclaration","scope":34,"src":"612:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:18:0"},"src":"593:37:0"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"720:144:0","text":" @dev get the address of the corresponding L2 bridge contract.\n @return Address of the corresponding L2 bridge contract."},"functionSelector":"91c49bf8","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"l2TokenBridge","nameLocation":"878:13:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[],"src":"891:2:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"912:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:9:0"},"scope":153,"src":"869:52:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"927:581:0","text":" @dev deposit an amount of the ERC20 to the caller's balance on L2.\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _amount Amount of the ERC20 to deposit\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"58a997f6","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20","nameLocation":"1522:12:0","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"_l1Token","nameLocation":"1552:8:0","nodeType":"VariableDeclaration","scope":54,"src":"1544:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"_l2Token","nameLocation":"1578:8:0","nodeType":"VariableDeclaration","scope":54,"src":"1570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"_amount","nameLocation":"1604:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1596:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"_l2Gas","nameLocation":"1628:6:0","nodeType":"VariableDeclaration","scope":54,"src":"1621:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":48,"name":"uint32","nodeType":"ElementaryTypeName","src":"1621:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"_data","nameLocation":"1659:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1644:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":50,"name":"bytes","nodeType":"ElementaryTypeName","src":"1644:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1534:136:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"1679:0:0"},"scope":153,"src":"1513:167:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1686:637:0","text":" @dev deposit an amount of ERC20 to a recipient's balance on L2.\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _to L2 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"838b2520","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20To","nameLocation":"2337:14:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"_l1Token","nameLocation":"2369:8:0","nodeType":"VariableDeclaration","scope":70,"src":"2361:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"_l2Token","nameLocation":"2395:8:0","nodeType":"VariableDeclaration","scope":70,"src":"2387:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"_to","nameLocation":"2421:3:0","nodeType":"VariableDeclaration","scope":70,"src":"2413:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2413:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"_amount","nameLocation":"2442:7:0","nodeType":"VariableDeclaration","scope":70,"src":"2434:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"2434:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"_l2Gas","nameLocation":"2466:6:0","nodeType":"VariableDeclaration","scope":70,"src":"2459:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64,"name":"uint32","nodeType":"ElementaryTypeName","src":"2459:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"_data","nameLocation":"2497:5:0","nodeType":"VariableDeclaration","scope":70,"src":"2482:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":66,"name":"bytes","nodeType":"ElementaryTypeName","src":"2482:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2351:157:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2517:0:0"},"scope":153,"src":"2328:190:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2528:612:0","text":" @dev deposit an amount of the ERC20 to the caller's balance on L2.\n @param _chainid chainid\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _amount Amount of the ERC20 to deposit\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"a396a59c","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20ByChainId","nameLocation":"3154:21:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"_chainid","nameLocation":"3194:8:0","nodeType":"VariableDeclaration","scope":86,"src":"3186:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"_l1Token","nameLocation":"3220:8:0","nodeType":"VariableDeclaration","scope":86,"src":"3212:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"_l2Token","nameLocation":"3246:8:0","nodeType":"VariableDeclaration","scope":86,"src":"3238:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"_amount","nameLocation":"3269:7:0","nodeType":"VariableDeclaration","scope":86,"src":"3264:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint","nodeType":"ElementaryTypeName","src":"3264:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"_l2Gas","nameLocation":"3293:6:0","nodeType":"VariableDeclaration","scope":86,"src":"3286:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":80,"name":"uint32","nodeType":"ElementaryTypeName","src":"3286:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"_data","nameLocation":"3324:5:0","nodeType":"VariableDeclaration","scope":86,"src":"3309:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":82,"name":"bytes","nodeType":"ElementaryTypeName","src":"3309:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3176:159:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3360:0:0"},"scope":153,"src":"3145:216:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"3367:668:0","text":" @dev deposit an amount of ERC20 to a recipient's balance on L2.\n @param _chainid chainid\n @param _l1Token Address of the L1 ERC20 we are depositing\n @param _l2Token Address of the L1 respective L2 ERC20\n @param _to L2 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _l2Gas Gas limit required to complete the deposit on L2.\n @param _data Optional data to forward to L2. This data is provided\n        solely as a convenience for external contracts. Aside from enforcing a maximum\n        length, these contracts provide no guarantees about its content."},"functionSelector":"ef808be2","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"depositERC20ToByChainId","nameLocation":"4049:23:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"_chainid","nameLocation":"4091:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4083:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"4083:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"_l1Token","nameLocation":"4117:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4109:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"4109:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"_l2Token","nameLocation":"4143:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4135:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4135:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"_to","nameLocation":"4169:3:0","nodeType":"VariableDeclaration","scope":104,"src":"4161:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"4161:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"_amount","nameLocation":"4187:7:0","nodeType":"VariableDeclaration","scope":104,"src":"4182:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint","nodeType":"ElementaryTypeName","src":"4182:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"_l2Gas","nameLocation":"4211:6:0","nodeType":"VariableDeclaration","scope":104,"src":"4204:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":98,"name":"uint32","nodeType":"ElementaryTypeName","src":"4204:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"_data","nameLocation":"4242:5:0","nodeType":"VariableDeclaration","scope":104,"src":"4227:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":100,"name":"bytes","nodeType":"ElementaryTypeName","src":"4227:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4073:180:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[],"src":"4278:0:0"},"scope":153,"src":"4040:239:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"4379:782:0","text":" @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n L1 ERC20 token.\n This call will fail if the initialized withdrawal from L2 has not been finalized.\n @param _l1Token Address of L1 token to finalizeWithdrawal for.\n @param _l2Token Address of L2 token where withdrawal was initiated.\n @param _from L2 address initiating the transfer.\n @param _to L1 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _data Data provided by the sender on L2. This data is provided\n   solely as a convenience for external contracts. Aside from enforcing a maximum\n   length, these contracts provide no guarantees about its content."},"functionSelector":"a9f9e675","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeERC20Withdrawal","nameLocation":"5175:23:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"_l1Token","nameLocation":"5216:8:0","nodeType":"VariableDeclaration","scope":120,"src":"5208:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"5208:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"_l2Token","nameLocation":"5242:8:0","nodeType":"VariableDeclaration","scope":120,"src":"5234:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5234:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"_from","nameLocation":"5268:5:0","nodeType":"VariableDeclaration","scope":120,"src":"5260:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"5260:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"_to","nameLocation":"5291:3:0","nodeType":"VariableDeclaration","scope":120,"src":"5283:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"5283:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"_amount","nameLocation":"5312:7:0","nodeType":"VariableDeclaration","scope":120,"src":"5304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5304:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"_data","nameLocation":"5344:5:0","nodeType":"VariableDeclaration","scope":120,"src":"5329:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"5329:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5198:157:0"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"5364:0:0"},"scope":153,"src":"5166:199:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"5375:813:0","text":" @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n L1 ERC20 token.\n This call will fail if the initialized withdrawal from L2 has not been finalized.\n @param _chainid chainid\n @param _l1Token Address of L1 token to finalizeWithdrawal for.\n @param _l2Token Address of L2 token where withdrawal was initiated.\n @param _from L2 address initiating the transfer.\n @param _to L1 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _data Data provided by the sender on L2. This data is provided\n   solely as a convenience for external contracts. Aside from enforcing a maximum\n   length, these contracts provide no guarantees about its content."},"functionSelector":"6cebdc45","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeERC20WithdrawalByChainId","nameLocation":"6207:32:0","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"_chainid","nameLocation":"6258:8:0","nodeType":"VariableDeclaration","scope":138,"src":"6250:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"6250:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"_l1Token","nameLocation":"6284:8:0","nodeType":"VariableDeclaration","scope":138,"src":"6276:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"6276:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"_l2Token","nameLocation":"6310:8:0","nodeType":"VariableDeclaration","scope":138,"src":"6302:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"_from","nameLocation":"6336:5:0","nodeType":"VariableDeclaration","scope":138,"src":"6328:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"_to","nameLocation":"6359:3:0","nodeType":"VariableDeclaration","scope":138,"src":"6351:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"6351:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"_amount","nameLocation":"6377:7:0","nodeType":"VariableDeclaration","scope":138,"src":"6372:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint","nodeType":"ElementaryTypeName","src":"6372:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"_data","nameLocation":"6409:5:0","nodeType":"VariableDeclaration","scope":138,"src":"6394:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":134,"name":"bytes","nodeType":"ElementaryTypeName","src":"6394:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6240:180:0"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[],"src":"6437:0:0"},"scope":153,"src":"6198:240:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"6443:668:0","text":" @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\n L1 ERC20 token.\n This call will fail if the initialized withdrawal from L2 has not been finalized.\n @param _chainid chainid\n @param _from L2 address initiating the transfer.\n @param _to L1 address to credit the withdrawal to.\n @param _amount Amount of the ERC20 to deposit.\n @param _data Data provided by the sender on L2. This data is provided\n   solely as a convenience for external contracts. Aside from enforcing a maximum\n   length, these contracts provide no guarantees about its content."},"functionSelector":"90a40a76","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeMetisWithdrawalByChainId","nameLocation":"7129:32:0","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"_chainid","nameLocation":"7180:8:0","nodeType":"VariableDeclaration","scope":152,"src":"7172:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"7172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"_from","nameLocation":"7206:5:0","nodeType":"VariableDeclaration","scope":152,"src":"7198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"7198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"_to","nameLocation":"7229:3:0","nodeType":"VariableDeclaration","scope":152,"src":"7221:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"7221:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"_amount","nameLocation":"7247:7:0","nodeType":"VariableDeclaration","scope":152,"src":"7242:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint","nodeType":"ElementaryTypeName","src":"7242:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"_data","nameLocation":"7279:5:0","nodeType":"VariableDeclaration","scope":152,"src":"7264:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":148,"name":"bytes","nodeType":"ElementaryTypeName","src":"7264:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7162:128:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"7307:0:0"},"scope":153,"src":"7120:188:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":154,"src":"97:7213:0","usedErrors":[],"usedEvents":[16,30,34]}],"src":"32:7278:0"},"id":0},"interface/ILockingInfo.sol":{"ast":{"absolutePath":"interface/ILockingInfo.sol","exportedSymbols":{"ILockingInfo":[187],"ILockingInfoRaw":[407],"ISequencerInfo":[619]},"id":188,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":188,"sourceUnit":620,"src":"57:52:1","symbolAliases":[{"foreign":{"id":156,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"interface/ILockingInfoRaw.sol","file":"./ILockingInfoRaw.sol","id":159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":188,"sourceUnit":408,"src":"110:70:1","symbolAliases":[{"foreign":{"id":158,"name":"ILockingInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"118:12:1","typeDescriptions":{}},"local":"ILockingInfoRaw","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":160,"name":"ILockingInfoRaw","nameLocations":["208:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"208:15:1"},"id":161,"nodeType":"InheritanceSpecifier","src":"208:15:1"}],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":187,"linearizedBaseContracts":[187,407],"name":"ILockingInfo","nameLocation":"192:12:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e78cea92","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"bridge","nameLocation":"239:6:1","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"245:2:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"269:9:1"},"scope":187,"src":"230:49:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c01e1bd6","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"l1Token","nameLocation":"293:7:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"300:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"325:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"324:9:1"},"scope":187,"src":"284:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"56eff267","id":176,"implemented":false,"kind":"function","modifiers":[],"name":"l2Token","nameLocation":"348:7:1","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"355:2:1"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"380:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:9:1"},"scope":187,"src":"339:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f037c630","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"minLock","nameLocation":"403:7:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"410:2:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"435:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:9:1"},"scope":187,"src":"394:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c0b3e46","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"maxLock","nameLocation":"458:7:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"465:2:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"490:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:9:1"},"scope":187,"src":"449:50:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":188,"src":"182:319:1","usedErrors":[],"usedEvents":[196,201,206,223,232,239,248,259,276,287,292,305]}],"src":"32:469:1"},"id":1},"interface/ILockingInfoRaw.sol":{"ast":{"absolutePath":"interface/ILockingInfoRaw.sol","exportedSymbols":{"ILockingInfo":[407],"ISequencerInfo":[619]},"id":408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":189,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":408,"sourceUnit":620,"src":"57:52:2","symbolAliases":[{"foreign":{"id":190,"name":"ISequencerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"65:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILockingInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":407,"linearizedBaseContracts":[407],"name":"ILockingInfo","nameLocation":"121:12:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"140:121:2","text":" @dev Emitted when min lock amount update in 'UpdateMinAmounts'\n @param _newMinLock new min lock."},"eventSelector":"abb05374bb45ebfef33afb21ec5aa52333708d8217fd8e5c0616efd2530b2145","id":196,"name":"SetMinLock","nameLocation":"272:10:2","nodeType":"EventDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"indexed":false,"mutability":"mutable","name":"_newMinLock","nameLocation":"291:11:2","nodeType":"VariableDeclaration","scope":196,"src":"283:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:21:2"},"src":"266:38:2"},{"anonymous":false,"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"310:121:2","text":" @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\n @param _newMaxLock new max lock."},"eventSelector":"be23e9641c545443c3c625039b327c0eee88e9024040be7b03c5d73862d425e0","id":201,"name":"SetMaxLock","nameLocation":"442:10:2","nodeType":"EventDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"indexed":false,"mutability":"mutable","name":"_newMaxLock","nameLocation":"461:11:2","nodeType":"VariableDeclaration","scope":201,"src":"453:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:21:2"},"src":"436:38:2"},{"anonymous":false,"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"480:102:2","text":" @dev Emitted when the reward payer is changed\n @param _payer new reward payer"},"eventSelector":"30b92f5a89d7473895c4e9ce260fa7d0eefef2d59d5e68192e2e8cca4b9473a0","id":206,"name":"SetRewardPayer","nameLocation":"593:14:2","nodeType":"EventDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"indexed":false,"mutability":"mutable","name":"_payer","nameLocation":"616:6:2","nodeType":"VariableDeclaration","scope":206,"src":"608:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"608:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"607:16:2"},"src":"587:37:2"},{"anonymous":false,"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"630:448:2","text":" @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\n @param signer sequencer address.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param activationBatch sequencer's first epoch as proposer.\n @param amount locking amount.\n @param total total locking amount.\n @param signerPubkey public key of the sequencer"},"eventSelector":"e6f1eb1f1d0ca344d03cf47b9e6ece8a7d3b196e38dd7dd2307cca75e26682a8","id":223,"name":"Locked","nameLocation":"1089:6:2","nodeType":"EventDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"1121:6:2","nodeType":"VariableDeclaration","scope":223,"src":"1105:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1153:11:2","nodeType":"VariableDeclaration","scope":223,"src":"1137:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":213,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1182:5:2","nodeType":"VariableDeclaration","scope":223,"src":"1174:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":215,"indexed":true,"mutability":"mutable","name":"activationBatch","nameLocation":"1213:15:2","nodeType":"VariableDeclaration","scope":223,"src":"1197:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1246:6:2","nodeType":"VariableDeclaration","scope":223,"src":"1238:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1238:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":219,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1270:5:2","nodeType":"VariableDeclaration","scope":223,"src":"1262:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1262:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":221,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"1291:12:2","nodeType":"VariableDeclaration","scope":223,"src":"1285:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"1285:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1095:214:2"},"src":"1083:227:2"},{"anonymous":false,"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"1316:237:2","text":" @dev Emitted when the sequencer increase lock amount in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking new amount\n @param total the total locking amount"},"eventSelector":"33a87ba488658b3d1319098cd49c6d65b72a79c0f3530fec611e7afffed04395","id":232,"name":"Relocked","nameLocation":"1564:8:2","nodeType":"EventDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1589:11:2","nodeType":"VariableDeclaration","scope":232,"src":"1573:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1610:6:2","nodeType":"VariableDeclaration","scope":232,"src":"1602:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"1626:5:2","nodeType":"VariableDeclaration","scope":232,"src":"1618:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:60:2"},"src":"1558:75:2"},{"anonymous":false,"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"1639:193:2","text":" @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\n @param sequencerId unique integer to identify a sequencer.\n @param amount withdraw new amount"},"eventSelector":"56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8","id":239,"name":"Withdraw","nameLocation":"1843:8:2","nodeType":"EventDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"1868:11:2","nodeType":"VariableDeclaration","scope":239,"src":"1852:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":237,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1889:6:2","nodeType":"VariableDeclaration","scope":239,"src":"1881:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1851:45:2"},"src":"1837:60:2"},{"anonymous":false,"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1903:243:2","text":" @dev Emitted when sequencer relocking in 'relock()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param newAmount the updated lock amount."},"eventSelector":"d716c027b3dd610e4534df756848128bbb159a757724c17d89fcc4d0151b1f30","id":248,"name":"LockUpdate","nameLocation":"2157:10:2","nodeType":"EventDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2193:11:2","nodeType":"VariableDeclaration","scope":248,"src":"2177:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":244,"indexed":true,"mutability":"mutable","name":"nonce","nameLocation":"2230:5:2","nodeType":"VariableDeclaration","scope":248,"src":"2214:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":246,"indexed":true,"mutability":"mutable","name":"newAmount","nameLocation":"2261:9:2","nodeType":"VariableDeclaration","scope":248,"src":"2245:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2167:109:2"},"src":"2151:126:2"},{"anonymous":false,"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"2283:320:2","text":" @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\n @param sequencerId unique integer to identify a sequencer.\n @param recipient the address receive reward tokens\n @param amount the reward amount.\n @param totalAmount total rewards has liquidated"},"eventSelector":"18c7dc2a1800c409227dc12c0c05ada9c995ebfe0e42ae6d65f1b3ae3e6111de","id":259,"name":"ClaimRewards","nameLocation":"2614:12:2","nodeType":"EventDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"2652:11:2","nodeType":"VariableDeclaration","scope":259,"src":"2636:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":253,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"2681:9:2","nodeType":"VariableDeclaration","scope":259,"src":"2673:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"2673:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"2716:6:2","nodeType":"VariableDeclaration","scope":259,"src":"2700:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"indexed":true,"mutability":"mutable","name":"totalAmount","nameLocation":"2748:11:2","nodeType":"VariableDeclaration","scope":259,"src":"2732:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2626:139:2"},"src":"2608:158:2"},{"anonymous":false,"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"2772:452:2","text":" @dev Emitted when sequencer unlocks in '_unlock()'.\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param deactivationBatch  last batch for sequencer.\n @param deactivationTime unlock block timestamp.\n @param unlockClaimTime when user can claim locked token.\n @param amount locking amount"},"eventSelector":"06d9e13438f0daf13a71d63f3f8579db8bdeb299e4b651942313c73224d7af69","id":276,"name":"UnlockInit","nameLocation":"3235:10:2","nodeType":"EventDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3271:4:2","nodeType":"VariableDeclaration","scope":276,"src":"3255:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3301:11:2","nodeType":"VariableDeclaration","scope":276,"src":"3285:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"3285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3330:5:2","nodeType":"VariableDeclaration","scope":276,"src":"3322:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":false,"mutability":"mutable","name":"deactivationBatch","nameLocation":"3353:17:2","nodeType":"VariableDeclaration","scope":276,"src":"3345:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"deactivationTime","nameLocation":"3388:16:2","nodeType":"VariableDeclaration","scope":276,"src":"3380:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"3422:15:2","nodeType":"VariableDeclaration","scope":276,"src":"3414:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":274,"indexed":true,"mutability":"mutable","name":"amount","nameLocation":"3463:6:2","nodeType":"VariableDeclaration","scope":276,"src":"3447:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3245:230:2"},"src":"3229:247:2"},{"anonymous":false,"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3482:263:2","text":" @dev Emitted when sequencer unlocks in 'unlockClaim()'\n @param user address of the sequencer.\n @param sequencerId unique integer to identify a sequencer.\n @param amount locking amount.\n @param total total locking amount."},"eventSelector":"5245d528087a96a64f4589a764f00061e4671eab90cb1e019b1a5b24b2e4c2a8","id":287,"name":"Unlocked","nameLocation":"3756:8:2","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3790:4:2","nodeType":"VariableDeclaration","scope":287,"src":"3774:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"3774:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"3820:11:2","nodeType":"VariableDeclaration","scope":287,"src":"3804:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3804:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3849:6:2","nodeType":"VariableDeclaration","scope":287,"src":"3841:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":285,"indexed":false,"mutability":"mutable","name":"total","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":287,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3865:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3764:120:2"},"src":"3750:135:2"},{"anonymous":false,"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"3891:207:2","text":" @dev Emitted when batch update in  'batchSubmitRewards'\n @param _newBatchId new batchId.\n      Note from maintainer:\n      for compatibility, the event is retained"},"eventSelector":"9e5aedd489785d05ba086064386f2e75b3e497d3dc00a54ed1c78bfc50a3953f","id":292,"name":"BatchSubmitReward","nameLocation":"4109:17:2","nodeType":"EventDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"indexed":false,"mutability":"mutable","name":"_newBatchId","nameLocation":"4135:11:2","nodeType":"VariableDeclaration","scope":292,"src":"4127:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4126:21:2"},"src":"4103:45:2"},{"anonymous":false,"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"4154:413:2","text":" @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\n @param sequencerId unique integer to identify a sequencer.\n @param nonce to synchronize the events in themis.\n @param oldSigner oldSigner old address of the sequencer.\n @param newSigner newSigner new address of the sequencer.\n @param signerPubkey signerPubkey public key of the sequencer."},"eventSelector":"086044c0612a8c965d4cccd907f0d588e40ad68438bd4c1274cac60f4c3a9d1f","id":305,"name":"SignerChange","nameLocation":"4578:12:2","nodeType":"EventDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"indexed":true,"mutability":"mutable","name":"sequencerId","nameLocation":"4616:11:2","nodeType":"VariableDeclaration","scope":305,"src":"4600:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"4600:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"4645:5:2","nodeType":"VariableDeclaration","scope":305,"src":"4637:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"4637:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"indexed":true,"mutability":"mutable","name":"oldSigner","nameLocation":"4676:9:2","nodeType":"VariableDeclaration","scope":305,"src":"4660:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"4660:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"4711:9:2","nodeType":"VariableDeclaration","scope":305,"src":"4695:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":false,"mutability":"mutable","name":"signerPubkey","nameLocation":"4736:12:2","nodeType":"VariableDeclaration","scope":305,"src":"4730:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":302,"name":"bytes","nodeType":"ElementaryTypeName","src":"4730:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4590:164:2"},"src":"4572:183:2"},{"functionSelector":"1badded5","id":320,"implemented":false,"kind":"function","modifiers":[],"name":"newSequencer","nameLocation":"4770:12:2","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"_id","nameLocation":"4800:3:2","nodeType":"VariableDeclaration","scope":320,"src":"4792:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4792:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"_owner","nameLocation":"4821:6:2","nodeType":"VariableDeclaration","scope":320,"src":"4813:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"_signer","nameLocation":"4845:7:2","nodeType":"VariableDeclaration","scope":320,"src":"4837:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4837:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"_amount","nameLocation":"4870:7:2","nodeType":"VariableDeclaration","scope":320,"src":"4862:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"4862:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"_batchId","nameLocation":"4895:8:2","nodeType":"VariableDeclaration","scope":320,"src":"4887:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"_signerPubkey","nameLocation":"4928:13:2","nodeType":"VariableDeclaration","scope":320,"src":"4913:28:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":316,"name":"bytes","nodeType":"ElementaryTypeName","src":"4913:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4782:165:2"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"4956:0:2"},"scope":407,"src":"4761:196:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2684b8ec","id":335,"implemented":false,"kind":"function","modifiers":[],"name":"increaseLocked","nameLocation":"4972:14:2","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"_seqId","nameLocation":"5004:6:2","nodeType":"VariableDeclaration","scope":335,"src":"4996:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"_nonce","nameLocation":"5028:6:2","nodeType":"VariableDeclaration","scope":335,"src":"5020:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5020:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"_owner","nameLocation":"5052:6:2","nodeType":"VariableDeclaration","scope":335,"src":"5044:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"5044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"_locked","nameLocation":"5076:7:2","nodeType":"VariableDeclaration","scope":335,"src":"5068:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"_incoming","nameLocation":"5101:9:2","nodeType":"VariableDeclaration","scope":335,"src":"5093:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5093:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"_fromReward","nameLocation":"5128:11:2","nodeType":"VariableDeclaration","scope":335,"src":"5120:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4986:159:2"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"5154:0:2"},"scope":407,"src":"4963:192:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"234898b3","id":348,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawLocking","nameLocation":"5170:15:2","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"_seqId","nameLocation":"5203:6:2","nodeType":"VariableDeclaration","scope":348,"src":"5195:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"5195:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"_owner","nameLocation":"5227:6:2","nodeType":"VariableDeclaration","scope":348,"src":"5219:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"_nonce","nameLocation":"5251:6:2","nodeType":"VariableDeclaration","scope":348,"src":"5243:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5243:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"_amount","nameLocation":"5275:7:2","nodeType":"VariableDeclaration","scope":348,"src":"5267:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"_locked","nameLocation":"5300:7:2","nodeType":"VariableDeclaration","scope":348,"src":"5292:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"5292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5185:128:2"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"5322:0:2"},"scope":407,"src":"5161:162:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2243069c","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"initializeUnlock","nameLocation":"5338:16:2","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"_seqId","nameLocation":"5372:6:2","nodeType":"VariableDeclaration","scope":360,"src":"5364:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"5364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"_reward","nameLocation":"5396:7:2","nodeType":"VariableDeclaration","scope":360,"src":"5388:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"_l2gas","nameLocation":"5420:6:2","nodeType":"VariableDeclaration","scope":360,"src":"5413:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":353,"name":"uint32","nodeType":"ElementaryTypeName","src":"5413:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"_seq","nameLocation":"5470:4:2","nodeType":"VariableDeclaration","scope":360,"src":"5436:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$590_calldata_ptr","typeString":"struct ISequencerInfo.Sequencer"},"typeName":{"id":356,"nodeType":"UserDefinedTypeName","pathNode":{"id":355,"name":"ISequencerInfo.Sequencer","nameLocations":["5436:14:2","5451:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"5436:24:2"},"referencedDeclaration":590,"src":"5436:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Sequencer_$590_storage_ptr","typeString":"struct ISequencerInfo.Sequencer"}},"visibility":"internal"}],"src":"5354:126:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"5497:0:2"},"scope":407,"src":"5329:169:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"528ed12a","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeUnlock","nameLocation":"5513:14:2","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"_owner","nameLocation":"5545:6:2","nodeType":"VariableDeclaration","scope":375,"src":"5537:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"5537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"_seqId","nameLocation":"5569:6:2","nodeType":"VariableDeclaration","scope":375,"src":"5561:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5561:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"_amount","nameLocation":"5593:7:2","nodeType":"VariableDeclaration","scope":375,"src":"5585:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"_reward","nameLocation":"5618:7:2","nodeType":"VariableDeclaration","scope":375,"src":"5610:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"5610:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"_recipient","nameLocation":"5643:10:2","nodeType":"VariableDeclaration","scope":375,"src":"5635:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"5635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_l2gas","nameLocation":"5670:6:2","nodeType":"VariableDeclaration","scope":375,"src":"5663:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":371,"name":"uint32","nodeType":"ElementaryTypeName","src":"5663:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5527:155:2"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"5699:0:2"},"scope":407,"src":"5504:196:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5d7878a8","id":386,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateReward","nameLocation":"5715:15:2","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"_seqId","nameLocation":"5748:6:2","nodeType":"VariableDeclaration","scope":386,"src":"5740:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5740:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"_amount","nameLocation":"5772:7:2","nodeType":"VariableDeclaration","scope":386,"src":"5764:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_recipient","nameLocation":"5797:10:2","nodeType":"VariableDeclaration","scope":386,"src":"5789:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"5789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"_l2gas","nameLocation":"5824:6:2","nodeType":"VariableDeclaration","scope":386,"src":"5817:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":382,"name":"uint32","nodeType":"ElementaryTypeName","src":"5817:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5730:106:2"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"5853:0:2"},"scope":407,"src":"5706:148:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e3bcd27c","id":393,"implemented":false,"kind":"function","modifiers":[],"name":"distributeReward","nameLocation":"5869:16:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"_batchId","nameLocation":"5894:8:2","nodeType":"VariableDeclaration","scope":393,"src":"5886:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"_totalReward","nameLocation":"5912:12:2","nodeType":"VariableDeclaration","scope":393,"src":"5904:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5885:40:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"5934:0:2"},"scope":407,"src":"5860:75:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3285702","id":406,"implemented":false,"kind":"function","modifiers":[],"name":"logSignerChange","nameLocation":"5950:15:2","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"sequencerId","nameLocation":"5983:11:2","nodeType":"VariableDeclaration","scope":406,"src":"5975:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"oldSigner","nameLocation":"6012:9:2","nodeType":"VariableDeclaration","scope":406,"src":"6004:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"6004:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"newSigner","nameLocation":"6039:9:2","nodeType":"VariableDeclaration","scope":406,"src":"6031:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"6031:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"nonce","nameLocation":"6066:5:2","nodeType":"VariableDeclaration","scope":406,"src":"6058:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"signerPubkey","nameLocation":"6096:12:2","nodeType":"VariableDeclaration","scope":406,"src":"6081:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":402,"name":"bytes","nodeType":"ElementaryTypeName","src":"6081:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5965:149:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"6123:0:2"},"scope":407,"src":"5941:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":408,"src":"111:6015:2","usedErrors":[],"usedEvents":[196,201,206,223,232,239,248,259,276,287,292,305]}],"src":"32:6094:2"},"id":2},"interface/ILockingPool.sol":{"ast":{"absolutePath":"interface/ILockingPool.sol","exportedSymbols":{"ILockingInfo":[187],"ILockingInfoRaw":[407],"ILockingPool":[537],"ISequencerInfo":[619]},"id":538,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":409,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"45:23:3"},{"absolutePath":"interface/ILockingInfo.sol","file":"./ILockingInfo.sol","id":410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":538,"sourceUnit":188,"src":"70:28:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"interface/ISequencerInfo.sol","file":"./ISequencerInfo.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":538,"sourceUnit":620,"src":"99:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":412,"name":"ISequencerInfo","nameLocations":["157:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":619,"src":"157:14:3"},"id":413,"nodeType":"InheritanceSpecifier","src":"157:14:3"}],"canonicalName":"ILockingPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":537,"linearizedBaseContracts":[537,619],"name":"ILockingPool","nameLocation":"141:12:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ILockingPool.SequencerData","id":434,"members":[{"constant":false,"id":415,"mutability":"mutable","name":"amount","nameLocation":"217:6:3","nodeType":"VariableDeclaration","scope":434,"src":"209:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"reward","nameLocation":"269:6:3","nodeType":"VariableDeclaration","scope":434,"src":"261:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"activationBatch","nameLocation":"343:15:3","nodeType":"VariableDeclaration","scope":434,"src":"335:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"updatedBatch","nameLocation":"409:12:3","nodeType":"VariableDeclaration","scope":434,"src":"401:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"deactivationBatch","nameLocation":"471:17:3","nodeType":"VariableDeclaration","scope":434,"src":"463:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"deactivationTime","nameLocation":"541:16:3","nodeType":"VariableDeclaration","scope":434,"src":"533:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"611:15:3","nodeType":"VariableDeclaration","scope":434,"src":"603:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"nonce","nameLocation":"748:5:3","nodeType":"VariableDeclaration","scope":434,"src":"740:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"owner","nameLocation":"868:5:3","nodeType":"VariableDeclaration","scope":434,"src":"860:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"signer","nameLocation":"989:6:3","nodeType":"VariableDeclaration","scope":434,"src":"981:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SequencerData","nameLocation":"185:13:3","nodeType":"StructDefinition","scope":537,"src":"178:943:3","visibility":"public"},{"functionSelector":"af70cba5","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"lockFor","nameLocation":"1136:7:3","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"_signer","nameLocation":"1152:7:3","nodeType":"VariableDeclaration","scope":443,"src":"1144:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"_amount","nameLocation":"1169:7:3","nodeType":"VariableDeclaration","scope":443,"src":"1161:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1193:13:3","nodeType":"VariableDeclaration","scope":443,"src":"1178:28:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":439,"name":"bytes","nodeType":"ElementaryTypeName","src":"1178:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1143:64:3"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"1216:0:3"},"scope":537,"src":"1127:90:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9ad42030","id":454,"implemented":false,"kind":"function","modifiers":[],"name":"lockWithRewardRecipient","nameLocation":"1231:23:3","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"_signer","nameLocation":"1263:7:3","nodeType":"VariableDeclaration","scope":454,"src":"1255:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"_rewardRecipient","nameLocation":"1280:16:3","nodeType":"VariableDeclaration","scope":454,"src":"1272:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"1272:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"_amount","nameLocation":"1306:7:3","nodeType":"VariableDeclaration","scope":454,"src":"1298:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"_signerPubkey","nameLocation":"1330:13:3","nodeType":"VariableDeclaration","scope":454,"src":"1315:28:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"1315:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1254:90:3"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1353:0:3"},"scope":537,"src":"1222:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"015bb180","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"relock","nameLocation":"1368:6:3","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"_seqId","nameLocation":"1383:6:3","nodeType":"VariableDeclaration","scope":463,"src":"1375:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"_amount","nameLocation":"1399:7:3","nodeType":"VariableDeclaration","scope":463,"src":"1391:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"_lockReward","nameLocation":"1413:11:3","nodeType":"VariableDeclaration","scope":463,"src":"1408:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"1408:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1374:51:3"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1434:0:3"},"scope":537,"src":"1359:76:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"17396687","id":470,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawRewards","nameLocation":"1449:15:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"_seqId","nameLocation":"1473:6:3","nodeType":"VariableDeclaration","scope":470,"src":"1465:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"_l2Gas","nameLocation":"1488:6:3","nodeType":"VariableDeclaration","scope":470,"src":"1481:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":466,"name":"uint32","nodeType":"ElementaryTypeName","src":"1481:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1464:31:3"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"1504:0:3"},"scope":537,"src":"1440:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"262c0e66","id":477,"implemented":false,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"1519:6:3","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"_seqId","nameLocation":"1535:6:3","nodeType":"VariableDeclaration","scope":477,"src":"1527:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"_l2Gas","nameLocation":"1550:6:3","nodeType":"VariableDeclaration","scope":477,"src":"1543:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":473,"name":"uint32","nodeType":"ElementaryTypeName","src":"1543:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1525:32:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"1574:0:3"},"scope":537,"src":"1510:65:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"8ddc74de","id":484,"implemented":false,"kind":"function","modifiers":[],"name":"unlockClaim","nameLocation":"1589:11:3","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"_seqId","nameLocation":"1609:6:3","nodeType":"VariableDeclaration","scope":484,"src":"1601:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"_l2Gas","nameLocation":"1624:6:3","nodeType":"VariableDeclaration","scope":484,"src":"1617:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":480,"name":"uint32","nodeType":"ElementaryTypeName","src":"1617:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1600:31:3"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"1648:0:3"},"scope":537,"src":"1580:69:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"e2fdcc17","id":490,"implemented":false,"kind":"function","modifiers":[],"name":"escrow","nameLocation":"1663:6:3","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"1669:2:3"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"1695:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$187","typeString":"contract ILockingInfo"},"typeName":{"id":487,"nodeType":"UserDefinedTypeName","pathNode":{"id":486,"name":"ILockingInfo","nameLocations":["1695:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":187,"src":"1695:12:3"},"referencedDeclaration":187,"src":"1695:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_ILockingInfo_$187","typeString":"contract ILockingInfo"}},"visibility":"internal"}],"src":"1694:14:3"},"scope":537,"src":"1654:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6ba7ccff","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"sequencers","nameLocation":"1723:10:3","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"seqId","nameLocation":"1742:5:3","nodeType":"VariableDeclaration","scope":498,"src":"1734:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1733:15:3"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"1772:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$434_memory_ptr","typeString":"struct ILockingPool.SequencerData"},"typeName":{"id":495,"nodeType":"UserDefinedTypeName","pathNode":{"id":494,"name":"SequencerData","nameLocations":["1772:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":434,"src":"1772:13:3"},"referencedDeclaration":434,"src":"1772:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_SequencerData_$434_storage_ptr","typeString":"struct ILockingPool.SequencerData"}},"visibility":"internal"}],"src":"1771:22:3"},"scope":537,"src":"1714:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"beb26755","id":505,"implemented":false,"kind":"function","modifiers":[],"name":"seqSigners","nameLocation":"1808:10:3","nodeType":"FunctionDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"signer","nameLocation":"1827:6:3","nodeType":"VariableDeclaration","scope":505,"src":"1819:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1818:16:3"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"seqId","nameLocation":"1866:5:3","nodeType":"VariableDeclaration","scope":505,"src":"1858:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1857:15:3"},"scope":537,"src":"1799:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"1879:162:3","text":" @dev Emitted when WITHDRAWAL_DELAY is updated.\n @param _cur current withdraw delay time\n @param _prev previours withdraw delay time"},"eventSelector":"08cb0bf599c925a6240976039d9d4d3201d88d2ba83703b890049356cdbb67e6","id":512,"name":"WithrawDelayTimeChange","nameLocation":"2052:22:3","nodeType":"EventDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"indexed":false,"mutability":"mutable","name":"_cur","nameLocation":"2083:4:3","nodeType":"VariableDeclaration","scope":512,"src":"2075:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":510,"indexed":false,"mutability":"mutable","name":"_prev","nameLocation":"2097:5:3","nodeType":"VariableDeclaration","scope":512,"src":"2089:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:29:3"},"src":"2046:58:3"},{"anonymous":false,"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2110:172:3","text":" @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\n @param newReward new block reward\n @param oldReward  old block reward"},"eventSelector":"f67f33e8589d3ea0356303c0f9a8e764873692159f777ff79e4fc523d389dfcd","id":519,"name":"RewardUpdate","nameLocation":"2293:12:3","nodeType":"EventDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"indexed":false,"mutability":"mutable","name":"newReward","nameLocation":"2314:9:3","nodeType":"VariableDeclaration","scope":519,"src":"2306:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":517,"indexed":false,"mutability":"mutable","name":"oldReward","nameLocation":"2333:9:3","nodeType":"VariableDeclaration","scope":519,"src":"2325:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2305:38:3"},"src":"2287:57:3"},{"anonymous":false,"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"2350:106:3","text":" @dev Emitted when mpc address update in 'UpdateMpc'\n @param _newMpc new min lock."},"eventSelector":"c6759872346bc2093e270f2fa00d99d7bcdde60a410a3e9956b34196d42fee76","id":524,"name":"UpdateMpc","nameLocation":"2467:9:3","nodeType":"EventDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"indexed":false,"mutability":"mutable","name":"_newMpc","nameLocation":"2485:7:3","nodeType":"VariableDeclaration","scope":524,"src":"2477:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2476:17:3"},"src":"2461:33:3"},{"anonymous":false,"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"2500:99:3","text":" @dev Emitted when SignerUpdateThrottle is updated\n @param _n new min value"},"eventSelector":"e58685f6b78e6d567d2ed9d7c5efb779c4cd91c63c76763a0e3204a5671f4705","id":529,"name":"SetSignerUpdateThrottle","nameLocation":"2610:23:3","nodeType":"EventDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"indexed":false,"mutability":"mutable","name":"_n","nameLocation":"2642:2:3","nodeType":"VariableDeclaration","scope":529,"src":"2634:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2633:12:3"},"src":"2604:42:3"},{"functionSelector":"441a3e70","id":536,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2660:8:3","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"_seqId","nameLocation":"2677:6:3","nodeType":"VariableDeclaration","scope":536,"src":"2669:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"_amount","nameLocation":"2693:7:3","nodeType":"VariableDeclaration","scope":536,"src":"2685:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2668:33:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"2710:0:3"},"scope":537,"src":"2651:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":538,"src":"131:2582:3","usedErrors":[541,543,545,547,549,551,553,555,557],"usedEvents":[512,519,524,529,597,604,611]}],"src":"45:2668:3"},"id":3},"interface/ISequencerInfo.sol":{"ast":{"absolutePath":"interface/ISequencerInfo.sol","exportedSymbols":{"ISequencerInfo":[619]},"id":620,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":539,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"ISequencerInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":619,"linearizedBaseContracts":[619],"name":"ISequencerInfo","nameLocation":"67:14:4","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4e1fb3bc","id":541,"name":"OwnedSequencer","nameLocation":"94:14:4","nodeType":"ErrorDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"108:2:4"},"src":"88:23:4"},{"errorSelector":"b5013d2b","id":543,"name":"SignerExisted","nameLocation":"122:13:4","nodeType":"ErrorDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"135:2:4"},"src":"116:22:4"},{"errorSelector":"2f0edabe","id":545,"name":"NoSuchSeq","nameLocation":"149:9:4","nodeType":"ErrorDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"158:2:4"},"src":"143:18:4"},{"errorSelector":"e99d5ac5","id":547,"name":"NullAddress","nameLocation":"172:11:4","nodeType":"ErrorDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"183:2:4"},"src":"166:20:4"},{"errorSelector":"c4946571","id":549,"name":"SeqNotActive","nameLocation":"197:12:4","nodeType":"ErrorDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"209:2:4"},"src":"191:21:4"},{"errorSelector":"a91da8ff","id":551,"name":"NotSeqOwner","nameLocation":"223:11:4","nodeType":"ErrorDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"234:2:4"},"src":"217:20:4"},{"errorSelector":"6b95264b","id":553,"name":"NotSeqSigner","nameLocation":"248:12:4","nodeType":"ErrorDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"260:2:4"},"src":"242:21:4"},{"errorSelector":"c4fc1dcc","id":555,"name":"NoRewardRecipient","nameLocation":"274:17:4","nodeType":"ErrorDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"291:2:4"},"src":"268:26:4"},{"errorSelector":"584a7938","id":557,"name":"NotWhitelisted","nameLocation":"305:14:4","nodeType":"ErrorDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"319:2:4"},"src":"299:23:4"},{"canonicalName":"ISequencerInfo.Status","id":562,"members":[{"id":558,"name":"Unavailabe","nameLocation":"378:10:4","nodeType":"EnumValue","src":"378:10:4"},{"id":559,"name":"Inactive","nameLocation":"431:8:4","nodeType":"EnumValue","src":"431:8:4"},{"id":560,"name":"Active","nameLocation":"510:6:4","nodeType":"EnumValue","src":"510:6:4"},{"id":561,"name":"Unlocked","nameLocation":"590:8:4","nodeType":"EnumValue","src":"590:8:4"}],"name":"Status","nameLocation":"361:6:4","nodeType":"EnumDefinition","src":"356:335:4"},{"canonicalName":"ISequencerInfo.Sequencer","id":590,"members":[{"constant":false,"id":564,"mutability":"mutable","name":"amount","nameLocation":"732:6:4","nodeType":"VariableDeclaration","scope":590,"src":"724:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"reward","nameLocation":"784:6:4","nodeType":"VariableDeclaration","scope":590,"src":"776:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"activationBatch","nameLocation":"858:15:4","nodeType":"VariableDeclaration","scope":590,"src":"850:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"850:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"updatedBatch","nameLocation":"924:12:4","nodeType":"VariableDeclaration","scope":590,"src":"916:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"deactivationBatch","nameLocation":"986:17:4","nodeType":"VariableDeclaration","scope":590,"src":"978:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"deactivationTime","nameLocation":"1056:16:4","nodeType":"VariableDeclaration","scope":590,"src":"1048:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"unlockClaimTime","nameLocation":"1126:15:4","nodeType":"VariableDeclaration","scope":590,"src":"1118:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"nonce","nameLocation":"1263:5:4","nodeType":"VariableDeclaration","scope":590,"src":"1255:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1255:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"owner","nameLocation":"1383:5:4","nodeType":"VariableDeclaration","scope":590,"src":"1375:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"signer","nameLocation":"1504:6:4","nodeType":"VariableDeclaration","scope":590,"src":"1496:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"pubkey","nameLocation":"1645:6:4","nodeType":"VariableDeclaration","scope":590,"src":"1639:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"rewardRecipient","nameLocation":"1696:15:4","nodeType":"VariableDeclaration","scope":590,"src":"1688:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"status","nameLocation":"1768:6:4","nodeType":"VariableDeclaration","scope":590,"src":"1761:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$562","typeString":"enum ISequencerInfo.Status"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"Status","nameLocations":["1761:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":562,"src":"1761:6:4"},"referencedDeclaration":562,"src":"1761:6:4","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$562","typeString":"enum ISequencerInfo.Status"}},"visibility":"internal"}],"name":"Sequencer","nameLocation":"704:9:4","nodeType":"StructDefinition","scope":619,"src":"697:1104:4","visibility":"public"},{"anonymous":false,"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1807:150:4","text":" @dev Emitted if owner call 'setWhitelist'\n @param _user the address who can lock token\n @param _yes white address state"},"eventSelector":"f6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb","id":597,"name":"SetWhitelist","nameLocation":"1968:12:4","nodeType":"EventDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"indexed":false,"mutability":"mutable","name":"_user","nameLocation":"1989:5:4","nodeType":"VariableDeclaration","scope":597,"src":"1981:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"indexed":false,"mutability":"mutable","name":"_yes","nameLocation":"2001:4:4","nodeType":"VariableDeclaration","scope":597,"src":"1996:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":594,"name":"bool","nodeType":"ElementaryTypeName","src":"1996:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1980:26:4"},"src":"1962:45:4"},{"anonymous":false,"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"2013:196:4","text":" @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\n @param _seqId the sequencerId\n @param _recipient the address receive reward token"},"eventSelector":"357bb123cabaf224688e3d8de5feb37d685dc3a27012a7bce1201c49bc369cb6","id":604,"name":"SequencerRewardRecipientChanged","nameLocation":"2220:31:4","nodeType":"EventDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2260:6:4","nodeType":"VariableDeclaration","scope":604,"src":"2252:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":602,"indexed":false,"mutability":"mutable","name":"_recipient","nameLocation":"2276:10:4","nodeType":"VariableDeclaration","scope":604,"src":"2268:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2251:36:4"},"src":"2214:74:4"},{"anonymous":false,"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"2294:141:4","text":" @dev Emitted when sequencer owner is changed\n @param _seqId the sequencerId\n @param _owner the sequencer owner"},"eventSelector":"4078101d3657bf2f1ee46f64d5c94266d244d71bb0daa460336d3d6f11c9a4ac","id":611,"name":"SequencerOwnerChanged","nameLocation":"2446:21:4","nodeType":"EventDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"indexed":false,"mutability":"mutable","name":"_seqId","nameLocation":"2476:6:4","nodeType":"VariableDeclaration","scope":611,"src":"2468:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":609,"indexed":false,"mutability":"mutable","name":"_owner","nameLocation":"2492:6:4","nodeType":"VariableDeclaration","scope":611,"src":"2484:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2467:32:4"},"src":"2440:60:4"},{"functionSelector":"169abefc","id":618,"implemented":false,"kind":"function","modifiers":[],"name":"seqOwners","nameLocation":"2515:9:4","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"owner","nameLocation":"2533:5:4","nodeType":"VariableDeclaration","scope":618,"src":"2525:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2524:15:4"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"seqId","nameLocation":"2566:5:4","nodeType":"VariableDeclaration","scope":618,"src":"2558:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2557:15:4"},"scope":619,"src":"2506:67:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":620,"src":"57:2518:4","usedErrors":[541,543,545,547,549,551,553,555,557],"usedEvents":[597,604,611]}],"src":"32:2543:4"},"id":4}},"contracts":{"interface/IL1ERC20Bridge.sol":{"IL1ERC20Bridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_chainid","type":"uint256"}],"name":"ERC20ChainID","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"_l2Token","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ERC20DepositInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"_l2Token","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ERC20WithdrawalFinalized","type":"event"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20ByChainId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20ToByChainId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeERC20Withdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeERC20WithdrawalByChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainid","type":"uint256"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeMetisWithdrawalByChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"l2TokenBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"depositERC20(address,address,uint256,uint32,bytes)":{"details":"deposit an amount of the ERC20 to the caller's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20"}},"depositERC20ByChainId(uint256,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of the ERC20 to the caller's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit","_chainid":"chainid","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20"}},"depositERC20To(address,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of ERC20 to a recipient's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20","_to":"L2 address to credit the withdrawal to."}},"depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of ERC20 to a recipient's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit.","_chainid":"chainid","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20","_to":"L2 address to credit the withdrawal to."}},"finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_l1Token":"Address of L1 token to finalizeWithdrawal for.","_l2Token":"Address of L2 token where withdrawal was initiated.","_to":"L1 address to credit the withdrawal to."}},"finalizeERC20WithdrawalByChainId(uint256,address,address,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_chainid":"chainid","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_l1Token":"Address of L1 token to finalizeWithdrawal for.","_l2Token":"Address of L2 token where withdrawal was initiated.","_to":"L1 address to credit the withdrawal to."}},"finalizeMetisWithdrawalByChainId(uint256,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_chainid":"chainid","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_to":"L1 address to credit the withdrawal to."}},"l2TokenBridge()":{"details":"get the address of the corresponding L2 bridge contract.","returns":{"_0":"Address of the corresponding L2 bridge contract."}}},"title":"IL1ERC20Bridge","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"depositERC20(address,address,uint256,uint32,bytes)":"58a997f6","depositERC20ByChainId(uint256,address,address,uint256,uint32,bytes)":"a396a59c","depositERC20To(address,address,address,uint256,uint32,bytes)":"838b2520","depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)":"ef808be2","finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)":"a9f9e675","finalizeERC20WithdrawalByChainId(uint256,address,address,address,address,uint256,bytes)":"6cebdc45","finalizeMetisWithdrawalByChainId(uint256,address,address,uint256,bytes)":"90a40a76","l2TokenBridge()":"91c49bf8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"}],\"name\":\"ERC20ChainID\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ERC20DepositInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"ERC20WithdrawalFinalized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20ByChainId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositERC20ToByChainId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"finalizeERC20Withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"finalizeERC20WithdrawalByChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"finalizeMetisWithdrawalByChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2TokenBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositERC20(address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of the ERC20 to the caller's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\"}},\"depositERC20ByChainId(uint256,address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of the ERC20 to the caller's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit\",\"_chainid\":\"chainid\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\"}},\"depositERC20To(address,address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of ERC20 to a recipient's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\",\"_to\":\"L2 address to credit the withdrawal to.\"}},\"depositERC20ToByChainId(uint256,address,address,address,uint256,uint32,bytes)\":{\"details\":\"deposit an amount of ERC20 to a recipient's balance on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_chainid\":\"chainid\",\"_data\":\"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.\",\"_l1Token\":\"Address of the L1 ERC20 we are depositing\",\"_l2Gas\":\"Gas limit required to complete the deposit on L2.\",\"_l2Token\":\"Address of the L1 respective L2 ERC20\",\"_to\":\"L2 address to credit the withdrawal to.\"}},\"finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)\":{\"details\":\"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_data\":\"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.\",\"_from\":\"L2 address initiating the transfer.\",\"_l1Token\":\"Address of L1 token to finalizeWithdrawal for.\",\"_l2Token\":\"Address of L2 token where withdrawal was initiated.\",\"_to\":\"L1 address to credit the withdrawal to.\"}},\"finalizeERC20WithdrawalByChainId(uint256,address,address,address,address,uint256,bytes)\":{\"details\":\"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_chainid\":\"chainid\",\"_data\":\"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.\",\"_from\":\"L2 address initiating the transfer.\",\"_l1Token\":\"Address of L1 token to finalizeWithdrawal for.\",\"_l2Token\":\"Address of L2 token where withdrawal was initiated.\",\"_to\":\"L1 address to credit the withdrawal to.\"}},\"finalizeMetisWithdrawalByChainId(uint256,address,address,uint256,bytes)\":{\"details\":\"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_chainid\":\"chainid\",\"_data\":\"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.\",\"_from\":\"L2 address initiating the transfer.\",\"_to\":\"L1 address to credit the withdrawal to.\"}},\"l2TokenBridge()\":{\"details\":\"get the address of the corresponding L2 bridge contract.\",\"returns\":{\"_0\":\"Address of the corresponding L2 bridge contract.\"}}},\"title\":\"IL1ERC20Bridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IL1ERC20Bridge.sol\":\"IL1ERC20Bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IL1ERC20Bridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.5.0 <0.9.0;\\n\\n/**\\n * @title IL1ERC20Bridge\\n */\\ninterface IL1ERC20Bridge {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event ERC20DepositInitiated(\\n        address indexed _l1Token,\\n        address indexed _l2Token,\\n        address indexed _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    event ERC20WithdrawalFinalized(\\n        address indexed _l1Token,\\n        address indexed _l2Token,\\n        address indexed _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes _data\\n    );\\n\\n    event ERC20ChainID(uint256 _chainid);\\n    \\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * @dev get the address of the corresponding L2 bridge contract.\\n     * @return Address of the corresponding L2 bridge contract.\\n     */\\n    function l2TokenBridge() external returns (address);\\n\\n    /**\\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _amount Amount of the ERC20 to deposit\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20(\\n        address _l1Token,\\n        address _l2Token,\\n        uint256 _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    ) external;\\n\\n    /**\\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _to L2 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20To(\\n        address _l1Token,\\n        address _l2Token,\\n        address _to,\\n        uint256 _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    ) external;\\n    \\n    /**\\n     * @dev deposit an amount of the ERC20 to the caller's balance on L2.\\n     * @param _chainid chainid\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _amount Amount of the ERC20 to deposit\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20ByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        uint _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    )\\n        external payable;\\n\\n    /**\\n     * @dev deposit an amount of ERC20 to a recipient's balance on L2.\\n     * @param _chainid chainid\\n     * @param _l1Token Address of the L1 ERC20 we are depositing\\n     * @param _l2Token Address of the L1 respective L2 ERC20\\n     * @param _to L2 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _l2Gas Gas limit required to complete the deposit on L2.\\n     * @param _data Optional data to forward to L2. This data is provided\\n     *        solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *        length, these contracts provide no guarantees about its content.\\n     */\\n    function depositERC20ToByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        address _to,\\n        uint _amount,\\n        uint32 _l2Gas,\\n        bytes calldata _data\\n    )\\n        external payable;\\n    /*************************\\n     * Cross-chain Functions *\\n     *************************/\\n\\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */\\n    function finalizeERC20Withdrawal(\\n        address _l1Token,\\n        address _l2Token,\\n        address _from,\\n        address _to,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external;\\n    \\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _chainid chainid\\n     * @param _l1Token Address of L1 token to finalizeWithdrawal for.\\n     * @param _l2Token Address of L2 token where withdrawal was initiated.\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */    \\n     function finalizeERC20WithdrawalByChainId (\\n        uint256 _chainid,\\n        address _l1Token,\\n        address _l2Token,\\n        address _from,\\n        address _to,\\n        uint _amount,\\n        bytes calldata _data\\n    )\\n        external;\\n    /**\\n     * @dev Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the\\n     * L1 ERC20 token.\\n     * This call will fail if the initialized withdrawal from L2 has not been finalized.\\n     *\\n     * @param _chainid chainid\\n     * @param _from L2 address initiating the transfer.\\n     * @param _to L1 address to credit the withdrawal to.\\n     * @param _amount Amount of the ERC20 to deposit.\\n     * @param _data Data provided by the sender on L2. This data is provided\\n     *   solely as a convenience for external contracts. Aside from enforcing a maximum\\n     *   length, these contracts provide no guarantees about its content.\\n     */    \\n    function finalizeMetisWithdrawalByChainId (\\n        uint256 _chainid,\\n        address _from,\\n        address _to,\\n        uint _amount,\\n        bytes calldata _data\\n    )\\n        external;\\n}\",\"keccak256\":\"0x2ae07ccba2b6031511c22fbbc0c2a1b26d93a510226ad72edf693cf00be2c81a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingInfo.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"bridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"l1Token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l2Token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minLock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_locked","type":"uint256"}],"name":"withdrawLocking","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId.      Note from maintainer:      for compatibility, the event is retained"}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amount in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}},"Withdraw(uint256,uint256)":{"details":"Emitted when the sequencer reduce lock amount in 'withdraw()'.","params":{"amount":"withdraw new amount","sequencerId":"unique integer to identify a sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"bridge()":"e78cea92","distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","l1Token()":"c01e1bd6","l2Token()":"56eff267","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","maxLock()":"6c0b3e46","minLock()":"f037c630","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5","withdrawLocking(uint256,address,uint256,uint256,uint256)":"234898b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"}],\"name\":\"withdrawLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.      Note from maintainer:      for compatibility, the event is retained\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amount in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}},\"Withdraw(uint256,uint256)\":{\"details\":\"Emitted when the sequencer reduce lock amount in 'withdraw()'.\",\"params\":{\"amount\":\"withdraw new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfo.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingInfoRaw.sol":{"ILockingInfo":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBatchId","type":"uint256"}],"name":"BatchSubmitReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"ClaimRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"LockUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"activationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"Locked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Relocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMaxLock","type":"uint256"}],"name":"SetMaxLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newMinLock","type":"uint256"}],"name":"SetMinLock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_payer","type":"address"}],"name":"SetRewardPayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"},{"indexed":false,"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UnlockInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"total","type":"uint256"}],"name":"Unlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sequencerId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_totalReward","type":"uint256"}],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"finalizeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_locked","type":"uint256"},{"internalType":"uint256","name":"_incoming","type":"uint256"},{"internalType":"uint256","name":"_fromReward","type":"uint256"}],"name":"increaseLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_reward","type":"uint256"},{"internalType":"uint32","name":"_l2gas","type":"uint32"},{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"rewardRecipient","type":"address"},{"internalType":"enum ISequencerInfo.Status","name":"status","type":"uint8"}],"internalType":"struct ISequencerInfo.Sequencer","name":"_seq","type":"tuple"}],"name":"initializeUnlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint32","name":"_l2gas","type":"uint32"}],"name":"liquidateReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sequencerId","type":"uint256"},{"internalType":"address","name":"oldSigner","type":"address"},{"internalType":"address","name":"newSigner","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signerPubkey","type":"bytes"}],"name":"logSignerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"newSequencer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_locked","type":"uint256"}],"name":"withdrawLocking","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchSubmitReward(uint256)":{"details":"Emitted when batch update in  'batchSubmitRewards'","params":{"_newBatchId":"new batchId.      Note from maintainer:      for compatibility, the event is retained"}},"ClaimRewards(uint256,address,uint256,uint256)":{"details":"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'","params":{"amount":"the reward amount.","recipient":"the address receive reward tokens","sequencerId":"unique integer to identify a sequencer.","totalAmount":"total rewards has liquidated"}},"LockUpdate(uint256,uint256,uint256)":{"details":"Emitted when sequencer relocking in 'relock()'.","params":{"newAmount":"the updated lock amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer."}},"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"Emitted when sequencer locks in '_lockFor()' in LockingPool.","params":{"activationBatch":"sequencer's first epoch as proposer.","amount":"locking amount.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","signer":"sequencer address.","signerPubkey":"public key of the sequencer","total":"total locking amount."}},"Relocked(uint256,uint256,uint256)":{"details":"Emitted when the sequencer increase lock amount in 'relock()'.","params":{"amount":"locking new amount","sequencerId":"unique integer to identify a sequencer.","total":"the total locking amount"}},"SetMaxLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMaxAmounts'","params":{"_newMaxLock":"new max lock."}},"SetMinLock(uint256)":{"details":"Emitted when min lock amount update in 'UpdateMinAmounts'","params":{"_newMinLock":"new min lock."}},"SetRewardPayer(address)":{"details":"Emitted when the reward payer is changed","params":{"_payer":"new reward payer"}},"SignerChange(uint256,uint256,address,address,bytes)":{"details":"Emitted when the sequencer public key is updated in 'updateSigner()'.","params":{"newSigner":"newSigner new address of the sequencer.","nonce":"to synchronize the events in themis.","oldSigner":"oldSigner old address of the sequencer.","sequencerId":"unique integer to identify a sequencer.","signerPubkey":"signerPubkey public key of the sequencer."}},"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in '_unlock()'.","params":{"amount":"locking amount","deactivationBatch":"last batch for sequencer.","deactivationTime":"unlock block timestamp.","nonce":"to synchronize the events in themis.","sequencerId":"unique integer to identify a sequencer.","unlockClaimTime":"when user can claim locked token.","user":"address of the sequencer."}},"Unlocked(address,uint256,uint256,uint256)":{"details":"Emitted when sequencer unlocks in 'unlockClaim()'","params":{"amount":"locking amount.","sequencerId":"unique integer to identify a sequencer.","total":"total locking amount.","user":"address of the sequencer."}},"Withdraw(uint256,uint256)":{"details":"Emitted when the sequencer reduce lock amount in 'withdraw()'.","params":{"amount":"withdraw new amount","sequencerId":"unique integer to identify a sequencer."}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"distributeReward(uint256,uint256)":"e3bcd27c","finalizeUnlock(address,uint256,uint256,uint256,address,uint32)":"528ed12a","increaseLocked(uint256,uint256,address,uint256,uint256,uint256)":"2684b8ec","initializeUnlock(uint256,uint256,uint32,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes,address,uint8))":"2243069c","liquidateReward(uint256,uint256,address,uint32)":"5d7878a8","logSignerChange(uint256,address,address,uint256,bytes)":"b3285702","newSequencer(uint256,address,address,uint256,uint256,bytes)":"1badded5","withdrawLocking(uint256,address,uint256,uint256,uint256)":"234898b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newBatchId\",\"type\":\"uint256\"}],\"name\":\"BatchSubmitReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"LockUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Relocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMaxLock\",\"type\":\"uint256\"}],\"name\":\"SetMaxLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLock\",\"type\":\"uint256\"}],\"name\":\"SetMinLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"SetRewardPayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"SignerChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnlockInit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"finalizeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incoming\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromReward\",\"type\":\"uint256\"}],\"name\":\"increaseLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"enum ISequencerInfo.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ISequencerInfo.Sequencer\",\"name\":\"_seq\",\"type\":\"tuple\"}],\"name\":\"initializeUnlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_l2gas\",\"type\":\"uint32\"}],\"name\":\"liquidateReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequencerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signerPubkey\",\"type\":\"bytes\"}],\"name\":\"logSignerChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"newSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_locked\",\"type\":\"uint256\"}],\"name\":\"withdrawLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchSubmitReward(uint256)\":{\"details\":\"Emitted when batch update in  'batchSubmitRewards'\",\"params\":{\"_newBatchId\":\"new batchId.      Note from maintainer:      for compatibility, the event is retained\"}},\"ClaimRewards(uint256,address,uint256,uint256)\":{\"details\":\"Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\",\"params\":{\"amount\":\"the reward amount.\",\"recipient\":\"the address receive reward tokens\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"totalAmount\":\"total rewards has liquidated\"}},\"LockUpdate(uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer relocking in 'relock()'.\",\"params\":{\"newAmount\":\"the updated lock amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\"}},\"Locked(address,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Emitted when sequencer locks in '_lockFor()' in LockingPool.\",\"params\":{\"activationBatch\":\"sequencer's first epoch as proposer.\",\"amount\":\"locking amount.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signer\":\"sequencer address.\",\"signerPubkey\":\"public key of the sequencer\",\"total\":\"total locking amount.\"}},\"Relocked(uint256,uint256,uint256)\":{\"details\":\"Emitted when the sequencer increase lock amount in 'relock()'.\",\"params\":{\"amount\":\"locking new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"the total locking amount\"}},\"SetMaxLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMaxAmounts'\",\"params\":{\"_newMaxLock\":\"new max lock.\"}},\"SetMinLock(uint256)\":{\"details\":\"Emitted when min lock amount update in 'UpdateMinAmounts'\",\"params\":{\"_newMinLock\":\"new min lock.\"}},\"SetRewardPayer(address)\":{\"details\":\"Emitted when the reward payer is changed\",\"params\":{\"_payer\":\"new reward payer\"}},\"SignerChange(uint256,uint256,address,address,bytes)\":{\"details\":\"Emitted when the sequencer public key is updated in 'updateSigner()'.\",\"params\":{\"newSigner\":\"newSigner new address of the sequencer.\",\"nonce\":\"to synchronize the events in themis.\",\"oldSigner\":\"oldSigner old address of the sequencer.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"signerPubkey\":\"signerPubkey public key of the sequencer.\"}},\"UnlockInit(address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in '_unlock()'.\",\"params\":{\"amount\":\"locking amount\",\"deactivationBatch\":\"last batch for sequencer.\",\"deactivationTime\":\"unlock block timestamp.\",\"nonce\":\"to synchronize the events in themis.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"unlockClaimTime\":\"when user can claim locked token.\",\"user\":\"address of the sequencer.\"}},\"Unlocked(address,uint256,uint256,uint256)\":{\"details\":\"Emitted when sequencer unlocks in 'unlockClaim()'\",\"params\":{\"amount\":\"locking amount.\",\"sequencerId\":\"unique integer to identify a sequencer.\",\"total\":\"total locking amount.\",\"user\":\"address of the sequencer.\"}},\"Withdraw(uint256,uint256)\":{\"details\":\"Emitted when the sequencer reduce lock amount in 'withdraw()'.\",\"params\":{\"amount\":\"withdraw new amount\",\"sequencerId\":\"unique integer to identify a sequencer.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingInfoRaw.sol\":\"ILockingInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ILockingPool.sol":{"ILockingPool":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldReward","type":"uint256"}],"name":"RewardUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_n","type":"uint256"}],"name":"SetSignerUpdateThrottle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newMpc","type":"address"}],"name":"UpdateMpc","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_cur","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_prev","type":"uint256"}],"name":"WithrawDelayTimeChange","type":"event"},{"inputs":[],"name":"escrow","outputs":[{"internalType":"contract ILockingInfo","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"},{"internalType":"address","name":"_rewardRecipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_signerPubkey","type":"bytes"}],"name":"lockWithRewardRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"_lockReward","type":"bool"}],"name":"relock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"seqSigners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"name":"sequencers","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"activationBatch","type":"uint256"},{"internalType":"uint256","name":"updatedBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationBatch","type":"uint256"},{"internalType":"uint256","name":"deactivationTime","type":"uint256"},{"internalType":"uint256","name":"unlockClaimTime","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"signer","type":"address"}],"internalType":"struct ILockingPool.SequencerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlock","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"unlockClaim","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_seqId","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"}],"name":"withdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RewardUpdate(uint256,uint256)":{"details":"Emitted when the proxy update threshold in 'updateBlockReward()'.","params":{"newReward":"new block reward","oldReward":"old block reward"}},"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetSignerUpdateThrottle(uint256)":{"details":"Emitted when SignerUpdateThrottle is updated","params":{"_n":"new min value"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}},"UpdateMpc(address)":{"details":"Emitted when mpc address update in 'UpdateMpc'","params":{"_newMpc":"new min lock."}},"WithrawDelayTimeChange(uint256,uint256)":{"details":"Emitted when WITHDRAWAL_DELAY is updated.","params":{"_cur":"current withdraw delay time","_prev":"previours withdraw delay time"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"escrow()":"e2fdcc17","lockFor(address,uint256,bytes)":"af70cba5","lockWithRewardRecipient(address,address,uint256,bytes)":"9ad42030","relock(uint256,uint256,bool)":"015bb180","seqOwners(address)":"169abefc","seqSigners(address)":"beb26755","sequencers(uint256)":"6ba7ccff","unlock(uint256,uint32)":"262c0e66","unlockClaim(uint256,uint32)":"8ddc74de","withdraw(uint256,uint256)":"441a3e70","withdrawRewards(uint256,uint32)":"17396687"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReward\",\"type\":\"uint256\"}],\"name\":\"RewardUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"}],\"name\":\"SetSignerUpdateThrottle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newMpc\",\"type\":\"address\"}],\"name\":\"UpdateMpc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cur\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WithrawDelayTimeChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"escrow\",\"outputs\":[{\"internalType\":\"contract ILockingInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signerPubkey\",\"type\":\"bytes\"}],\"name\":\"lockWithRewardRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_lockReward\",\"type\":\"bool\"}],\"name\":\"relock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"seqSigners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"name\":\"sequencers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deactivationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct ILockingPool.SequencerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"unlockClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_l2Gas\",\"type\":\"uint32\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RewardUpdate(uint256,uint256)\":{\"details\":\"Emitted when the proxy update threshold in 'updateBlockReward()'.\",\"params\":{\"newReward\":\"new block reward\",\"oldReward\":\"old block reward\"}},\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetSignerUpdateThrottle(uint256)\":{\"details\":\"Emitted when SignerUpdateThrottle is updated\",\"params\":{\"_n\":\"new min value\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}},\"UpdateMpc(address)\":{\"details\":\"Emitted when mpc address update in 'UpdateMpc'\",\"params\":{\"_newMpc\":\"new min lock.\"}},\"WithrawDelayTimeChange(uint256,uint256)\":{\"details\":\"Emitted when WITHDRAWAL_DELAY is updated.\",\"params\":{\"_cur\":\"current withdraw delay time\",\"_prev\":\"previours withdraw delay time\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ILockingPool.sol\":\"ILockingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ILockingInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\nimport {ILockingInfo as ILockingInfoRaw} from \\\"./ILockingInfoRaw.sol\\\";\\n\\ninterface ILockingInfo is ILockingInfoRaw {\\n    function bridge() external view returns(address);\\n    function l1Token() external view returns(address);\\n    function l2Token() external view returns(address);\\n    function minLock() external view returns(uint256);\\n    function maxLock() external view returns(uint256);\\n}\",\"keccak256\":\"0x6cb5efe9280ad3f0a2c7dfb315bc3483ce329c3f759994ee990749b4694f5806\",\"license\":\"MIT\"},\"interface/ILockingInfoRaw.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ISequencerInfo} from \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingInfo {\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMinAmounts'\\n     * @param _newMinLock new min lock.\\n     */\\n    event SetMinLock(uint256 _newMinLock);\\n\\n    /**\\n     * @dev Emitted when min lock amount update in 'UpdateMaxAmounts'\\n     * @param _newMaxLock new max lock.\\n     */\\n    event SetMaxLock(uint256 _newMaxLock);\\n\\n    /**\\n     * @dev Emitted when the reward payer is changed\\n     * @param _payer new reward payer\\n     */\\n    event SetRewardPayer(address _payer);\\n\\n    /**\\n     * @dev Emitted when sequencer locks in '_lockFor()' in LockingPool.\\n     * @param signer sequencer address.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param activationBatch sequencer's first epoch as proposer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     * @param signerPubkey public key of the sequencer\\n     */\\n    event Locked(\\n        address indexed signer,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 indexed activationBatch,\\n        uint256 amount,\\n        uint256 total,\\n        bytes signerPubkey\\n    );\\n\\n    /**\\n     * @dev Emitted when the sequencer increase lock amount in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking new amount\\n     * @param total the total locking amount\\n     */\\n    event Relocked(uint256 indexed sequencerId, uint256 amount, uint256 total);\\n\\n    /**\\n     * @dev Emitted when the sequencer reduce lock amount in 'withdraw()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount withdraw new amount\\n     */\\n    event Withdraw(uint256 indexed sequencerId, uint256 amount);\\n\\n    /**\\n     * @dev Emitted when sequencer relocking in 'relock()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param newAmount the updated lock amount.\\n     */\\n    event LockUpdate(\\n        uint256 indexed sequencerId,\\n        uint256 indexed nonce,\\n        uint256 indexed newAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer withdraw rewards in 'withdrawRewards' or 'unlockClaim'\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param recipient the address receive reward tokens\\n     * @param amount the reward amount.\\n     * @param totalAmount total rewards has liquidated\\n     */\\n    event ClaimRewards(\\n        uint256 indexed sequencerId,\\n        address recipient,\\n        uint256 indexed amount,\\n        uint256 indexed totalAmount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in '_unlock()'.\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param deactivationBatch  last batch for sequencer.\\n     * @param deactivationTime unlock block timestamp.\\n     * @param unlockClaimTime when user can claim locked token.\\n     * @param amount locking amount\\n     */\\n    event UnlockInit(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        uint256 deactivationBatch,\\n        uint256 deactivationTime,\\n        uint256 unlockClaimTime,\\n        uint256 indexed amount\\n    );\\n\\n    /**\\n     * @dev Emitted when sequencer unlocks in 'unlockClaim()'\\n     * @param user address of the sequencer.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param amount locking amount.\\n     * @param total total locking amount.\\n     */\\n    event Unlocked(\\n        address indexed user,\\n        uint256 indexed sequencerId,\\n        uint256 amount,\\n        uint256 total\\n    );\\n\\n    /**\\n     * @dev Emitted when batch update in  'batchSubmitRewards'\\n     * @param _newBatchId new batchId.\\n     *\\n     *      Note from maintainer:\\n     *      for compatibility, the event is retained\\n     */\\n    event BatchSubmitReward(uint256 _newBatchId);\\n\\n    /**\\n     * @dev Emitted when the sequencer public key is updated in 'updateSigner()'.\\n     * @param sequencerId unique integer to identify a sequencer.\\n     * @param nonce to synchronize the events in themis.\\n     * @param oldSigner oldSigner old address of the sequencer.\\n     * @param newSigner newSigner new address of the sequencer.\\n     * @param signerPubkey signerPubkey public key of the sequencer.\\n     */\\n    event SignerChange(\\n        uint256 indexed sequencerId,\\n        uint256 nonce,\\n        address indexed oldSigner,\\n        address indexed newSigner,\\n        bytes signerPubkey\\n    );\\n\\n    function newSequencer(\\n        uint256 _id,\\n        address _owner,\\n        address _signer,\\n        uint256 _amount,\\n        uint256 _batchId,\\n        bytes calldata _signerPubkey\\n    ) external;\\n\\n    function increaseLocked(\\n        uint256 _seqId,\\n        uint256 _nonce,\\n        address _owner,\\n        uint256 _locked,\\n        uint256 _incoming,\\n        uint256 _fromReward\\n    ) external;\\n\\n    function withdrawLocking(\\n        uint256 _seqId,\\n        address _owner,\\n        uint256 _nonce,\\n        uint256 _amount,\\n        uint256 _locked\\n    ) external;\\n\\n    function initializeUnlock(\\n        uint256 _seqId,\\n        uint256 _reward,\\n        uint32 _l2gas,\\n        ISequencerInfo.Sequencer calldata _seq\\n    ) external payable;\\n\\n    function finalizeUnlock(\\n        address _owner,\\n        uint256 _seqId,\\n        uint256 _amount,\\n        uint256 _reward,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function liquidateReward(\\n        uint256 _seqId,\\n        uint256 _amount,\\n        address _recipient,\\n        uint32 _l2gas\\n    ) external payable;\\n\\n    function distributeReward(uint256 _batchId, uint256 _totalReward) external;\\n\\n    function logSignerChange(\\n        uint256 sequencerId,\\n        address oldSigner,\\n        address newSigner,\\n        uint256 nonce,\\n        bytes calldata signerPubkey\\n    ) external;\\n}\",\"keccak256\":\"0x6f3e6d86896060f4474907518d8c1410faba6f39757b95203602d969be1c10fe\",\"license\":\"MIT\"},\"interface/ILockingPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ILockingInfo.sol\\\";\\nimport \\\"./ISequencerInfo.sol\\\";\\n\\ninterface ILockingPool is ISequencerInfo {\\n    struct SequencerData {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n    }\\n\\n    function lockFor(address _signer, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function lockWithRewardRecipient(address _signer, address _rewardRecipient, uint256 _amount, bytes calldata _signerPubkey) external;\\n    function relock(uint256 _seqId, uint256 _amount, bool _lockReward) external;\\n    function withdrawRewards(uint256 _seqId, uint32 _l2Gas) external;\\n    function unlock( uint256 _seqId, uint32 _l2Gas) external payable;\\n    function unlockClaim(uint256 _seqId, uint32 _l2Gas) external payable;\\n    function escrow() external view returns (ILockingInfo);\\n    function sequencers(uint256 seqId) external view returns (SequencerData memory);\\n    function seqSigners(address signer) external view returns (uint256 seqId);\\n\\n    /**\\n     * @dev Emitted when WITHDRAWAL_DELAY is updated.\\n     * @param _cur current withdraw delay time\\n     * @param _prev previours withdraw delay time\\n     */\\n    event WithrawDelayTimeChange(uint256 _cur, uint256 _prev);\\n\\n    /**\\n     * @dev Emitted when the proxy update threshold in 'updateBlockReward()'.\\n     * @param newReward new block reward\\n     * @param oldReward  old block reward\\n     */\\n    event RewardUpdate(uint256 newReward, uint256 oldReward);\\n\\n    /**\\n     * @dev Emitted when mpc address update in 'UpdateMpc'\\n     * @param _newMpc new min lock.\\n     */\\n    event UpdateMpc(address _newMpc);\\n\\n    /**\\n     * @dev Emitted when SignerUpdateThrottle is updated\\n     * @param _n new min value\\n     */\\n    event SetSignerUpdateThrottle(uint256 _n);\\n    function withdraw(uint256 _seqId, uint256 _amount) external;\\n}\",\"keccak256\":\"0xa7c18b713ed86a9a510c322241669b8d9ed6a1806c1d68229c5b440169938133\",\"license\":\"GPL-2.0-or-later\"},\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interface/ISequencerInfo.sol":{"ISequencerInfo":{"abi":[{"inputs":[],"name":"NoRewardRecipient","type":"error"},{"inputs":[],"name":"NoSuchSeq","type":"error"},{"inputs":[],"name":"NotSeqOwner","type":"error"},{"inputs":[],"name":"NotSeqSigner","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"NullAddress","type":"error"},{"inputs":[],"name":"OwnedSequencer","type":"error"},{"inputs":[],"name":"SeqNotActive","type":"error"},{"inputs":[],"name":"SignerExisted","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"SequencerOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_seqId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_recipient","type":"address"}],"name":"SequencerRewardRecipientChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bool","name":"_yes","type":"bool"}],"name":"SetWhitelist","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"seqOwners","outputs":[{"internalType":"uint256","name":"seqId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"SequencerOwnerChanged(uint256,address)":{"details":"Emitted when sequencer owner is changed","params":{"_owner":"the sequencer owner","_seqId":"the sequencerId"}},"SequencerRewardRecipientChanged(uint256,address)":{"details":"Emitted when reward recipient address update in 'setSequencerRewardRecipient'","params":{"_recipient":"the address receive reward token","_seqId":"the sequencerId"}},"SetWhitelist(address,bool)":{"details":"Emitted if owner call 'setWhitelist'","params":{"_user":"the address who can lock token","_yes":"white address state"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"seqOwners(address)":"169abefc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoRewardRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSuchSeq\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSeqSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnedSequencer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeqNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerExisted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"SequencerOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_seqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"SequencerRewardRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_yes\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"seqOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seqId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SequencerOwnerChanged(uint256,address)\":{\"details\":\"Emitted when sequencer owner is changed\",\"params\":{\"_owner\":\"the sequencer owner\",\"_seqId\":\"the sequencerId\"}},\"SequencerRewardRecipientChanged(uint256,address)\":{\"details\":\"Emitted when reward recipient address update in 'setSequencerRewardRecipient'\",\"params\":{\"_recipient\":\"the address receive reward token\",\"_seqId\":\"the sequencerId\"}},\"SetWhitelist(address,bool)\":{\"details\":\"Emitted if owner call 'setWhitelist'\",\"params\":{\"_user\":\"the address who can lock token\",\"_yes\":\"white address state\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/ISequencerInfo.sol\":\"ISequencerInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/ISequencerInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface ISequencerInfo {\\n    error OwnedSequencer();\\n    error SignerExisted();\\n    error NoSuchSeq();\\n    error NullAddress();\\n    error SeqNotActive();\\n    error NotSeqOwner();\\n    error NotSeqSigner();\\n    error NoRewardRecipient();\\n    error NotWhitelisted();\\n\\n    // the sequencer status\\n    enum Status {\\n        Unavailabe, // placeholder for default value\\n        Inactive, // the sequencer will be Inactive if its owner starts unlock\\n        Active, // the sequencer is active when it locks tokens on the contract\\n        Unlocked // Exited, the sequencer has no locked tokens, and it's no longer produce blocks on L2\\n    }\\n\\n    struct Sequencer {\\n        uint256 amount; // sequencer current locked\\n        uint256 reward; // sequencer current reward that have not cleamed\\n        uint256 activationBatch; // sequencer activation batch id\\n        uint256 updatedBatch; // batch id of the last updated\\n        uint256 deactivationBatch; // sequencer deactivation batch id\\n        uint256 deactivationTime; // sequencer deactivation timestamp\\n        uint256 unlockClaimTime; // timestamp that sequencer can claim unlocked token, it's equal to deactivationTime + WITHDRAWAL_DELAY\\n        uint256 nonce; // sequencer operations number, starts from 1, and used internally by the Metis consencus client\\n        address owner; // the operator address, owns this sequencer node, it controls lock/relock/unlock/claim functions\\n        address signer; // sequencer signer, an address to sign L2 blocks, if you want to update it, you must have the privkey of this address\\n        bytes pubkey; // sequencer signer pubkey\\n        address rewardRecipient; // sequencer rewarder recipient address\\n        Status status; // sequencer status\\n    }\\n\\n    /**\\n     * @dev Emitted if owner call 'setWhitelist'\\n     * @param _user the address who can lock token\\n     * @param _yes white address state\\n     */\\n    event SetWhitelist(address _user, bool _yes);\\n\\n    /**\\n     * @dev Emitted when reward recipient address update in 'setSequencerRewardRecipient'\\n     * @param _seqId the sequencerId\\n     * @param _recipient the address receive reward token\\n     */\\n    event SequencerRewardRecipientChanged(uint256 _seqId, address _recipient);\\n\\n    /**\\n     * @dev Emitted when sequencer owner is changed\\n     * @param _seqId the sequencerId\\n     * @param _owner the sequencer owner\\n     */\\n    event SequencerOwnerChanged(uint256 _seqId, address _owner);\\n\\n    function seqOwners(address owner) external returns (uint256 seqId);\\n}\",\"keccak256\":\"0x391c0da4e5953583f9d184d2646d4bc69654161f9ba5da0fa600c79a72b3c1ac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}